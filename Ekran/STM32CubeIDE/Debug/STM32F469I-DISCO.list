
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c4c8  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000037d0  0801c688  0801c688  0002c688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000014  0801fe58  0801fe58  0002fe58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801fe6c  0801fe6c  000657ac  2**0
                  CONTENTS
  5 .ARM          00000008  0801fe6c  0801fe6c  0002fe6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0801fe74  0801fe74  000657ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0801fe74  0801fe74  0002fe74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801fe8c  0801fe8c  0002fe8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0801fe94  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a778  20000140  0801ffd4  00030140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000a8b8  0801ffd4  0003a8b8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000657ac  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00000000  90000000  90000000  000657dc  2**0
                  CONTENTS
 14 FontFlashSection 00025774  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000038  90025774  90025774  00065774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   0004da7b  00000000  00000000  000657dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000a357c  00000000  00000000  000b3257  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000148df  00000000  00000000  001567d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002a60  00000000  00000000  0016b0b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012d8d5  00000000  00000000  0016db18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00004298  00000000  00000000  0029b3f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00026bdc  00000000  00000000  0029f688  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00038ac6  00000000  00000000  002c6264  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  002fed2a  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007ff8  00000000  00000000  002fedfc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801c670 	.word	0x0801c670

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801c670 	.word	0x0801c670

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f003 fba3 	bl	8003d0c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f01b f8af 	bl	801b728 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 ff73 	bl	80014b4 <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	0801fe94 	.word	0x0801fe94
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005e0:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005e4:	2000a8b8 	.word	0x2000a8b8

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bded 	b.w	80011c8 <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be5b 	b.w	80012a8 <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f002 bef1 	b.w	80033dc <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f002 bf28 	b.w	8003450 <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f01a feff 	bl	801b44a <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	2000015c 	.word	0x2000015c

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2000015c 	.word	0x2000015c

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f01a febe 	bl	801b44a <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f01a feb6 	bl	801b44a <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f003 fa59 	bl	8003ba4 <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2124      	movs	r1, #36	; 0x24
 800070a:	f01a fecd 	bl	801b4a8 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000160 	.word	0x20000160
 8000714:	0801c714 	.word	0x0801c714
 8000718:	0801c727 	.word	0x0801c727
 800071c:	0801c751 	.word	0x0801c751

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f003 fa77 	bl	8003c20 <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000160 	.word	0x20000160

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f004 bc77 	b.w	800505c <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000164 	.word	0x20000164
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f004 bc5b 	b.w	800505c <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000164 	.word	0x20000164
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f004 bc49 	b.w	8005066 <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f004 fc29 	bl	8005050 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000164 	.word	0x20000164

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000174 	.word	0x20000174

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4604      	mov	r4, r0
    mcuInstr.init();
 800087c:	4d09      	ldr	r5, [pc, #36]	; (80008a4 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800087e:	f7ff ffc7 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000882:	4620      	mov	r0, r4
 8000884:	f000 fd92 	bl	80013ac <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000888:	2300      	movs	r3, #0
 800088a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800088e:	4628      	mov	r0, r5
 8000890:	f7ff feba 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000894:	2301      	movs	r3, #1
 8000896:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800089a:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800089c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800089e:	6163      	str	r3, [r4, #20]
}
 80008a0:	bd38      	pop	{r3, r4, r5, pc}
 80008a2:	bf00      	nop
 80008a4:	20000180 	.word	0x20000180
 80008a8:	2000017c 	.word	0x2000017c

080008ac <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008ac:	6803      	ldr	r3, [r0, #0]
{
 80008ae:	4604      	mov	r4, r0
 80008b0:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008b2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008b4:	4798      	blx	r3
    enableInterrupts();
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	4620      	mov	r0, r4
 80008ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008bc:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008be:	f000 fa17 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4620      	mov	r0, r4
 80008c6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008c8:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ca:	2100      	movs	r1, #0
 80008cc:	4806      	ldr	r0, [pc, #24]	; (80008e8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008ce:	9100      	str	r1, [sp, #0]
 80008d0:	2329      	movs	r3, #41	; 0x29
 80008d2:	2215      	movs	r2, #21
 80008d4:	f004 f9ab 	bl	8004c2e <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008d8:	f000 fa0a 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4620      	mov	r0, r4
 80008e0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008e2:	4798      	blx	r3
    for (;;)
 80008e4:	e7f8      	b.n	80008d8 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008e6:	bf00      	nop
 80008e8:	2000a620 	.word	0x2000a620

080008ec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008f0:	f009 fdae 	bl	800a450 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    }
 80008fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000900:	4718      	bx	r3

08000902 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000902:	f000 bd52 	b.w	80013aa <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000906 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000906:	f000 bd69 	b.w	80013dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800090a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800090a:	f000 bd69 	b.w	80013e0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800090e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800090e:	f000 bd3b 	b.w	8001388 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000912 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000912:	f000 bd41 	b.w	8001398 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000916 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000916:	f000 bd65 	b.w	80013e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800091c <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 800091c:	4b02      	ldr	r3, [pc, #8]	; (8000928 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 800091e:	2200      	movs	r2, #0
 8000920:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000922:	f008 bf87 	b.w	8009834 <_ZN8touchgfx3HAL10beginFrameEv>
 8000926:	bf00      	nop
 8000928:	20000014 	.word	0x20000014

0800092c <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 800092c:	b510      	push	{r4, lr}
 800092e:	4604      	mov	r4, r0
    HAL::endFrame();
 8000930:	f008 ff8c 	bl	800984c <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000934:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000938:	b113      	cbz	r3, 8000940 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800093a:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 800093c:	2201      	movs	r2, #1
 800093e:	701a      	strb	r2, [r3, #0]
    }
}
 8000940:	bd10      	pop	{r4, pc}
 8000942:	bf00      	nop
 8000944:	20000014 	.word	0x20000014

08000948 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000948:	f008 bf3a 	b.w	80097c0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800094c <_ZN11TouchGFXHALD0Ev>:
 800094c:	b510      	push	{r4, lr}
 800094e:	217c      	movs	r1, #124	; 0x7c
 8000950:	4604      	mov	r4, r0
 8000952:	f01a fd7a 	bl	801b44a <_ZdlPvj>
 8000956:	4620      	mov	r0, r4
 8000958:	bd10      	pop	{r4, pc}

0800095a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800095a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800095e:	b11b      	cbz	r3, 8000968 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000960:	6840      	ldr	r0, [r0, #4]
 8000962:	6803      	ldr	r3, [r0, #0]
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	4718      	bx	r3
    }
 8000968:	4618      	mov	r0, r3
 800096a:	4770      	bx	lr

0800096c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800096c:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800096e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000972:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 8000976:	4b10      	ldr	r3, [pc, #64]	; (80009b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 8000978:	428c      	cmp	r4, r1
 800097a:	781a      	ldrb	r2, [r3, #0]
 800097c:	d00d      	beq.n	800099a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 800097e:	b95a      	cbnz	r2, 8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000980:	4a0e      	ldr	r2, [pc, #56]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000982:	490f      	ldr	r1, [pc, #60]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000984:	480f      	ldr	r0, [pc, #60]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000986:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000988:	4d0f      	ldr	r5, [pc, #60]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800098a:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800098c:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800098e:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000990:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 8000992:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 8000994:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000996:	701a      	strb	r2, [r3, #0]
    }
 8000998:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800099a:	2a00      	cmp	r2, #0
 800099c:	d0fc      	beq.n	8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800099e:	4809      	ldr	r0, [pc, #36]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80009a0:	4a07      	ldr	r2, [pc, #28]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80009a2:	8801      	ldrh	r1, [r0, #0]
 80009a4:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80009a6:	4a05      	ldr	r2, [pc, #20]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80009a8:	4d07      	ldr	r5, [pc, #28]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80009aa:	8814      	ldrh	r4, [r2, #0]
 80009ac:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80009ae:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80009b0:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80009b2:	2200      	movs	r2, #0
 80009b4:	e7ef      	b.n	8000996 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80009b6:	bf00      	nop
 80009b8:	2000a31c 	.word	0x2000a31c
 80009bc:	2000a318 	.word	0x2000a318
 80009c0:	2000a31e 	.word	0x2000a31e
 80009c4:	2000a31a 	.word	0x2000a31a
 80009c8:	2000a320 	.word	0x2000a320

080009cc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009cc:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009ce:	4c0c      	ldr	r4, [pc, #48]	; (8000a00 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009d0:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009d2:	b931      	cbnz	r1, 80009e2 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009d4:	4b0b      	ldr	r3, [pc, #44]	; (8000a04 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009d6:	4a0c      	ldr	r2, [pc, #48]	; (8000a08 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009d8:	480c      	ldr	r0, [pc, #48]	; (8000a0c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009da:	f44f 7125 	mov.w	r1, #660	; 0x294
 80009de:	f01a fd63 	bl	801b4a8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009e6:	3a00      	subs	r2, #0
 80009e8:	4909      	ldr	r1, [pc, #36]	; (8000a10 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009ec:	bf18      	it	ne
 80009ee:	2201      	movne	r2, #1
 80009f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009f2:	3b00      	subs	r3, #0
 80009f4:	4a07      	ldr	r2, [pc, #28]	; (8000a14 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009f6:	bf18      	it	ne
 80009f8:	2301      	movne	r3, #1
 80009fa:	7013      	strb	r3, [r2, #0]
}
 80009fc:	bd10      	pop	{r4, pc}
 80009fe:	bf00      	nop
 8000a00:	20000174 	.word	0x20000174
 8000a04:	0801c7c8 	.word	0x0801c7c8
 8000a08:	0801c800 	.word	0x0801c800
 8000a0c:	0801c84e 	.word	0x0801c84e
 8000a10:	2000a322 	.word	0x2000a322
 8000a14:	2000a323 	.word	0x2000a323

08000a18 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a18:	2801      	cmp	r0, #1
    {
 8000a1a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a1c:	d80a      	bhi.n	8000a34 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a1e:	784b      	ldrb	r3, [r1, #1]
 8000a20:	9300      	str	r3, [sp, #0]
 8000a22:	780b      	ldrb	r3, [r1, #0]
 8000a24:	4808      	ldr	r0, [pc, #32]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a26:	2215      	movs	r2, #21
 8000a28:	2100      	movs	r1, #0
 8000a2a:	f004 f900 	bl	8004c2e <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a2e:	b003      	add	sp, #12
 8000a30:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a34:	9101      	str	r1, [sp, #4]
 8000a36:	5c0b      	ldrb	r3, [r1, r0]
 8000a38:	9300      	str	r3, [sp, #0]
 8000a3a:	2239      	movs	r2, #57	; 0x39
 8000a3c:	4603      	mov	r3, r0
 8000a3e:	2100      	movs	r1, #0
 8000a40:	4801      	ldr	r0, [pc, #4]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a42:	f004 f905 	bl	8004c50 <HAL_DSI_LongWrite>
    }
 8000a46:	e7f2      	b.n	8000a2e <DSI_IO_WriteCmd+0x16>
 8000a48:	2000a620 	.word	0x2000a620

08000a4c <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a4e:	4a0b      	ldr	r2, [pc, #44]	; (8000a7c <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a50:	4c0b      	ldr	r4, [pc, #44]	; (8000a80 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a52:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a54:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a56:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a58:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5a:	9201      	str	r2, [sp, #4]
 8000a5c:	2244      	movs	r2, #68	; 0x44
 8000a5e:	9200      	str	r2, [sp, #0]
 8000a60:	2100      	movs	r1, #0
 8000a62:	2239      	movs	r2, #57	; 0x39
 8000a64:	4620      	mov	r0, r4
 8000a66:	f004 f8f3 	bl	8004c50 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	9100      	str	r1, [sp, #0]
 8000a6e:	2335      	movs	r3, #53	; 0x35
 8000a70:	462a      	mov	r2, r5
 8000a72:	4620      	mov	r0, r4
 8000a74:	f004 f8db 	bl	8004c2e <HAL_DSI_ShortWrite>
    }
 8000a78:	b003      	add	sp, #12
 8000a7a:	bd30      	pop	{r4, r5, pc}
 8000a7c:	2000018c 	.word	0x2000018c
 8000a80:	2000a620 	.word	0x2000a620

08000a84 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a84:	b507      	push	{r0, r1, r2, lr}
 8000a86:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a88:	f7ff ffe0 	bl	8000a4c <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a8c:	9801      	ldr	r0, [sp, #4]
}
 8000a8e:	b003      	add	sp, #12
 8000a90:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a94:	f000 bc88 	b.w	80013a8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a98 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000a98:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000a9a:	4b07      	ldr	r3, [pc, #28]	; (8000ab8 <LCD_SetUpdateRegion+0x20>)
 8000a9c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aa0:	232a      	movs	r3, #42	; 0x2a
 8000aa2:	9001      	str	r0, [sp, #4]
 8000aa4:	9300      	str	r3, [sp, #0]
 8000aa6:	2239      	movs	r2, #57	; 0x39
 8000aa8:	2304      	movs	r3, #4
 8000aaa:	2100      	movs	r1, #0
 8000aac:	4803      	ldr	r0, [pc, #12]	; (8000abc <LCD_SetUpdateRegion+0x24>)
 8000aae:	f004 f8cf 	bl	8004c50 <HAL_DSI_LongWrite>
    }
 8000ab2:	b003      	add	sp, #12
 8000ab4:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ab8:	20000004 	.word	0x20000004
 8000abc:	2000a620 	.word	0x2000a620

08000ac0 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000ac0:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ac2:	4d15      	ldr	r5, [pc, #84]	; (8000b18 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ac4:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ac6:	2000      	movs	r0, #0
 8000ac8:	f7ff fe44 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000acc:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ace:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ad8:	f000 f8fe 	bl	8000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000adc:	4b0f      	ldr	r3, [pc, #60]	; (8000b1c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000ade:	6828      	ldr	r0, [r5, #0]
 8000ae0:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000ae2:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000ae4:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000ae8:	b123      	cbz	r3, 8000af4 <HAL_DSI_TearingEffectCallback+0x34>
 8000aea:	4d0d      	ldr	r5, [pc, #52]	; (8000b20 <HAL_DSI_TearingEffectCallback+0x60>)
 8000aec:	782b      	ldrb	r3, [r5, #0]
 8000aee:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000af2:	b123      	cbz	r3, 8000afe <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000af4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000af8:	2000      	movs	r0, #0
 8000afa:	f7ff be47 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000afe:	f009 fca7 	bl	800a450 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b02:	4b08      	ldr	r3, [pc, #32]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b04:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b06:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b08:	f7ff ffc6 	bl	8000a98 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b0c:	4620      	mov	r0, r4
 8000b0e:	f004 f87e 	bl	8004c0e <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b12:	2301      	movs	r3, #1
 8000b14:	702b      	strb	r3, [r5, #0]
    }
 8000b16:	bd70      	pop	{r4, r5, r6, pc}
 8000b18:	2000a324 	.word	0x2000a324
 8000b1c:	20000014 	.word	0x20000014
 8000b20:	2000018e 	.word	0x2000018e
 8000b24:	20000178 	.word	0x20000178

08000b28 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b28:	4b30      	ldr	r3, [pc, #192]	; (8000bec <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b2a:	4a31      	ldr	r2, [pc, #196]	; (8000bf0 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b2c:	b570      	push	{r4, r5, r6, lr}
 8000b2e:	4605      	mov	r5, r0
        updateRegion++;
 8000b30:	6818      	ldr	r0, [r3, #0]
 8000b32:	4c30      	ldr	r4, [pc, #192]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b34:	3001      	adds	r0, #1
 8000b36:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b38:	4b2f      	ldr	r3, [pc, #188]	; (8000bf8 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b3a:	2803      	cmp	r0, #3
 8000b3c:	681e      	ldr	r6, [r3, #0]
 8000b3e:	dc2a      	bgt.n	8000b96 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b40:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b44:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b48:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f021 0108 	bic.w	r1, r1, #8
 8000b50:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b54:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b56:	bf0c      	ite	eq
 8000b58:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b5a:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b5c:	3302      	adds	r3, #2
 8000b5e:	4927      	ldr	r1, [pc, #156]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b60:	041b      	lsls	r3, r3, #16
 8000b62:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b66:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b68:	4b25      	ldr	r3, [pc, #148]	; (8000c00 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b6a:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b6c:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b70:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b72:	4b24      	ldr	r3, [pc, #144]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b74:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b76:	2301      	movs	r3, #1
 8000b78:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b7a:	f7ff ff8d 	bl	8000a98 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b7e:	4a1d      	ldr	r2, [pc, #116]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b80:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b84:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b88:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b8a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000b8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000b92:	f004 b83c 	b.w	8004c0e <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b96:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000b9a:	491b      	ldr	r1, [pc, #108]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b9c:	f023 0308 	bic.w	r3, r3, #8
 8000ba0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba4:	4b15      	ldr	r3, [pc, #84]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000ba6:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba8:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000baa:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bae:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bb0:	4916      	ldr	r1, [pc, #88]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bb2:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bb4:	4913      	ldr	r1, [pc, #76]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000bb6:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bb8:	2201      	movs	r2, #1
 8000bba:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	f7ff ff6b 	bl	8000a98 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bc6:	f043 0308 	orr.w	r3, r3, #8
 8000bca:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bce:	2000      	movs	r0, #0
 8000bd0:	f7ff fddc 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bd4:	4b0e      	ldr	r3, [pc, #56]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bda:	4b0e      	ldr	r3, [pc, #56]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bdc:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bde:	b120      	cbz	r0, 8000bea <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000be0:	6803      	ldr	r3, [r0, #0]
    }
 8000be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000be6:	69db      	ldr	r3, [r3, #28]
 8000be8:	4718      	bx	r3
 8000bea:	bd70      	pop	{r4, r5, r6, pc}
 8000bec:	20000178 	.word	0x20000178
 8000bf0:	40016884 	.word	0x40016884
 8000bf4:	40016c00 	.word	0x40016c00
 8000bf8:	20000174 	.word	0x20000174
 8000bfc:	40016800 	.word	0x40016800
 8000c00:	00ca01e3 	.word	0x00ca01e3
 8000c04:	06800193 	.word	0x06800193
 8000c08:	00ca01e2 	.word	0x00ca01e2
 8000c0c:	00ca0003 	.word	0x00ca0003
 8000c10:	2000018e 	.word	0x2000018e
 8000c14:	2000a324 	.word	0x2000a324

08000c18 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c18:	b508      	push	{r3, lr}
 8000c1a:	4b04      	ldr	r3, [pc, #16]	; (8000c2c <IdleTaskHook+0x14>)
 8000c1c:	4601      	mov	r1, r0
 8000c1e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c20:	b101      	cbz	r1, 8000c24 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c22:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c24:	f009 fc2e 	bl	800a484 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c28:	2001      	movs	r0, #1
 8000c2a:	bd08      	pop	{r3, pc}
 8000c2c:	2000a324 	.word	0x2000a324

08000c30 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c30:	4b05      	ldr	r3, [pc, #20]	; (8000c48 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c32:	4806      	ldr	r0, [pc, #24]	; (8000c4c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	605a      	str	r2, [r3, #4]
 8000c38:	609a      	str	r2, [r3, #8]
 8000c3a:	4a05      	ldr	r2, [pc, #20]	; (8000c50 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c3c:	601a      	str	r2, [r3, #0]
 8000c3e:	4b05      	ldr	r3, [pc, #20]	; (8000c54 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c40:	6003      	str	r3, [r0, #0]
        init();
 8000c42:	f7ff bd17 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c46:	bf00      	nop
 8000c48:	20000180 	.word	0x20000180
 8000c4c:	2000017c 	.word	0x2000017c
 8000c50:	0801c6d8 	.word	0x0801c6d8
 8000c54:	0801c700 	.word	0x0801c700

08000c58 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c58:	2101      	movs	r1, #1
{
 8000c5a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c5c:	2200      	movs	r2, #0
 8000c5e:	4608      	mov	r0, r1
 8000c60:	f006 fa80 	bl	8007164 <osSemaphoreNew>
 8000c64:	4b0a      	ldr	r3, [pc, #40]	; (8000c90 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c66:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c68:	b928      	cbnz	r0, 8000c76 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c6a:	4b0a      	ldr	r3, [pc, #40]	; (8000c94 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c6c:	4a0a      	ldr	r2, [pc, #40]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c6e:	2127      	movs	r1, #39	; 0x27

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c70:	480a      	ldr	r0, [pc, #40]	; (8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c72:	f01a fc19 	bl	801b4a8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c76:	2200      	movs	r2, #0
 8000c78:	2104      	movs	r1, #4
 8000c7a:	2001      	movs	r0, #1
 8000c7c:	f006 fb10 	bl	80072a0 <osMessageQueueNew>
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c82:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	b918      	cbnz	r0, 8000c8e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c86:	4b07      	ldr	r3, [pc, #28]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c88:	4a03      	ldr	r2, [pc, #12]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c8a:	212b      	movs	r1, #43	; 0x2b
 8000c8c:	e7f0      	b.n	8000c70 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000c8e:	bd08      	pop	{r3, pc}
 8000c90:	20000194 	.word	0x20000194
 8000c94:	0801c960 	.word	0x0801c960
 8000c98:	0801c9a9 	.word	0x0801c9a9
 8000c9c:	0801c9d8 	.word	0x0801c9d8
 8000ca0:	20000190 	.word	0x20000190
 8000ca4:	0801ca36 	.word	0x0801ca36

08000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000ca8:	4b02      	ldr	r3, [pc, #8]	; (8000cb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000caa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cae:	6818      	ldr	r0, [r3, #0]
 8000cb0:	f006 baa2 	b.w	80071f8 <osSemaphoreAcquire>
 8000cb4:	20000194 	.word	0x20000194

08000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000cb8:	4b01      	ldr	r3, [pc, #4]	; (8000cc0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cba:	6818      	ldr	r0, [r3, #0]
 8000cbc:	f006 bac8 	b.w	8007250 <osSemaphoreRelease>
 8000cc0:	20000194 	.word	0x20000194

08000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cc4:	4b02      	ldr	r3, [pc, #8]	; (8000cd0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	6818      	ldr	r0, [r3, #0]
 8000cca:	f006 ba95 	b.w	80071f8 <osSemaphoreAcquire>
 8000cce:	bf00      	nop
 8000cd0:	20000194 	.word	0x20000194

08000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000cd4:	f7ff bff0 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cd8:	4803      	ldr	r0, [pc, #12]	; (8000ce8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cda:	4904      	ldr	r1, [pc, #16]	; (8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cdc:	6800      	ldr	r0, [r0, #0]
 8000cde:	2300      	movs	r3, #0
 8000ce0:	461a      	mov	r2, r3
 8000ce2:	f006 bb19 	b.w	8007318 <osMessageQueuePut>
 8000ce6:	bf00      	nop
 8000ce8:	20000190 	.word	0x20000190
 8000cec:	20000018 	.word	0x20000018

08000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000cf0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000cf2:	4c08      	ldr	r4, [pc, #32]	; (8000d14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	461a      	mov	r2, r3
 8000cf8:	a901      	add	r1, sp, #4
 8000cfa:	6820      	ldr	r0, [r4, #0]
 8000cfc:	f006 fb3c 	bl	8007378 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d00:	6820      	ldr	r0, [r4, #0]
 8000d02:	f04f 33ff 	mov.w	r3, #4294967295
 8000d06:	2200      	movs	r2, #0
 8000d08:	a901      	add	r1, sp, #4
 8000d0a:	f006 fb35 	bl	8007378 <osMessageQueueGet>
}
 8000d0e:	b002      	add	sp, #8
 8000d10:	bd10      	pop	{r4, pc}
 8000d12:	bf00      	nop
 8000d14:	20000190 	.word	0x20000190

08000d18 <_ZN8touchgfx10OSWrappers9taskYieldEv>:
 * running without an operating system, the implementation can run
 * a very short task and return.
 */
void OSWrappers::taskYield()
{
    osThreadYield();
 8000d18:	f006 ba06 	b.w	8007128 <osThreadYield>

08000d1c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d1c:	6803      	ldr	r3, [r0, #0]
 8000d1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d20:	4718      	bx	r3

08000d22 <_ZN10STM32F4DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d22:	2001      	movs	r0, #1
 8000d24:	4770      	bx	lr

08000d26 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d26:	6803      	ldr	r3, [r0, #0]
 8000d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d2a:	4718      	bx	r3

08000d2c <_ZN10STM32F4DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32F4DMA::initialize()
{
 8000d2c:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d2e:	2300      	movs	r3, #0
 8000d30:	9301      	str	r3, [sp, #4]
 8000d32:	4b0d      	ldr	r3, [pc, #52]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8000d34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d36:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d3a:	631a      	str	r2, [r3, #48]	; 0x30
 8000d3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d3e:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d42:	9201      	str	r2, [sp, #4]
 8000d44:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d46:	691a      	ldr	r2, [r3, #16]
 8000d48:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d4c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d4e:	691a      	ldr	r2, [r3, #16]
 8000d50:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d54:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d56:	4b05      	ldr	r3, [pc, #20]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x40>)
 8000d58:	4a05      	ldr	r2, [pc, #20]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x44>)
 8000d5a:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d5c:	4b05      	ldr	r3, [pc, #20]	; (8000d74 <_ZN10STM32F4DMA10initializeEv+0x48>)
 8000d5e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d62:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d64:	b002      	add	sp, #8
 8000d66:	4770      	bx	lr
 8000d68:	40023800 	.word	0x40023800
 8000d6c:	2000a710 	.word	0x2000a710
 8000d70:	08000d81 	.word	0x08000d81
 8000d74:	e000e100 	.word	0xe000e100

08000d78 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d78:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000d7c:	4770      	bx	lr
	...

08000d80 <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000d80:	4b02      	ldr	r3, [pc, #8]	; (8000d8c <DMA2D_XferCpltCallback+0xc>)
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000d86:	6803      	ldr	r3, [r0, #0]
 8000d88:	695b      	ldr	r3, [r3, #20]
 8000d8a:	4718      	bx	r3
 8000d8c:	2000a324 	.word	0x2000a324

08000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d90:	b508      	push	{r3, lr}
 8000d92:	280b      	cmp	r0, #11
 8000d94:	d80b      	bhi.n	8000dae <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d96:	e8df f000 	tbb	[pc, r0]
 8000d9a:	0612      	.short	0x0612
 8000d9c:	0a0a0a10 	.word	0x0a0a0a10
 8000da0:	0808080a 	.word	0x0808080a
 8000da4:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000da6:	2001      	movs	r0, #1
}
 8000da8:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000daa:	2005      	movs	r0, #5
        break;
 8000dac:	e7fc      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000dae:	4b05      	ldr	r3, [pc, #20]	; (8000dc4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000db0:	4a05      	ldr	r2, [pc, #20]	; (8000dc8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000db2:	4806      	ldr	r0, [pc, #24]	; (8000dcc <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000db4:	2165      	movs	r1, #101	; 0x65
 8000db6:	f01a fb77 	bl	801b4a8 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000dba:	2000      	movs	r0, #0
 8000dbc:	e7f4      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dbe:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dc0:	e7f2      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dc2:	bf00      	nop
 8000dc4:	0801ca78 	.word	0x0801ca78
 8000dc8:	0801ca93 	.word	0x0801ca93
 8000dcc:	0801cadf 	.word	0x0801cadf

08000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000dd0:	b508      	push	{r3, lr}
 8000dd2:	280a      	cmp	r0, #10
 8000dd4:	d809      	bhi.n	8000dea <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dd6:	e8df f000 	tbb	[pc, r0]
 8000dda:	0610      	.short	0x0610
 8000ddc:	0808080e 	.word	0x0808080e
 8000de0:	06060608 	.word	0x06060608
 8000de4:	06          	.byte	0x06
 8000de5:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000de6:	2001      	movs	r0, #1
}
 8000de8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000dea:	4b05      	ldr	r3, [pc, #20]	; (8000e00 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000dec:	4a05      	ldr	r2, [pc, #20]	; (8000e04 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dee:	4806      	ldr	r0, [pc, #24]	; (8000e08 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000df0:	2186      	movs	r1, #134	; 0x86
 8000df2:	f01a fb59 	bl	801b4a8 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000df6:	2000      	movs	r0, #0
 8000df8:	e7f6      	b.n	8000de8 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000dfa:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dfc:	e7f4      	b.n	8000de8 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dfe:	bf00      	nop
 8000e00:	0801ca78 	.word	0x0801ca78
 8000e04:	0801cb3b 	.word	0x0801cb3b
 8000e08:	0801cadf 	.word	0x0801cadf

08000e0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e10:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e14:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e16:	4640      	mov	r0, r8
 8000e18:	f7ff ffba 	bl	8000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e1c:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e20:	4638      	mov	r0, r7
 8000e22:	f7ff ffb5 	bl	8000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e26:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e28:	4638      	mov	r0, r7
 8000e2a:	f7ff ffd1 	bl	8000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e2e:	8aa1      	ldrh	r1, [r4, #20]
 8000e30:	8b62      	ldrh	r2, [r4, #26]
 8000e32:	4b53      	ldr	r3, [pc, #332]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000e34:	1a52      	subs	r2, r2, r1
 8000e36:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e38:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e3a:	8b22      	ldrh	r2, [r4, #24]
 8000e3c:	1a52      	subs	r2, r2, r1
 8000e3e:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e40:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e42:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e44:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e48:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4a:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e4c:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4e:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e50:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e52:	f8d4 c000 	ldr.w	ip, [r4]
 8000e56:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000e5a:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e5e:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000e62:	469e      	mov	lr, r3
 8000e64:	d03b      	beq.n	8000ede <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000e66:	d815      	bhi.n	8000e94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000e68:	f1bc 0f20 	cmp.w	ip, #32
 8000e6c:	ea45 0002 	orr.w	r0, r5, r2
 8000e70:	d079      	beq.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
 8000e72:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e76:	d076      	beq.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
 8000e78:	f1bc 0f04 	cmp.w	ip, #4
 8000e7c:	d02b      	beq.n	8000ed6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e7e:	4b40      	ldr	r3, [pc, #256]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000e80:	432a      	orrs	r2, r5
 8000e82:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e86:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e88:	61da      	str	r2, [r3, #28]
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000e8a:	bf14      	ite	ne
 8000e8c:	4a3d      	ldrne	r2, [pc, #244]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000e8e:	f240 2201 	movweq	r2, #513	; 0x201
 8000e92:	e01e      	b.n	8000ed2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc6>
    switch (blitOp.operation)
 8000e94:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000e98:	d007      	beq.n	8000eaa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000e9a:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000e9e:	d1ee      	bne.n	8000e7e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ea0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ea4:	f042 0209 	orr.w	r2, r2, #9
 8000ea8:	e003      	b.n	8000eb2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eaa:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eae:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eb2:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000eb4:	68e0      	ldr	r0, [r4, #12]
 8000eb6:	0202      	lsls	r2, r0, #8
 8000eb8:	0144      	lsls	r4, r0, #5
 8000eba:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000ebe:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8000ec2:	00c0      	lsls	r0, r0, #3
 8000ec4:	4322      	orrs	r2, r4
 8000ec6:	b2c0      	uxtb	r0, r0
 8000ec8:	4302      	orrs	r2, r0
 8000eca:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ecc:	4a2e      	ldr	r2, [pc, #184]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ece:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ed0:	6159      	str	r1, [r3, #20]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ed2:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ed4:	e043      	b.n	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x152>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed6:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000eda:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000edc:	e7f6      	b.n	8000ecc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000ede:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ee0:	432a      	orrs	r2, r5
 8000ee2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000ee6:	1d04      	adds	r4, r0, #4
 8000ee8:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eea:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000eec:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000eee:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ef0:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000ef2:	b142      	cbz	r2, 8000f06 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ef4:	2a01      	cmp	r2, #1
 8000ef6:	d01c      	beq.n	8000f32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
                assert(0 && "Unsupported format");
 8000ef8:	4b24      	ldr	r3, [pc, #144]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x180>)
 8000efa:	4a25      	ldr	r2, [pc, #148]	; (8000f90 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>)
 8000efc:	4825      	ldr	r0, [pc, #148]	; (8000f94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000efe:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000f02:	f01a fad1 	bl	801b4a8 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f06:	8842      	ldrh	r2, [r0, #2]
 8000f08:	69d9      	ldr	r1, [r3, #28]
 8000f0a:	1e50      	subs	r0, r2, #1
 8000f0c:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f10:	f022 0210 	bic.w	r2, r2, #16
 8000f14:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f18:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f1a:	2501      	movs	r5, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f1c:	4c18      	ldr	r4, [pc, #96]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000f1e:	69e3      	ldr	r3, [r4, #28]
 8000f20:	f043 0320 	orr.w	r3, r3, #32
 8000f24:	61e3      	str	r3, [r4, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f26:	69e3      	ldr	r3, [r4, #28]
 8000f28:	069b      	lsls	r3, r3, #26
 8000f2a:	d513      	bpl.n	8000f54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
                OSWrappers::taskYield();
 8000f2c:	f7ff fef4 	bl	8000d18 <_ZN8touchgfx10OSWrappers9taskYieldEv>
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f30:	e7f9      	b.n	8000f26 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x11a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f32:	8842      	ldrh	r2, [r0, #2]
 8000f34:	69d9      	ldr	r1, [r3, #28]
 8000f36:	1e50      	subs	r0, r2, #1
 8000f38:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f3c:	f022 0210 	bic.w	r2, r2, #16
 8000f40:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000f44:	f1b9 05ff 	subs.w	r5, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f48:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000f4c:	bf18      	it	ne
 8000f4e:	2501      	movne	r5, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f50:	61da      	str	r2, [r3, #28]
                break;
 8000f52:	e7e3      	b.n	8000f1c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x110>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f54:	2310      	movs	r3, #16
 8000f56:	60a3      	str	r3, [r4, #8]
            if(blend)
 8000f58:	b11d      	cbz	r5, 8000f62 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f5a:	4b0b      	ldr	r3, [pc, #44]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f5c:	6023      	str	r3, [r4, #0]
}
 8000f5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f62:	4b08      	ldr	r3, [pc, #32]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000f64:	e7fa      	b.n	8000f5c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f66:	4b08      	ldr	r3, [pc, #32]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f68:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f6c:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f70:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f74:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f78:	f8ce 3000 	str.w	r3, [lr]
        break;
 8000f7c:	e7ef      	b.n	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x152>
 8000f7e:	bf00      	nop
 8000f80:	4002b000 	.word	0x4002b000
 8000f84:	00010201 	.word	0x00010201
 8000f88:	00020201 	.word	0x00020201
 8000f8c:	0801cb88 	.word	0x0801cb88
 8000f90:	0801cba2 	.word	0x0801cba2
 8000f94:	0801cadf 	.word	0x0801cadf

08000f98 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F4DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f9a:	7f8e      	ldrb	r6, [r1, #30]
{
 8000f9c:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f9e:	4630      	mov	r0, r6
 8000fa0:	f7ff ff16 	bl	8000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fa4:	8aa7      	ldrh	r7, [r4, #20]
 8000fa6:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fa8:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000faa:	4b1e      	ldr	r3, [pc, #120]	; (8001024 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fac:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fae:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb0:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb4:	1bd2      	subs	r2, r2, r7
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb6:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb8:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fba:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fbc:	6821      	ldr	r1, [r4, #0]
 8000fbe:	2908      	cmp	r1, #8
 8000fc0:	d118      	bne.n	8000ff4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc2:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc4:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fc6:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fc8:	7f21      	ldrb	r1, [r4, #28]
 8000fca:	4a17      	ldr	r2, [pc, #92]	; (8001028 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
 8000fcc:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8000fd0:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, (((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8000fd2:	68e1      	ldr	r1, [r4, #12]
 8000fd4:	020a      	lsls	r2, r1, #8
 8000fd6:	0148      	lsls	r0, r1, #5
 8000fd8:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000fdc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8000fe0:	00c9      	lsls	r1, r1, #3
 8000fe2:	4302      	orrs	r2, r0
 8000fe4:	b2c9      	uxtb	r1, r1
 8000fe6:	430a      	orrs	r2, r1
 8000fe8:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fea:	4a10      	ldr	r2, [pc, #64]	; (800102c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fec:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fee:	60dd      	str	r5, [r3, #12]
            // set color
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000ff0:	601a      	str	r2, [r3, #0]
    }
}
 8000ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000ff4:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ff6:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000ff8:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 8000ffa:	68e1      	ldr	r1, [r4, #12]
 8000ffc:	b91e      	cbnz	r6, 8001006 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6e>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8000ffe:	6399      	str	r1, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001000:	4b08      	ldr	r3, [pc, #32]	; (8001024 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 8001002:	4a0b      	ldr	r2, [pc, #44]	; (8001030 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
 8001004:	e7f4      	b.n	8000ff0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8001006:	020a      	lsls	r2, r1, #8
 8001008:	0148      	lsls	r0, r1, #5
 800100a:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 800100e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8001012:	00c9      	lsls	r1, r1, #3
 8001014:	b2c9      	uxtb	r1, r1
 8001016:	4302      	orrs	r2, r0
 8001018:	430a      	orrs	r2, r1
 800101a:	7f21      	ldrb	r1, [r4, #28]
 800101c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8001020:	639a      	str	r2, [r3, #56]	; 0x38
 8001022:	e7ed      	b.n	8001000 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>
 8001024:	4002b000 	.word	0x4002b000
 8001028:	00010009 	.word	0x00010009
 800102c:	00020201 	.word	0x00020201
 8001030:	00030201 	.word	0x00030201

08001034 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8001034:	4b05      	ldr	r3, [pc, #20]	; (800104c <_ZN10STM32F4DMAD1Ev+0x18>)
 8001036:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001038:	4b05      	ldr	r3, [pc, #20]	; (8001050 <_ZN10STM32F4DMAD1Ev+0x1c>)
 800103a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800103e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001042:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001046:	f3bf 8f6f 	isb	sy
}
 800104a:	4770      	bx	lr
 800104c:	0801cbec 	.word	0x0801cbec
 8001050:	e000e100 	.word	0xe000e100

08001054 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8001054:	b510      	push	{r4, lr}
 8001056:	4604      	mov	r4, r0
}
 8001058:	f7ff ffec 	bl	8001034 <_ZN10STM32F4DMAD1Ev>
 800105c:	4620      	mov	r0, r4
 800105e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001062:	f01a f9f2 	bl	801b44a <_ZdlPvj>
 8001066:	4620      	mov	r0, r4
 8001068:	bd10      	pop	{r4, pc}
	...

0800106c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800106c:	b570      	push	{r4, r5, r6, lr}
 800106e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001070:	4625      	mov	r5, r4
 8001072:	4b0a      	ldr	r3, [pc, #40]	; (800109c <_ZN10STM32F4DMAC1Ev+0x30>)
 8001074:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001076:	2600      	movs	r6, #0
 8001078:	6060      	str	r0, [r4, #4]
 800107a:	7226      	strb	r6, [r4, #8]
 800107c:	7266      	strb	r6, [r4, #9]
 800107e:	f845 3b20 	str.w	r3, [r5], #32
 8001082:	2260      	movs	r2, #96	; 0x60
 8001084:	4629      	mov	r1, r5
 8001086:	f009 fb35 	bl	800a6f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800108a:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800108e:	60ee      	str	r6, [r5, #12]
 8001090:	3520      	adds	r5, #32
 8001092:	42ab      	cmp	r3, r5
 8001094:	d1fb      	bne.n	800108e <_ZN10STM32F4DMAC1Ev+0x22>
}
 8001096:	4620      	mov	r0, r4
 8001098:	bd70      	pop	{r4, r5, r6, pc}
 800109a:	bf00      	nop
 800109c:	0801cbec 	.word	0x0801cbec

080010a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010a0:	2001      	movs	r0, #1
 80010a2:	4770      	bx	lr

080010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010a4:	200c      	movs	r0, #12
 80010a6:	4770      	bx	lr

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010a8:	230c      	movs	r3, #12
 80010aa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ae:	3008      	adds	r0, #8
 80010b0:	4770      	bx	lr

080010b2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010b2:	230c      	movs	r3, #12
 80010b4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b8:	3008      	adds	r0, #8
 80010ba:	4770      	bx	lr

080010bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010bc:	2001      	movs	r0, #1
 80010be:	4770      	bx	lr

080010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010c0:	f44f 7010 	mov.w	r0, #576	; 0x240
 80010c4:	4770      	bx	lr

080010c6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010c6:	f44f 7310 	mov.w	r3, #576	; 0x240
 80010ca:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ce:	3008      	adds	r0, #8
 80010d0:	4770      	bx	lr

080010d2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d2:	f44f 7310 	mov.w	r3, #576	; 0x240
 80010d6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010da:	3008      	adds	r0, #8
 80010dc:	4770      	bx	lr

080010de <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010de:	2001      	movs	r0, #1
 80010e0:	4770      	bx	lr

080010e2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010e2:	2010      	movs	r0, #16
 80010e4:	4770      	bx	lr

080010e6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010e6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010ea:	3008      	adds	r0, #8
 80010ec:	4770      	bx	lr

080010ee <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ee:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010f6:	4608      	mov	r0, r1
 80010f8:	f001 b8a0 	b.w	800223c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

080010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80010fc:	b510      	push	{r4, lr}
 80010fe:	4b03      	ldr	r3, [pc, #12]	; (800110c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001100:	6003      	str	r3, [r0, #0]
 8001102:	4604      	mov	r4, r0
 8001104:	f008 f970 	bl	80093e8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001108:	4620      	mov	r0, r4
 800110a:	bd10      	pop	{r4, pc}
 800110c:	0801cca4 	.word	0x0801cca4

08001110 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001110:	b510      	push	{r4, lr}
 8001112:	4604      	mov	r4, r0
 8001114:	f7ff fff2 	bl	80010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001118:	4620      	mov	r0, r4
 800111a:	2114      	movs	r1, #20
 800111c:	f01a f995 	bl	801b44a <_ZdlPvj>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}

08001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001124:	b510      	push	{r4, lr}
 8001126:	4b03      	ldr	r3, [pc, #12]	; (8001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001128:	6003      	str	r3, [r0, #0]
 800112a:	4604      	mov	r4, r0
 800112c:	f008 f95c 	bl	80093e8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	bd10      	pop	{r4, pc}
 8001134:	0801cc70 	.word	0x0801cc70

08001138 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001138:	b510      	push	{r4, lr}
 800113a:	4604      	mov	r4, r0
 800113c:	f7ff fff2 	bl	8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001140:	4620      	mov	r0, r4
 8001142:	f44f 7112 	mov.w	r1, #584	; 0x248
 8001146:	f01a f980 	bl	801b44a <_ZdlPvj>
 800114a:	4620      	mov	r0, r4
 800114c:	bd10      	pop	{r4, pc}
	...

08001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001150:	b510      	push	{r4, lr}
 8001152:	4b03      	ldr	r3, [pc, #12]	; (8001160 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001154:	6003      	str	r3, [r0, #0]
 8001156:	4604      	mov	r4, r0
 8001158:	f008 f946 	bl	80093e8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800115c:	4620      	mov	r0, r4
 800115e:	bd10      	pop	{r4, pc}
 8001160:	0801cc3c 	.word	0x0801cc3c

08001164 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001164:	b510      	push	{r4, lr}
 8001166:	4604      	mov	r4, r0
 8001168:	f7ff fff2 	bl	8001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800116c:	4620      	mov	r0, r4
 800116e:	2118      	movs	r1, #24
 8001170:	f01a f96b 	bl	801b44a <_ZdlPvj>
 8001174:	4620      	mov	r0, r4
 8001176:	bd10      	pop	{r4, pc}

08001178 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001178:	b510      	push	{r4, lr}
 800117a:	4b08      	ldr	r3, [pc, #32]	; (800119c <_ZN12FrontendHeapD1Ev+0x24>)
 800117c:	6003      	str	r3, [r0, #0]
 800117e:	4604      	mov	r4, r0
 8001180:	f500 701d 	add.w	r0, r0, #628	; 0x274
 8001184:	f7ff ffba 	bl	80010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001188:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800118c:	f7ff ffca 	bl	8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001190:	f104 0014 	add.w	r0, r4, #20
 8001194:	f7ff ffdc 	bl	8001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001198:	4620      	mov	r0, r4
 800119a:	bd10      	pop	{r4, pc}
 800119c:	0801ccd8 	.word	0x0801ccd8

080011a0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011a0:	b508      	push	{r3, lr}
 80011a2:	4802      	ldr	r0, [pc, #8]	; (80011ac <__tcf_0+0xc>)
 80011a4:	f7ff ffe8 	bl	8001178 <_ZN12FrontendHeapD1Ev>
 80011a8:	bd08      	pop	{r3, pc}
 80011aa:	bf00      	nop
 80011ac:	2000019c 	.word	0x2000019c

080011b0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011b0:	b510      	push	{r4, lr}
 80011b2:	4604      	mov	r4, r0
 80011b4:	f7ff ffe0 	bl	8001178 <_ZN12FrontendHeapD1Ev>
 80011b8:	4620      	mov	r0, r4
 80011ba:	f44f 7179 	mov.w	r1, #996	; 0x3e4
 80011be:	f01a f944 	bl	801b44a <_ZdlPvj>
 80011c2:	4620      	mov	r0, r4
 80011c4:	bd10      	pop	{r4, pc}
	...

080011c8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011cc:	f000 ff78 	bl	80020c0 <_ZN14BitmapDatabase11getInstanceEv>
 80011d0:	4605      	mov	r5, r0
 80011d2:	f000 ff79 	bl	80020c8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011d6:	2400      	movs	r4, #0
 80011d8:	4601      	mov	r1, r0
 80011da:	4623      	mov	r3, r4
 80011dc:	4628      	mov	r0, r5
 80011de:	4622      	mov	r2, r4
 80011e0:	9400      	str	r4, [sp, #0]
 80011e2:	f00e fa7f 	bl	800f6e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011e6:	4b25      	ldr	r3, [pc, #148]	; (800127c <touchgfx_init+0xb4>)
 80011e8:	4a25      	ldr	r2, [pc, #148]	; (8001280 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 80011ea:	4d26      	ldr	r5, [pc, #152]	; (8001284 <touchgfx_init+0xbc>)
 80011ec:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011ee:	4620      	mov	r0, r4
 80011f0:	f001 fcde 	bl	8002bb0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80011f4:	4824      	ldr	r0, [pc, #144]	; (8001288 <touchgfx_init+0xc0>)
 80011f6:	f00e f9b7 	bl	800f568 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80011fa:	782b      	ldrb	r3, [r5, #0]
 80011fc:	f3bf 8f5b 	dmb	ish
 8001200:	07db      	lsls	r3, r3, #31
 8001202:	d435      	bmi.n	8001270 <touchgfx_init+0xa8>
 8001204:	4628      	mov	r0, r5
 8001206:	f01a f922 	bl	801b44e <__cxa_guard_acquire>
 800120a:	b388      	cbz	r0, 8001270 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800120c:	4c1f      	ldr	r4, [pc, #124]	; (800128c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800120e:	4b20      	ldr	r3, [pc, #128]	; (8001290 <touchgfx_init+0xc8>)
 8001210:	6023      	str	r3, [r4, #0]
 8001212:	f504 7623 	add.w	r6, r4, #652	; 0x28c
 8001216:	f104 0014 	add.w	r0, r4, #20
 800121a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800121e:	f504 771d 	add.w	r7, r4, #628	; 0x274
 8001222:	6060      	str	r0, [r4, #4]
 8001224:	f8c4 8008 	str.w	r8, [r4, #8]
 8001228:	60e7      	str	r7, [r4, #12]
 800122a:	6126      	str	r6, [r4, #16]
 800122c:	f008 f8de 	bl	80093ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001230:	4b18      	ldr	r3, [pc, #96]	; (8001294 <touchgfx_init+0xcc>)
 8001232:	6163      	str	r3, [r4, #20]
 8001234:	4640      	mov	r0, r8
 8001236:	f008 f8d9 	bl	80093ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 800123a:	4b17      	ldr	r3, [pc, #92]	; (8001298 <touchgfx_init+0xd0>)
 800123c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800123e:	4638      	mov	r0, r7
 8001240:	f008 f8d4 	bl	80093ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001244:	4b15      	ldr	r3, [pc, #84]	; (800129c <touchgfx_init+0xd4>)
 8001246:	f8c4 3274 	str.w	r3, [r4, #628]	; 0x274
 800124a:	f504 7022 	add.w	r0, r4, #648	; 0x288
 800124e:	f001 fd31 	bl	8002cb4 <_ZN5ModelC1Ev>
 8001252:	4622      	mov	r2, r4
 8001254:	f504 7122 	add.w	r1, r4, #648	; 0x288
 8001258:	4630      	mov	r0, r6
 800125a:	f001 fd21 	bl	8002ca0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800125e:	4630      	mov	r0, r6
 8001260:	f000 ffec 	bl	800223c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001264:	4628      	mov	r0, r5
 8001266:	f01a f8fe 	bl	801b466 <__cxa_guard_release>
 800126a:	480d      	ldr	r0, [pc, #52]	; (80012a0 <touchgfx_init+0xd8>)
 800126c:	f01a f93a 	bl	801b4e4 <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001270:	480c      	ldr	r0, [pc, #48]	; (80012a4 <touchgfx_init+0xdc>)
}
 8001272:	b002      	add	sp, #8
 8001274:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001278:	f7ff bafe 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 800127c:	2000a380 	.word	0x2000a380
 8001280:	20001220 	.word	0x20001220
 8001284:	20000198 	.word	0x20000198
 8001288:	2000001c 	.word	0x2000001c
 800128c:	2000019c 	.word	0x2000019c
 8001290:	0801ccd8 	.word	0x0801ccd8
 8001294:	0801cc3c 	.word	0x0801cc3c
 8001298:	0801cc70 	.word	0x0801cc70
 800129c:	0801cca4 	.word	0x0801cca4
 80012a0:	080011a1 	.word	0x080011a1
 80012a4:	200011a4 	.word	0x200011a4

080012a8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012a8:	4801      	ldr	r0, [pc, #4]	; (80012b0 <touchgfx_taskEntry+0x8>)
 80012aa:	f7ff baff 	b.w	80008ac <_ZN11TouchGFXHAL9taskEntryEv>
 80012ae:	bf00      	nop
 80012b0:	200011a4 	.word	0x200011a4

080012b4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012b4:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012b6:	4c24      	ldr	r4, [pc, #144]	; (8001348 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012b8:	4e24      	ldr	r6, [pc, #144]	; (800134c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012ba:	4b25      	ldr	r3, [pc, #148]	; (8001350 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012bc:	4d25      	ldr	r5, [pc, #148]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012be:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012c0:	4630      	mov	r0, r6
 80012c2:	f7ff fed3 	bl	800106c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012c6:	4628      	mov	r0, r5
 80012c8:	f011 fa90 	bl	80127ec <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012cc:	4b22      	ldr	r3, [pc, #136]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012ce:	2200      	movs	r2, #0
 80012d0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012d4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012d8:	4920      	ldr	r1, [pc, #128]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012da:	60dc      	str	r4, [r3, #12]
 80012dc:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012e0:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012e4:	6759      	str	r1, [r3, #116]	; 0x74
 80012e6:	2101      	movs	r1, #1
 80012e8:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012ec:	491c      	ldr	r1, [pc, #112]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 80012ee:	4c1d      	ldr	r4, [pc, #116]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 80012f0:	600b      	str	r3, [r1, #0]
        DISPLAY_WIDTH = width;
 80012f2:	491d      	ldr	r1, [pc, #116]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012f4:	851a      	strh	r2, [r3, #40]	; 0x28
 80012f6:	f44f 7050 	mov.w	r0, #832	; 0x340
 80012fa:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 80012fc:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001300:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001304:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001308:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800130c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001310:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001314:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001318:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 800131c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001320:	62da      	str	r2, [r3, #44]	; 0x2c
 8001322:	861a      	strh	r2, [r3, #48]	; 0x30
 8001324:	661a      	str	r2, [r3, #96]	; 0x60
 8001326:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800132a:	671a      	str	r2, [r3, #112]	; 0x70
 800132c:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_HEIGHT = height;
 8001330:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001332:	4c0e      	ldr	r4, [pc, #56]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001334:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        DISPLAY_ROTATION = rotate0;
 8001338:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800133a:	4c0d      	ldr	r4, [pc, #52]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800133c:	4a0d      	ldr	r2, [pc, #52]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800133e:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001340:	480d      	ldr	r0, [pc, #52]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001342:	601a      	str	r2, [r3, #0]
 8001344:	8001      	strh	r1, [r0, #0]
}
 8001346:	bd70      	pop	{r4, r5, r6, pc}
 8001348:	20000580 	.word	0x20000580
 800134c:	20000584 	.word	0x20000584
 8001350:	0801c7b8 	.word	0x0801c7b8
 8001354:	20001224 	.word	0x20001224
 8001358:	200011a4 	.word	0x200011a4
 800135c:	01000001 	.word	0x01000001
 8001360:	2000a324 	.word	0x2000a324
 8001364:	2000a31a 	.word	0x2000a31a
 8001368:	2000a318 	.word	0x2000a318
 800136c:	2000a31c 	.word	0x2000a31c
 8001370:	2000a31e 	.word	0x2000a31e
 8001374:	0801c89c 	.word	0x0801c89c
 8001378:	2000a320 	.word	0x2000a320

0800137c <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 800137c:	4801      	ldr	r0, [pc, #4]	; (8001384 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800137e:	f7ff be59 	b.w	8001034 <_ZN10STM32F4DMAD1Ev>
 8001382:	bf00      	nop
 8001384:	20000584 	.word	0x20000584

08001388 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001388:	4b02      	ldr	r3, [pc, #8]	; (8001394 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800138a:	2290      	movs	r2, #144	; 0x90
 800138c:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001390:	4770      	bx	lr
 8001392:	bf00      	nop
 8001394:	e000e100 	.word	0xe000e100

08001398 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001398:	4b02      	ldr	r3, [pc, #8]	; (80013a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800139a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800139e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013a0:	4770      	bx	lr
 80013a2:	bf00      	nop
 80013a4:	e000e100 	.word	0xe000e100

080013a8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013a8:	4770      	bx	lr

080013aa <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013aa:	4770      	bx	lr

080013ac <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	4604      	mov	r4, r0
    HAL::initialize();
 80013b0:	f008 fa59 	bl	8009866 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013b4:	6823      	ldr	r3, [r4, #0]
 80013b6:	6ddd      	ldr	r5, [r3, #92]	; 0x5c
 80013b8:	f00b f976 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 80013bc:	4601      	mov	r1, r0
 80013be:	4620      	mov	r0, r4
 80013c0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013c2:	6823      	ldr	r3, [r4, #0]
 80013c4:	f8d3 5080 	ldr.w	r5, [r3, #128]	; 0x80
 80013c8:	2300      	movs	r3, #0
 80013ca:	461a      	mov	r2, r3
 80013cc:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013d0:	4620      	mov	r0, r4
 80013d2:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013d4:	2301      	movs	r3, #1
 80013d6:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013da:	bd38      	pop	{r3, r4, r5, pc}

080013dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013dc:	f008 b9f6 	b.w	80097cc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013e0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013e0:	f008 bb4f 	b.w	8009a82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013e4:	4b04      	ldr	r3, [pc, #16]	; (80013f8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013e6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013ea:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013f2:	f3bf 8f6f 	isb	sy
}
 80013f6:	4770      	bx	lr
 80013f8:	e000e100 	.word	0xe000e100

080013fc <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80013fc:	4901      	ldr	r1, [pc, #4]	; (8001404 <vApplicationIdleHook+0x8>)
 80013fe:	2000      	movs	r0, #0
 8001400:	f007 bb10 	b.w	8008a24 <vTaskSetApplicationTaskTag>
 8001404:	08000c19 	.word	0x08000c19

08001408 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001408:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800140a:	2064      	movs	r0, #100	; 0x64
 800140c:	f005 fe9e 	bl	800714c <osDelay>
  for(;;)
 8001410:	e7fb      	b.n	800140a <StartDefaultTask+0x2>
	...

08001414 <SystemClock_Config>:
{
 8001414:	b530      	push	{r4, r5, lr}
 8001416:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001418:	2210      	movs	r2, #16
 800141a:	2100      	movs	r1, #0
 800141c:	a809      	add	r0, sp, #36	; 0x24
 800141e:	f01a f9c9 	bl	801b7b4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001422:	2214      	movs	r2, #20
 8001424:	2100      	movs	r1, #0
 8001426:	a802      	add	r0, sp, #8
 8001428:	f01a f9c4 	bl	801b7b4 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800142c:	2400      	movs	r4, #0
 800142e:	4b1f      	ldr	r3, [pc, #124]	; (80014ac <SystemClock_Config+0x98>)
 8001430:	9400      	str	r4, [sp, #0]
 8001432:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001434:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001438:	641a      	str	r2, [r3, #64]	; 0x40
 800143a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800143c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001440:	9300      	str	r3, [sp, #0]
 8001442:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001444:	4b1a      	ldr	r3, [pc, #104]	; (80014b0 <SystemClock_Config+0x9c>)
 8001446:	9401      	str	r4, [sp, #4]
 8001448:	681a      	ldr	r2, [r3, #0]
 800144a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800144e:	601a      	str	r2, [r3, #0]
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001456:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001458:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800145a:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800145c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001460:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001464:	2502      	movs	r5, #2
 8001466:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 800146a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800146c:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001470:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001474:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001478:	2004      	movs	r0, #4
 800147a:	2306      	movs	r3, #6
 800147c:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001480:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001482:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001484:	f005 f99c 	bl	80067c0 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001488:	f004 fbec 	bl	8005c64 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800148c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800148e:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001492:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001494:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001498:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800149c:	2105      	movs	r1, #5
 800149e:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014a0:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014a4:	f004 ff60 	bl	8006368 <HAL_RCC_ClockConfig>
}
 80014a8:	b015      	add	sp, #84	; 0x54
 80014aa:	bd30      	pop	{r4, r5, pc}
 80014ac:	40023800 	.word	0x40023800
 80014b0:	40007000 	.word	0x40007000

080014b4 <main>:
{
 80014b4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014b8:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014ba:	f002 fc35 	bl	8003d28 <HAL_Init>
  SystemClock_Config();
 80014be:	f7ff ffa9 	bl	8001414 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c2:	2214      	movs	r2, #20
 80014c4:	2100      	movs	r1, #0
 80014c6:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014c8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ca:	f01a f973 	bl	801b7b4 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ce:	4bc9      	ldr	r3, [pc, #804]	; (80017f4 <main+0x340>)
 80014d0:	9402      	str	r4, [sp, #8]
 80014d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014d4:	48c8      	ldr	r0, [pc, #800]	; (80017f8 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014d6:	f042 0210 	orr.w	r2, r2, #16
 80014da:	631a      	str	r2, [r3, #48]	; 0x30
 80014dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014de:	f002 0210 	and.w	r2, r2, #16
 80014e2:	9202      	str	r2, [sp, #8]
 80014e4:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014e6:	9403      	str	r4, [sp, #12]
 80014e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ea:	f042 0202 	orr.w	r2, r2, #2
 80014ee:	631a      	str	r2, [r3, #48]	; 0x30
 80014f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f2:	f002 0202 	and.w	r2, r2, #2
 80014f6:	9203      	str	r2, [sp, #12]
 80014f8:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014fa:	9404      	str	r4, [sp, #16]
 80014fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001502:	631a      	str	r2, [r3, #48]	; 0x30
 8001504:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001506:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800150a:	9204      	str	r2, [sp, #16]
 800150c:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800150e:	9405      	str	r4, [sp, #20]
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f042 0208 	orr.w	r2, r2, #8
 8001516:	631a      	str	r2, [r3, #48]	; 0x30
 8001518:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151a:	f002 0208 	and.w	r2, r2, #8
 800151e:	9205      	str	r2, [sp, #20]
 8001520:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001522:	9406      	str	r4, [sp, #24]
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800152a:	631a      	str	r2, [r3, #48]	; 0x30
 800152c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001532:	9206      	str	r2, [sp, #24]
 8001534:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001536:	9407      	str	r4, [sp, #28]
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f042 0220 	orr.w	r2, r2, #32
 800153e:	631a      	str	r2, [r3, #48]	; 0x30
 8001540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001542:	f002 0220 	and.w	r2, r2, #32
 8001546:	9207      	str	r2, [sp, #28]
 8001548:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800154a:	9408      	str	r4, [sp, #32]
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001552:	631a      	str	r2, [r3, #48]	; 0x30
 8001554:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001556:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 800155a:	9208      	str	r2, [sp, #32]
 800155c:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800155e:	9409      	str	r4, [sp, #36]	; 0x24
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001566:	631a      	str	r2, [r3, #48]	; 0x30
 8001568:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800156e:	9209      	str	r2, [sp, #36]	; 0x24
 8001570:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001572:	940a      	str	r4, [sp, #40]	; 0x28
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f042 0204 	orr.w	r2, r2, #4
 800157a:	631a      	str	r2, [r3, #48]	; 0x30
 800157c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157e:	f002 0204 	and.w	r2, r2, #4
 8001582:	920a      	str	r2, [sp, #40]	; 0x28
 8001584:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001586:	940b      	str	r4, [sp, #44]	; 0x2c
 8001588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800158e:	631a      	str	r2, [r3, #48]	; 0x30
 8001590:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001592:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001596:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001598:	2201      	movs	r2, #1
 800159a:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800159c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 800159e:	f003 fd5d 	bl	800505c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015a2:	4896      	ldr	r0, [pc, #600]	; (80017fc <main+0x348>)
 80015a4:	4622      	mov	r2, r4
 80015a6:	2110      	movs	r1, #16
 80015a8:	f003 fd58 	bl	800505c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015ac:	4894      	ldr	r0, [pc, #592]	; (8001800 <main+0x34c>)
 80015ae:	4622      	mov	r2, r4
 80015b0:	2140      	movs	r1, #64	; 0x40
 80015b2:	f003 fd53 	bl	800505c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015b6:	4622      	mov	r2, r4
 80015b8:	4892      	ldr	r0, [pc, #584]	; (8001804 <main+0x350>)
 80015ba:	2180      	movs	r1, #128	; 0x80
 80015bc:	f003 fd4e 	bl	800505c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015c0:	2611      	movs	r6, #17
 80015c2:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015c4:	488c      	ldr	r0, [pc, #560]	; (80017f8 <main+0x344>)
 80015c6:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015c8:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ca:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015ce:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015d2:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015d6:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015da:	f003 fbb1 	bl	8004d40 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015de:	4887      	ldr	r0, [pc, #540]	; (80017fc <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e0:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015e2:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015e4:	e9cd 972b 	strd	r9, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e8:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015ec:	f003 fba8 	bl	8004d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015f0:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015f2:	4883      	ldr	r0, [pc, #524]	; (8001800 <main+0x34c>)
 80015f4:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 80015f6:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f8:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015fc:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001600:	f003 fb9e 	bl	8004d40 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001604:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001606:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001608:	487e      	ldr	r0, [pc, #504]	; (8001804 <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800160a:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800160c:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001610:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001612:	f003 fb95 	bl	8004d40 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001616:	487c      	ldr	r0, [pc, #496]	; (8001808 <main+0x354>)
  hdma2d.Instance = DMA2D;
 8001618:	4e7c      	ldr	r6, [pc, #496]	; (800180c <main+0x358>)
  hcrc.Instance = CRC;
 800161a:	4b7d      	ldr	r3, [pc, #500]	; (8001810 <main+0x35c>)
 800161c:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800161e:	f002 fdaf 	bl	8004180 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001622:	4b7c      	ldr	r3, [pc, #496]	; (8001814 <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001624:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001628:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800162c:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800162e:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001632:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001636:	f002 feb7 	bl	80043a8 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800163a:	4639      	mov	r1, r7
 800163c:	4630      	mov	r0, r6
 800163e:	f002 ff6b 	bl	8004518 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001642:	4629      	mov	r1, r5
 8001644:	4622      	mov	r2, r4
 8001646:	486f      	ldr	r0, [pc, #444]	; (8001804 <main+0x350>)
  hdsi.Instance = DSI;
 8001648:	4e73      	ldr	r6, [pc, #460]	; (8001818 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800164a:	f003 fd07 	bl	800505c <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800164e:	2014      	movs	r0, #20
 8001650:	f002 fb96 	bl	8003d80 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001654:	4629      	mov	r1, r5
 8001656:	463a      	mov	r2, r7
 8001658:	486a      	ldr	r0, [pc, #424]	; (8001804 <main+0x350>)
 800165a:	f003 fcff 	bl	800505c <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800165e:	200a      	movs	r0, #10
 8001660:	f002 fb8e 	bl	8003d80 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001664:	2224      	movs	r2, #36	; 0x24
 8001666:	4621      	mov	r1, r4
 8001668:	a815      	add	r0, sp, #84	; 0x54
 800166a:	f01a f8a3 	bl	801b7b4 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 800166e:	2218      	movs	r2, #24
 8001670:	4621      	mov	r1, r4
 8001672:	a80f      	add	r0, sp, #60	; 0x3c
 8001674:	f01a f89e 	bl	801b7b4 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001678:	2234      	movs	r2, #52	; 0x34
 800167a:	4621      	mov	r1, r4
 800167c:	a82b      	add	r0, sp, #172	; 0xac
 800167e:	f01a f899 	bl	801b7b4 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8001682:	222c      	movs	r2, #44	; 0x2c
 8001684:	4621      	mov	r1, r4
 8001686:	a81e      	add	r0, sp, #120	; 0x78
 8001688:	f01a f894 	bl	801b7b4 <memset>
  hdsi.Instance = DSI;
 800168c:	4b63      	ldr	r3, [pc, #396]	; (800181c <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 800168e:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 8001690:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8001692:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001696:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 8001698:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800169a:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 800169c:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016a0:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016a4:	f003 f800 	bl	80046a8 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016a8:	a915      	add	r1, sp, #84	; 0x54
 80016aa:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016ac:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016b0:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016b4:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016b8:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016bc:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016be:	f003 fa1d 	bl	8004afc <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016c2:	221c      	movs	r2, #28
 80016c4:	2321      	movs	r3, #33	; 0x21
 80016c6:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016ca:	210f      	movs	r1, #15
 80016cc:	2319      	movs	r3, #25
 80016ce:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016d2:	4630      	mov	r0, r6
 80016d4:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016d6:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016da:	f003 f9d2 	bl	8004a82 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016de:	4629      	mov	r1, r5
 80016e0:	4630      	mov	r0, r6
 80016e2:	f003 f9bd 	bl	8004a60 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016e6:	f242 7110 	movw	r1, #10000	; 0x2710
 80016ea:	4630      	mov	r0, r6
 80016ec:	f003 fb11 	bl	8004d12 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016f0:	4621      	mov	r1, r4
 80016f2:	4630      	mov	r0, r6
 80016f4:	f002 ff75 	bl	80045e2 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80016f8:	f44f 7080 	mov.w	r0, #256	; 0x100
 80016fc:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001700:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001704:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 8001708:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 800170c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001710:	e9cd b32d 	strd	fp, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001714:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001718:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800171c:	f44f 4a80 	mov.w	sl, #16384	; 0x4000
 8001720:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001724:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001728:	e9cd a331 	strd	sl, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800172c:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8001730:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001734:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001738:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800173c:	a92b      	add	r1, sp, #172	; 0xac
 800173e:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001740:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001744:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001748:	f003 f956 	bl	80049f8 <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 800174c:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800174e:	a91e      	add	r1, sp, #120	; 0x78
 8001750:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001752:	e9cd 3920 	strd	r3, r9, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001756:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 800175a:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 800175e:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8001762:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001766:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001768:	f003 f8d4 	bl	8004914 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 800176c:	4621      	mov	r1, r4
 800176e:	4630      	mov	r0, r6
 8001770:	f003 f8bf 	bl	80048f2 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001774:	482a      	ldr	r0, [pc, #168]	; (8001820 <main+0x36c>)
 8001776:	492b      	ldr	r1, [pc, #172]	; (8001824 <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001778:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 800177a:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800177e:	2340      	movs	r3, #64	; 0x40
 8001780:	2120      	movs	r1, #32
 8001782:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001786:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800178a:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800178e:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 8001790:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8001792:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 8001796:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 800179a:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800179c:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 800179e:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017a2:	e9c0 2a09 	strd	r2, sl, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017a6:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017aa:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 80017ae:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017b2:	f005 f9bb 	bl	8006b2c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017b6:	f002 f9df 	bl	8003b78 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017ba:	f002 f98f 	bl	8003adc <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017be:	2234      	movs	r2, #52	; 0x34
 80017c0:	4621      	mov	r1, r4
 80017c2:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017c4:	4d18      	ldr	r5, [pc, #96]	; (8001828 <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017c6:	f019 fff5 	bl	801b7b4 <memset>
  hltdc.Instance = LTDC;
 80017ca:	4a18      	ldr	r2, [pc, #96]	; (800182c <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017cc:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017ce:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017d2:	23ca      	movs	r3, #202	; 0xca
 80017d4:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017d8:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017dc:	21cb      	movs	r1, #203	; 0xcb
 80017de:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017e2:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017e4:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017e8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017ec:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017f0:	e01e      	b.n	8001830 <main+0x37c>
 80017f2:	bf00      	nop
 80017f4:	40023800 	.word	0x40023800
 80017f8:	40022800 	.word	0x40022800
 80017fc:	40020c00 	.word	0x40020c00
 8001800:	40021800 	.word	0x40021800
 8001804:	40021c00 	.word	0x40021c00
 8001808:	2000a618 	.word	0x2000a618
 800180c:	2000a710 	.word	0x2000a710
 8001810:	40023000 	.word	0x40023000
 8001814:	4002b000 	.word	0x4002b000
 8001818:	2000a620 	.word	0x2000a620
 800181c:	40016c00 	.word	0x40016c00
 8001820:	2000a750 	.word	0x2000a750
 8001824:	a0000140 	.word	0xa0000140
 8001828:	2000a63c 	.word	0x2000a63c
 800182c:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 8001830:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001834:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001838:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800183c:	f004 f8dc 	bl	80059f8 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001840:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 8001842:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 8001844:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001848:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 800184c:	2005      	movs	r0, #5
 800184e:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001852:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 8001856:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800185a:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800185c:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001860:	4628      	mov	r0, r5
 8001862:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 8001864:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 8001868:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800186a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 800186e:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 8001872:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001876:	f004 f98b 	bl	8005b90 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 800187a:	682a      	ldr	r2, [r5, #0]
 800187c:	6993      	ldr	r3, [r2, #24]
 800187e:	f023 0301 	bic.w	r3, r3, #1
 8001882:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001884:	4630      	mov	r0, r6
 8001886:	f003 f99f 	bl	8004bc8 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 800188a:	4639      	mov	r1, r7
 800188c:	4640      	mov	r0, r8
 800188e:	f001 fae7 	bl	8002e60 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8001892:	2328      	movs	r3, #40	; 0x28
 8001894:	2215      	movs	r2, #21
 8001896:	4621      	mov	r1, r4
 8001898:	4630      	mov	r0, r6
 800189a:	9400      	str	r4, [sp, #0]
 800189c:	f003 f9c7 	bl	8004c2e <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018a0:	a92b      	add	r1, sp, #172	; 0xac
 80018a2:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018a4:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018a8:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018ac:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018b0:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018b4:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018b8:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018ba:	f003 f89d 	bl	80049f8 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018be:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018c2:	4622      	mov	r2, r4
 80018c4:	4628      	mov	r0, r5
 80018c6:	f004 f991 	bl	8005bec <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018ca:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018cc:	4824      	ldr	r0, [pc, #144]	; (8001960 <main+0x4ac>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018ce:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018d0:	4d24      	ldr	r5, [pc, #144]	; (8001964 <main+0x4b0>)
  hi2c1.Init.ClockSpeed = 400000;
 80018d2:	4e25      	ldr	r6, [pc, #148]	; (8001968 <main+0x4b4>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018d4:	433b      	orrs	r3, r7
 80018d6:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018d8:	4b24      	ldr	r3, [pc, #144]	; (800196c <main+0x4b8>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018da:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018dc:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018e0:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018e2:	e9c0 3b04 	strd	r3, fp, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018e6:	e9c0 7902 	strd	r7, r9, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018ea:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018ee:	f004 fad1 	bl	8005e94 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018f2:	f001 ffb9 	bl	8003868 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80018f6:	f001 feed 	bl	80036d4 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80018fa:	f001 fe63 	bl	80035c4 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80018fe:	4b1c      	ldr	r3, [pc, #112]	; (8001970 <main+0x4bc>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001900:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001902:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 8001904:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8001908:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800190c:	e9c5 a404 	strd	sl, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001910:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001914:	f003 fd8c 	bl	8005430 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001918:	4628      	mov	r0, r5
 800191a:	f003 fe31 	bl	8005580 <HAL_I2C_DeInit>
  hcan2.Instance = CAN2;
 800191e:	4815      	ldr	r0, [pc, #84]	; (8001974 <main+0x4c0>)
 8001920:	4b15      	ldr	r3, [pc, #84]	; (8001978 <main+0x4c4>)
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8001922:	6184      	str	r4, [r0, #24]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 8001924:	8384      	strh	r4, [r0, #28]
  hcan2.Init.Prescaler = 16;
 8001926:	e9c0 3900 	strd	r3, r9, [r0]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 800192a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 800192e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 8001932:	f002 fa39 	bl	8003da8 <HAL_CAN_Init>
  MX_TouchGFX_Init();
 8001936:	f7fe fe58 	bl	80005ea <MX_TouchGFX_Init>
  osKernelInitialize();
 800193a:	f005 fb7f 	bl	800703c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800193e:	4a0f      	ldr	r2, [pc, #60]	; (800197c <main+0x4c8>)
 8001940:	480f      	ldr	r0, [pc, #60]	; (8001980 <main+0x4cc>)
 8001942:	4621      	mov	r1, r4
 8001944:	f005 fba6 	bl	8007094 <osThreadNew>
 8001948:	4b0e      	ldr	r3, [pc, #56]	; (8001984 <main+0x4d0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800194a:	4a0f      	ldr	r2, [pc, #60]	; (8001988 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800194c:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800194e:	4621      	mov	r1, r4
 8001950:	480e      	ldr	r0, [pc, #56]	; (800198c <main+0x4d8>)
 8001952:	f005 fb9f 	bl	8007094 <osThreadNew>
 8001956:	4b0e      	ldr	r3, [pc, #56]	; (8001990 <main+0x4dc>)
 8001958:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800195a:	f005 fb81 	bl	8007060 <osKernelStart>
  while (1)
 800195e:	e7fe      	b.n	800195e <main+0x4aa>
 8001960:	2000a784 	.word	0x2000a784
 8001964:	2000a5c4 	.word	0x2000a5c4
 8001968:	40005400 	.word	0x40005400
 800196c:	a0001000 	.word	0xa0001000
 8001970:	00061a80 	.word	0x00061a80
 8001974:	2000a6e4 	.word	0x2000a6e4
 8001978:	40006800 	.word	0x40006800
 800197c:	0801cd24 	.word	0x0801cd24
 8001980:	08001409 	.word	0x08001409
 8001984:	2000a5c0 	.word	0x2000a5c0
 8001988:	0801cd00 	.word	0x0801cd00
 800198c:	080005ef 	.word	0x080005ef
 8001990:	2000a70c 	.word	0x2000a70c

08001994 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001994:	6802      	ldr	r2, [r0, #0]
 8001996:	4b03      	ldr	r3, [pc, #12]	; (80019a4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001998:	429a      	cmp	r2, r3
 800199a:	d101      	bne.n	80019a0 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 800199c:	f002 b9de 	b.w	8003d5c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019a0:	4770      	bx	lr
 80019a2:	bf00      	nop
 80019a4:	40001000 	.word	0x40001000

080019a8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80019a8:	4770      	bx	lr
	...

080019ac <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019ac:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019ae:	4b0e      	ldr	r3, [pc, #56]	; (80019e8 <HAL_MspInit+0x3c>)
 80019b0:	2200      	movs	r2, #0
 80019b2:	9200      	str	r2, [sp, #0]
 80019b4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019b6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019ba:	6459      	str	r1, [r3, #68]	; 0x44
 80019bc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019be:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019c2:	9100      	str	r1, [sp, #0]
 80019c4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019c6:	9201      	str	r2, [sp, #4]
 80019c8:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019ca:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019ce:	6419      	str	r1, [r3, #64]	; 0x40
 80019d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019d6:	9301      	str	r3, [sp, #4]
 80019d8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019da:	210f      	movs	r1, #15
 80019dc:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019e0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019e2:	f002 bb79 	b.w	80040d8 <HAL_NVIC_SetPriority>
 80019e6:	bf00      	nop
 80019e8:	40023800 	.word	0x40023800

080019ec <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 80019ec:	b510      	push	{r4, lr}
 80019ee:	4604      	mov	r4, r0
 80019f0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019f2:	2214      	movs	r2, #20
 80019f4:	2100      	movs	r1, #0
 80019f6:	a803      	add	r0, sp, #12
 80019f8:	f019 fedc 	bl	801b7b4 <memset>
  if(hcan->Instance==CAN2)
 80019fc:	6822      	ldr	r2, [r4, #0]
 80019fe:	4b22      	ldr	r3, [pc, #136]	; (8001a88 <HAL_CAN_MspInit+0x9c>)
 8001a00:	429a      	cmp	r2, r3
 8001a02:	d13e      	bne.n	8001a82 <HAL_CAN_MspInit+0x96>
  {
  /* USER CODE BEGIN CAN2_MspInit 0 */

  /* USER CODE END CAN2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CAN2_CLK_ENABLE();
 8001a04:	f503 33e8 	add.w	r3, r3, #118784	; 0x1d000
 8001a08:	2400      	movs	r4, #0
 8001a0a:	9400      	str	r4, [sp, #0]
 8001a0c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a0e:	481f      	ldr	r0, [pc, #124]	; (8001a8c <HAL_CAN_MspInit+0xa0>)
    __HAL_RCC_CAN2_CLK_ENABLE();
 8001a10:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001a14:	641a      	str	r2, [r3, #64]	; 0x40
 8001a16:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a18:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001a1c:	9200      	str	r2, [sp, #0]
 8001a1e:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_CAN1_CLK_ENABLE();
 8001a20:	9401      	str	r4, [sp, #4]
 8001a22:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a24:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8001a28:	641a      	str	r2, [r3, #64]	; 0x40
 8001a2a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a2c:	f002 7200 	and.w	r2, r2, #33554432	; 0x2000000
 8001a30:	9201      	str	r2, [sp, #4]
 8001a32:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a34:	9402      	str	r4, [sp, #8]
 8001a36:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a38:	f042 0202 	orr.w	r2, r2, #2
 8001a3c:	631a      	str	r2, [r3, #48]	; 0x30
 8001a3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a40:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a42:	f003 0302 	and.w	r3, r3, #2
 8001a46:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a48:	f242 0220 	movw	r2, #8224	; 0x2020
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a4c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a4e:	2302      	movs	r3, #2
 8001a50:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 8001a54:	2103      	movs	r1, #3
 8001a56:	2309      	movs	r3, #9
 8001a58:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a5c:	a903      	add	r1, sp, #12
 8001a5e:	f003 f96f 	bl	8004d40 <HAL_GPIO_Init>

    /* CAN2 interrupt Init */
    HAL_NVIC_SetPriority(CAN2_RX0_IRQn, 5, 0);
 8001a62:	4622      	mov	r2, r4
 8001a64:	2105      	movs	r1, #5
 8001a66:	2040      	movs	r0, #64	; 0x40
 8001a68:	f002 fb36 	bl	80040d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
 8001a6c:	2040      	movs	r0, #64	; 0x40
 8001a6e:	f002 fb65 	bl	800413c <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN2_RX1_IRQn, 5, 0);
 8001a72:	2041      	movs	r0, #65	; 0x41
 8001a74:	4622      	mov	r2, r4
 8001a76:	2105      	movs	r1, #5
 8001a78:	f002 fb2e 	bl	80040d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX1_IRQn);
 8001a7c:	2041      	movs	r0, #65	; 0x41
 8001a7e:	f002 fb5d 	bl	800413c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN2_MspInit 1 */

  /* USER CODE END CAN2_MspInit 1 */
  }

}
 8001a82:	b008      	add	sp, #32
 8001a84:	bd10      	pop	{r4, pc}
 8001a86:	bf00      	nop
 8001a88:	40006800 	.word	0x40006800
 8001a8c:	40020400 	.word	0x40020400

08001a90 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a90:	6802      	ldr	r2, [r0, #0]
 8001a92:	4b09      	ldr	r3, [pc, #36]	; (8001ab8 <HAL_CRC_MspInit+0x28>)
 8001a94:	429a      	cmp	r2, r3
{
 8001a96:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a98:	d10b      	bne.n	8001ab2 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	9301      	str	r3, [sp, #4]
 8001a9e:	4b07      	ldr	r3, [pc, #28]	; (8001abc <HAL_CRC_MspInit+0x2c>)
 8001aa0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001aa2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001aa6:	631a      	str	r2, [r3, #48]	; 0x30
 8001aa8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aaa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001aae:	9301      	str	r3, [sp, #4]
 8001ab0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001ab2:	b002      	add	sp, #8
 8001ab4:	4770      	bx	lr
 8001ab6:	bf00      	nop
 8001ab8:	40023000 	.word	0x40023000
 8001abc:	40023800 	.word	0x40023800

08001ac0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001ac0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001ac2:	4b0f      	ldr	r3, [pc, #60]	; (8001b00 <HAL_DMA2D_MspInit+0x40>)
 8001ac4:	6802      	ldr	r2, [r0, #0]
 8001ac6:	429a      	cmp	r2, r3
 8001ac8:	d116      	bne.n	8001af8 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001aca:	2200      	movs	r2, #0
 8001acc:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001ad0:	9201      	str	r2, [sp, #4]
 8001ad2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ad4:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001ad8:	6319      	str	r1, [r3, #48]	; 0x30
 8001ada:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001adc:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001ae0:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ae2:	2105      	movs	r1, #5
 8001ae4:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001ae6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ae8:	f002 faf6 	bl	80040d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001aec:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001aee:	b003      	add	sp, #12
 8001af0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001af4:	f002 bb22 	b.w	800413c <HAL_NVIC_EnableIRQ>
}
 8001af8:	b003      	add	sp, #12
 8001afa:	f85d fb04 	ldr.w	pc, [sp], #4
 8001afe:	bf00      	nop
 8001b00:	4002b000 	.word	0x4002b000

08001b04 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001b04:	b510      	push	{r4, lr}
 8001b06:	4604      	mov	r4, r0
 8001b08:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b0a:	2214      	movs	r2, #20
 8001b0c:	2100      	movs	r1, #0
 8001b0e:	a803      	add	r0, sp, #12
 8001b10:	f019 fe50 	bl	801b7b4 <memset>
  if(hdsi->Instance==DSI)
 8001b14:	6822      	ldr	r2, [r4, #0]
 8001b16:	4b18      	ldr	r3, [pc, #96]	; (8001b78 <HAL_DSI_MspInit+0x74>)
 8001b18:	429a      	cmp	r2, r3
 8001b1a:	d12a      	bne.n	8001b72 <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001b1c:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001b20:	2400      	movs	r4, #0
 8001b22:	9401      	str	r4, [sp, #4]
 8001b24:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b26:	4815      	ldr	r0, [pc, #84]	; (8001b7c <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001b28:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001b2c:	645a      	str	r2, [r3, #68]	; 0x44
 8001b2e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b30:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001b34:	9201      	str	r2, [sp, #4]
 8001b36:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b38:	9402      	str	r4, [sp, #8]
 8001b3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b3c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b40:	631a      	str	r2, [r3, #48]	; 0x30
 8001b42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b44:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b48:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b4a:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b4c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b4e:	2302      	movs	r3, #2
 8001b50:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b54:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001b56:	230d      	movs	r3, #13
 8001b58:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b5a:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b5e:	f003 f8ef 	bl	8004d40 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b62:	205c      	movs	r0, #92	; 0x5c
 8001b64:	4622      	mov	r2, r4
 8001b66:	2105      	movs	r1, #5
 8001b68:	f002 fab6 	bl	80040d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b6c:	205c      	movs	r0, #92	; 0x5c
 8001b6e:	f002 fae5 	bl	800413c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b72:	b008      	add	sp, #32
 8001b74:	bd10      	pop	{r4, pc}
 8001b76:	bf00      	nop
 8001b78:	40016c00 	.word	0x40016c00
 8001b7c:	40022400 	.word	0x40022400

08001b80 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b80:	b530      	push	{r4, r5, lr}
 8001b82:	4604      	mov	r4, r0
 8001b84:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b86:	2214      	movs	r2, #20
 8001b88:	2100      	movs	r1, #0
 8001b8a:	a803      	add	r0, sp, #12
 8001b8c:	f019 fe12 	bl	801b7b4 <memset>
  if(hi2c->Instance==I2C1)
 8001b90:	6822      	ldr	r2, [r4, #0]
 8001b92:	4b1a      	ldr	r3, [pc, #104]	; (8001bfc <HAL_I2C_MspInit+0x7c>)
 8001b94:	429a      	cmp	r2, r3
 8001b96:	d12f      	bne.n	8001bf8 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b98:	4c19      	ldr	r4, [pc, #100]	; (8001c00 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b9a:	481a      	ldr	r0, [pc, #104]	; (8001c04 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b9c:	2500      	movs	r5, #0
 8001b9e:	9501      	str	r5, [sp, #4]
 8001ba0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ba2:	f043 0302 	orr.w	r3, r3, #2
 8001ba6:	6323      	str	r3, [r4, #48]	; 0x30
 8001ba8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001baa:	f003 0302 	and.w	r3, r3, #2
 8001bae:	9301      	str	r3, [sp, #4]
 8001bb0:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bb2:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001bb6:	2312      	movs	r3, #18
 8001bb8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bbc:	2101      	movs	r1, #1
 8001bbe:	2303      	movs	r3, #3
 8001bc0:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001bc4:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001bc8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bca:	f003 f8b9 	bl	8004d40 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001bce:	9502      	str	r5, [sp, #8]
 8001bd0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bd2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001bd6:	6423      	str	r3, [r4, #64]	; 0x40
 8001bd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bda:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001bde:	9302      	str	r3, [sp, #8]
 8001be0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001be2:	6a23      	ldr	r3, [r4, #32]
 8001be4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001be8:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001bea:	6a23      	ldr	r3, [r4, #32]
 8001bec:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bf0:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001bf2:	2064      	movs	r0, #100	; 0x64
 8001bf4:	f002 f8c4 	bl	8003d80 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001bf8:	b009      	add	sp, #36	; 0x24
 8001bfa:	bd30      	pop	{r4, r5, pc}
 8001bfc:	40005400 	.word	0x40005400
 8001c00:	40023800 	.word	0x40023800
 8001c04:	40020400 	.word	0x40020400

08001c08 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001c08:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001c0a:	6802      	ldr	r2, [r0, #0]
 8001c0c:	4b0a      	ldr	r3, [pc, #40]	; (8001c38 <HAL_I2C_MspDeInit+0x30>)
 8001c0e:	429a      	cmp	r2, r3
 8001c10:	d110      	bne.n	8001c34 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001c12:	4a0a      	ldr	r2, [pc, #40]	; (8001c3c <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001c14:	480a      	ldr	r0, [pc, #40]	; (8001c40 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001c16:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001c18:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001c1c:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001c1e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001c22:	f003 f973 	bl	8004f0c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001c26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001c2a:	4805      	ldr	r0, [pc, #20]	; (8001c40 <HAL_I2C_MspDeInit+0x38>)
 8001c2c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001c30:	f003 b96c 	b.w	8004f0c <HAL_GPIO_DeInit>
}
 8001c34:	bd08      	pop	{r3, pc}
 8001c36:	bf00      	nop
 8001c38:	40005400 	.word	0x40005400
 8001c3c:	40023800 	.word	0x40023800
 8001c40:	40020400 	.word	0x40020400

08001c44 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c44:	b510      	push	{r4, lr}
 8001c46:	4604      	mov	r4, r0
 8001c48:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c4a:	223c      	movs	r2, #60	; 0x3c
 8001c4c:	2100      	movs	r1, #0
 8001c4e:	a801      	add	r0, sp, #4
 8001c50:	f019 fdb0 	bl	801b7b4 <memset>
  if(hltdc->Instance==LTDC)
 8001c54:	6822      	ldr	r2, [r4, #0]
 8001c56:	4b13      	ldr	r3, [pc, #76]	; (8001ca4 <HAL_LTDC_MspInit+0x60>)
 8001c58:	429a      	cmp	r2, r3
 8001c5a:	d121      	bne.n	8001ca0 <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001c5c:	2308      	movs	r3, #8
 8001c5e:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001c60:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001c64:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001c66:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c68:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c6a:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c6c:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001c6e:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c70:	f004 fc44 	bl	80064fc <HAL_RCCEx_PeriphCLKConfig>
 8001c74:	b108      	cbz	r0, 8001c7a <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001c76:	f7ff fe97 	bl	80019a8 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c7a:	4b0b      	ldr	r3, [pc, #44]	; (8001ca8 <HAL_LTDC_MspInit+0x64>)
 8001c7c:	9400      	str	r4, [sp, #0]
 8001c7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c80:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c84:	645a      	str	r2, [r3, #68]	; 0x44
 8001c86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c88:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c8c:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c8e:	2058      	movs	r0, #88	; 0x58
 8001c90:	2200      	movs	r2, #0
 8001c92:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c94:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c96:	f002 fa1f 	bl	80040d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c9a:	2058      	movs	r0, #88	; 0x58
 8001c9c:	f002 fa4e 	bl	800413c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001ca0:	b010      	add	sp, #64	; 0x40
 8001ca2:	bd10      	pop	{r4, pc}
 8001ca4:	40016800 	.word	0x40016800
 8001ca8:	40023800 	.word	0x40023800

08001cac <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001cac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cae:	4604      	mov	r4, r0
 8001cb0:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cb2:	2214      	movs	r2, #20
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	a803      	add	r0, sp, #12
 8001cb8:	f019 fd7c 	bl	801b7b4 <memset>
  if(hqspi->Instance==QUADSPI)
 8001cbc:	6822      	ldr	r2, [r4, #0]
 8001cbe:	4b24      	ldr	r3, [pc, #144]	; (8001d50 <HAL_QSPI_MspInit+0xa4>)
 8001cc0:	429a      	cmp	r2, r3
 8001cc2:	d143      	bne.n	8001d4c <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001cc4:	4b23      	ldr	r3, [pc, #140]	; (8001d54 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cc6:	4824      	ldr	r0, [pc, #144]	; (8001d58 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001cc8:	2400      	movs	r4, #0
 8001cca:	9400      	str	r4, [sp, #0]
 8001ccc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001cce:	f042 0202 	orr.w	r2, r2, #2
 8001cd2:	639a      	str	r2, [r3, #56]	; 0x38
 8001cd4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001cd6:	f002 0202 	and.w	r2, r2, #2
 8001cda:	9200      	str	r2, [sp, #0]
 8001cdc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cde:	9401      	str	r4, [sp, #4]
 8001ce0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ce2:	f042 0202 	orr.w	r2, r2, #2
 8001ce6:	631a      	str	r2, [r3, #48]	; 0x30
 8001ce8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cea:	f002 0202 	and.w	r2, r2, #2
 8001cee:	9201      	str	r2, [sp, #4]
 8001cf0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cf2:	9402      	str	r4, [sp, #8]
 8001cf4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cf6:	f042 0220 	orr.w	r2, r2, #32
 8001cfa:	631a      	str	r2, [r3, #48]	; 0x30
 8001cfc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cfe:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d00:	f003 0320 	and.w	r3, r3, #32
 8001d04:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d06:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d08:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d0a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d0c:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0e:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d10:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d12:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d16:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d1a:	f003 f811 	bl	8004d40 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001d1e:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d22:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d26:	480d      	ldr	r0, [pc, #52]	; (8001d5c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001d28:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d2a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001d2c:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d2e:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d32:	f003 f805 	bl	8004d40 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001d36:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d3a:	4808      	ldr	r0, [pc, #32]	; (8001d5c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d3c:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d3e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d40:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d44:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d48:	f002 fffa 	bl	8004d40 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001d4c:	b009      	add	sp, #36	; 0x24
 8001d4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d50:	a0001000 	.word	0xa0001000
 8001d54:	40023800 	.word	0x40023800
 8001d58:	40020400 	.word	0x40020400
 8001d5c:	40021400 	.word	0x40021400

08001d60 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001d60:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001d62:	6802      	ldr	r2, [r0, #0]
 8001d64:	4b09      	ldr	r3, [pc, #36]	; (8001d8c <HAL_QSPI_MspDeInit+0x2c>)
 8001d66:	429a      	cmp	r2, r3
 8001d68:	d10f      	bne.n	8001d8a <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d6a:	4a09      	ldr	r2, [pc, #36]	; (8001d90 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d6c:	4809      	ldr	r0, [pc, #36]	; (8001d94 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d6e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001d70:	f023 0302 	bic.w	r3, r3, #2
 8001d74:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d76:	2140      	movs	r1, #64	; 0x40
 8001d78:	f003 f8c8 	bl	8004f0c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d7c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d80:	4805      	ldr	r0, [pc, #20]	; (8001d98 <HAL_QSPI_MspDeInit+0x38>)
 8001d82:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d86:	f003 b8c1 	b.w	8004f0c <HAL_GPIO_DeInit>
}
 8001d8a:	bd08      	pop	{r3, pc}
 8001d8c:	a0001000 	.word	0xa0001000
 8001d90:	40023800 	.word	0x40023800
 8001d94:	40020400 	.word	0x40020400
 8001d98:	40021400 	.word	0x40021400

08001d9c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d9c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001d9e:	4b31      	ldr	r3, [pc, #196]	; (8001e64 <HAL_SDRAM_MspInit+0xc8>)
 8001da0:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001da2:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001da4:	2c00      	cmp	r4, #0
 8001da6:	d15b      	bne.n	8001e60 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001da8:	2201      	movs	r2, #1
 8001daa:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dac:	4b2e      	ldr	r3, [pc, #184]	; (8001e68 <HAL_SDRAM_MspInit+0xcc>)
 8001dae:	9400      	str	r4, [sp, #0]
 8001db0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001db2:	482e      	ldr	r0, [pc, #184]	; (8001e6c <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001db4:	f042 0201 	orr.w	r2, r2, #1
 8001db8:	639a      	str	r2, [r3, #56]	; 0x38
 8001dba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dbc:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dbe:	f003 0301 	and.w	r3, r3, #1
 8001dc2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc6:	2603      	movs	r6, #3
 8001dc8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dca:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dcc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dce:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001dd2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dd6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dda:	f002 ffb1 	bl	8004d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001dde:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001de2:	4823      	ldr	r0, [pc, #140]	; (8001e70 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001de4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001de6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dec:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001df0:	f002 ffa6 	bl	8004d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001df4:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001df8:	481e      	ldr	r0, [pc, #120]	; (8001e74 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dfa:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dfc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dfe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e02:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e06:	f002 ff9b 	bl	8004d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e0a:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e0e:	481a      	ldr	r0, [pc, #104]	; (8001e78 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e10:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e12:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e14:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e18:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e1c:	f002 ff90 	bl	8004d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e20:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e24:	4815      	ldr	r0, [pc, #84]	; (8001e7c <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e26:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e28:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e2a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e2e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e32:	f002 ff85 	bl	8004d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e36:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e3a:	4811      	ldr	r0, [pc, #68]	; (8001e80 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e3c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e3e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e40:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e44:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e48:	f002 ff7a 	bl	8004d40 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001e4c:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4e:	480d      	ldr	r0, [pc, #52]	; (8001e84 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e50:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e52:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e54:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e58:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e5c:	f002 ff70 	bl	8004d40 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e60:	b007      	add	sp, #28
 8001e62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e64:	200012a0 	.word	0x200012a0
 8001e68:	40023800 	.word	0x40023800
 8001e6c:	40021000 	.word	0x40021000
 8001e70:	40021800 	.word	0x40021800
 8001e74:	40020c00 	.word	0x40020c00
 8001e78:	40022000 	.word	0x40022000
 8001e7c:	40021400 	.word	0x40021400
 8001e80:	40021c00 	.word	0x40021c00
 8001e84:	40020800 	.word	0x40020800

08001e88 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e88:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e8a:	4b17      	ldr	r3, [pc, #92]	; (8001ee8 <HAL_SDRAM_MspDeInit+0x60>)
 8001e8c:	681a      	ldr	r2, [r3, #0]
 8001e8e:	bb52      	cbnz	r2, 8001ee6 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e90:	2201      	movs	r2, #1
 8001e92:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e94:	4a15      	ldr	r2, [pc, #84]	; (8001eec <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e96:	4816      	ldr	r0, [pc, #88]	; (8001ef0 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e98:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e9a:	f023 0301 	bic.w	r3, r3, #1
 8001e9e:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001ea0:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001ea4:	f003 f832 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001ea8:	4812      	ldr	r0, [pc, #72]	; (8001ef4 <HAL_SDRAM_MspDeInit+0x6c>)
 8001eaa:	f248 1133 	movw	r1, #33075	; 0x8133
 8001eae:	f003 f82d 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001eb2:	4811      	ldr	r0, [pc, #68]	; (8001ef8 <HAL_SDRAM_MspDeInit+0x70>)
 8001eb4:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001eb8:	f003 f828 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001ebc:	480f      	ldr	r0, [pc, #60]	; (8001efc <HAL_SDRAM_MspDeInit+0x74>)
 8001ebe:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001ec2:	f003 f823 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001ec6:	480e      	ldr	r0, [pc, #56]	; (8001f00 <HAL_SDRAM_MspDeInit+0x78>)
 8001ec8:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001ecc:	f003 f81e 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001ed0:	480c      	ldr	r0, [pc, #48]	; (8001f04 <HAL_SDRAM_MspDeInit+0x7c>)
 8001ed2:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001ed6:	f003 f819 	bl	8004f0c <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001eda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001ede:	480a      	ldr	r0, [pc, #40]	; (8001f08 <HAL_SDRAM_MspDeInit+0x80>)
 8001ee0:	210d      	movs	r1, #13
 8001ee2:	f003 b813 	b.w	8004f0c <HAL_GPIO_DeInit>
}
 8001ee6:	bd08      	pop	{r3, pc}
 8001ee8:	2000129c 	.word	0x2000129c
 8001eec:	40023800 	.word	0x40023800
 8001ef0:	40021000 	.word	0x40021000
 8001ef4:	40021800 	.word	0x40021800
 8001ef8:	40020c00 	.word	0x40020c00
 8001efc:	40022000 	.word	0x40022000
 8001f00:	40021400 	.word	0x40021400
 8001f04:	40021c00 	.word	0x40021c00
 8001f08:	40020800 	.word	0x40020800

08001f0c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f0c:	b530      	push	{r4, r5, lr}
 8001f0e:	4601      	mov	r1, r0
 8001f10:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001f12:	2200      	movs	r2, #0
 8001f14:	2036      	movs	r0, #54	; 0x36
 8001f16:	f002 f8df 	bl	80040d8 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001f1a:	2036      	movs	r0, #54	; 0x36
 8001f1c:	f002 f90e 	bl	800413c <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f20:	2500      	movs	r5, #0
 8001f22:	4b15      	ldr	r3, [pc, #84]	; (8001f78 <HAL_InitTick+0x6c>)
 8001f24:	9502      	str	r5, [sp, #8]
 8001f26:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001f28:	4c14      	ldr	r4, [pc, #80]	; (8001f7c <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f2a:	f042 0210 	orr.w	r2, r2, #16
 8001f2e:	641a      	str	r2, [r3, #64]	; 0x40
 8001f30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f32:	f003 0310 	and.w	r3, r3, #16
 8001f36:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f38:	a901      	add	r1, sp, #4
 8001f3a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f3c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f3e:	f004 fabf 	bl	80064c0 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f42:	f004 faad 	bl	80064a0 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001f46:	4b0e      	ldr	r3, [pc, #56]	; (8001f80 <HAL_InitTick+0x74>)
 8001f48:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001f4a:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f4e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f50:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001f52:	4b0c      	ldr	r3, [pc, #48]	; (8001f84 <HAL_InitTick+0x78>)
 8001f54:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f58:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001f5a:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f5c:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001f5e:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f60:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f62:	f004 ff81 	bl	8006e68 <HAL_TIM_Base_Init>
 8001f66:	b920      	cbnz	r0, 8001f72 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001f68:	4620      	mov	r0, r4
 8001f6a:	f004 fe37 	bl	8006bdc <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f6e:	b009      	add	sp, #36	; 0x24
 8001f70:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f72:	2001      	movs	r0, #1
 8001f74:	e7fb      	b.n	8001f6e <HAL_InitTick+0x62>
 8001f76:	bf00      	nop
 8001f78:	40023800 	.word	0x40023800
 8001f7c:	2000a7d0 	.word	0x2000a7d0
 8001f80:	40001000 	.word	0x40001000
 8001f84:	000f4240 	.word	0x000f4240

08001f88 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f88:	4770      	bx	lr

08001f8a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f8a:	e7fe      	b.n	8001f8a <HardFault_Handler>

08001f8c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f8c:	e7fe      	b.n	8001f8c <MemManage_Handler>

08001f8e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f8e:	e7fe      	b.n	8001f8e <BusFault_Handler>

08001f90 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f90:	e7fe      	b.n	8001f90 <UsageFault_Handler>

08001f92 <DebugMon_Handler>:
 8001f92:	4770      	bx	lr

08001f94 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f94:	4801      	ldr	r0, [pc, #4]	; (8001f9c <TIM6_DAC_IRQHandler+0x8>)
 8001f96:	f004 be5f 	b.w	8006c58 <HAL_TIM_IRQHandler>
 8001f9a:	bf00      	nop
 8001f9c:	2000a7d0 	.word	0x2000a7d0

08001fa0 <CAN2_RX0_IRQHandler>:
void CAN2_RX0_IRQHandler(void)
{
  /* USER CODE BEGIN CAN2_RX0_IRQn 0 */

  /* USER CODE END CAN2_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8001fa0:	4801      	ldr	r0, [pc, #4]	; (8001fa8 <CAN2_RX0_IRQHandler+0x8>)
 8001fa2:	f001 bf89 	b.w	8003eb8 <HAL_CAN_IRQHandler>
 8001fa6:	bf00      	nop
 8001fa8:	2000a6e4 	.word	0x2000a6e4

08001fac <CAN2_RX1_IRQHandler>:
 8001fac:	f7ff bff8 	b.w	8001fa0 <CAN2_RX0_IRQHandler>

08001fb0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001fb0:	4801      	ldr	r0, [pc, #4]	; (8001fb8 <LTDC_IRQHandler+0x8>)
 8001fb2:	f003 bd90 	b.w	8005ad6 <HAL_LTDC_IRQHandler>
 8001fb6:	bf00      	nop
 8001fb8:	2000a63c 	.word	0x2000a63c

08001fbc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fbc:	4801      	ldr	r0, [pc, #4]	; (8001fc4 <DMA2D_IRQHandler+0x8>)
 8001fbe:	f002 ba21 	b.w	8004404 <HAL_DMA2D_IRQHandler>
 8001fc2:	bf00      	nop
 8001fc4:	2000a710 	.word	0x2000a710

08001fc8 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001fc8:	4801      	ldr	r0, [pc, #4]	; (8001fd0 <DSI_IRQHandler+0x8>)
 8001fca:	f002 bc20 	b.w	800480e <HAL_DSI_IRQHandler>
 8001fce:	bf00      	nop
 8001fd0:	2000a620 	.word	0x2000a620

08001fd4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001fd4:	2001      	movs	r0, #1
 8001fd6:	4770      	bx	lr

08001fd8 <_kill>:

int _kill(int pid, int sig)
{
 8001fd8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fda:	f019 fa97 	bl	801b50c <__errno>
 8001fde:	2316      	movs	r3, #22
 8001fe0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001fe2:	f04f 30ff 	mov.w	r0, #4294967295
 8001fe6:	bd08      	pop	{r3, pc}

08001fe8 <_exit>:

void _exit (int status)
{
 8001fe8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fea:	f019 fa8f 	bl	801b50c <__errno>
 8001fee:	2316      	movs	r3, #22
 8001ff0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001ff2:	e7fe      	b.n	8001ff2 <_exit+0xa>

08001ff4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ff4:	b570      	push	{r4, r5, r6, lr}
 8001ff6:	460e      	mov	r6, r1
 8001ff8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ffa:	2500      	movs	r5, #0
 8001ffc:	42a5      	cmp	r5, r4
 8001ffe:	db01      	blt.n	8002004 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002000:	4620      	mov	r0, r4
 8002002:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002004:	f3af 8000 	nop.w
 8002008:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800200a:	3501      	adds	r5, #1
 800200c:	e7f6      	b.n	8001ffc <_read+0x8>

0800200e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800200e:	b570      	push	{r4, r5, r6, lr}
 8002010:	460e      	mov	r6, r1
 8002012:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002014:	2500      	movs	r5, #0
 8002016:	42a5      	cmp	r5, r4
 8002018:	db01      	blt.n	800201e <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800201a:	4620      	mov	r0, r4
 800201c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800201e:	5d70      	ldrb	r0, [r6, r5]
 8002020:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002024:	3501      	adds	r5, #1
 8002026:	e7f6      	b.n	8002016 <_write+0x8>

08002028 <_close>:

int _close(int file)
{
	return -1;
}
 8002028:	f04f 30ff 	mov.w	r0, #4294967295
 800202c:	4770      	bx	lr

0800202e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800202e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002032:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002034:	2000      	movs	r0, #0
 8002036:	4770      	bx	lr

08002038 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002038:	2001      	movs	r0, #1
 800203a:	4770      	bx	lr

0800203c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 800203c:	2000      	movs	r0, #0
 800203e:	4770      	bx	lr

08002040 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002040:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002042:	4b0a      	ldr	r3, [pc, #40]	; (800206c <_sbrk+0x2c>)
 8002044:	6819      	ldr	r1, [r3, #0]
{
 8002046:	4602      	mov	r2, r0
	if (heap_end == 0)
 8002048:	b909      	cbnz	r1, 800204e <_sbrk+0xe>
		heap_end = &end;
 800204a:	4909      	ldr	r1, [pc, #36]	; (8002070 <_sbrk+0x30>)
 800204c:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 800204e:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8002050:	4669      	mov	r1, sp
 8002052:	4402      	add	r2, r0
 8002054:	428a      	cmp	r2, r1
 8002056:	d906      	bls.n	8002066 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002058:	f019 fa58 	bl	801b50c <__errno>
 800205c:	230c      	movs	r3, #12
 800205e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002060:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002064:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002066:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8002068:	e7fc      	b.n	8002064 <_sbrk+0x24>
 800206a:	bf00      	nop
 800206c:	200012a4 	.word	0x200012a4
 8002070:	2000a8b8 	.word	0x2000a8b8

08002074 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // ROCK_TTF_300_4bpp
    static const touchgfx::FontId TYPOGRAPHY_01 = 4; // arial_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002074:	4770      	bx	lr

08002076 <_ZN23ApplicationFontProviderD0Ev>:
 8002076:	b510      	push	{r4, lr}
 8002078:	2104      	movs	r1, #4
 800207a:	4604      	mov	r4, r0
 800207c:	f019 f9e5 	bl	801b44a <_ZdlPvj>
 8002080:	4620      	mov	r0, r4
 8002082:	bd10      	pop	{r4, pc}

08002084 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002084:	b508      	push	{r3, lr}
 8002086:	2904      	cmp	r1, #4
 8002088:	d818      	bhi.n	80020bc <_ZN23ApplicationFontProvider7getFontEt+0x38>
 800208a:	e8df f001 	tbb	[pc, r1]
 800208e:	0703      	.short	0x0703
 8002090:	0f0b      	.short	0x0f0b
 8002092:	13          	.byte	0x13
 8002093:	00          	.byte	0x00
    switch (typography)
    {
    case Typography::DEFAULT:
        // ROCK_TTF_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002094:	f000 fdd8 	bl	8002c48 <_ZN17TypedTextDatabase8getFontsEv>
 8002098:	6800      	ldr	r0, [r0, #0]
        // arial_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    default:
        return 0;
    }
}
 800209a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800209c:	f000 fdd4 	bl	8002c48 <_ZN17TypedTextDatabase8getFontsEv>
 80020a0:	6840      	ldr	r0, [r0, #4]
 80020a2:	e7fa      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80020a4:	f000 fdd0 	bl	8002c48 <_ZN17TypedTextDatabase8getFontsEv>
 80020a8:	6880      	ldr	r0, [r0, #8]
 80020aa:	e7f6      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80020ac:	f000 fdcc 	bl	8002c48 <_ZN17TypedTextDatabase8getFontsEv>
 80020b0:	68c0      	ldr	r0, [r0, #12]
 80020b2:	e7f2      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 80020b4:	f000 fdc8 	bl	8002c48 <_ZN17TypedTextDatabase8getFontsEv>
 80020b8:	6900      	ldr	r0, [r0, #16]
 80020ba:	e7ee      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x16>
{
 80020bc:	2000      	movs	r0, #0
 80020be:	e7ec      	b.n	800209a <_ZN23ApplicationFontProvider7getFontEt+0x16>

080020c0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80020c0:	4800      	ldr	r0, [pc, #0]	; (80020c4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80020c2:	4770      	bx	lr
 80020c4:	0801cd5c 	.word	0x0801cd5c

080020c8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80020c8:	2001      	movs	r0, #1
 80020ca:	4770      	bx	lr

080020cc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020cc:	b513      	push	{r0, r1, r4, lr}
 80020ce:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020d0:	b151      	cbz	r1, 80020e8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020d2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80020d4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80020d6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020da:	aa01      	add	r2, sp, #4
 80020dc:	689c      	ldr	r4, [r3, #8]
 80020de:	f10d 0303 	add.w	r3, sp, #3
 80020e2:	47a0      	blx	r4
        return glyph;
    }
 80020e4:	b002      	add	sp, #8
 80020e6:	bd10      	pop	{r4, pc}
            return 0;
 80020e8:	4608      	mov	r0, r1
 80020ea:	e7fb      	b.n	80020e4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080020ec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80020ec:	8940      	ldrh	r0, [r0, #10]
 80020ee:	4770      	bx	lr

080020f0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80020f0:	8980      	ldrh	r0, [r0, #12]
 80020f2:	4770      	bx	lr

080020f4 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80020f4:	8880      	ldrh	r0, [r0, #4]
 80020f6:	4770      	bx	lr

080020f8 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80020f8:	7983      	ldrb	r3, [r0, #6]
 80020fa:	8880      	ldrh	r0, [r0, #4]
 80020fc:	4418      	add	r0, r3
    }
 80020fe:	b280      	uxth	r0, r0
 8002100:	4770      	bx	lr

08002102 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002102:	79c0      	ldrb	r0, [r0, #7]
    }
 8002104:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002108:	4770      	bx	lr

0800210a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800210a:	79c0      	ldrb	r0, [r0, #7]
    }
 800210c:	09c0      	lsrs	r0, r0, #7
 800210e:	4770      	bx	lr

08002110 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002110:	4770      	bx	lr

08002112 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002112:	b510      	push	{r4, lr}
    }
 8002114:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002116:	4604      	mov	r4, r0
    }
 8002118:	f019 f997 	bl	801b44a <_ZdlPvj>
 800211c:	4620      	mov	r0, r4
 800211e:	bd10      	pop	{r4, pc}

08002120 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002120:	4770      	bx	lr

08002122 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002122:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002126:	6808      	ldr	r0, [r1, #0]
 8002128:	6849      	ldr	r1, [r1, #4]
 800212a:	c303      	stmia	r3!, {r0, r1}
    }
 800212c:	4770      	bx	lr

0800212e <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800212e:	4770      	bx	lr

08002130 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002130:	4770      	bx	lr

08002132 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002132:	6041      	str	r1, [r0, #4]
    }
 8002134:	4770      	bx	lr

08002136 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002136:	4770      	bx	lr

08002138 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002138:	2301      	movs	r3, #1
 800213a:	7203      	strb	r3, [r0, #8]
    }
 800213c:	4770      	bx	lr

0800213e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800213e:	4770      	bx	lr

08002140 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002140:	4770      	bx	lr

08002142 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002142:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002144:	68c2      	ldr	r2, [r0, #12]
 8002146:	6841      	ldr	r1, [r0, #4]
 8002148:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800214a:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 800214c:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002150:	07d2      	lsls	r2, r2, #31
 8002152:	bf48      	it	mi
 8002154:	590a      	ldrmi	r2, [r1, r4]
 8002156:	689b      	ldr	r3, [r3, #8]
    }
 8002158:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 800215c:	bf48      	it	mi
 800215e:	58d3      	ldrmi	r3, [r2, r3]
 8002160:	4718      	bx	r3

08002162 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002162:	6843      	ldr	r3, [r0, #4]
 8002164:	b12b      	cbz	r3, 8002172 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002166:	6883      	ldr	r3, [r0, #8]
 8002168:	b92b      	cbnz	r3, 8002176 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800216a:	68c0      	ldr	r0, [r0, #12]
 800216c:	f000 0001 	and.w	r0, r0, #1
 8002170:	4770      	bx	lr
 8002172:	4618      	mov	r0, r3
 8002174:	4770      	bx	lr
 8002176:	2001      	movs	r0, #1
    }
 8002178:	4770      	bx	lr

0800217a <_ZN8touchgfx12NoTransitionD0Ev>:
 800217a:	b510      	push	{r4, lr}
 800217c:	210c      	movs	r1, #12
 800217e:	4604      	mov	r4, r0
 8002180:	f019 f963 	bl	801b44a <_ZdlPvj>
 8002184:	4620      	mov	r0, r4
 8002186:	bd10      	pop	{r4, pc}

08002188 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002188:	b510      	push	{r4, lr}
 800218a:	2110      	movs	r1, #16
 800218c:	4604      	mov	r4, r0
 800218e:	f019 f95c 	bl	801b44a <_ZdlPvj>
 8002192:	4620      	mov	r0, r4
 8002194:	bd10      	pop	{r4, pc}

08002196 <_ZN23FrontendApplicationBaseD0Ev>:
 8002196:	b510      	push	{r4, lr}
 8002198:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800219c:	4604      	mov	r4, r0
 800219e:	f019 f954 	bl	801b44a <_ZdlPvj>
 80021a2:	4620      	mov	r0, r4
 80021a4:	bd10      	pop	{r4, pc}

080021a6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80021a6:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80021a8:	f00a fa7e 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 80021ac:	6803      	ldr	r3, [r0, #0]
    }
 80021ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80021b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021b4:	4718      	bx	r3

080021b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80021b6:	b510      	push	{r4, lr}
 80021b8:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80021ba:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80021be:	b158      	cbz	r0, 80021d8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80021c0:	6803      	ldr	r3, [r0, #0]
 80021c2:	68db      	ldr	r3, [r3, #12]
 80021c4:	4798      	blx	r3
 80021c6:	b138      	cbz	r0, 80021d8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80021c8:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80021cc:	6803      	ldr	r3, [r0, #0]
 80021ce:	689b      	ldr	r3, [r3, #8]
 80021d0:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80021d2:	2300      	movs	r3, #0
 80021d4:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80021d8:	bd10      	pop	{r4, pc}
	...

080021dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80021dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021de:	4604      	mov	r4, r0
 80021e0:	4617      	mov	r7, r2
 80021e2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80021e4:	f00a fa80 	bl	800c6e8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80021e8:	4b10      	ldr	r3, [pc, #64]	; (800222c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80021ea:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80021ec:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 80021f0:	4e0f      	ldr	r6, [pc, #60]	; (8002230 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80021f2:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80021f4:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80021f8:	4b0e      	ldr	r3, [pc, #56]	; (8002234 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80021fa:	6830      	ldr	r0, [r6, #0]
 80021fc:	6023      	str	r3, [r4, #0]
 80021fe:	4b0e      	ldr	r3, [pc, #56]	; (8002238 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002200:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002204:	6803      	ldr	r3, [r0, #0]
 8002206:	4629      	mov	r1, r5
 8002208:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800220a:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 800220e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002210:	4628      	mov	r0, r5
 8002212:	f000 fccd 	bl	8002bb0 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002216:	6833      	ldr	r3, [r6, #0]
 8002218:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800221c:	b10a      	cbz	r2, 8002222 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 800221e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002220:	b900      	cbnz	r0, 8002224 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8002222:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002224:	f012 f815 	bl	8014252 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002228:	4620      	mov	r0, r4
 800222a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800222c:	2000a370 	.word	0x2000a370
 8002230:	2000a324 	.word	0x2000a324
 8002234:	0801d0c0 	.word	0x0801d0c0
 8002238:	0801d0a8 	.word	0x0801d0a8

0800223c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800223c:	4b06      	ldr	r3, [pc, #24]	; (8002258 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800223e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002242:	2300      	movs	r3, #0
 8002244:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002248:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800224c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002250:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002254:	4770      	bx	lr
 8002256:	bf00      	nop
 8002258:	0800239d 	.word	0x0800239d

0800225c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800225c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002260:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002262:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002264:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002268:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800226a:	6803      	ldr	r3, [r0, #0]
 800226c:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800226e:	4688      	mov	r8, r1
 8002270:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002272:	4798      	blx	r3
 8002274:	f5b0 7f10 	cmp.w	r0, #576	; 0x240
 8002278:	d205      	bcs.n	8002286 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 800227a:	4b42      	ldr	r3, [pc, #264]	; (8002384 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800227c:	4a42      	ldr	r2, [pc, #264]	; (8002388 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800227e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002280:	4842      	ldr	r0, [pc, #264]	; (800238c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002282:	f019 f911 	bl	801b4a8 <__assert_func>
 8002286:	6860      	ldr	r0, [r4, #4]
 8002288:	6803      	ldr	r3, [r0, #0]
 800228a:	6a1b      	ldr	r3, [r3, #32]
 800228c:	4798      	blx	r3
 800228e:	280f      	cmp	r0, #15
 8002290:	d803      	bhi.n	800229a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 8002292:	4b3f      	ldr	r3, [pc, #252]	; (8002390 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8002294:	4a3c      	ldr	r2, [pc, #240]	; (8002388 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002296:	21a4      	movs	r1, #164	; 0xa4
 8002298:	e7f2      	b.n	8002280 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800229a:	68e0      	ldr	r0, [r4, #12]
 800229c:	6803      	ldr	r3, [r0, #0]
 800229e:	6a1b      	ldr	r3, [r3, #32]
 80022a0:	4798      	blx	r3
 80022a2:	280b      	cmp	r0, #11
 80022a4:	d803      	bhi.n	80022ae <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 80022a6:	4b3b      	ldr	r3, [pc, #236]	; (8002394 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80022a8:	4a37      	ldr	r2, [pc, #220]	; (8002388 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80022aa:	21a5      	movs	r1, #165	; 0xa5
 80022ac:	e7e8      	b.n	8002280 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 80022ae:	f00a f9fb 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 80022b2:	f00a f9ff 	bl	800c6b4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80022b6:	f8d9 0000 	ldr.w	r0, [r9]
 80022ba:	b110      	cbz	r0, 80022c2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 80022bc:	6803      	ldr	r3, [r0, #0]
 80022be:	68db      	ldr	r3, [r3, #12]
 80022c0:	4798      	blx	r3
    if (*currentTrans)
 80022c2:	f8d9 0000 	ldr.w	r0, [r9]
 80022c6:	b110      	cbz	r0, 80022ce <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 80022c8:	6803      	ldr	r3, [r0, #0]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	4798      	blx	r3
    if (*currentScreen)
 80022ce:	6838      	ldr	r0, [r7, #0]
 80022d0:	b110      	cbz	r0, 80022d8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 80022d2:	6803      	ldr	r3, [r0, #0]
 80022d4:	695b      	ldr	r3, [r3, #20]
 80022d6:	4798      	blx	r3
    if (*currentPresenter)
 80022d8:	f8d8 0000 	ldr.w	r0, [r8]
 80022dc:	b110      	cbz	r0, 80022e4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 80022de:	6803      	ldr	r3, [r0, #0]
 80022e0:	685b      	ldr	r3, [r3, #4]
 80022e2:	4798      	blx	r3
    if (*currentScreen)
 80022e4:	6838      	ldr	r0, [r7, #0]
 80022e6:	b110      	cbz	r0, 80022ee <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 80022e8:	6803      	ldr	r3, [r0, #0]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	4798      	blx	r3
    if (*currentPresenter)
 80022ee:	f8d8 0000 	ldr.w	r0, [r8]
 80022f2:	b110      	cbz	r0, 80022fa <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 80022f4:	6803      	ldr	r3, [r0, #0]
 80022f6:	689b      	ldr	r3, [r3, #8]
 80022f8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80022fa:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80022fc:	6803      	ldr	r3, [r0, #0]
 80022fe:	2100      	movs	r1, #0
 8002300:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002302:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002304:	f04f 0b00 	mov.w	fp, #0
 8002308:	4b23      	ldr	r3, [pc, #140]	; (8002398 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 800230a:	6003      	str	r3, [r0, #0]
 800230c:	4605      	mov	r5, r0
 800230e:	f8c0 b004 	str.w	fp, [r0, #4]
 8002312:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002316:	68a0      	ldr	r0, [r4, #8]
 8002318:	6803      	ldr	r3, [r0, #0]
 800231a:	4659      	mov	r1, fp
 800231c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800231e:	4798      	blx	r3
 8002320:	4606      	mov	r6, r0
 8002322:	f000 fd11 	bl	8002d48 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002326:	6860      	ldr	r0, [r4, #4]
 8002328:	6803      	ldr	r3, [r0, #0]
 800232a:	4659      	mov	r1, fp
 800232c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800232e:	4798      	blx	r3
 8002330:	4631      	mov	r1, r6
 8002332:	4604      	mov	r4, r0
 8002334:	f000 fcd0 	bl	8002cd8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002338:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800233c:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8002340:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002342:	b1e4      	cbz	r4, 800237e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 8002344:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002346:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800234a:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800234c:	f8c4 a008 	str.w	sl, [r4, #8]
 8002350:	4630      	mov	r0, r6
 8002352:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002354:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002356:	4798      	blx	r3
    newPresenter->activate();
 8002358:	6823      	ldr	r3, [r4, #0]
 800235a:	4620      	mov	r0, r4
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002360:	4629      	mov	r1, r5
 8002362:	4630      	mov	r0, r6
 8002364:	f00b fdd5 	bl	800df12 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002368:	682b      	ldr	r3, [r5, #0]
 800236a:	4628      	mov	r0, r5
 800236c:	691b      	ldr	r3, [r3, #16]
 800236e:	4798      	blx	r3
    newTransition->invalidate();
 8002370:	682b      	ldr	r3, [r5, #0]
 8002372:	4628      	mov	r0, r5
 8002374:	695b      	ldr	r3, [r3, #20]
 8002376:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002378:	4620      	mov	r0, r4
 800237a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 800237e:	4623      	mov	r3, r4
 8002380:	e7e1      	b.n	8002346 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 8002382:	bf00      	nop
 8002384:	0801cd80 	.word	0x0801cd80
 8002388:	0801ce0e 	.word	0x0801ce0e
 800238c:	0801cf12 	.word	0x0801cf12
 8002390:	0801cf59 	.word	0x0801cf59
 8002394:	0801cffc 	.word	0x0801cffc
 8002398:	0801d104 	.word	0x0801d104

0800239c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800239c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800239e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80023a2:	9300      	str	r3, [sp, #0]
 80023a4:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80023a8:	4b04      	ldr	r3, [pc, #16]	; (80023bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 80023aa:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80023ae:	4804      	ldr	r0, [pc, #16]	; (80023c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 80023b0:	f7ff ff54 	bl	800225c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80023b4:	b003      	add	sp, #12
 80023b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80023ba:	bf00      	nop
 80023bc:	2000a364 	.word	0x2000a364
 80023c0:	2000a360 	.word	0x2000a360

080023c4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80023c4:	6a00      	ldr	r0, [r0, #32]
 80023c6:	4770      	bx	lr

080023c8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80023c8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80023ca:	4770      	bx	lr

080023cc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80023cc:	4770      	bx	lr

080023ce <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80023ce:	888b      	ldrh	r3, [r1, #4]
 80023d0:	6980      	ldr	r0, [r0, #24]
 80023d2:	680a      	ldr	r2, [r1, #0]
 80023d4:	0adb      	lsrs	r3, r3, #11
 80023d6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80023da:	4410      	add	r0, r2
 80023dc:	4770      	bx	lr

080023de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80023de:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80023e0:	b1c2      	cbz	r2, 8002414 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80023e2:	7b13      	ldrb	r3, [r2, #12]
 80023e4:	b1b3      	cbz	r3, 8002414 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80023e6:	7b54      	ldrb	r4, [r2, #13]
 80023e8:	7ad2      	ldrb	r2, [r2, #11]
 80023ea:	0224      	lsls	r4, r4, #8
 80023ec:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80023f0:	4314      	orrs	r4, r2
 80023f2:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80023f4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80023f6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80023fa:	8813      	ldrh	r3, [r2, #0]
 80023fc:	428b      	cmp	r3, r1
 80023fe:	d102      	bne.n	8002406 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002400:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002404:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002406:	d805      	bhi.n	8002414 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002408:	3801      	subs	r0, #1
 800240a:	b280      	uxth	r0, r0
 800240c:	3204      	adds	r2, #4
 800240e:	2800      	cmp	r0, #0
 8002410:	d1f3      	bne.n	80023fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002412:	e7f7      	b.n	8002404 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002414:	2000      	movs	r0, #0
 8002416:	e7f5      	b.n	8002404 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002418 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002418:	b510      	push	{r4, lr}
 800241a:	2128      	movs	r1, #40	; 0x28
 800241c:	4604      	mov	r4, r0
 800241e:	f019 f814 	bl	801b44a <_ZdlPvj>
 8002422:	4620      	mov	r0, r4
 8002424:	bd10      	pop	{r4, pc}
	...

08002428 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002428:	b530      	push	{r4, r5, lr}
 800242a:	b089      	sub	sp, #36	; 0x24
 800242c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800242e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002432:	9506      	str	r5, [sp, #24]
 8002434:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002438:	9505      	str	r5, [sp, #20]
 800243a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800243e:	9504      	str	r5, [sp, #16]
 8002440:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002444:	9503      	str	r5, [sp, #12]
 8002446:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800244a:	9502      	str	r5, [sp, #8]
 800244c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002450:	9501      	str	r5, [sp, #4]
 8002452:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002456:	9500      	str	r5, [sp, #0]
 8002458:	f00b f95e 	bl	800d718 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800245c:	4b06      	ldr	r3, [pc, #24]	; (8002478 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800245e:	6023      	str	r3, [r4, #0]
 8002460:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002462:	61a3      	str	r3, [r4, #24]
 8002464:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002466:	61e3      	str	r3, [r4, #28]
 8002468:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800246a:	6223      	str	r3, [r4, #32]
 800246c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800246e:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002470:	4620      	mov	r0, r4
 8002472:	b009      	add	sp, #36	; 0x24
 8002474:	bd30      	pop	{r4, r5, pc}
 8002476:	bf00      	nop
 8002478:	0801d128 	.word	0x0801d128

0800247c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800247c:	2000      	movs	r0, #0
 800247e:	4770      	bx	lr

08002480 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002480:	8081      	strh	r1, [r0, #4]
    }
 8002482:	4770      	bx	lr

08002484 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002484:	80c1      	strh	r1, [r0, #6]
    }
 8002486:	4770      	bx	lr

08002488 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002488:	8101      	strh	r1, [r0, #8]
    }
 800248a:	4770      	bx	lr

0800248c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800248c:	8141      	strh	r1, [r0, #10]
    }
 800248e:	4770      	bx	lr

08002490 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002490:	4770      	bx	lr

08002492 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002492:	4770      	bx	lr

08002494 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002494:	4770      	bx	lr

08002496 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002496:	4770      	bx	lr

08002498 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002498:	4770      	bx	lr

0800249a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800249a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800249c:	88c4      	ldrh	r4, [r0, #6]
 800249e:	6803      	ldr	r3, [r0, #0]
 80024a0:	1b12      	subs	r2, r2, r4
 80024a2:	8884      	ldrh	r4, [r0, #4]
 80024a4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80024a6:	1b09      	subs	r1, r1, r4
 80024a8:	b212      	sxth	r2, r2
    }
 80024aa:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80024ae:	b209      	sxth	r1, r1
 80024b0:	4718      	bx	r3

080024b2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80024b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024b6:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80024b8:	f04f 33ff 	mov.w	r3, #4294967295
 80024bc:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80024be:	6813      	ldr	r3, [r2, #0]
 80024c0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80024c2:	6010      	str	r0, [r2, #0]
    }
 80024c4:	4770      	bx	lr

080024c6 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80024c6:	4770      	bx	lr

080024c8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80024c8:	4770      	bx	lr

080024ca <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80024ca:	4770      	bx	lr

080024cc <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80024cc:	4770      	bx	lr

080024ce <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80024ce:	4770      	bx	lr

080024d0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80024d0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80024d4:	b11a      	cbz	r2, 80024de <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80024d6:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80024da:	b102      	cbz	r2, 80024de <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80024dc:	6018      	str	r0, [r3, #0]
        }
    }
 80024de:	4770      	bx	lr

080024e0 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80024e0:	4770      	bx	lr

080024e2 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80024e2:	4770      	bx	lr

080024e4 <_ZN15Screen1ViewBaseD0Ev>:
 80024e4:	b510      	push	{r4, lr}
 80024e6:	f44f 7110 	mov.w	r1, #576	; 0x240
 80024ea:	4604      	mov	r4, r0
 80024ec:	f018 ffad 	bl	801b44a <_ZdlPvj>
 80024f0:	4620      	mov	r0, r4
 80024f2:	bd10      	pop	{r4, pc}

080024f4 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 80024f4:	4a07      	ldr	r2, [pc, #28]	; (8002514 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 80024f6:	6002      	str	r2, [r0, #0]
 80024f8:	2200      	movs	r2, #0
 80024fa:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024fe:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8002502:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002506:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800250a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800250e:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8002510:	4770      	bx	lr
 8002512:	bf00      	nop
 8002514:	0801e93c 	.word	0x0801e93c

08002518 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002518:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800251a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800251c:	4604      	mov	r4, r0
        setX(x);
 800251e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002520:	4615      	mov	r5, r2
        setX(x);
 8002522:	4798      	blx	r3
        setY(y);
 8002524:	6823      	ldr	r3, [r4, #0]
 8002526:	4629      	mov	r1, r5
 8002528:	4620      	mov	r0, r4
 800252a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 800252c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002530:	4718      	bx	r3

08002532 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002532:	b570      	push	{r4, r5, r6, lr}
 8002534:	4604      	mov	r4, r0
 8002536:	461d      	mov	r5, r3
 8002538:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800253c:	f7ff ffec 	bl	8002518 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002540:	6823      	ldr	r3, [r4, #0]
 8002542:	4629      	mov	r1, r5
 8002544:	4620      	mov	r0, r4
 8002546:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002548:	4798      	blx	r3
        setHeight(height);
 800254a:	6823      	ldr	r3, [r4, #0]
 800254c:	4631      	mov	r1, r6
 800254e:	4620      	mov	r0, r4
 8002550:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 8002552:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002556:	4718      	bx	r3

08002558 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8002558:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 800255a:	2226      	movs	r2, #38	; 0x26
    Box()
 800255c:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 800255e:	2100      	movs	r1, #0
 8002560:	f019 f928 	bl	801b7b4 <memset>
class Widget : public Drawable
 8002564:	4620      	mov	r0, r4
 8002566:	f7ff ffc5 	bl	80024f4 <_ZN8touchgfx8DrawableC1Ev>
 800256a:	4b04      	ldr	r3, [pc, #16]	; (800257c <_ZN8touchgfx3BoxC1Ev+0x24>)
 800256c:	6023      	str	r3, [r4, #0]
 800256e:	23ff      	movs	r3, #255	; 0xff
 8002570:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002574:	2300      	movs	r3, #0
 8002576:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 8002578:	4620      	mov	r0, r4
 800257a:	bd10      	pop	{r4, pc}
 800257c:	0801e6b4 	.word	0x0801e6b4

08002580 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8002580:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002582:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002584:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002586:	2100      	movs	r1, #0
 8002588:	f019 f914 	bl	801b7b4 <memset>
 800258c:	4620      	mov	r0, r4
 800258e:	f7ff ffb1 	bl	80024f4 <_ZN8touchgfx8DrawableC1Ev>
 8002592:	4b07      	ldr	r3, [pc, #28]	; (80025b0 <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 8002594:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002596:	4b07      	ldr	r3, [pc, #28]	; (80025b4 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 8002598:	62a3      	str	r3, [r4, #40]	; 0x28
 800259a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800259e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80025a0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80025a4:	2300      	movs	r3, #0
 80025a6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 80025aa:	8723      	strh	r3, [r4, #56]	; 0x38
    {
    }
 80025ac:	4620      	mov	r0, r4
 80025ae:	bd10      	pop	{r4, pc}
 80025b0:	0801e60c 	.word	0x0801e60c
 80025b4:	0801cd78 	.word	0x0801cd78

080025b8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 80025b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025bc:	ed2d 8b04 	vpush	{d8-d9}
 80025c0:	4604      	mov	r4, r0
 80025c2:	b087      	sub	sp, #28
 80025c4:	46a0      	mov	r8, r4
        : presenter(0)
 80025c6:	2500      	movs	r5, #0
 80025c8:	f00b fb26 	bl	800dc18 <_ZN8touchgfx6ScreenC1Ev>
 80025cc:	4b9d      	ldr	r3, [pc, #628]	; (8002844 <_ZN15Screen1ViewBaseC1Ev+0x28c>)
 80025ce:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025d0:	f848 3b40 	str.w	r3, [r8], #64
 80025d4:	4640      	mov	r0, r8
 80025d6:	f7ff ffbf 	bl	8002558 <_ZN8touchgfx3BoxC1Ev>
 80025da:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80025de:	4618      	mov	r0, r3
 80025e0:	f104 0798 	add.w	r7, r4, #152	; 0x98
 80025e4:	ee08 3a90 	vmov	s17, r3
 80025e8:	f104 0bc4 	add.w	fp, r4, #196	; 0xc4
 80025ec:	f7ff ffb4 	bl	8002558 <_ZN8touchgfx3BoxC1Ev>
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 80025f0:	f8df 927c 	ldr.w	r9, [pc, #636]	; 8002870 <_ZN15Screen1ViewBaseC1Ev+0x2b8>
 80025f4:	4638      	mov	r0, r7
 80025f6:	f7ff ff7d 	bl	80024f4 <_ZN8touchgfx8DrawableC1Ev>
 80025fa:	f104 0af0 	add.w	sl, r4, #240	; 0xf0
 80025fe:	f8c4 9098 	str.w	r9, [r4, #152]	; 0x98
 8002602:	4658      	mov	r0, fp
 8002604:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8002608:	f7ff ffa6 	bl	8002558 <_ZN8touchgfx3BoxC1Ev>
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 800260c:	4650      	mov	r0, sl
 800260e:	f7ff ffb7 	bl	8002580 <_ZN8touchgfx8TextAreaC1Ev>
 8002612:	4b8d      	ldr	r3, [pc, #564]	; (8002848 <_ZN15Screen1ViewBaseC1Ev+0x290>)
 8002614:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 8002618:	f504 7398 	add.w	r3, r4, #304	; 0x130
 800261c:	4618      	mov	r0, r3
 800261e:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8002622:	f504 76b6 	add.w	r6, r4, #364	; 0x16c
 8002626:	ee08 3a10 	vmov	s16, r3
 800262a:	f7ff ffa9 	bl	8002580 <_ZN8touchgfx8TextAreaC1Ev>
 800262e:	4630      	mov	r0, r6
 8002630:	f7ff ff60 	bl	80024f4 <_ZN8touchgfx8DrawableC1Ev>
 8002634:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 8002638:	4618      	mov	r0, r3
 800263a:	f8c4 916c 	str.w	r9, [r4, #364]	; 0x16c
 800263e:	f8c4 5194 	str.w	r5, [r4, #404]	; 0x194
 8002642:	f504 79e2 	add.w	r9, r4, #452	; 0x1c4
 8002646:	ee09 3a10 	vmov	s18, r3
 800264a:	f7ff ff85 	bl	8002558 <_ZN8touchgfx3BoxC1Ev>
 800264e:	4648      	mov	r0, r9
 8002650:	f7ff ff96 	bl	8002580 <_ZN8touchgfx8TextAreaC1Ev>
 8002654:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8002658:	4618      	mov	r0, r3
 800265a:	ee09 3a90 	vmov	s19, r3
 800265e:	f7ff ff7b 	bl	8002558 <_ZN8touchgfx3BoxC1Ev>
    __background.setPosition(0, 0, 800, 480);
 8002662:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002666:	9300      	str	r3, [sp, #0]
 8002668:	462a      	mov	r2, r5
 800266a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800266e:	4629      	mov	r1, r5
 8002670:	4640      	mov	r0, r8
 8002672:	f7ff ff5e 	bl	8002532 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002676:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800267a:	66a3      	str	r3, [r4, #104]	; 0x68
    box1.setPosition(0, 0, 800, 480);
 800267c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002680:	ee18 0a90 	vmov	r0, s17
 8002684:	9300      	str	r3, [sp, #0]
 8002686:	462a      	mov	r2, r5
 8002688:	f44f 7348 	mov.w	r3, #800	; 0x320
 800268c:	4629      	mov	r1, r5
 800268e:	f7ff ff50 	bl	8002532 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002692:	4b6e      	ldr	r3, [pc, #440]	; (800284c <_ZN15Screen1ViewBaseC1Ev+0x294>)
 8002694:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    Levi.setPosition(0, 0, 400, 480);
 8002698:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800269c:	9300      	str	r3, [sp, #0]
 800269e:	462a      	mov	r2, r5
 80026a0:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80026a4:	4629      	mov	r1, r5
 80026a6:	4638      	mov	r0, r7
 80026a8:	f7ff ff43 	bl	8002532 <_ZN8touchgfx8Drawable11setPositionEssss>
    box2.setPosition(13, 20, 374, 441);
 80026ac:	f240 13b9 	movw	r3, #441	; 0x1b9
 80026b0:	2214      	movs	r2, #20
 80026b2:	4658      	mov	r0, fp
 80026b4:	9300      	str	r3, [sp, #0]
 80026b6:	210d      	movs	r1, #13
 80026b8:	f44f 73bb 	mov.w	r3, #374	; 0x176
 80026bc:	f7ff ff39 	bl	8002532 <_ZN8touchgfx8Drawable11setPositionEssss>
 80026c0:	f04f 33ff 	mov.w	r3, #4294967295
    Levi.add(box2);
 80026c4:	4659      	mov	r1, fp
 80026c6:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 80026ca:	4638      	mov	r0, r7
 80026cc:	f006 ff38 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    speed.setPosition(50, 31, 310, 353);
 80026d0:	f240 1361 	movw	r3, #353	; 0x161
 80026d4:	9300      	str	r3, [sp, #0]
 80026d6:	221f      	movs	r2, #31
 80026d8:	f44f 739b 	mov.w	r3, #310	; 0x136
 80026dc:	2132      	movs	r1, #50	; 0x32
 80026de:	4650      	mov	r0, sl
 80026e0:	f7ff ff27 	bl	8002532 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 80026e4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80026e8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80026ec:	4b58      	ldr	r3, [pc, #352]	; (8002850 <_ZN15Screen1ViewBaseC1Ev+0x298>)
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 80026ee:	f8a4 5124 	strh.w	r5, [r4, #292]	; 0x124
 80026f2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(speedBuffer, SPEED_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID2).getText());
 80026f4:	f504 7b0b 	add.w	fp, r4, #556	; 0x22c
 80026f8:	b92b      	cbnz	r3, 8002706 <_ZN15Screen1ViewBaseC1Ev+0x14e>
 80026fa:	4b56      	ldr	r3, [pc, #344]	; (8002854 <_ZN15Screen1ViewBaseC1Ev+0x29c>)
 80026fc:	4a56      	ldr	r2, [pc, #344]	; (8002858 <_ZN15Screen1ViewBaseC1Ev+0x2a0>)
 80026fe:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002700:	4856      	ldr	r0, [pc, #344]	; (800285c <_ZN15Screen1ViewBaseC1Ev+0x2a4>)
 8002702:	f018 fed1 	bl	801b4a8 <__assert_func>
 8002706:	4b56      	ldr	r3, [pc, #344]	; (8002860 <_ZN15Screen1ViewBaseC1Ev+0x2a8>)
 8002708:	881b      	ldrh	r3, [r3, #0]
 800270a:	2b01      	cmp	r3, #1
 800270c:	d803      	bhi.n	8002716 <_ZN15Screen1ViewBaseC1Ev+0x15e>
 800270e:	4b55      	ldr	r3, [pc, #340]	; (8002864 <_ZN15Screen1ViewBaseC1Ev+0x2ac>)
 8002710:	4a51      	ldr	r2, [pc, #324]	; (8002858 <_ZN15Screen1ViewBaseC1Ev+0x2a0>)
 8002712:	21af      	movs	r1, #175	; 0xaf
 8002714:	e7f4      	b.n	8002700 <_ZN15Screen1ViewBaseC1Ev+0x148>
        return texts->getText(typedTextId);
 8002716:	4b54      	ldr	r3, [pc, #336]	; (8002868 <_ZN15Screen1ViewBaseC1Ev+0x2b0>)
 8002718:	2101      	movs	r1, #1
 800271a:	6818      	ldr	r0, [r3, #0]
 800271c:	f000 fa84 	bl	8002c28 <_ZNK8touchgfx5Texts7getTextEt>
 8002720:	4a52      	ldr	r2, [pc, #328]	; (800286c <_ZN15Screen1ViewBaseC1Ev+0x2b4>)
 8002722:	4603      	mov	r3, r0
 8002724:	210a      	movs	r1, #10
 8002726:	4658      	mov	r0, fp
 8002728:	f00c ff10 	bl	800f54c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 800272c:	f8c4 b12c 	str.w	fp, [r4, #300]	; 0x12c
    speed.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8002730:	a904      	add	r1, sp, #16
        : typedTextId(id)
 8002732:	f8df b140 	ldr.w	fp, [pc, #320]	; 8002874 <_ZN15Screen1ViewBaseC1Ev+0x2bc>
 8002736:	f8cd b010 	str.w	fp, [sp, #16]
 800273a:	4650      	mov	r0, sl
 800273c:	f8ad 5014 	strh.w	r5, [sp, #20]
 8002740:	f008 f9de 	bl	800ab00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    Levi.add(speed);
 8002744:	4651      	mov	r1, sl
 8002746:	4638      	mov	r0, r7
 8002748:	f006 fefa 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(156, 337);
 800274c:	ee18 0a10 	vmov	r0, s16
 8002750:	f240 1251 	movw	r2, #337	; 0x151
 8002754:	219c      	movs	r1, #156	; 0x9c
 8002756:	f7ff fedf 	bl	8002518 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800275a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 800275e:	ee18 0a10 	vmov	r0, s16
 8002762:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
 8002766:	a904      	add	r1, sp, #16
 8002768:	2302      	movs	r3, #2
        linespace = space;
 800276a:	f8a4 5164 	strh.w	r5, [r4, #356]	; 0x164
 800276e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002772:	f8cd b010 	str.w	fp, [sp, #16]
 8002776:	f008 f9c3 	bl	800ab00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    desni.setPosition(400, 0, 400, 480);
 800277a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800277e:	9300      	str	r3, [sp, #0]
 8002780:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8002784:	462a      	mov	r2, r5
 8002786:	4619      	mov	r1, r3
 8002788:	4630      	mov	r0, r6
 800278a:	f7ff fed2 	bl	8002532 <_ZN8touchgfx8Drawable11setPositionEssss>
    box3.setPosition(64, 75, 273, 64);
 800278e:	2140      	movs	r1, #64	; 0x40
 8002790:	ee19 0a10 	vmov	r0, s18
 8002794:	9100      	str	r1, [sp, #0]
 8002796:	224b      	movs	r2, #75	; 0x4b
 8002798:	f240 1311 	movw	r3, #273	; 0x111
 800279c:	f7ff fec9 	bl	8002532 <_ZN8touchgfx8Drawable11setPositionEssss>
 80027a0:	f04f 33ff 	mov.w	r3, #4294967295
 80027a4:	f8c4 31c0 	str.w	r3, [r4, #448]	; 0x1c0
    desni.add(box3);
 80027a8:	ee19 1a10 	vmov	r1, s18
 80027ac:	4630      	mov	r0, r6
 80027ae:	f006 fec7 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(172, 82);
 80027b2:	2252      	movs	r2, #82	; 0x52
 80027b4:	4648      	mov	r0, r9
 80027b6:	21ac      	movs	r1, #172	; 0xac
 80027b8:	f7ff feae 	bl	8002518 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80027bc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80027c0:	f8c4 31f4 	str.w	r3, [r4, #500]	; 0x1f4
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
 80027c4:	a904      	add	r1, sp, #16
 80027c6:	2303      	movs	r3, #3
 80027c8:	4648      	mov	r0, r9
        linespace = space;
 80027ca:	f8a4 51f8 	strh.w	r5, [r4, #504]	; 0x1f8
 80027ce:	f8ad 3014 	strh.w	r3, [sp, #20]
 80027d2:	f8cd b010 	str.w	fp, [sp, #16]
 80027d6:	f008 f993 	bl	800ab00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    desni.add(textArea2);
 80027da:	4649      	mov	r1, r9
 80027dc:	4630      	mov	r0, r6
 80027de:	f006 feaf 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box4.setPosition(445, 198, 312, 249);
 80027e2:	23f9      	movs	r3, #249	; 0xf9
 80027e4:	22c6      	movs	r2, #198	; 0xc6
 80027e6:	ee19 0a90 	vmov	r0, s19
 80027ea:	9300      	str	r3, [sp, #0]
 80027ec:	f240 11bd 	movw	r1, #445	; 0x1bd
 80027f0:	f44f 739c 	mov.w	r3, #312	; 0x138
 80027f4:	f7ff fe9d 	bl	8002532 <_ZN8touchgfx8Drawable11setPositionEssss>
 80027f8:	f04f 33ff 	mov.w	r3, #4294967295
 80027fc:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002800:	1d20      	adds	r0, r4, #4
 8002802:	4641      	mov	r1, r8
 8002804:	9003      	str	r0, [sp, #12]
 8002806:	f006 fe9b 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800280a:	ee18 1a90 	vmov	r1, s17
 800280e:	9803      	ldr	r0, [sp, #12]
 8002810:	f006 fe96 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002814:	9803      	ldr	r0, [sp, #12]
 8002816:	4639      	mov	r1, r7
 8002818:	f006 fe92 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800281c:	ee18 1a10 	vmov	r1, s16
 8002820:	9803      	ldr	r0, [sp, #12]
 8002822:	f006 fe8d 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002826:	9803      	ldr	r0, [sp, #12]
 8002828:	4631      	mov	r1, r6
 800282a:	f006 fe89 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800282e:	9803      	ldr	r0, [sp, #12]
 8002830:	ee19 1a90 	vmov	r1, s19
 8002834:	f006 fe84 	bl	8009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002838:	4620      	mov	r0, r4
 800283a:	b007      	add	sp, #28
 800283c:	ecbd 8b04 	vpop	{d8-d9}
 8002840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002844:	0801d28c 	.word	0x0801d28c
 8002848:	0801e718 	.word	0x0801e718
 800284c:	ff071123 	.word	0xff071123
 8002850:	2000a374 	.word	0x2000a374
 8002854:	0801d178 	.word	0x0801d178
 8002858:	0801d1ba 	.word	0x0801d1ba
 800285c:	0801d1e8 	.word	0x0801d1e8
 8002860:	2000a378 	.word	0x2000a378
 8002864:	0801d22f 	.word	0x0801d22f
 8002868:	2000a380 	.word	0x2000a380
 800286c:	0801d281 	.word	0x0801d281
 8002870:	0801dda0 	.word	0x0801dda0
 8002874:	0801cd78 	.word	0x0801cd78

08002878 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_300_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_300_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_300_4bpp(glyphs_ROCK_TTF_300_4bpp, 11, 300, 3, 4, 1, 0, 0, unicodes_ROCK_TTF_300_4bpp, kerning_ROCK_TTF_300_4bpp, 63, 0, 0, 0);
 8002878:	4770      	bx	lr
	...

0800287c <_Z25getFont_ROCK_TTF_300_4bppv>:
{
 800287c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_300_4bpp(glyphs_ROCK_TTF_300_4bpp, 11, 300, 3, 4, 1, 0, 0, unicodes_ROCK_TTF_300_4bpp, kerning_ROCK_TTF_300_4bpp, 63, 0, 0, 0);
 800287e:	4d16      	ldr	r5, [pc, #88]	; (80028d8 <_Z25getFont_ROCK_TTF_300_4bppv+0x5c>)
 8002880:	782c      	ldrb	r4, [r5, #0]
 8002882:	f3bf 8f5b 	dmb	ish
 8002886:	f014 0401 	ands.w	r4, r4, #1
{
 800288a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont ROCK_TTF_300_4bpp(glyphs_ROCK_TTF_300_4bpp, 11, 300, 3, 4, 1, 0, 0, unicodes_ROCK_TTF_300_4bpp, kerning_ROCK_TTF_300_4bpp, 63, 0, 0, 0);
 800288c:	d121      	bne.n	80028d2 <_Z25getFont_ROCK_TTF_300_4bppv+0x56>
 800288e:	4628      	mov	r0, r5
 8002890:	f018 fddd 	bl	801b44e <__cxa_guard_acquire>
 8002894:	b1e8      	cbz	r0, 80028d2 <_Z25getFont_ROCK_TTF_300_4bppv+0x56>
 8002896:	233f      	movs	r3, #63	; 0x3f
 8002898:	9307      	str	r3, [sp, #28]
 800289a:	4b10      	ldr	r3, [pc, #64]	; (80028dc <_Z25getFont_ROCK_TTF_300_4bppv+0x60>)
 800289c:	9306      	str	r3, [sp, #24]
 800289e:	4b10      	ldr	r3, [pc, #64]	; (80028e0 <_Z25getFont_ROCK_TTF_300_4bppv+0x64>)
 80028a0:	4910      	ldr	r1, [pc, #64]	; (80028e4 <_Z25getFont_ROCK_TTF_300_4bppv+0x68>)
 80028a2:	4811      	ldr	r0, [pc, #68]	; (80028e8 <_Z25getFont_ROCK_TTF_300_4bppv+0x6c>)
 80028a4:	9408      	str	r4, [sp, #32]
 80028a6:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80028aa:	2201      	movs	r2, #1
 80028ac:	2304      	movs	r3, #4
 80028ae:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80028b2:	2303      	movs	r3, #3
 80028b4:	9300      	str	r3, [sp, #0]
 80028b6:	220b      	movs	r2, #11
 80028b8:	f44f 7396 	mov.w	r3, #300	; 0x12c
 80028bc:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80028c0:	9403      	str	r4, [sp, #12]
 80028c2:	f7ff fdb1 	bl	8002428 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80028c6:	4628      	mov	r0, r5
 80028c8:	f018 fdcd 	bl	801b466 <__cxa_guard_release>
 80028cc:	4807      	ldr	r0, [pc, #28]	; (80028ec <_Z25getFont_ROCK_TTF_300_4bppv+0x70>)
 80028ce:	f018 fe09 	bl	801b4e4 <atexit>
    return ROCK_TTF_300_4bpp;
}
 80028d2:	4805      	ldr	r0, [pc, #20]	; (80028e8 <_Z25getFont_ROCK_TTF_300_4bppv+0x6c>)
 80028d4:	b00d      	add	sp, #52	; 0x34
 80028d6:	bd30      	pop	{r4, r5, pc}
 80028d8:	200012a8 	.word	0x200012a8
 80028dc:	0801fe58 	.word	0x0801fe58
 80028e0:	0801d2b8 	.word	0x0801d2b8
 80028e4:	90025644 	.word	0x90025644
 80028e8:	200012ac 	.word	0x200012ac
 80028ec:	08002879 	.word	0x08002879

080028f0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_40_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_40_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_40_4bpp(glyphs_ROCK_TTF_40_4bpp, 7, 40, 0, 4, 1, 1, 1, unicodes_ROCK_TTF_40_4bpp, kerning_ROCK_TTF_40_4bpp, 63, 0, 0, 0);
 80028f0:	4770      	bx	lr
	...

080028f4 <_Z24getFont_ROCK_TTF_40_4bppv>:
{
 80028f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_40_4bpp(glyphs_ROCK_TTF_40_4bpp, 7, 40, 0, 4, 1, 1, 1, unicodes_ROCK_TTF_40_4bpp, kerning_ROCK_TTF_40_4bpp, 63, 0, 0, 0);
 80028f6:	4d15      	ldr	r5, [pc, #84]	; (800294c <_Z24getFont_ROCK_TTF_40_4bppv+0x58>)
 80028f8:	782c      	ldrb	r4, [r5, #0]
 80028fa:	f3bf 8f5b 	dmb	ish
 80028fe:	f014 0401 	ands.w	r4, r4, #1
{
 8002902:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont ROCK_TTF_40_4bpp(glyphs_ROCK_TTF_40_4bpp, 7, 40, 0, 4, 1, 1, 1, unicodes_ROCK_TTF_40_4bpp, kerning_ROCK_TTF_40_4bpp, 63, 0, 0, 0);
 8002904:	d11f      	bne.n	8002946 <_Z24getFont_ROCK_TTF_40_4bppv+0x52>
 8002906:	4628      	mov	r0, r5
 8002908:	f018 fda1 	bl	801b44e <__cxa_guard_acquire>
 800290c:	b1d8      	cbz	r0, 8002946 <_Z24getFont_ROCK_TTF_40_4bppv+0x52>
 800290e:	233f      	movs	r3, #63	; 0x3f
 8002910:	9307      	str	r3, [sp, #28]
 8002912:	4b0f      	ldr	r3, [pc, #60]	; (8002950 <_Z24getFont_ROCK_TTF_40_4bppv+0x5c>)
 8002914:	9306      	str	r3, [sp, #24]
 8002916:	4b0f      	ldr	r3, [pc, #60]	; (8002954 <_Z24getFont_ROCK_TTF_40_4bppv+0x60>)
 8002918:	9305      	str	r3, [sp, #20]
 800291a:	2301      	movs	r3, #1
 800291c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8002920:	9302      	str	r3, [sp, #8]
 8002922:	2304      	movs	r3, #4
 8002924:	e9cd 4300 	strd	r4, r3, [sp]
 8002928:	490b      	ldr	r1, [pc, #44]	; (8002958 <_Z24getFont_ROCK_TTF_40_4bppv+0x64>)
 800292a:	480c      	ldr	r0, [pc, #48]	; (800295c <_Z24getFont_ROCK_TTF_40_4bppv+0x68>)
 800292c:	9408      	str	r4, [sp, #32]
 800292e:	2328      	movs	r3, #40	; 0x28
 8002930:	2207      	movs	r2, #7
 8002932:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002936:	f7ff fd77 	bl	8002428 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800293a:	4628      	mov	r0, r5
 800293c:	f018 fd93 	bl	801b466 <__cxa_guard_release>
 8002940:	4807      	ldr	r0, [pc, #28]	; (8002960 <_Z24getFont_ROCK_TTF_40_4bppv+0x6c>)
 8002942:	f018 fdcf 	bl	801b4e4 <atexit>
    return ROCK_TTF_40_4bpp;
}
 8002946:	4805      	ldr	r0, [pc, #20]	; (800295c <_Z24getFont_ROCK_TTF_40_4bppv+0x68>)
 8002948:	b00d      	add	sp, #52	; 0x34
 800294a:	bd30      	pop	{r4, r5, pc}
 800294c:	200012d4 	.word	0x200012d4
 8002950:	0801fe5c 	.word	0x0801fe5c
 8002954:	0801d2bc 	.word	0x0801d2bc
 8002958:	900256e0 	.word	0x900256e0
 800295c:	200012d8 	.word	0x200012d8
 8002960:	080028f1 	.word	0x080028f1

08002964 <__tcf_0>:

touchgfx::GeneratedFont& getFont_arial_10_4bpp();

touchgfx::GeneratedFont& getFont_arial_10_4bpp()
{
    static touchgfx::GeneratedFont arial_10_4bpp(glyphs_arial_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_arial_10_4bpp, kerning_arial_10_4bpp, 63, 0, 0, &arial_contextualFormsTable);
 8002964:	4770      	bx	lr
	...

08002968 <_Z21getFont_arial_10_4bppv>:
{
 8002968:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arial_10_4bpp(glyphs_arial_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_arial_10_4bpp, kerning_arial_10_4bpp, 63, 0, 0, &arial_contextualFormsTable);
 800296a:	4d15      	ldr	r5, [pc, #84]	; (80029c0 <_Z21getFont_arial_10_4bppv+0x58>)
 800296c:	782c      	ldrb	r4, [r5, #0]
 800296e:	f3bf 8f5b 	dmb	ish
 8002972:	f014 0401 	ands.w	r4, r4, #1
{
 8002976:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont arial_10_4bpp(glyphs_arial_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_arial_10_4bpp, kerning_arial_10_4bpp, 63, 0, 0, &arial_contextualFormsTable);
 8002978:	d11f      	bne.n	80029ba <_Z21getFont_arial_10_4bppv+0x52>
 800297a:	4628      	mov	r0, r5
 800297c:	f018 fd67 	bl	801b44e <__cxa_guard_acquire>
 8002980:	b1d8      	cbz	r0, 80029ba <_Z21getFont_arial_10_4bppv+0x52>
 8002982:	4b10      	ldr	r3, [pc, #64]	; (80029c4 <_Z21getFont_arial_10_4bppv+0x5c>)
 8002984:	4910      	ldr	r1, [pc, #64]	; (80029c8 <_Z21getFont_arial_10_4bppv+0x60>)
 8002986:	4811      	ldr	r0, [pc, #68]	; (80029cc <_Z21getFont_arial_10_4bppv+0x64>)
 8002988:	9408      	str	r4, [sp, #32]
 800298a:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
 800298e:	233f      	movs	r3, #63	; 0x3f
 8002990:	9307      	str	r3, [sp, #28]
 8002992:	4b0f      	ldr	r3, [pc, #60]	; (80029d0 <_Z21getFont_arial_10_4bppv+0x68>)
 8002994:	9306      	str	r3, [sp, #24]
 8002996:	4b0f      	ldr	r3, [pc, #60]	; (80029d4 <_Z21getFont_arial_10_4bppv+0x6c>)
 8002998:	9403      	str	r4, [sp, #12]
 800299a:	2201      	movs	r2, #1
 800299c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80029a0:	2304      	movs	r3, #4
 80029a2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80029a6:	9400      	str	r4, [sp, #0]
 80029a8:	230a      	movs	r3, #10
 80029aa:	f7ff fd3d 	bl	8002428 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80029ae:	4628      	mov	r0, r5
 80029b0:	f018 fd59 	bl	801b466 <__cxa_guard_release>
 80029b4:	4808      	ldr	r0, [pc, #32]	; (80029d8 <_Z21getFont_arial_10_4bppv+0x70>)
 80029b6:	f018 fd95 	bl	801b4e4 <atexit>
    return arial_10_4bpp;
}
 80029ba:	4804      	ldr	r0, [pc, #16]	; (80029cc <_Z21getFont_arial_10_4bppv+0x64>)
 80029bc:	b00d      	add	sp, #52	; 0x34
 80029be:	bd30      	pop	{r4, r5, pc}
 80029c0:	20001300 	.word	0x20001300
 80029c4:	0801d66c 	.word	0x0801d66c
 80029c8:	90025744 	.word	0x90025744
 80029cc:	20001304 	.word	0x20001304
 80029d0:	0801fe60 	.word	0x0801fe60
 80029d4:	0801d68c 	.word	0x0801d68c
 80029d8:	08002965 	.word	0x08002965

080029dc <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80029dc:	4770      	bx	lr
	...

080029e0 <_Z23getFont_verdana_10_4bppv>:
{
 80029e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80029e2:	4d15      	ldr	r5, [pc, #84]	; (8002a38 <_Z23getFont_verdana_10_4bppv+0x58>)
 80029e4:	782c      	ldrb	r4, [r5, #0]
 80029e6:	f3bf 8f5b 	dmb	ish
 80029ea:	f014 0401 	ands.w	r4, r4, #1
{
 80029ee:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80029f0:	d11e      	bne.n	8002a30 <_Z23getFont_verdana_10_4bppv+0x50>
 80029f2:	4628      	mov	r0, r5
 80029f4:	f018 fd2b 	bl	801b44e <__cxa_guard_acquire>
 80029f8:	b1d0      	cbz	r0, 8002a30 <_Z23getFont_verdana_10_4bppv+0x50>
 80029fa:	233f      	movs	r3, #63	; 0x3f
 80029fc:	9307      	str	r3, [sp, #28]
 80029fe:	4b0f      	ldr	r3, [pc, #60]	; (8002a3c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002a00:	9306      	str	r3, [sp, #24]
 8002a02:	4b0f      	ldr	r3, [pc, #60]	; (8002a40 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002a04:	490f      	ldr	r1, [pc, #60]	; (8002a44 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002a06:	4810      	ldr	r0, [pc, #64]	; (8002a48 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a08:	9408      	str	r4, [sp, #32]
 8002a0a:	2201      	movs	r2, #1
 8002a0c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002a10:	2304      	movs	r3, #4
 8002a12:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002a16:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002a1a:	230a      	movs	r3, #10
 8002a1c:	9403      	str	r4, [sp, #12]
 8002a1e:	9400      	str	r4, [sp, #0]
 8002a20:	f7ff fd02 	bl	8002428 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002a24:	4628      	mov	r0, r5
 8002a26:	f018 fd1e 	bl	801b466 <__cxa_guard_release>
 8002a2a:	4808      	ldr	r0, [pc, #32]	; (8002a4c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002a2c:	f018 fd5a 	bl	801b4e4 <atexit>
    return verdana_10_4bpp;
}
 8002a30:	4805      	ldr	r0, [pc, #20]	; (8002a48 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a32:	b00d      	add	sp, #52	; 0x34
 8002a34:	bd30      	pop	{r4, r5, pc}
 8002a36:	bf00      	nop
 8002a38:	2000132c 	.word	0x2000132c
 8002a3c:	0801fe64 	.word	0x0801fe64
 8002a40:	0801d690 	.word	0x0801d690
 8002a44:	90025754 	.word	0x90025754
 8002a48:	20001330 	.word	0x20001330
 8002a4c:	080029dd 	.word	0x080029dd

08002a50 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002a50:	4770      	bx	lr
	...

08002a54 <_Z23getFont_verdana_40_4bppv>:
{
 8002a54:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002a56:	4d15      	ldr	r5, [pc, #84]	; (8002aac <_Z23getFont_verdana_40_4bppv+0x58>)
 8002a58:	782c      	ldrb	r4, [r5, #0]
 8002a5a:	f3bf 8f5b 	dmb	ish
 8002a5e:	f014 0401 	ands.w	r4, r4, #1
{
 8002a62:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002a64:	d11e      	bne.n	8002aa4 <_Z23getFont_verdana_40_4bppv+0x50>
 8002a66:	4628      	mov	r0, r5
 8002a68:	f018 fcf1 	bl	801b44e <__cxa_guard_acquire>
 8002a6c:	b1d0      	cbz	r0, 8002aa4 <_Z23getFont_verdana_40_4bppv+0x50>
 8002a6e:	233f      	movs	r3, #63	; 0x3f
 8002a70:	9307      	str	r3, [sp, #28]
 8002a72:	4b0f      	ldr	r3, [pc, #60]	; (8002ab0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002a74:	9306      	str	r3, [sp, #24]
 8002a76:	4b0f      	ldr	r3, [pc, #60]	; (8002ab4 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002a78:	490f      	ldr	r1, [pc, #60]	; (8002ab8 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002a7a:	4810      	ldr	r0, [pc, #64]	; (8002abc <_Z23getFont_verdana_40_4bppv+0x68>)
 8002a7c:	9408      	str	r4, [sp, #32]
 8002a7e:	2201      	movs	r2, #1
 8002a80:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002a84:	2304      	movs	r3, #4
 8002a86:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002a8a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002a8e:	2328      	movs	r3, #40	; 0x28
 8002a90:	9403      	str	r4, [sp, #12]
 8002a92:	9400      	str	r4, [sp, #0]
 8002a94:	f7ff fcc8 	bl	8002428 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002a98:	4628      	mov	r0, r5
 8002a9a:	f018 fce4 	bl	801b466 <__cxa_guard_release>
 8002a9e:	4808      	ldr	r0, [pc, #32]	; (8002ac0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002aa0:	f018 fd20 	bl	801b4e4 <atexit>
    return verdana_40_4bpp;
}
 8002aa4:	4805      	ldr	r0, [pc, #20]	; (8002abc <_Z23getFont_verdana_40_4bppv+0x68>)
 8002aa6:	b00d      	add	sp, #52	; 0x34
 8002aa8:	bd30      	pop	{r4, r5, pc}
 8002aaa:	bf00      	nop
 8002aac:	20001358 	.word	0x20001358
 8002ab0:	0801fe68 	.word	0x0801fe68
 8002ab4:	0801d694 	.word	0x0801d694
 8002ab8:	90025764 	.word	0x90025764
 8002abc:	2000135c 	.word	0x2000135c
 8002ac0:	08002a51 	.word	0x08002a51

08002ac4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002ac4:	2000      	movs	r0, #0
 8002ac6:	4770      	bx	lr

08002ac8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002ac8:	2000      	movs	r0, #0
 8002aca:	4770      	bx	lr

08002acc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002acc:	b40e      	push	{r1, r2, r3}
 8002ace:	b503      	push	{r0, r1, lr}
 8002ad0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002ad2:	2100      	movs	r1, #0
{
 8002ad4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002ad8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002ada:	f00a fc3b 	bl	800d354 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002ade:	b002      	add	sp, #8
 8002ae0:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ae4:	b003      	add	sp, #12
 8002ae6:	4770      	bx	lr

08002ae8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002ae8:	b40c      	push	{r2, r3}
 8002aea:	b507      	push	{r0, r1, r2, lr}
 8002aec:	ab04      	add	r3, sp, #16
 8002aee:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002af2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002af4:	f00a fc2e 	bl	800d354 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002af8:	b003      	add	sp, #12
 8002afa:	f85d eb04 	ldr.w	lr, [sp], #4
 8002afe:	b002      	add	sp, #8
 8002b00:	4770      	bx	lr
	...

08002b04 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002b04:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8002b06:	b510      	push	{r4, lr}
 8002b08:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002b0a:	b373      	cbz	r3, 8002b6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002b0c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002b0e:	b92b      	cbnz	r3, 8002b1c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002b10:	4b18      	ldr	r3, [pc, #96]	; (8002b74 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002b12:	4a19      	ldr	r2, [pc, #100]	; (8002b78 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002b14:	21bf      	movs	r1, #191	; 0xbf
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002b16:	4819      	ldr	r0, [pc, #100]	; (8002b7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002b18:	f018 fcc6 	bl	801b4a8 <__assert_func>
            return buffer[pos];
 8002b1c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002b1e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002b22:	8b5b      	ldrh	r3, [r3, #26]
 8002b24:	b30b      	cbz	r3, 8002b6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002b26:	f00b ff57 	bl	800e9d8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002b2a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002b2c:	2b01      	cmp	r3, #1
 8002b2e:	d803      	bhi.n	8002b38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002b30:	4b13      	ldr	r3, [pc, #76]	; (8002b80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002b32:	4a14      	ldr	r2, [pc, #80]	; (8002b84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002b34:	21c4      	movs	r1, #196	; 0xc4
 8002b36:	e7ee      	b.n	8002b16 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002b38:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002b3a:	1c53      	adds	r3, r2, #1
 8002b3c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002b3e:	2b09      	cmp	r3, #9
 8002b40:	4619      	mov	r1, r3
 8002b42:	bf88      	it	hi
 8002b44:	f1a3 010a 	subhi.w	r1, r3, #10
 8002b48:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002b4c:	f640 103f 	movw	r0, #2367	; 0x93f
 8002b50:	8b49      	ldrh	r1, [r1, #26]
 8002b52:	4281      	cmp	r1, r0
 8002b54:	d109      	bne.n	8002b6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002b56:	2b0a      	cmp	r3, #10
 8002b58:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002b5c:	bf28      	it	cs
 8002b5e:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002b60:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002b64:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002b66:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002b68:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002b6a:	4620      	mov	r0, r4
}
 8002b6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002b70:	f00b be16 	b.w	800e7a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002b74:	0801d698 	.word	0x0801d698
 8002b78:	0801d6a1 	.word	0x0801d6a1
 8002b7c:	0801d74c 	.word	0x0801d74c
 8002b80:	0801d796 	.word	0x0801d796
 8002b84:	0801d7a4 	.word	0x0801d7a4

08002b88 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002b88:	f00b bdc4 	b.w	800e714 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002b8c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002b8c:	b510      	push	{r4, lr}
 8002b8e:	b086      	sub	sp, #24
 8002b90:	ac02      	add	r4, sp, #8
 8002b92:	e884 0006 	stmia.w	r4, {r1, r2}
 8002b96:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002b98:	ab0a      	add	r3, sp, #40	; 0x28
 8002b9a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002b9c:	9301      	str	r3, [sp, #4]
 8002b9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ba0:	9300      	str	r3, [sp, #0]
 8002ba2:	4621      	mov	r1, r4
 8002ba4:	9b08      	ldr	r3, [sp, #32]
 8002ba6:	f009 f902 	bl	800bdae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002baa:	b006      	add	sp, #24
 8002bac:	bd10      	pop	{r4, pc}
	...

08002bb0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002bb0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002bb2:	bb18      	cbnz	r0, 8002bfc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002bb4:	4b12      	ldr	r3, [pc, #72]	; (8002c00 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002bb6:	4813      	ldr	r0, [pc, #76]	; (8002c04 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	4913      	ldr	r1, [pc, #76]	; (8002c08 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002bbc:	b1b3      	cbz	r3, 8002bec <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002bbe:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002bc0:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002bc2:	441a      	add	r2, r3
 8002bc4:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002bc6:	685a      	ldr	r2, [r3, #4]
 8002bc8:	441a      	add	r2, r3
 8002bca:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002bcc:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002bce:	4b0f      	ldr	r3, [pc, #60]	; (8002c0c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002bd0:	2200      	movs	r2, #0
 8002bd2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002bd4:	f000 f838 	bl	8002c48 <_ZN17TypedTextDatabase8getFontsEv>
 8002bd8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002bda:	f000 f833 	bl	8002c44 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002bde:	4b0c      	ldr	r3, [pc, #48]	; (8002c10 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002be0:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002be2:	4b0c      	ldr	r3, [pc, #48]	; (8002c14 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002be4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002be6:	4b0c      	ldr	r3, [pc, #48]	; (8002c18 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002be8:	8018      	strh	r0, [r3, #0]
    }
}
 8002bea:	e007      	b.n	8002bfc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002bec:	4b0b      	ldr	r3, [pc, #44]	; (8002c1c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002bee:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002bf0:	4b0b      	ldr	r3, [pc, #44]	; (8002c20 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002bf2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002bf4:	4b0b      	ldr	r3, [pc, #44]	; (8002c24 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002bf6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002bf8:	2c00      	cmp	r4, #0
 8002bfa:	d1e8      	bne.n	8002bce <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002bfc:	bd38      	pop	{r3, r4, r5, pc}
 8002bfe:	bf00      	nop
 8002c00:	20001384 	.word	0x20001384
 8002c04:	20001388 	.word	0x20001388
 8002c08:	2000138c 	.word	0x2000138c
 8002c0c:	20001390 	.word	0x20001390
 8002c10:	2000a374 	.word	0x2000a374
 8002c14:	2000a37c 	.word	0x2000a37c
 8002c18:	2000a378 	.word	0x2000a378
 8002c1c:	90025784 	.word	0x90025784
 8002c20:	90025774 	.word	0x90025774
 8002c24:	900257a8 	.word	0x900257a8

08002c28 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002c28:	4b04      	ldr	r3, [pc, #16]	; (8002c3c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002c30:	4b03      	ldr	r3, [pc, #12]	; (8002c40 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002c32:	681b      	ldr	r3, [r3, #0]
}
 8002c34:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002c38:	4770      	bx	lr
 8002c3a:	bf00      	nop
 8002c3c:	2000138c 	.word	0x2000138c
 8002c40:	20001388 	.word	0x20001388

08002c44 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002c44:	2004      	movs	r0, #4
 8002c46:	4770      	bx	lr

08002c48 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002c48:	4800      	ldr	r0, [pc, #0]	; (8002c4c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002c4a:	4770      	bx	lr
 8002c4c:	20001394 	.word	0x20001394

08002c50 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_arial_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002c50:	b510      	push	{r4, lr}
    &(getFont_ROCK_TTF_40_4bpp()),
 8002c52:	f7ff fe4f 	bl	80028f4 <_Z24getFont_ROCK_TTF_40_4bppv>
};
 8002c56:	4c07      	ldr	r4, [pc, #28]	; (8002c74 <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
 8002c58:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002c5a:	f7ff fefb 	bl	8002a54 <_Z23getFont_verdana_40_4bppv>
};
 8002c5e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8002c60:	f7ff febe 	bl	80029e0 <_Z23getFont_verdana_10_4bppv>
};
 8002c64:	60a0      	str	r0, [r4, #8]
    &(getFont_ROCK_TTF_300_4bpp()),
 8002c66:	f7ff fe09 	bl	800287c <_Z25getFont_ROCK_TTF_300_4bppv>
};
 8002c6a:	60e0      	str	r0, [r4, #12]
    &(getFont_arial_10_4bpp())
 8002c6c:	f7ff fe7c 	bl	8002968 <_Z21getFont_arial_10_4bppv>
};
 8002c70:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
 8002c72:	bd10      	pop	{r4, pc}
 8002c74:	20001394 	.word	0x20001394

08002c78 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002c78:	4770      	bx	lr

08002c7a <_ZN19FrontendApplicationD0Ev>:
 8002c7a:	b510      	push	{r4, lr}
 8002c7c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002c80:	4604      	mov	r4, r0
 8002c82:	f018 fbe2 	bl	801b44a <_ZdlPvj>
 8002c86:	4620      	mov	r0, r4
 8002c88:	bd10      	pop	{r4, pc}

08002c8a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002c8a:	b510      	push	{r4, lr}
 8002c8c:	4604      	mov	r4, r0
    {
        model.tick();
 8002c8e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002c92:	f000 f812 	bl	8002cba <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002c96:	4620      	mov	r0, r4
    }
 8002c98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002c9c:	f009 bbdc 	b.w	800c458 <_ZN8touchgfx11Application15handleTickEventEv>

08002ca0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002ca0:	b510      	push	{r4, lr}
 8002ca2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002ca4:	f7ff fa9a 	bl	80021dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002ca8:	4b01      	ldr	r3, [pc, #4]	; (8002cb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002caa:	6023      	str	r3, [r4, #0]
{

}
 8002cac:	4620      	mov	r0, r4
 8002cae:	bd10      	pop	{r4, pc}
 8002cb0:	0801d880 	.word	0x0801d880

08002cb4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002cb4:	2200      	movs	r2, #0
 8002cb6:	6002      	str	r2, [r0, #0]
{

}
 8002cb8:	4770      	bx	lr

08002cba <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002cba:	4770      	bx	lr

08002cbc <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002cbc:	4770      	bx	lr

08002cbe <_ZThn4_N16Screen1PresenterD1Ev>:
 8002cbe:	3804      	subs	r0, #4
 8002cc0:	4770      	bx	lr

08002cc2 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002cc2:	4770      	bx	lr

08002cc4 <_ZN16Screen1PresenterD0Ev>:
 8002cc4:	b510      	push	{r4, lr}
 8002cc6:	2110      	movs	r1, #16
 8002cc8:	4604      	mov	r4, r0
 8002cca:	f018 fbbe 	bl	801b44a <_ZdlPvj>
 8002cce:	4620      	mov	r0, r4
 8002cd0:	bd10      	pop	{r4, pc}

08002cd2 <_ZThn4_N16Screen1PresenterD0Ev>:
 8002cd2:	f1a0 0004 	sub.w	r0, r0, #4
 8002cd6:	e7f5      	b.n	8002cc4 <_ZN16Screen1PresenterD0Ev>

08002cd8 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002cd8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002cda:	2200      	movs	r2, #0
 8002cdc:	6082      	str	r2, [r0, #8]
    : view(v)
 8002cde:	4a04      	ldr	r2, [pc, #16]	; (8002cf0 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002ce0:	60c1      	str	r1, [r0, #12]
 8002ce2:	f102 0408 	add.w	r4, r2, #8
 8002ce6:	3220      	adds	r2, #32
 8002ce8:	6004      	str	r4, [r0, #0]
 8002cea:	6042      	str	r2, [r0, #4]
}
 8002cec:	bd10      	pop	{r4, pc}
 8002cee:	bf00      	nop
 8002cf0:	0801d8bc 	.word	0x0801d8bc

08002cf4 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002cf4:	4770      	bx	lr

08002cf6 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002cf6:	4770      	bx	lr

08002cf8 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002cf8:	f7ff bbf3 	b.w	80024e2 <_ZN15Screen1ViewBase11setupScreenEv>

08002cfc <_ZN11Screen1View15handleTickEventEv>:

int counter=0;
void Screen1View::handleTickEvent(){
	counter++;
 8002cfc:	4a0c      	ldr	r2, [pc, #48]	; (8002d30 <_ZN11Screen1View15handleTickEventEv+0x34>)
 8002cfe:	6813      	ldr	r3, [r2, #0]
 8002d00:	211e      	movs	r1, #30
 8002d02:	3301      	adds	r3, #1
void Screen1View::handleTickEvent(){
 8002d04:	b510      	push	{r4, lr}
	counter++;
 8002d06:	6013      	str	r3, [r2, #0]
 8002d08:	fb93 f2f1 	sdiv	r2, r3, r1
 8002d0c:	fb01 3212 	mls	r2, r1, r2, r3
void Screen1View::handleTickEvent(){
 8002d10:	4604      	mov	r4, r0
	if(counter%30==0){
 8002d12:	b95a      	cbnz	r2, 8002d2c <_ZN11Screen1View15handleTickEventEv+0x30>
		Unicode::snprintf(speedBuffer, SPEED_SIZE, "%d", counter);
 8002d14:	4a07      	ldr	r2, [pc, #28]	; (8002d34 <_ZN11Screen1View15handleTickEventEv+0x38>)
 8002d16:	210a      	movs	r1, #10
 8002d18:	f500 700b 	add.w	r0, r0, #556	; 0x22c
 8002d1c:	f00c fc16 	bl	800f54c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
			speed.invalidate();
 8002d20:	f104 00f0 	add.w	r0, r4, #240	; 0xf0
	}




}
 8002d24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			speed.invalidate();
 8002d28:	f00a bc35 	b.w	800d596 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8002d2c:	bd10      	pop	{r4, pc}
 8002d2e:	bf00      	nop
 8002d30:	200013a8 	.word	0x200013a8
 8002d34:	0801d8e4 	.word	0x0801d8e4

08002d38 <_ZN11Screen1ViewD0Ev>:
 8002d38:	b510      	push	{r4, lr}
 8002d3a:	f44f 7110 	mov.w	r1, #576	; 0x240
 8002d3e:	4604      	mov	r4, r0
 8002d40:	f018 fb83 	bl	801b44a <_ZdlPvj>
 8002d44:	4620      	mov	r0, r4
 8002d46:	bd10      	pop	{r4, pc}

08002d48 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002d48:	b510      	push	{r4, lr}
 8002d4a:	4604      	mov	r4, r0
 8002d4c:	f7ff fc34 	bl	80025b8 <_ZN15Screen1ViewBaseC1Ev>
 8002d50:	4b01      	ldr	r3, [pc, #4]	; (8002d58 <_ZN11Screen1ViewC1Ev+0x10>)
 8002d52:	6023      	str	r3, [r4, #0]
}
 8002d54:	4620      	mov	r0, r4
 8002d56:	bd10      	pop	{r4, pc}
 8002d58:	0801d8f0 	.word	0x0801d8f0

08002d5c <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8002d5c:	4770      	bx	lr

08002d5e <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8002d5e:	2000      	movs	r0, #0
 8002d60:	4770      	bx	lr

08002d62 <ft6x06_ReadID>:
{
 8002d62:	b510      	push	{r4, lr}
 8002d64:	4604      	mov	r4, r0
  TS_IO_Init();
 8002d66:	f000 fb7d 	bl	8003464 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002d6a:	21a8      	movs	r1, #168	; 0xa8
 8002d6c:	b2e0      	uxtb	r0, r4
 8002d6e:	f000 fb93 	bl	8003498 <TS_IO_Read>
}
 8002d72:	b280      	uxth	r0, r0
 8002d74:	bd10      	pop	{r4, pc}
	...

08002d78 <ft6x06_TS_DetectTouch>:
{
 8002d78:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8002d7a:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002d7c:	2102      	movs	r1, #2
 8002d7e:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8002d80:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002d84:	f000 fb88 	bl	8003498 <TS_IO_Read>
 8002d88:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8002d8c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002d90:	f003 030f 	and.w	r3, r3, #15
 8002d94:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8002d98:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002d9c:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8002d9e:	bf88      	it	hi
 8002da0:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002da4:	4b04      	ldr	r3, [pc, #16]	; (8002db8 <ft6x06_TS_DetectTouch+0x40>)
 8002da6:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8002daa:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002dae:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8002db0:	2200      	movs	r2, #0
 8002db2:	709a      	strb	r2, [r3, #2]
}
 8002db4:	b002      	add	sp, #8
 8002db6:	bd10      	pop	{r4, pc}
 8002db8:	200013ae 	.word	0x200013ae

08002dbc <ft6x06_TS_GetXY>:
{
 8002dbc:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002dbe:	4c15      	ldr	r4, [pc, #84]	; (8002e14 <ft6x06_TS_GetXY+0x58>)
{
 8002dc0:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002dc2:	78a3      	ldrb	r3, [r4, #2]
 8002dc4:	7862      	ldrb	r2, [r4, #1]
 8002dc6:	429a      	cmp	r2, r3
{
 8002dc8:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002dca:	d91f      	bls.n	8002e0c <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002dcc:	b303      	cbz	r3, 8002e10 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8002dce:	2b01      	cmp	r3, #1
 8002dd0:	bf14      	ite	ne
 8002dd2:	2100      	movne	r1, #0
 8002dd4:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8002dd6:	2304      	movs	r3, #4
 8002dd8:	eb0d 0203 	add.w	r2, sp, r3
 8002ddc:	b2c0      	uxtb	r0, r0
 8002dde:	f000 fb77 	bl	80034d0 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8002de2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002de6:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002dea:	021b      	lsls	r3, r3, #8
 8002dec:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002df0:	4313      	orrs	r3, r2
 8002df2:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002df4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002df8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002dfc:	021b      	lsls	r3, r3, #8
 8002dfe:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002e02:	4313      	orrs	r3, r2
 8002e04:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8002e06:	78a3      	ldrb	r3, [r4, #2]
 8002e08:	3301      	adds	r3, #1
 8002e0a:	70a3      	strb	r3, [r4, #2]
}
 8002e0c:	b002      	add	sp, #8
 8002e0e:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8002e10:	2103      	movs	r1, #3
 8002e12:	e7e0      	b.n	8002dd6 <ft6x06_TS_GetXY+0x1a>
 8002e14:	200013ae 	.word	0x200013ae

08002e18 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002e18:	2201      	movs	r2, #1
 8002e1a:	21a4      	movs	r1, #164	; 0xa4
 8002e1c:	b2c0      	uxtb	r0, r0
 8002e1e:	f000 bb23 	b.w	8003468 <TS_IO_Write>

08002e22 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002e22:	2200      	movs	r2, #0
 8002e24:	21a4      	movs	r1, #164	; 0xa4
 8002e26:	b2c0      	uxtb	r0, r0
 8002e28:	f000 bb1e 	b.w	8003468 <TS_IO_Write>

08002e2c <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002e2c:	f7ff bff9 	b.w	8002e22 <ft6x06_TS_DisableIT>

08002e30 <ft6x06_TS_ClearIT>:
 8002e30:	4770      	bx	lr
	...

08002e34 <ft6x06_Init>:
{  
 8002e34:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8002e36:	4b09      	ldr	r3, [pc, #36]	; (8002e5c <ft6x06_Init+0x28>)
 8002e38:	781a      	ldrb	r2, [r3, #0]
 8002e3a:	4290      	cmp	r0, r2
 8002e3c:	d00a      	beq.n	8002e54 <ft6x06_Init+0x20>
 8002e3e:	7859      	ldrb	r1, [r3, #1]
 8002e40:	4288      	cmp	r0, r1
 8002e42:	d007      	beq.n	8002e54 <ft6x06_Init+0x20>
 8002e44:	b10a      	cbz	r2, 8002e4a <ft6x06_Init+0x16>
 8002e46:	b929      	cbnz	r1, 8002e54 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8002e48:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8002e4a:	5498      	strb	r0, [r3, r2]
}
 8002e4c:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8002e50:	f000 bb08 	b.w	8003464 <TS_IO_Init>
}
 8002e54:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002e58:	4770      	bx	lr
 8002e5a:	bf00      	nop
 8002e5c:	200013ac 	.word	0x200013ac

08002e60 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8002e60:	b538      	push	{r3, r4, r5, lr}
 8002e62:	4604      	mov	r4, r0
 8002e64:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002e66:	2000      	movs	r0, #0
 8002e68:	49cb      	ldr	r1, [pc, #812]	; (8003198 <OTM8009A_Init+0x338>)
 8002e6a:	f7fd fdd5 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8002e6e:	49cb      	ldr	r1, [pc, #812]	; (800319c <OTM8009A_Init+0x33c>)
 8002e70:	2003      	movs	r0, #3
 8002e72:	f7fd fdd1 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8002e76:	49ca      	ldr	r1, [pc, #808]	; (80031a0 <OTM8009A_Init+0x340>)
 8002e78:	2000      	movs	r0, #0
 8002e7a:	f7fd fdcd 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8002e7e:	49c9      	ldr	r1, [pc, #804]	; (80031a4 <OTM8009A_Init+0x344>)
 8002e80:	2002      	movs	r0, #2
 8002e82:	f7fd fdc9 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002e86:	49c6      	ldr	r1, [pc, #792]	; (80031a0 <OTM8009A_Init+0x340>)
 8002e88:	2000      	movs	r0, #0
 8002e8a:	f7fd fdc5 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8002e8e:	49c6      	ldr	r1, [pc, #792]	; (80031a8 <OTM8009A_Init+0x348>)
 8002e90:	2000      	movs	r0, #0
 8002e92:	f7fd fdc1 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002e96:	200a      	movs	r0, #10
 8002e98:	f000 fb30 	bl	80034fc <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8002e9c:	49c3      	ldr	r1, [pc, #780]	; (80031ac <OTM8009A_Init+0x34c>)
 8002e9e:	2000      	movs	r0, #0
 8002ea0:	f7fd fdba 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8002ea4:	49c2      	ldr	r1, [pc, #776]	; (80031b0 <OTM8009A_Init+0x350>)
 8002ea6:	2000      	movs	r0, #0
 8002ea8:	f7fd fdb6 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002eac:	200a      	movs	r0, #10
 8002eae:	f000 fb25 	bl	80034fc <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002eb2:	49c0      	ldr	r1, [pc, #768]	; (80031b4 <OTM8009A_Init+0x354>)
 8002eb4:	2000      	movs	r0, #0
 8002eb6:	f7fd fdaf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002eba:	49bf      	ldr	r1, [pc, #764]	; (80031b8 <OTM8009A_Init+0x358>)
 8002ebc:	2000      	movs	r0, #0
 8002ebe:	f7fd fdab 	bl	8000a18 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002ec2:	49be      	ldr	r1, [pc, #760]	; (80031bc <OTM8009A_Init+0x35c>)
 8002ec4:	2000      	movs	r0, #0
 8002ec6:	f7fd fda7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002eca:	49bd      	ldr	r1, [pc, #756]	; (80031c0 <OTM8009A_Init+0x360>)
 8002ecc:	2000      	movs	r0, #0
 8002ece:	f7fd fda3 	bl	8000a18 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002ed2:	49bc      	ldr	r1, [pc, #752]	; (80031c4 <OTM8009A_Init+0x364>)
 8002ed4:	2000      	movs	r0, #0
 8002ed6:	f7fd fd9f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002eda:	49bb      	ldr	r1, [pc, #748]	; (80031c8 <OTM8009A_Init+0x368>)
 8002edc:	2000      	movs	r0, #0
 8002ede:	f7fd fd9b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002ee2:	49ad      	ldr	r1, [pc, #692]	; (8003198 <OTM8009A_Init+0x338>)
 8002ee4:	2000      	movs	r0, #0
 8002ee6:	f7fd fd97 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002eea:	49b8      	ldr	r1, [pc, #736]	; (80031cc <OTM8009A_Init+0x36c>)
 8002eec:	2000      	movs	r0, #0
 8002eee:	f7fd fd93 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002ef2:	49b7      	ldr	r1, [pc, #732]	; (80031d0 <OTM8009A_Init+0x370>)
 8002ef4:	2000      	movs	r0, #0
 8002ef6:	f7fd fd8f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002efa:	49b6      	ldr	r1, [pc, #728]	; (80031d4 <OTM8009A_Init+0x374>)
 8002efc:	2000      	movs	r0, #0
 8002efe:	f7fd fd8b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002f02:	49b5      	ldr	r1, [pc, #724]	; (80031d8 <OTM8009A_Init+0x378>)
 8002f04:	2000      	movs	r0, #0
 8002f06:	f7fd fd87 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002f0a:	49b4      	ldr	r1, [pc, #720]	; (80031dc <OTM8009A_Init+0x37c>)
 8002f0c:	2000      	movs	r0, #0
 8002f0e:	f7fd fd83 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8002f12:	49b3      	ldr	r1, [pc, #716]	; (80031e0 <OTM8009A_Init+0x380>)
 8002f14:	2000      	movs	r0, #0
 8002f16:	f7fd fd7f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002f1a:	49b2      	ldr	r1, [pc, #712]	; (80031e4 <OTM8009A_Init+0x384>)
 8002f1c:	2000      	movs	r0, #0
 8002f1e:	f7fd fd7b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8002f22:	49b1      	ldr	r1, [pc, #708]	; (80031e8 <OTM8009A_Init+0x388>)
 8002f24:	2000      	movs	r0, #0
 8002f26:	f7fd fd77 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002f2a:	49a5      	ldr	r1, [pc, #660]	; (80031c0 <OTM8009A_Init+0x360>)
 8002f2c:	2000      	movs	r0, #0
 8002f2e:	f7fd fd73 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002f32:	4999      	ldr	r1, [pc, #612]	; (8003198 <OTM8009A_Init+0x338>)
 8002f34:	2000      	movs	r0, #0
 8002f36:	f7fd fd6f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002f3a:	49ac      	ldr	r1, [pc, #688]	; (80031ec <OTM8009A_Init+0x38c>)
 8002f3c:	2002      	movs	r0, #2
 8002f3e:	f7fd fd6b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8002f42:	49ab      	ldr	r1, [pc, #684]	; (80031f0 <OTM8009A_Init+0x390>)
 8002f44:	2000      	movs	r0, #0
 8002f46:	f7fd fd67 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002f4a:	49aa      	ldr	r1, [pc, #680]	; (80031f4 <OTM8009A_Init+0x394>)
 8002f4c:	2000      	movs	r0, #0
 8002f4e:	f7fd fd63 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8002f52:	49a9      	ldr	r1, [pc, #676]	; (80031f8 <OTM8009A_Init+0x398>)
 8002f54:	2000      	movs	r0, #0
 8002f56:	f7fd fd5f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002f5a:	49a8      	ldr	r1, [pc, #672]	; (80031fc <OTM8009A_Init+0x39c>)
 8002f5c:	2000      	movs	r0, #0
 8002f5e:	f7fd fd5b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8002f62:	49a7      	ldr	r1, [pc, #668]	; (8003200 <OTM8009A_Init+0x3a0>)
 8002f64:	2000      	movs	r0, #0
 8002f66:	f7fd fd57 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8002f6a:	49a6      	ldr	r1, [pc, #664]	; (8003204 <OTM8009A_Init+0x3a4>)
 8002f6c:	2000      	movs	r0, #0
 8002f6e:	f7fd fd53 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002f72:	4997      	ldr	r1, [pc, #604]	; (80031d0 <OTM8009A_Init+0x370>)
 8002f74:	2000      	movs	r0, #0
 8002f76:	f7fd fd4f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8002f7a:	49a3      	ldr	r1, [pc, #652]	; (8003208 <OTM8009A_Init+0x3a8>)
 8002f7c:	2000      	movs	r0, #0
 8002f7e:	f7fd fd4b 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002f82:	4995      	ldr	r1, [pc, #596]	; (80031d8 <OTM8009A_Init+0x378>)
 8002f84:	2000      	movs	r0, #0
 8002f86:	f7fd fd47 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8002f8a:	49a0      	ldr	r1, [pc, #640]	; (800320c <OTM8009A_Init+0x3ac>)
 8002f8c:	2000      	movs	r0, #0
 8002f8e:	f7fd fd43 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8002f92:	499f      	ldr	r1, [pc, #636]	; (8003210 <OTM8009A_Init+0x3b0>)
 8002f94:	2000      	movs	r0, #0
 8002f96:	f7fd fd3f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8002f9a:	499e      	ldr	r1, [pc, #632]	; (8003214 <OTM8009A_Init+0x3b4>)
 8002f9c:	2002      	movs	r0, #2
 8002f9e:	f7fd fd3b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002fa2:	497f      	ldr	r1, [pc, #508]	; (80031a0 <OTM8009A_Init+0x340>)
 8002fa4:	2000      	movs	r0, #0
 8002fa6:	f7fd fd37 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8002faa:	499b      	ldr	r1, [pc, #620]	; (8003218 <OTM8009A_Init+0x3b8>)
 8002fac:	2006      	movs	r0, #6
 8002fae:	f7fd fd33 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002fb2:	499a      	ldr	r1, [pc, #616]	; (800321c <OTM8009A_Init+0x3bc>)
 8002fb4:	2000      	movs	r0, #0
 8002fb6:	f7fd fd2f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8002fba:	4999      	ldr	r1, [pc, #612]	; (8003220 <OTM8009A_Init+0x3c0>)
 8002fbc:	200e      	movs	r0, #14
 8002fbe:	f7fd fd2b 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002fc2:	4998      	ldr	r1, [pc, #608]	; (8003224 <OTM8009A_Init+0x3c4>)
 8002fc4:	2000      	movs	r0, #0
 8002fc6:	f7fd fd27 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8002fca:	4997      	ldr	r1, [pc, #604]	; (8003228 <OTM8009A_Init+0x3c8>)
 8002fcc:	200e      	movs	r0, #14
 8002fce:	f7fd fd23 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002fd2:	4996      	ldr	r1, [pc, #600]	; (800322c <OTM8009A_Init+0x3cc>)
 8002fd4:	2000      	movs	r0, #0
 8002fd6:	f7fd fd1f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8002fda:	4995      	ldr	r1, [pc, #596]	; (8003230 <OTM8009A_Init+0x3d0>)
 8002fdc:	200a      	movs	r0, #10
 8002fde:	f7fd fd1b 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002fe2:	4994      	ldr	r1, [pc, #592]	; (8003234 <OTM8009A_Init+0x3d4>)
 8002fe4:	2000      	movs	r0, #0
 8002fe6:	f7fd fd17 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8002fea:	4993      	ldr	r1, [pc, #588]	; (8003238 <OTM8009A_Init+0x3d8>)
 8002fec:	2000      	movs	r0, #0
 8002fee:	f7fd fd13 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002ff2:	496b      	ldr	r1, [pc, #428]	; (80031a0 <OTM8009A_Init+0x340>)
 8002ff4:	2000      	movs	r0, #0
 8002ff6:	f7fd fd0f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8002ffa:	4990      	ldr	r1, [pc, #576]	; (800323c <OTM8009A_Init+0x3dc>)
 8002ffc:	200a      	movs	r0, #10
 8002ffe:	f7fd fd0b 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8003002:	498f      	ldr	r1, [pc, #572]	; (8003240 <OTM8009A_Init+0x3e0>)
 8003004:	2000      	movs	r0, #0
 8003006:	f7fd fd07 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800300a:	498e      	ldr	r1, [pc, #568]	; (8003244 <OTM8009A_Init+0x3e4>)
 800300c:	200f      	movs	r0, #15
 800300e:	f7fd fd03 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8003012:	4982      	ldr	r1, [pc, #520]	; (800321c <OTM8009A_Init+0x3bc>)
 8003014:	2000      	movs	r0, #0
 8003016:	f7fd fcff 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800301a:	498b      	ldr	r1, [pc, #556]	; (8003248 <OTM8009A_Init+0x3e8>)
 800301c:	200f      	movs	r0, #15
 800301e:	f7fd fcfb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8003022:	4980      	ldr	r1, [pc, #512]	; (8003224 <OTM8009A_Init+0x3c4>)
 8003024:	2000      	movs	r0, #0
 8003026:	f7fd fcf7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800302a:	4988      	ldr	r1, [pc, #544]	; (800324c <OTM8009A_Init+0x3ec>)
 800302c:	200a      	movs	r0, #10
 800302e:	f7fd fcf3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8003032:	497e      	ldr	r1, [pc, #504]	; (800322c <OTM8009A_Init+0x3cc>)
 8003034:	2000      	movs	r0, #0
 8003036:	f7fd fcef 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 800303a:	4985      	ldr	r1, [pc, #532]	; (8003250 <OTM8009A_Init+0x3f0>)
 800303c:	200f      	movs	r0, #15
 800303e:	f7fd fceb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8003042:	497c      	ldr	r1, [pc, #496]	; (8003234 <OTM8009A_Init+0x3d4>)
 8003044:	2000      	movs	r0, #0
 8003046:	f7fd fce7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800304a:	4982      	ldr	r1, [pc, #520]	; (8003254 <OTM8009A_Init+0x3f4>)
 800304c:	200f      	movs	r0, #15
 800304e:	f7fd fce3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8003052:	4981      	ldr	r1, [pc, #516]	; (8003258 <OTM8009A_Init+0x3f8>)
 8003054:	2000      	movs	r0, #0
 8003056:	f7fd fcdf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800305a:	4980      	ldr	r1, [pc, #512]	; (800325c <OTM8009A_Init+0x3fc>)
 800305c:	200a      	movs	r0, #10
 800305e:	f7fd fcdb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8003062:	497f      	ldr	r1, [pc, #508]	; (8003260 <OTM8009A_Init+0x400>)
 8003064:	2000      	movs	r0, #0
 8003066:	f7fd fcd7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 800306a:	497e      	ldr	r1, [pc, #504]	; (8003264 <OTM8009A_Init+0x404>)
 800306c:	200a      	movs	r0, #10
 800306e:	f7fd fcd3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003072:	494b      	ldr	r1, [pc, #300]	; (80031a0 <OTM8009A_Init+0x340>)
 8003074:	2000      	movs	r0, #0
 8003076:	f7fd fccf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 800307a:	497b      	ldr	r1, [pc, #492]	; (8003268 <OTM8009A_Init+0x408>)
 800307c:	200a      	movs	r0, #10
 800307e:	f7fd fccb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8003082:	496f      	ldr	r1, [pc, #444]	; (8003240 <OTM8009A_Init+0x3e0>)
 8003084:	2000      	movs	r0, #0
 8003086:	f7fd fcc7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 800308a:	4978      	ldr	r1, [pc, #480]	; (800326c <OTM8009A_Init+0x40c>)
 800308c:	200f      	movs	r0, #15
 800308e:	f7fd fcc3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8003092:	4962      	ldr	r1, [pc, #392]	; (800321c <OTM8009A_Init+0x3bc>)
 8003094:	2000      	movs	r0, #0
 8003096:	f7fd fcbf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 800309a:	4975      	ldr	r1, [pc, #468]	; (8003270 <OTM8009A_Init+0x410>)
 800309c:	200f      	movs	r0, #15
 800309e:	f7fd fcbb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80030a2:	4960      	ldr	r1, [pc, #384]	; (8003224 <OTM8009A_Init+0x3c4>)
 80030a4:	2000      	movs	r0, #0
 80030a6:	f7fd fcb7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 80030aa:	4972      	ldr	r1, [pc, #456]	; (8003274 <OTM8009A_Init+0x414>)
 80030ac:	200a      	movs	r0, #10
 80030ae:	f7fd fcb3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80030b2:	495e      	ldr	r1, [pc, #376]	; (800322c <OTM8009A_Init+0x3cc>)
 80030b4:	2000      	movs	r0, #0
 80030b6:	f7fd fcaf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 80030ba:	496f      	ldr	r1, [pc, #444]	; (8003278 <OTM8009A_Init+0x418>)
 80030bc:	200f      	movs	r0, #15
 80030be:	f7fd fcab 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80030c2:	495c      	ldr	r1, [pc, #368]	; (8003234 <OTM8009A_Init+0x3d4>)
 80030c4:	2000      	movs	r0, #0
 80030c6:	f7fd fca7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 80030ca:	496c      	ldr	r1, [pc, #432]	; (800327c <OTM8009A_Init+0x41c>)
 80030cc:	200f      	movs	r0, #15
 80030ce:	f7fd fca3 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80030d2:	493f      	ldr	r1, [pc, #252]	; (80031d0 <OTM8009A_Init+0x370>)
 80030d4:	2000      	movs	r0, #0
 80030d6:	f7fd fc9f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 80030da:	4969      	ldr	r1, [pc, #420]	; (8003280 <OTM8009A_Init+0x420>)
 80030dc:	2000      	movs	r0, #0
 80030de:	f7fd fc9b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 80030e2:	4968      	ldr	r1, [pc, #416]	; (8003284 <OTM8009A_Init+0x424>)
 80030e4:	2000      	movs	r0, #0
 80030e6:	f7fd fc97 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 80030ea:	4967      	ldr	r1, [pc, #412]	; (8003288 <OTM8009A_Init+0x428>)
 80030ec:	2000      	movs	r0, #0
 80030ee:	f7fd fc93 	bl	8000a18 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 80030f2:	4966      	ldr	r1, [pc, #408]	; (800328c <OTM8009A_Init+0x42c>)
 80030f4:	2000      	movs	r0, #0
 80030f6:	f7fd fc8f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 80030fa:	4965      	ldr	r1, [pc, #404]	; (8003290 <OTM8009A_Init+0x430>)
 80030fc:	2000      	movs	r0, #0
 80030fe:	f7fd fc8b 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003102:	4925      	ldr	r1, [pc, #148]	; (8003198 <OTM8009A_Init+0x338>)
 8003104:	2000      	movs	r0, #0
 8003106:	f7fd fc87 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800310a:	4962      	ldr	r1, [pc, #392]	; (8003294 <OTM8009A_Init+0x434>)
 800310c:	2003      	movs	r0, #3
 800310e:	f7fd fc83 	bl	8000a18 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003112:	4921      	ldr	r1, [pc, #132]	; (8003198 <OTM8009A_Init+0x338>)
 8003114:	2000      	movs	r0, #0
 8003116:	f7fd fc7f 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800311a:	491f      	ldr	r1, [pc, #124]	; (8003198 <OTM8009A_Init+0x338>)
 800311c:	2000      	movs	r0, #0
 800311e:	f7fd fc7b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8003122:	495d      	ldr	r1, [pc, #372]	; (8003298 <OTM8009A_Init+0x438>)
 8003124:	2010      	movs	r0, #16
 8003126:	f7fd fc77 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800312a:	491b      	ldr	r1, [pc, #108]	; (8003198 <OTM8009A_Init+0x338>)
 800312c:	2000      	movs	r0, #0
 800312e:	f7fd fc73 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8003132:	495a      	ldr	r1, [pc, #360]	; (800329c <OTM8009A_Init+0x43c>)
 8003134:	2010      	movs	r0, #16
 8003136:	f7fd fc6f 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800313a:	2000      	movs	r0, #0
 800313c:	4958      	ldr	r1, [pc, #352]	; (80032a0 <OTM8009A_Init+0x440>)
 800313e:	f7fd fc6b 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8003142:	2078      	movs	r0, #120	; 0x78
 8003144:	f000 f9da 	bl	80034fc <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8003148:	2c00      	cmp	r4, #0
 800314a:	f000 80c9 	beq.w	80032e0 <OTM8009A_Init+0x480>
 800314e:	2c02      	cmp	r4, #2
 8003150:	d103      	bne.n	800315a <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8003152:	4954      	ldr	r1, [pc, #336]	; (80032a4 <OTM8009A_Init+0x444>)
 8003154:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8003156:	f7fd fc5f 	bl	8000a18 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800315a:	2d01      	cmp	r5, #1
 800315c:	d10b      	bne.n	8003176 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 800315e:	4952      	ldr	r1, [pc, #328]	; (80032a8 <OTM8009A_Init+0x448>)
 8003160:	2000      	movs	r0, #0
 8003162:	f7fd fc59 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8003166:	4951      	ldr	r1, [pc, #324]	; (80032ac <OTM8009A_Init+0x44c>)
 8003168:	2004      	movs	r0, #4
 800316a:	f7fd fc55 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 800316e:	4950      	ldr	r1, [pc, #320]	; (80032b0 <OTM8009A_Init+0x450>)
 8003170:	2004      	movs	r0, #4
 8003172:	f7fd fc51 	bl	8000a18 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8003176:	494f      	ldr	r1, [pc, #316]	; (80032b4 <OTM8009A_Init+0x454>)
 8003178:	2000      	movs	r0, #0
 800317a:	f7fd fc4d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 800317e:	494e      	ldr	r1, [pc, #312]	; (80032b8 <OTM8009A_Init+0x458>)
 8003180:	2000      	movs	r0, #0
 8003182:	f7fd fc49 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8003186:	494d      	ldr	r1, [pc, #308]	; (80032bc <OTM8009A_Init+0x45c>)
 8003188:	2000      	movs	r0, #0
 800318a:	f7fd fc45 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 800318e:	494c      	ldr	r1, [pc, #304]	; (80032c0 <OTM8009A_Init+0x460>)
 8003190:	2000      	movs	r0, #0
 8003192:	f7fd fc41 	bl	8000a18 <DSI_IO_WriteCmd>
 8003196:	e095      	b.n	80032c4 <OTM8009A_Init+0x464>
 8003198:	0801d91c 	.word	0x0801d91c
 800319c:	0801d982 	.word	0x0801d982
 80031a0:	0801d932 	.word	0x0801d932
 80031a4:	0801da08 	.word	0x0801da08
 80031a8:	0801d948 	.word	0x0801d948
 80031ac:	0801d95e 	.word	0x0801d95e
 80031b0:	0801d974 	.word	0x0801d974
 80031b4:	0801d97a 	.word	0x0801d97a
 80031b8:	0801d97c 	.word	0x0801d97c
 80031bc:	0801d97e 	.word	0x0801d97e
 80031c0:	0801d980 	.word	0x0801d980
 80031c4:	0801d91e 	.word	0x0801d91e
 80031c8:	0801d920 	.word	0x0801d920
 80031cc:	0801d922 	.word	0x0801d922
 80031d0:	0801d924 	.word	0x0801d924
 80031d4:	0801d926 	.word	0x0801d926
 80031d8:	0801d928 	.word	0x0801d928
 80031dc:	0801d92a 	.word	0x0801d92a
 80031e0:	0801d92c 	.word	0x0801d92c
 80031e4:	0801d92e 	.word	0x0801d92e
 80031e8:	0801d930 	.word	0x0801d930
 80031ec:	0801da86 	.word	0x0801da86
 80031f0:	0801d934 	.word	0x0801d934
 80031f4:	0801d936 	.word	0x0801d936
 80031f8:	0801d938 	.word	0x0801d938
 80031fc:	0801d93a 	.word	0x0801d93a
 8003200:	0801d93c 	.word	0x0801d93c
 8003204:	0801d93e 	.word	0x0801d93e
 8003208:	0801d940 	.word	0x0801d940
 800320c:	0801d942 	.word	0x0801d942
 8003210:	0801d944 	.word	0x0801d944
 8003214:	0801da89 	.word	0x0801da89
 8003218:	0801da8c 	.word	0x0801da8c
 800321c:	0801d946 	.word	0x0801d946
 8003220:	0801da93 	.word	0x0801da93
 8003224:	0801d94a 	.word	0x0801d94a
 8003228:	0801daa2 	.word	0x0801daa2
 800322c:	0801d94c 	.word	0x0801d94c
 8003230:	0801d986 	.word	0x0801d986
 8003234:	0801d94e 	.word	0x0801d94e
 8003238:	0801d96c 	.word	0x0801d96c
 800323c:	0801d991 	.word	0x0801d991
 8003240:	0801d950 	.word	0x0801d950
 8003244:	0801d99c 	.word	0x0801d99c
 8003248:	0801d9ac 	.word	0x0801d9ac
 800324c:	0801d9bc 	.word	0x0801d9bc
 8003250:	0801d9c7 	.word	0x0801d9c7
 8003254:	0801d9d7 	.word	0x0801d9d7
 8003258:	0801d952 	.word	0x0801d952
 800325c:	0801d9e7 	.word	0x0801d9e7
 8003260:	0801d954 	.word	0x0801d954
 8003264:	0801d9f2 	.word	0x0801d9f2
 8003268:	0801d9fd 	.word	0x0801d9fd
 800326c:	0801da0b 	.word	0x0801da0b
 8003270:	0801da1b 	.word	0x0801da1b
 8003274:	0801da2b 	.word	0x0801da2b
 8003278:	0801da36 	.word	0x0801da36
 800327c:	0801da46 	.word	0x0801da46
 8003280:	0801d96e 	.word	0x0801d96e
 8003284:	0801d970 	.word	0x0801d970
 8003288:	0801d972 	.word	0x0801d972
 800328c:	0801d976 	.word	0x0801d976
 8003290:	0801d978 	.word	0x0801d978
 8003294:	0801da56 	.word	0x0801da56
 8003298:	0801da64 	.word	0x0801da64
 800329c:	0801da75 	.word	0x0801da75
 80032a0:	0801d956 	.word	0x0801d956
 80032a4:	0801d958 	.word	0x0801d958
 80032a8:	0801d95c 	.word	0x0801d95c
 80032ac:	0801da5a 	.word	0x0801da5a
 80032b0:	0801da5f 	.word	0x0801da5f
 80032b4:	0801d960 	.word	0x0801d960
 80032b8:	0801d962 	.word	0x0801d962
 80032bc:	0801d964 	.word	0x0801d964
 80032c0:	0801d966 	.word	0x0801d966

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 80032c4:	4908      	ldr	r1, [pc, #32]	; (80032e8 <OTM8009A_Init+0x488>)
 80032c6:	2000      	movs	r0, #0
 80032c8:	f7fd fba6 	bl	8000a18 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80032cc:	4907      	ldr	r1, [pc, #28]	; (80032ec <OTM8009A_Init+0x48c>)
 80032ce:	2000      	movs	r0, #0
 80032d0:	f7fd fba2 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 80032d4:	4906      	ldr	r1, [pc, #24]	; (80032f0 <OTM8009A_Init+0x490>)
 80032d6:	2000      	movs	r0, #0
 80032d8:	f7fd fb9e 	bl	8000a18 <DSI_IO_WriteCmd>

  return 0;
}
 80032dc:	2000      	movs	r0, #0
 80032de:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80032e0:	4904      	ldr	r1, [pc, #16]	; (80032f4 <OTM8009A_Init+0x494>)
 80032e2:	4620      	mov	r0, r4
 80032e4:	e737      	b.n	8003156 <OTM8009A_Init+0x2f6>
 80032e6:	bf00      	nop
 80032e8:	0801d968 	.word	0x0801d968
 80032ec:	0801d91c 	.word	0x0801d91c
 80032f0:	0801d96a 	.word	0x0801d96a
 80032f4:	0801d95a 	.word	0x0801d95a

080032f8 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 80032f8:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 80032fa:	4d2e      	ldr	r5, [pc, #184]	; (80033b4 <I2C1_Init+0xbc>)
{
 80032fc:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 80032fe:	4628      	mov	r0, r5
 8003300:	f002 faf0 	bl	80058e4 <HAL_I2C_GetState>
 8003304:	4604      	mov	r4, r0
 8003306:	2800      	cmp	r0, #0
 8003308:	d151      	bne.n	80033ae <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800330a:	4a2b      	ldr	r2, [pc, #172]	; (80033b8 <I2C1_Init+0xc0>)
 800330c:	4b2b      	ldr	r3, [pc, #172]	; (80033bc <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800330e:	4e2c      	ldr	r6, [pc, #176]	; (80033c0 <I2C1_Init+0xc8>)
 8003310:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8003312:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8003316:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800331a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800331e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003322:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8003326:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003328:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800332a:	f043 0302 	orr.w	r3, r3, #2
 800332e:	6333      	str	r3, [r6, #48]	; 0x30
 8003330:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8003332:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003334:	f003 0302 	and.w	r3, r3, #2
 8003338:	9301      	str	r3, [sp, #4]
 800333a:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 800333c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003340:	2312      	movs	r3, #18
 8003342:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8003346:	2002      	movs	r0, #2
 8003348:	2304      	movs	r3, #4
 800334a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800334e:	a903      	add	r1, sp, #12
 8003350:	481c      	ldr	r0, [pc, #112]	; (80033c4 <I2C1_Init+0xcc>)
 8003352:	f001 fcf5 	bl	8004d40 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003356:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800335a:	481a      	ldr	r0, [pc, #104]	; (80033c4 <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800335c:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800335e:	a903      	add	r1, sp, #12
 8003360:	f001 fcee 	bl	8004d40 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8003364:	9402      	str	r4, [sp, #8]
 8003366:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003368:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800336c:	6433      	str	r3, [r6, #64]	; 0x40
 800336e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003370:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003374:	9302      	str	r3, [sp, #8]
 8003376:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8003378:	6a33      	ldr	r3, [r6, #32]
 800337a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800337e:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8003380:	6a33      	ldr	r3, [r6, #32]
 8003382:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003386:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8003388:	4622      	mov	r2, r4
 800338a:	2105      	movs	r1, #5
 800338c:	201f      	movs	r0, #31
 800338e:	f000 fea3 	bl	80040d8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8003392:	201f      	movs	r0, #31
 8003394:	f000 fed2 	bl	800413c <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8003398:	4622      	mov	r2, r4
 800339a:	2105      	movs	r1, #5
 800339c:	2020      	movs	r0, #32
 800339e:	f000 fe9b 	bl	80040d8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 80033a2:	2020      	movs	r0, #32
 80033a4:	f000 feca 	bl	800413c <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80033a8:	4628      	mov	r0, r5
 80033aa:	f002 f841 	bl	8005430 <HAL_I2C_Init>
  }
}
 80033ae:	b008      	add	sp, #32
 80033b0:	bd70      	pop	{r4, r5, r6, pc}
 80033b2:	bf00      	nop
 80033b4:	200013b4 	.word	0x200013b4
 80033b8:	40005400 	.word	0x40005400
 80033bc:	00061a80 	.word	0x00061a80
 80033c0:	40023800 	.word	0x40023800
 80033c4:	40020400 	.word	0x40020400

080033c8 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 80033c8:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 80033ca:	4803      	ldr	r0, [pc, #12]	; (80033d8 <I2C1_Error.isra.0+0x10>)
 80033cc:	f002 f8d8 	bl	8005580 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 80033d0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 80033d4:	f7ff bf90 	b.w	80032f8 <I2C1_Init>
 80033d8:	200013b4 	.word	0x200013b4

080033dc <BSP_PB_Init>:
{
 80033dc:	b510      	push	{r4, lr}
 80033de:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 80033e0:	4b19      	ldr	r3, [pc, #100]	; (8003448 <BSP_PB_Init+0x6c>)
 80033e2:	2400      	movs	r4, #0
 80033e4:	9400      	str	r4, [sp, #0]
 80033e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033e8:	f042 0201 	orr.w	r2, r2, #1
 80033ec:	631a      	str	r2, [r3, #48]	; 0x30
 80033ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033f0:	f003 0301 	and.w	r3, r3, #1
 80033f4:	9300      	str	r3, [sp, #0]
 80033f6:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 80033f8:	b969      	cbnz	r1, 8003416 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80033fa:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 80033fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003400:	2302      	movs	r3, #2
 8003402:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003404:	4b11      	ldr	r3, [pc, #68]	; (800344c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003406:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003408:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800340c:	a901      	add	r1, sp, #4
 800340e:	f001 fc97 	bl	8004d40 <HAL_GPIO_Init>
}
 8003412:	b006      	add	sp, #24
 8003414:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8003416:	2901      	cmp	r1, #1
 8003418:	d1fb      	bne.n	8003412 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800341a:	2302      	movs	r3, #2
 800341c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800341e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8003422:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003424:	4b09      	ldr	r3, [pc, #36]	; (800344c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003426:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003428:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 800342c:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800342e:	a901      	add	r1, sp, #4
 8003430:	f001 fc86 	bl	8004d40 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8003434:	4622      	mov	r2, r4
 8003436:	210f      	movs	r1, #15
 8003438:	2006      	movs	r0, #6
 800343a:	f000 fe4d 	bl	80040d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800343e:	2006      	movs	r0, #6
 8003440:	f000 fe7c 	bl	800413c <HAL_NVIC_EnableIRQ>
}
 8003444:	e7e5      	b.n	8003412 <BSP_PB_Init+0x36>
 8003446:	bf00      	nop
 8003448:	40023800 	.word	0x40023800
 800344c:	20000048 	.word	0x20000048

08003450 <BSP_PB_GetState>:
{
 8003450:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8003452:	4b03      	ldr	r3, [pc, #12]	; (8003460 <BSP_PB_GetState+0x10>)
 8003454:	2101      	movs	r1, #1
 8003456:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800345a:	f001 fdf9 	bl	8005050 <HAL_GPIO_ReadPin>
}
 800345e:	bd08      	pop	{r3, pc}
 8003460:	20000048 	.word	0x20000048

08003464 <TS_IO_Init>:
 8003464:	f7ff bf48 	b.w	80032f8 <I2C1_Init>

08003468 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8003468:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 800346a:	2301      	movs	r3, #1
 800346c:	f88d 2017 	strb.w	r2, [sp, #23]
 8003470:	2264      	movs	r2, #100	; 0x64
 8003472:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003476:	f10d 0217 	add.w	r2, sp, #23
 800347a:	9200      	str	r2, [sp, #0]
 800347c:	460a      	mov	r2, r1
 800347e:	4601      	mov	r1, r0
 8003480:	4804      	ldr	r0, [pc, #16]	; (8003494 <TS_IO_Write+0x2c>)
 8003482:	f002 f897 	bl	80055b4 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8003486:	b108      	cbz	r0, 800348c <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 8003488:	f7ff ff9e 	bl	80033c8 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 800348c:	b007      	add	sp, #28
 800348e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003492:	bf00      	nop
 8003494:	200013b4 	.word	0x200013b4

08003498 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8003498:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 800349a:	2300      	movs	r3, #0
{
 800349c:	460a      	mov	r2, r1
  uint8_t Value = 0;
 800349e:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80034a2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80034a6:	2301      	movs	r3, #1
 80034a8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80034ac:	f10d 0117 	add.w	r1, sp, #23
 80034b0:	9100      	str	r1, [sp, #0]
 80034b2:	4601      	mov	r1, r0
 80034b4:	4805      	ldr	r0, [pc, #20]	; (80034cc <TS_IO_Read+0x34>)
 80034b6:	f002 f90d 	bl	80056d4 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80034ba:	b108      	cbz	r0, 80034c0 <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 80034bc:	f7ff ff84 	bl	80033c8 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 80034c0:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80034c4:	b007      	add	sp, #28
 80034c6:	f85d fb04 	ldr.w	pc, [sp], #4
 80034ca:	bf00      	nop
 80034cc:	200013b4 	.word	0x200013b4

080034d0 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 80034d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80034d2:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80034d6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80034da:	9200      	str	r2, [sp, #0]
 80034dc:	2301      	movs	r3, #1
 80034de:	460a      	mov	r2, r1
 80034e0:	4601      	mov	r1, r0
 80034e2:	4805      	ldr	r0, [pc, #20]	; (80034f8 <TS_IO_ReadMultiple+0x28>)
 80034e4:	f002 f8f6 	bl	80056d4 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80034e8:	4604      	mov	r4, r0
 80034ea:	b108      	cbz	r0, 80034f0 <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 80034ec:	f7ff ff6c 	bl	80033c8 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 80034f0:	b2a0      	uxth	r0, r4
 80034f2:	b004      	add	sp, #16
 80034f4:	bd10      	pop	{r4, pc}
 80034f6:	bf00      	nop
 80034f8:	200013b4 	.word	0x200013b4

080034fc <OTM8009A_IO_Delay>:
 80034fc:	f000 bc40 	b.w	8003d80 <HAL_Delay>

08003500 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003500:	b500      	push	{lr}
 8003502:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003504:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003508:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800350a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800350e:	2205      	movs	r2, #5
 8003510:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003512:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003514:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003516:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003518:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800351c:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003520:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8003524:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003526:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003528:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800352a:	2210      	movs	r2, #16
 800352c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800352e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003532:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8003534:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003536:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003538:	a906      	add	r1, sp, #24
 800353a:	466a      	mov	r2, sp
 800353c:	4804      	ldr	r0, [pc, #16]	; (8003550 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800353e:	f002 fd54 	bl	8005fea <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8003542:	3800      	subs	r0, #0
 8003544:	bf18      	it	ne
 8003546:	2001      	movne	r0, #1
 8003548:	b015      	add	sp, #84	; 0x54
 800354a:	f85d fb04 	ldr.w	pc, [sp], #4
 800354e:	bf00      	nop
 8003550:	2000a818 	.word	0x2000a818

08003554 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003554:	b500      	push	{lr}
 8003556:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003558:	f44f 7380 	mov.w	r3, #256	; 0x100
 800355c:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800355e:	2306      	movs	r3, #6
 8003560:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003562:	4817      	ldr	r0, [pc, #92]	; (80035c0 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003564:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003566:	f241 3288 	movw	r2, #5000	; 0x1388
 800356a:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800356c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003570:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8003574:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003576:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003578:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800357a:	f002 fcf2 	bl	8005f62 <HAL_QSPI_Command>
 800357e:	b9e0      	cbnz	r0, 80035ba <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003580:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8003582:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003586:	2201      	movs	r2, #1
 8003588:	2310      	movs	r3, #16
 800358a:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800358e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8003592:	2305      	movs	r3, #5
 8003594:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003598:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800359c:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800359e:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035a0:	4807      	ldr	r0, [pc, #28]	; (80035c0 <QSPI_WriteEnable.constprop.0+0x6c>)
 80035a2:	f241 3388 	movw	r3, #5000	; 0x1388
 80035a6:	466a      	mov	r2, sp
 80035a8:	a906      	add	r1, sp, #24
 80035aa:	f002 fd1e 	bl	8005fea <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80035ae:	3800      	subs	r0, #0
 80035b0:	bf18      	it	ne
 80035b2:	2001      	movne	r0, #1
}
 80035b4:	b015      	add	sp, #84	; 0x54
 80035b6:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80035ba:	2001      	movs	r0, #1
 80035bc:	e7fa      	b.n	80035b4 <QSPI_WriteEnable.constprop.0+0x60>
 80035be:	bf00      	nop
 80035c0:	2000a818 	.word	0x2000a818

080035c4 <BSP_QSPI_EnableMemoryMappedMode>:
{
 80035c4:	b500      	push	{lr}
 80035c6:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80035c8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80035cc:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80035ce:	23eb      	movs	r3, #235	; 0xeb
 80035d0:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80035d2:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80035d6:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80035d8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80035dc:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80035de:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 80035e2:	2300      	movs	r3, #0
 80035e4:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80035e8:	220a      	movs	r2, #10
 80035ea:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80035ec:	a902      	add	r1, sp, #8
 80035ee:	466a      	mov	r2, sp
 80035f0:	4806      	ldr	r0, [pc, #24]	; (800360c <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80035f2:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80035f4:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 80035f8:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80035fa:	f002 fd46 	bl	800608a <HAL_QSPI_MemoryMapped>
}
 80035fe:	3800      	subs	r0, #0
 8003600:	bf18      	it	ne
 8003602:	2001      	movne	r0, #1
 8003604:	b011      	add	sp, #68	; 0x44
 8003606:	f85d fb04 	ldr.w	pc, [sp], #4
 800360a:	bf00      	nop
 800360c:	2000a818 	.word	0x2000a818

08003610 <BSP_QSPI_MspInit>:
{
 8003610:	b570      	push	{r4, r5, r6, lr}
 8003612:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8003614:	4b2c      	ldr	r3, [pc, #176]	; (80036c8 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003616:	482d      	ldr	r0, [pc, #180]	; (80036cc <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003618:	2400      	movs	r4, #0
 800361a:	9400      	str	r4, [sp, #0]
 800361c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800361e:	f042 0202 	orr.w	r2, r2, #2
 8003622:	639a      	str	r2, [r3, #56]	; 0x38
 8003624:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003626:	f002 0202 	and.w	r2, r2, #2
 800362a:	9200      	str	r2, [sp, #0]
 800362c:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800362e:	699a      	ldr	r2, [r3, #24]
 8003630:	f042 0202 	orr.w	r2, r2, #2
 8003634:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003636:	699a      	ldr	r2, [r3, #24]
 8003638:	f022 0202 	bic.w	r2, r2, #2
 800363c:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800363e:	9401      	str	r4, [sp, #4]
 8003640:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003642:	f042 0202 	orr.w	r2, r2, #2
 8003646:	631a      	str	r2, [r3, #48]	; 0x30
 8003648:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800364a:	f002 0202 	and.w	r2, r2, #2
 800364e:	9201      	str	r2, [sp, #4]
 8003650:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003652:	9402      	str	r4, [sp, #8]
 8003654:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003656:	f042 0220 	orr.w	r2, r2, #32
 800365a:	631a      	str	r2, [r3, #48]	; 0x30
 800365c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800365e:	f003 0320 	and.w	r3, r3, #32
 8003662:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003664:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003666:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003668:	2302      	movs	r3, #2
 800366a:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 800366e:	2101      	movs	r1, #1
 8003670:	2303      	movs	r3, #3
 8003672:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003676:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003678:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800367a:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800367c:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800367e:	f001 fb5f 	bl	8004d40 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003682:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003686:	a903      	add	r1, sp, #12
 8003688:	4811      	ldr	r0, [pc, #68]	; (80036d0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800368a:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800368c:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800368e:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003690:	f001 fb56 	bl	8004d40 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003694:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003698:	a903      	add	r1, sp, #12
 800369a:	480d      	ldr	r0, [pc, #52]	; (80036d0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800369c:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800369e:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80036a0:	f001 fb4e 	bl	8004d40 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80036a4:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80036a6:	a903      	add	r1, sp, #12
 80036a8:	4809      	ldr	r0, [pc, #36]	; (80036d0 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80036aa:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80036ac:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80036ae:	f001 fb47 	bl	8004d40 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80036b2:	4622      	mov	r2, r4
 80036b4:	210f      	movs	r1, #15
 80036b6:	205b      	movs	r0, #91	; 0x5b
 80036b8:	f000 fd0e 	bl	80040d8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80036bc:	205b      	movs	r0, #91	; 0x5b
 80036be:	f000 fd3d 	bl	800413c <HAL_NVIC_EnableIRQ>
}
 80036c2:	b008      	add	sp, #32
 80036c4:	bd70      	pop	{r4, r5, r6, pc}
 80036c6:	bf00      	nop
 80036c8:	40023800 	.word	0x40023800
 80036cc:	40020400 	.word	0x40020400
 80036d0:	40021400 	.word	0x40021400

080036d4 <BSP_QSPI_Init>:
{
 80036d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 80036d6:	4c48      	ldr	r4, [pc, #288]	; (80037f8 <BSP_QSPI_Init+0x124>)
 80036d8:	4b48      	ldr	r3, [pc, #288]	; (80037fc <BSP_QSPI_Init+0x128>)
 80036da:	6023      	str	r3, [r4, #0]
{
 80036dc:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80036de:	4620      	mov	r0, r4
 80036e0:	f002 fc2c 	bl	8005f3c <HAL_QSPI_DeInit>
 80036e4:	4605      	mov	r5, r0
 80036e6:	b110      	cbz	r0, 80036ee <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 80036e8:	2001      	movs	r0, #1
}
 80036ea:	b011      	add	sp, #68	; 0x44
 80036ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 80036ee:	4601      	mov	r1, r0
 80036f0:	4620      	mov	r0, r4
 80036f2:	f7ff ff8d 	bl	8003610 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 80036f6:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80036f8:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 80036fa:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80036fe:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003700:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003704:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003708:	fab3 f383 	clz	r3, r3
 800370c:	3b01      	subs	r3, #1
 800370e:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003710:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8003712:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003716:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800371a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800371e:	f002 fbb9 	bl	8005e94 <HAL_QSPI_Init>
 8003722:	2800      	cmp	r0, #0
 8003724:	d1e0      	bne.n	80036e8 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003726:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800372a:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800372e:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003732:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003734:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003736:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003738:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800373a:	f241 3288 	movw	r2, #5000	; 0x1388
 800373e:	a902      	add	r1, sp, #8
 8003740:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003742:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003744:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003746:	f002 fc0c 	bl	8005f62 <HAL_QSPI_Command>
 800374a:	b108      	cbz	r0, 8003750 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 800374c:	2004      	movs	r0, #4
 800374e:	e7cc      	b.n	80036ea <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003750:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003752:	f241 3288 	movw	r2, #5000	; 0x1388
 8003756:	a902      	add	r1, sp, #8
 8003758:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 800375a:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800375c:	f002 fc01 	bl	8005f62 <HAL_QSPI_Command>
 8003760:	2800      	cmp	r0, #0
 8003762:	d1f3      	bne.n	800374c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003764:	f241 3088 	movw	r0, #5000	; 0x1388
 8003768:	f7ff feca 	bl	8003500 <QSPI_AutoPollingMemReady.constprop.0>
 800376c:	2800      	cmp	r0, #0
 800376e:	d1ed      	bne.n	800374c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003770:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003774:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003778:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800377c:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 800377e:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003780:	f241 3288 	movw	r2, #5000	; 0x1388
 8003784:	a902      	add	r1, sp, #8
 8003786:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003788:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800378a:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800378c:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800378e:	f002 fbe8 	bl	8005f62 <HAL_QSPI_Command>
 8003792:	2800      	cmp	r0, #0
 8003794:	d1da      	bne.n	800374c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003796:	f241 3288 	movw	r2, #5000	; 0x1388
 800379a:	f10d 0107 	add.w	r1, sp, #7
 800379e:	4620      	mov	r0, r4
 80037a0:	f002 fd52 	bl	8006248 <HAL_QSPI_Receive>
 80037a4:	2800      	cmp	r0, #0
 80037a6:	d1d1      	bne.n	800374c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80037a8:	f7ff fed4 	bl	8003554 <QSPI_WriteEnable.constprop.0>
 80037ac:	2800      	cmp	r0, #0
 80037ae:	d1cd      	bne.n	800374c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80037b0:	2381      	movs	r3, #129	; 0x81
 80037b2:	9302      	str	r3, [sp, #8]
 80037b4:	22f0      	movs	r2, #240	; 0xf0
 80037b6:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80037ba:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80037be:	210a      	movs	r1, #10
 80037c0:	fab2 f282 	clz	r2, r2
 80037c4:	fa01 f202 	lsl.w	r2, r1, r2
 80037c8:	f003 030f 	and.w	r3, r3, #15
 80037cc:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80037ce:	a902      	add	r1, sp, #8
 80037d0:	f241 3288 	movw	r2, #5000	; 0x1388
 80037d4:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80037d6:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80037da:	f002 fbc2 	bl	8005f62 <HAL_QSPI_Command>
 80037de:	2800      	cmp	r0, #0
 80037e0:	d1b4      	bne.n	800374c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80037e2:	f241 3288 	movw	r2, #5000	; 0x1388
 80037e6:	f10d 0107 	add.w	r1, sp, #7
 80037ea:	4620      	mov	r0, r4
 80037ec:	f002 fcd0 	bl	8006190 <HAL_QSPI_Transmit>
 80037f0:	2800      	cmp	r0, #0
 80037f2:	f43f af7a 	beq.w	80036ea <BSP_QSPI_Init+0x16>
 80037f6:	e7a9      	b.n	800374c <BSP_QSPI_Init+0x78>
 80037f8:	2000a818 	.word	0x2000a818
 80037fc:	a0001000 	.word	0xa0001000

08003800 <BSP_QSPI_MspDeInit>:
{
 8003800:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8003802:	205b      	movs	r0, #91	; 0x5b
 8003804:	f000 fca8 	bl	8004158 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8003808:	4814      	ldr	r0, [pc, #80]	; (800385c <BSP_QSPI_MspDeInit+0x5c>)
 800380a:	2140      	movs	r1, #64	; 0x40
 800380c:	f001 fb7e 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8003810:	4813      	ldr	r0, [pc, #76]	; (8003860 <BSP_QSPI_MspDeInit+0x60>)
 8003812:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003816:	f001 fb79 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800381a:	4811      	ldr	r0, [pc, #68]	; (8003860 <BSP_QSPI_MspDeInit+0x60>)
 800381c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003820:	f001 fb74 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8003824:	480e      	ldr	r0, [pc, #56]	; (8003860 <BSP_QSPI_MspDeInit+0x60>)
 8003826:	f44f 7100 	mov.w	r1, #512	; 0x200
 800382a:	f001 fb6f 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800382e:	480c      	ldr	r0, [pc, #48]	; (8003860 <BSP_QSPI_MspDeInit+0x60>)
 8003830:	2180      	movs	r1, #128	; 0x80
 8003832:	f001 fb6b 	bl	8004f0c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8003836:	480a      	ldr	r0, [pc, #40]	; (8003860 <BSP_QSPI_MspDeInit+0x60>)
 8003838:	2140      	movs	r1, #64	; 0x40
 800383a:	f001 fb67 	bl	8004f0c <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800383e:	4b09      	ldr	r3, [pc, #36]	; (8003864 <BSP_QSPI_MspDeInit+0x64>)
 8003840:	699a      	ldr	r2, [r3, #24]
 8003842:	f042 0202 	orr.w	r2, r2, #2
 8003846:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003848:	699a      	ldr	r2, [r3, #24]
 800384a:	f022 0202 	bic.w	r2, r2, #2
 800384e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8003850:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003852:	f022 0202 	bic.w	r2, r2, #2
 8003856:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003858:	bd08      	pop	{r3, pc}
 800385a:	bf00      	nop
 800385c:	40020400 	.word	0x40020400
 8003860:	40021400 	.word	0x40021400
 8003864:	40023800 	.word	0x40023800

08003868 <BSP_QSPI_DeInit>:
{
 8003868:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800386a:	4d08      	ldr	r5, [pc, #32]	; (800388c <BSP_QSPI_DeInit+0x24>)
 800386c:	4b08      	ldr	r3, [pc, #32]	; (8003890 <BSP_QSPI_DeInit+0x28>)
 800386e:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003870:	4628      	mov	r0, r5
 8003872:	f002 fb63 	bl	8005f3c <HAL_QSPI_DeInit>
 8003876:	4604      	mov	r4, r0
 8003878:	b928      	cbnz	r0, 8003886 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800387a:	4601      	mov	r1, r0
 800387c:	4628      	mov	r0, r5
 800387e:	f7ff ffbf 	bl	8003800 <BSP_QSPI_MspDeInit>
}
 8003882:	4620      	mov	r0, r4
 8003884:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 8003886:	2401      	movs	r4, #1
 8003888:	e7fb      	b.n	8003882 <BSP_QSPI_DeInit+0x1a>
 800388a:	bf00      	nop
 800388c:	2000a818 	.word	0x2000a818
 8003890:	a0001000 	.word	0xa0001000

08003894 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8003894:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8003898:	4c21      	ldr	r4, [pc, #132]	; (8003920 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800389a:	4d22      	ldr	r5, [pc, #136]	; (8003924 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800389c:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800389e:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80038a2:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038a4:	4621      	mov	r1, r4
{
 80038a6:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80038ac:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80038ae:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80038b2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80038b6:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038ba:	f003 f965 	bl	8006b88 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80038be:	4630      	mov	r0, r6
 80038c0:	f000 fa5e 	bl	8003d80 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 80038c4:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038c6:	4621      	mov	r1, r4
 80038c8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80038cc:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80038ce:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80038d2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038d6:	f003 f957 	bl	8006b88 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80038da:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80038dc:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038e0:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 80038e2:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80038e8:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 80038ea:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038ee:	f003 f94b 	bl	8006b88 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 80038f2:	f44f 730c 	mov.w	r3, #560	; 0x230
 80038f6:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 80038f8:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80038fa:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80038fe:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8003900:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8003902:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003904:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003908:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800390a:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800390c:	f003 f93c 	bl	8006b88 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003910:	4649      	mov	r1, r9
 8003912:	4628      	mov	r0, r5
}
 8003914:	b003      	add	sp, #12
 8003916:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800391a:	f003 b94c 	b.w	8006bb6 <HAL_SDRAM_ProgramRefreshRate>
 800391e:	bf00      	nop
 8003920:	20001408 	.word	0x20001408
 8003924:	200014f4 	.word	0x200014f4

08003928 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003928:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800392a:	4606      	mov	r6, r0
{
 800392c:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800392e:	2800      	cmp	r0, #0
 8003930:	f000 80bd 	beq.w	8003aae <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8003934:	4b5f      	ldr	r3, [pc, #380]	; (8003ab4 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003936:	4860      	ldr	r0, [pc, #384]	; (8003ab8 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003938:	4c60      	ldr	r4, [pc, #384]	; (8003abc <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800393a:	2500      	movs	r5, #0
 800393c:	9500      	str	r5, [sp, #0]
 800393e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003940:	f042 0201 	orr.w	r2, r2, #1
 8003944:	639a      	str	r2, [r3, #56]	; 0x38
 8003946:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003948:	f002 0201 	and.w	r2, r2, #1
 800394c:	9200      	str	r2, [sp, #0]
 800394e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8003950:	9501      	str	r5, [sp, #4]
 8003952:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003954:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003958:	631a      	str	r2, [r3, #48]	; 0x30
 800395a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800395c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8003960:	9201      	str	r2, [sp, #4]
 8003962:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003964:	9502      	str	r5, [sp, #8]
 8003966:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003968:	f042 0204 	orr.w	r2, r2, #4
 800396c:	631a      	str	r2, [r3, #48]	; 0x30
 800396e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003970:	f002 0204 	and.w	r2, r2, #4
 8003974:	9202      	str	r2, [sp, #8]
 8003976:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003978:	9503      	str	r5, [sp, #12]
 800397a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800397c:	f042 0208 	orr.w	r2, r2, #8
 8003980:	631a      	str	r2, [r3, #48]	; 0x30
 8003982:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003984:	f002 0208 	and.w	r2, r2, #8
 8003988:	9203      	str	r2, [sp, #12]
 800398a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800398c:	9504      	str	r5, [sp, #16]
 800398e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003990:	f042 0210 	orr.w	r2, r2, #16
 8003994:	631a      	str	r2, [r3, #48]	; 0x30
 8003996:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003998:	f002 0210 	and.w	r2, r2, #16
 800399c:	9204      	str	r2, [sp, #16]
 800399e:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80039a0:	9505      	str	r5, [sp, #20]
 80039a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039a4:	f042 0220 	orr.w	r2, r2, #32
 80039a8:	631a      	str	r2, [r3, #48]	; 0x30
 80039aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039ac:	f002 0220 	and.w	r2, r2, #32
 80039b0:	9205      	str	r2, [sp, #20]
 80039b2:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80039b4:	9506      	str	r5, [sp, #24]
 80039b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039b8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80039bc:	631a      	str	r2, [r3, #48]	; 0x30
 80039be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039c0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80039c4:	9206      	str	r2, [sp, #24]
 80039c6:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80039c8:	9507      	str	r5, [sp, #28]
 80039ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039cc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80039d0:	631a      	str	r2, [r3, #48]	; 0x30
 80039d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039d4:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80039d8:	9207      	str	r2, [sp, #28]
 80039da:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80039dc:	9508      	str	r5, [sp, #32]
 80039de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039e0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80039e4:	631a      	str	r2, [r3, #48]	; 0x30
 80039e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80039e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80039ec:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 80039ee:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80039f0:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 80039f2:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 80039f4:	2301      	movs	r3, #1
 80039f6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80039fa:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 80039fc:	220c      	movs	r2, #12
 80039fe:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8003a00:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003a02:	f001 f99d 	bl	8004d40 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003a06:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003a0a:	482d      	ldr	r0, [pc, #180]	; (8003ac0 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003a0c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003a0e:	a909      	add	r1, sp, #36	; 0x24
 8003a10:	f001 f996 	bl	8004d40 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003a14:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003a18:	482a      	ldr	r0, [pc, #168]	; (8003ac4 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003a1a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003a1c:	a909      	add	r1, sp, #36	; 0x24
 8003a1e:	f001 f98f 	bl	8004d40 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003a22:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003a26:	4828      	ldr	r0, [pc, #160]	; (8003ac8 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003a28:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003a2a:	a909      	add	r1, sp, #36	; 0x24
 8003a2c:	f001 f988 	bl	8004d40 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003a30:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003a34:	4825      	ldr	r0, [pc, #148]	; (8003acc <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003a36:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003a38:	a909      	add	r1, sp, #36	; 0x24
 8003a3a:	f001 f981 	bl	8004d40 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003a3e:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003a42:	4823      	ldr	r0, [pc, #140]	; (8003ad0 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003a44:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003a46:	a909      	add	r1, sp, #36	; 0x24
 8003a48:	f001 f97a 	bl	8004d40 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003a4c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003a50:	4820      	ldr	r0, [pc, #128]	; (8003ad4 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003a52:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003a54:	a909      	add	r1, sp, #36	; 0x24
 8003a56:	f001 f973 	bl	8004d40 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8003a5a:	2280      	movs	r2, #128	; 0x80
 8003a5c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003a60:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8003a64:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003a68:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003a6c:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8003a70:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8003a74:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8003a78:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8003a7c:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8003a80:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8003a82:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8003a86:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003a88:	4b13      	ldr	r3, [pc, #76]	; (8003ad8 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003a8a:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8003a8c:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003a8e:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003a90:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003a92:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8003a94:	f000 fc1a 	bl	80042cc <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8003a98:	4620      	mov	r0, r4
 8003a9a:	f000 fb97 	bl	80041cc <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8003a9e:	2038      	movs	r0, #56	; 0x38
 8003aa0:	462a      	mov	r2, r5
 8003aa2:	2105      	movs	r1, #5
 8003aa4:	f000 fb18 	bl	80040d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8003aa8:	2038      	movs	r0, #56	; 0x38
 8003aaa:	f000 fb47 	bl	800413c <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003aae:	b00e      	add	sp, #56	; 0x38
 8003ab0:	bd70      	pop	{r4, r5, r6, pc}
 8003ab2:	bf00      	nop
 8003ab4:	40023800 	.word	0x40023800
 8003ab8:	40020800 	.word	0x40020800
 8003abc:	20001434 	.word	0x20001434
 8003ac0:	40020c00 	.word	0x40020c00
 8003ac4:	40021000 	.word	0x40021000
 8003ac8:	40021400 	.word	0x40021400
 8003acc:	40021800 	.word	0x40021800
 8003ad0:	40021c00 	.word	0x40021c00
 8003ad4:	40022000 	.word	0x40022000
 8003ad8:	40026410 	.word	0x40026410

08003adc <BSP_SDRAM_Init>:
{
 8003adc:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003ade:	4c19      	ldr	r4, [pc, #100]	; (8003b44 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8003ae0:	4d19      	ldr	r5, [pc, #100]	; (8003b48 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003ae2:	4b1a      	ldr	r3, [pc, #104]	; (8003b4c <BSP_SDRAM_Init+0x70>)
 8003ae4:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003ae6:	2107      	movs	r1, #7
 8003ae8:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8003aea:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8003aec:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8003af0:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003af4:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003af8:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8003afa:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003afc:	2340      	movs	r3, #64	; 0x40
 8003afe:	2220      	movs	r2, #32
 8003b00:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8003b04:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8003b06:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8003b0a:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8003b0e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8003b12:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003b16:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003b1a:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003b1c:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8003b20:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003b22:	f7ff ff01 	bl	8003928 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003b26:	4629      	mov	r1, r5
 8003b28:	4620      	mov	r0, r4
 8003b2a:	f002 ffff 	bl	8006b2c <HAL_SDRAM_Init>
 8003b2e:	4c08      	ldr	r4, [pc, #32]	; (8003b50 <BSP_SDRAM_Init+0x74>)
 8003b30:	3800      	subs	r0, #0
 8003b32:	bf18      	it	ne
 8003b34:	2001      	movne	r0, #1
 8003b36:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003b38:	f240 5069 	movw	r0, #1385	; 0x569
 8003b3c:	f7ff feaa 	bl	8003894 <BSP_SDRAM_Initialization_sequence>
}
 8003b40:	7820      	ldrb	r0, [r4, #0]
 8003b42:	bd38      	pop	{r3, r4, r5, pc}
 8003b44:	200014f4 	.word	0x200014f4
 8003b48:	20001418 	.word	0x20001418
 8003b4c:	a0000140 	.word	0xa0000140
 8003b50:	2000004c 	.word	0x2000004c

08003b54 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003b54:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003b56:	b148      	cbz	r0, 8003b6c <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8003b58:	2038      	movs	r0, #56	; 0x38
 8003b5a:	f000 fafd 	bl	8004158 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003b5e:	4804      	ldr	r0, [pc, #16]	; (8003b70 <BSP_SDRAM_MspDeInit+0x1c>)
 8003b60:	4b04      	ldr	r3, [pc, #16]	; (8003b74 <BSP_SDRAM_MspDeInit+0x20>)
 8003b62:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003b64:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8003b68:	f000 bbb0 	b.w	80042cc <HAL_DMA_DeInit>
}
 8003b6c:	bd08      	pop	{r3, pc}
 8003b6e:	bf00      	nop
 8003b70:	20001494 	.word	0x20001494
 8003b74:	40026410 	.word	0x40026410

08003b78 <BSP_SDRAM_DeInit>:
{
 8003b78:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003b7a:	4c07      	ldr	r4, [pc, #28]	; (8003b98 <BSP_SDRAM_DeInit+0x20>)
 8003b7c:	4b07      	ldr	r3, [pc, #28]	; (8003b9c <BSP_SDRAM_DeInit+0x24>)
 8003b7e:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8003b80:	4620      	mov	r0, r4
 8003b82:	f002 fff3 	bl	8006b6c <HAL_SDRAM_DeInit>
 8003b86:	4d06      	ldr	r5, [pc, #24]	; (8003ba0 <BSP_SDRAM_DeInit+0x28>)
 8003b88:	4601      	mov	r1, r0
 8003b8a:	b918      	cbnz	r0, 8003b94 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8003b8c:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8003b8e:	4620      	mov	r0, r4
 8003b90:	f7ff ffe0 	bl	8003b54 <BSP_SDRAM_MspDeInit>
}
 8003b94:	7828      	ldrb	r0, [r5, #0]
 8003b96:	bd38      	pop	{r3, r4, r5, pc}
 8003b98:	200014f4 	.word	0x200014f4
 8003b9c:	a0000140 	.word	0xa0000140
 8003ba0:	2000004d 	.word	0x2000004d

08003ba4 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8003ba4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8003ba8:	4d19      	ldr	r5, [pc, #100]	; (8003c10 <BSP_TS_Init+0x6c>)
 8003baa:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8003c1c <BSP_TS_Init+0x78>
 8003bae:	682b      	ldr	r3, [r5, #0]
{
 8003bb0:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8003bb2:	f898 0000 	ldrb.w	r0, [r8]
{
 8003bb6:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8003bb8:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8003bba:	686b      	ldr	r3, [r5, #4]
 8003bbc:	2054      	movs	r0, #84	; 0x54
 8003bbe:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8003bc0:	b2c0      	uxtb	r0, r0
 8003bc2:	2811      	cmp	r0, #17
 8003bc4:	4646      	mov	r6, r8
 8003bc6:	46a9      	mov	r9, r5
 8003bc8:	d00b      	beq.n	8003be2 <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003bca:	686b      	ldr	r3, [r5, #4]
 8003bcc:	2070      	movs	r0, #112	; 0x70
 8003bce:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003bd0:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003bd2:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003bd4:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003bd6:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003bda:	d005      	beq.n	8003be8 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003bdc:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8003bde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8003be2:	2354      	movs	r3, #84	; 0x54
 8003be4:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 8003be8:	4b0a      	ldr	r3, [pc, #40]	; (8003c14 <BSP_TS_Init+0x70>)
 8003bea:	4d0b      	ldr	r5, [pc, #44]	; (8003c18 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 8003bec:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 8003bee:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8003bf2:	42bc      	cmp	r4, r7
 8003bf4:	bf34      	ite	cc
 8003bf6:	2101      	movcc	r1, #1
 8003bf8:	210c      	movcs	r1, #12
 8003bfa:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003bfc:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8003c00:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8003c02:	682b      	ldr	r3, [r5, #0]
 8003c04:	7830      	ldrb	r0, [r6, #0]
 8003c06:	68db      	ldr	r3, [r3, #12]
 8003c08:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003c0a:	2000      	movs	r0, #0
 8003c0c:	e7e7      	b.n	8003bde <BSP_TS_Init+0x3a>
 8003c0e:	bf00      	nop
 8003c10:	20000020 	.word	0x20000020
 8003c14:	20001540 	.word	0x20001540
 8003c18:	2000153c 	.word	0x2000153c
 8003c1c:	20001528 	.word	0x20001528

08003c20 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8003c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003c24:	4c34      	ldr	r4, [pc, #208]	; (8003cf8 <BSP_TS_GetState+0xd8>)
 8003c26:	4d35      	ldr	r5, [pc, #212]	; (8003cfc <BSP_TS_GetState+0xdc>)
 8003c28:	6823      	ldr	r3, [r4, #0]
{
 8003c2a:	b085      	sub	sp, #20
 8003c2c:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003c2e:	691b      	ldr	r3, [r3, #16]
 8003c30:	7828      	ldrb	r0, [r5, #0]
 8003c32:	4798      	blx	r3
 8003c34:	46a1      	mov	r9, r4
 8003c36:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8003c38:	9501      	str	r5, [sp, #4]
 8003c3a:	b158      	cbz	r0, 8003c54 <BSP_TS_GetState+0x34>
 8003c3c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003d08 <BSP_TS_GetState+0xe8>
 8003c40:	4f2f      	ldr	r7, [pc, #188]	; (8003d00 <BSP_TS_GetState+0xe0>)
 8003c42:	f106 0b02 	add.w	fp, r6, #2
 8003c46:	ad03      	add	r5, sp, #12
 8003c48:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8003c4a:	f04f 0a00 	mov.w	sl, #0
 8003c4e:	7833      	ldrb	r3, [r6, #0]
 8003c50:	4553      	cmp	r3, sl
 8003c52:	d803      	bhi.n	8003c5c <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003c54:	2000      	movs	r0, #0
 8003c56:	b005      	add	sp, #20
 8003c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8003c5c:	f8d9 3000 	ldr.w	r3, [r9]
 8003c60:	9801      	ldr	r0, [sp, #4]
 8003c62:	695b      	ldr	r3, [r3, #20]
 8003c64:	7800      	ldrb	r0, [r0, #0]
 8003c66:	9100      	str	r1, [sp, #0]
 8003c68:	462a      	mov	r2, r5
 8003c6a:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8003c6c:	4b25      	ldr	r3, [pc, #148]	; (8003d04 <BSP_TS_GetState+0xe4>)
 8003c6e:	9900      	ldr	r1, [sp, #0]
 8003c70:	781b      	ldrb	r3, [r3, #0]
 8003c72:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8003c76:	bf1f      	itttt	ne
 8003c78:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8003c7a:	8828      	ldrhne	r0, [r5, #0]
 8003c7c:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8003c7e:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8003c80:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8003c82:	bf41      	itttt	mi
 8003c84:	880a      	ldrhmi	r2, [r1, #0]
 8003c86:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8003c8a:	3203      	addmi	r2, #3
 8003c8c:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8003c8e:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003c90:	bf48      	it	mi
 8003c92:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003c94:	f8d8 2000 	ldr.w	r2, [r8]
 8003c98:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003c9c:	bf42      	ittt	mi
 8003c9e:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8003ca2:	3301      	addmi	r3, #1
 8003ca4:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003ca6:	b293      	uxth	r3, r2
 8003ca8:	4290      	cmp	r0, r2
 8003caa:	bf8c      	ite	hi
 8003cac:	1ac3      	subhi	r3, r0, r3
 8003cae:	1a1b      	subls	r3, r3, r0
 8003cb0:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003cb2:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003cb6:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003cb8:	683b      	ldr	r3, [r7, #0]
 8003cba:	b29c      	uxth	r4, r3
 8003cbc:	429a      	cmp	r2, r3
 8003cbe:	bf88      	it	hi
 8003cc0:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8003cc2:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003cc4:	bf98      	it	ls
 8003cc6:	1aa4      	subls	r4, r4, r2
 8003cc8:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8003cca:	441c      	add	r4, r3
 8003ccc:	46c4      	mov	ip, r8
 8003cce:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8003cd0:	bfc8      	it	gt
 8003cd2:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8003cd6:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8003cda:	bfc8      	it	gt
 8003cdc:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8003cde:	46be      	mov	lr, r7
 8003ce0:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 8003ce4:	f8de 3000 	ldr.w	r3, [lr]
 8003ce8:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003cec:	f108 0804 	add.w	r8, r8, #4
 8003cf0:	3704      	adds	r7, #4
 8003cf2:	f10a 0a01 	add.w	sl, sl, #1
 8003cf6:	e7aa      	b.n	8003c4e <BSP_TS_GetState+0x2e>
 8003cf8:	2000153c 	.word	0x2000153c
 8003cfc:	20001528 	.word	0x20001528
 8003d00:	20001534 	.word	0x20001534
 8003d04:	20001540 	.word	0x20001540
 8003d08:	2000152c 	.word	0x2000152c

08003d0c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003d0c:	4b05      	ldr	r3, [pc, #20]	; (8003d24 <SystemInit+0x18>)
 8003d0e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003d12:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003d16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003d1a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003d1e:	609a      	str	r2, [r3, #8]
#endif
}
 8003d20:	4770      	bx	lr
 8003d22:	bf00      	nop
 8003d24:	e000ed00 	.word	0xe000ed00

08003d28 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003d28:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003d2a:	4b0b      	ldr	r3, [pc, #44]	; (8003d58 <HAL_Init+0x30>)
 8003d2c:	681a      	ldr	r2, [r3, #0]
 8003d2e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003d32:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003d34:	681a      	ldr	r2, [r3, #0]
 8003d36:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003d3a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003d3c:	681a      	ldr	r2, [r3, #0]
 8003d3e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003d42:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003d44:	2003      	movs	r0, #3
 8003d46:	f000 f9b5 	bl	80040b4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003d4a:	2000      	movs	r0, #0
 8003d4c:	f7fe f8de 	bl	8001f0c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003d50:	f7fd fe2c 	bl	80019ac <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003d54:	2000      	movs	r0, #0
 8003d56:	bd08      	pop	{r3, pc}
 8003d58:	40023c00 	.word	0x40023c00

08003d5c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003d5c:	4a03      	ldr	r2, [pc, #12]	; (8003d6c <HAL_IncTick+0x10>)
 8003d5e:	4b04      	ldr	r3, [pc, #16]	; (8003d70 <HAL_IncTick+0x14>)
 8003d60:	6811      	ldr	r1, [r2, #0]
 8003d62:	781b      	ldrb	r3, [r3, #0]
 8003d64:	440b      	add	r3, r1
 8003d66:	6013      	str	r3, [r2, #0]
}
 8003d68:	4770      	bx	lr
 8003d6a:	bf00      	nop
 8003d6c:	2000a864 	.word	0x2000a864
 8003d70:	20000054 	.word	0x20000054

08003d74 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003d74:	4b01      	ldr	r3, [pc, #4]	; (8003d7c <HAL_GetTick+0x8>)
 8003d76:	6818      	ldr	r0, [r3, #0]
}
 8003d78:	4770      	bx	lr
 8003d7a:	bf00      	nop
 8003d7c:	2000a864 	.word	0x2000a864

08003d80 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003d80:	b538      	push	{r3, r4, r5, lr}
 8003d82:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003d84:	f7ff fff6 	bl	8003d74 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003d88:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003d8a:	bf1c      	itt	ne
 8003d8c:	4b05      	ldrne	r3, [pc, #20]	; (8003da4 <HAL_Delay+0x24>)
 8003d8e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003d90:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003d92:	bf18      	it	ne
 8003d94:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003d96:	f7ff ffed 	bl	8003d74 <HAL_GetTick>
 8003d9a:	1b43      	subs	r3, r0, r5
 8003d9c:	42a3      	cmp	r3, r4
 8003d9e:	d3fa      	bcc.n	8003d96 <HAL_Delay+0x16>
  {
  }
}
 8003da0:	bd38      	pop	{r3, r4, r5, pc}
 8003da2:	bf00      	nop
 8003da4:	20000054 	.word	0x20000054

08003da8 <HAL_CAN_Init>:
  * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
  *         the configuration information for the specified CAN.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
{
 8003da8:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart;

  /* Check CAN handle */
  if (hcan == NULL)
 8003daa:	4604      	mov	r4, r0
 8003dac:	2800      	cmp	r0, #0
 8003dae:	d06e      	beq.n	8003e8e <HAL_CAN_Init+0xe6>
    /* Init the low level hardware: CLOCK, NVIC */
    hcan->MspInitCallback(hcan);
  }

#else
  if (hcan->State == HAL_CAN_STATE_RESET)
 8003db0:	f890 3020 	ldrb.w	r3, [r0, #32]
 8003db4:	b90b      	cbnz	r3, 8003dba <HAL_CAN_Init+0x12>
  {
    /* Init the low level hardware: CLOCK, NVIC */
    HAL_CAN_MspInit(hcan);
 8003db6:	f7fd fe19 	bl	80019ec <HAL_CAN_MspInit>
  }
#endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */

  /* Request initialisation */
  SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 8003dba:	6822      	ldr	r2, [r4, #0]
 8003dbc:	6813      	ldr	r3, [r2, #0]
 8003dbe:	f043 0301 	orr.w	r3, r3, #1
 8003dc2:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8003dc4:	f7ff ffd6 	bl	8003d74 <HAL_GetTick>
 8003dc8:	4605      	mov	r5, r0

  /* Wait initialisation acknowledge */
  while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 8003dca:	6823      	ldr	r3, [r4, #0]
 8003dcc:	685a      	ldr	r2, [r3, #4]
 8003dce:	07d1      	lsls	r1, r2, #31
 8003dd0:	d551      	bpl.n	8003e76 <HAL_CAN_Init+0xce>
      return HAL_ERROR;
    }
  }

  /* Exit from sleep mode */
  CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 8003dd2:	681a      	ldr	r2, [r3, #0]
 8003dd4:	f022 0202 	bic.w	r2, r2, #2
 8003dd8:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8003dda:	f7ff ffcb 	bl	8003d74 <HAL_GetTick>
 8003dde:	4605      	mov	r5, r0

  /* Check Sleep mode leave acknowledge */
  while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 8003de0:	6823      	ldr	r3, [r4, #0]
 8003de2:	685a      	ldr	r2, [r3, #4]
 8003de4:	0792      	lsls	r2, r2, #30
 8003de6:	d454      	bmi.n	8003e92 <HAL_CAN_Init+0xea>
      return HAL_ERROR;
    }
  }

  /* Set the time triggered communication mode */
  if (hcan->Init.TimeTriggeredMode == ENABLE)
 8003de8:	7e22      	ldrb	r2, [r4, #24]
 8003dea:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 8003dec:	681a      	ldr	r2, [r3, #0]
 8003dee:	bf0c      	ite	eq
 8003df0:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 8003df4:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 8003df8:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic bus-off management */
  if (hcan->Init.AutoBusOff == ENABLE)
 8003dfa:	7e62      	ldrb	r2, [r4, #25]
 8003dfc:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 8003dfe:	681a      	ldr	r2, [r3, #0]
 8003e00:	bf0c      	ite	eq
 8003e02:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 8003e06:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 8003e0a:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic wake-up mode */
  if (hcan->Init.AutoWakeUp == ENABLE)
 8003e0c:	7ea2      	ldrb	r2, [r4, #26]
 8003e0e:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 8003e10:	681a      	ldr	r2, [r3, #0]
 8003e12:	bf0c      	ite	eq
 8003e14:	f042 0220 	orreq.w	r2, r2, #32
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 8003e18:	f022 0220 	bicne.w	r2, r2, #32
 8003e1c:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic retransmission */
  if (hcan->Init.AutoRetransmission == ENABLE)
 8003e1e:	7ee2      	ldrb	r2, [r4, #27]
 8003e20:	2a01      	cmp	r2, #1
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 8003e22:	681a      	ldr	r2, [r3, #0]
 8003e24:	bf0c      	ite	eq
 8003e26:	f022 0210 	biceq.w	r2, r2, #16
  }
  else
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 8003e2a:	f042 0210 	orrne.w	r2, r2, #16
 8003e2e:	601a      	str	r2, [r3, #0]
  }

  /* Set the receive FIFO locked mode */
  if (hcan->Init.ReceiveFifoLocked == ENABLE)
 8003e30:	7f22      	ldrb	r2, [r4, #28]
 8003e32:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 8003e34:	681a      	ldr	r2, [r3, #0]
 8003e36:	bf0c      	ite	eq
 8003e38:	f042 0208 	orreq.w	r2, r2, #8
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 8003e3c:	f022 0208 	bicne.w	r2, r2, #8
 8003e40:	601a      	str	r2, [r3, #0]
  }

  /* Set the transmit FIFO priority */
  if (hcan->Init.TransmitFifoPriority == ENABLE)
 8003e42:	7f62      	ldrb	r2, [r4, #29]
 8003e44:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 8003e46:	681a      	ldr	r2, [r3, #0]
 8003e48:	bf0c      	ite	eq
 8003e4a:	f042 0204 	orreq.w	r2, r2, #4
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 8003e4e:	f022 0204 	bicne.w	r2, r2, #4
 8003e52:	601a      	str	r2, [r3, #0]
  }

  /* Set the bit timing register */
  WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 8003e54:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 8003e58:	430a      	orrs	r2, r1
 8003e5a:	6921      	ldr	r1, [r4, #16]
 8003e5c:	430a      	orrs	r2, r1
 8003e5e:	6961      	ldr	r1, [r4, #20]
 8003e60:	430a      	orrs	r2, r1
 8003e62:	6861      	ldr	r1, [r4, #4]
 8003e64:	3901      	subs	r1, #1
 8003e66:	430a      	orrs	r2, r1
 8003e68:	61da      	str	r2, [r3, #28]
                                            hcan->Init.TimeSeg1       |
                                            hcan->Init.TimeSeg2       |
                                            (hcan->Init.Prescaler - 1U)));

  /* Initialize the error code */
  hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 8003e6a:	2000      	movs	r0, #0

  /* Initialize the CAN state */
  hcan->State = HAL_CAN_STATE_READY;
 8003e6c:	2301      	movs	r3, #1
  hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 8003e6e:	6260      	str	r0, [r4, #36]	; 0x24
  hcan->State = HAL_CAN_STATE_READY;
 8003e70:	f884 3020 	strb.w	r3, [r4, #32]

  /* Return function status */
  return HAL_OK;
}
 8003e74:	bd38      	pop	{r3, r4, r5, pc}
    if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 8003e76:	f7ff ff7d 	bl	8003d74 <HAL_GetTick>
 8003e7a:	1b40      	subs	r0, r0, r5
 8003e7c:	280a      	cmp	r0, #10
 8003e7e:	d9a4      	bls.n	8003dca <HAL_CAN_Init+0x22>
      hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 8003e80:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003e82:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003e86:	6263      	str	r3, [r4, #36]	; 0x24
      hcan->State = HAL_CAN_STATE_ERROR;
 8003e88:	2305      	movs	r3, #5
 8003e8a:	f884 3020 	strb.w	r3, [r4, #32]
    return HAL_ERROR;
 8003e8e:	2001      	movs	r0, #1
 8003e90:	e7f0      	b.n	8003e74 <HAL_CAN_Init+0xcc>
    if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 8003e92:	f7ff ff6f 	bl	8003d74 <HAL_GetTick>
 8003e96:	1b40      	subs	r0, r0, r5
 8003e98:	280a      	cmp	r0, #10
 8003e9a:	d9a1      	bls.n	8003de0 <HAL_CAN_Init+0x38>
 8003e9c:	e7f0      	b.n	8003e80 <HAL_CAN_Init+0xd8>

08003e9e <HAL_CAN_TxMailbox0CompleteCallback>:
 8003e9e:	4770      	bx	lr

08003ea0 <HAL_CAN_TxMailbox1CompleteCallback>:
 8003ea0:	4770      	bx	lr

08003ea2 <HAL_CAN_TxMailbox2CompleteCallback>:
 8003ea2:	4770      	bx	lr

08003ea4 <HAL_CAN_TxMailbox0AbortCallback>:
 8003ea4:	4770      	bx	lr

08003ea6 <HAL_CAN_TxMailbox1AbortCallback>:
 8003ea6:	4770      	bx	lr

08003ea8 <HAL_CAN_TxMailbox2AbortCallback>:
 8003ea8:	4770      	bx	lr

08003eaa <HAL_CAN_RxFifo0MsgPendingCallback>:
 8003eaa:	4770      	bx	lr

08003eac <HAL_CAN_RxFifo0FullCallback>:
 8003eac:	4770      	bx	lr

08003eae <HAL_CAN_RxFifo1MsgPendingCallback>:
 8003eae:	4770      	bx	lr

08003eb0 <HAL_CAN_RxFifo1FullCallback>:
 8003eb0:	4770      	bx	lr

08003eb2 <HAL_CAN_SleepCallback>:
 8003eb2:	4770      	bx	lr

08003eb4 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8003eb4:	4770      	bx	lr

08003eb6 <HAL_CAN_ErrorCallback>:
 8003eb6:	4770      	bx	lr

08003eb8 <HAL_CAN_IRQHandler>:
  * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
  *         the configuration information for the specified CAN.
  * @retval None
  */
void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
{
 8003eb8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t errorcode = HAL_CAN_ERROR_NONE;
  uint32_t interrupts = READ_REG(hcan->Instance->IER);
 8003ebc:	6803      	ldr	r3, [r0, #0]
 8003ebe:	695e      	ldr	r6, [r3, #20]
  uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 8003ec0:	f8d3 9004 	ldr.w	r9, [r3, #4]
  uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 8003ec4:	689f      	ldr	r7, [r3, #8]
  uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 8003ec6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
  uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 8003eca:	f8d3 a010 	ldr.w	sl, [r3, #16]
  uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 8003ece:	f8d3 8018 	ldr.w	r8, [r3, #24]

  /* Transmit Mailbox empty interrupt management *****************************/
  if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
 8003ed2:	f016 0401 	ands.w	r4, r6, #1
{
 8003ed6:	4605      	mov	r5, r0
  if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
 8003ed8:	d022      	beq.n	8003f20 <HAL_CAN_IRQHandler+0x68>
  {
    /* Transmit Mailbox 0 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP0) != 0U)
 8003eda:	f017 0401 	ands.w	r4, r7, #1
 8003ede:	d007      	beq.n	8003ef0 <HAL_CAN_IRQHandler+0x38>
    {
      /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
 8003ee0:	2201      	movs	r2, #1

      if ((tsrflags & CAN_TSR_TXOK0) != 0U)
 8003ee2:	07b9      	lsls	r1, r7, #30
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
 8003ee4:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK0) != 0U)
 8003ee6:	f140 80a5 	bpl.w	8004034 <HAL_CAN_IRQHandler+0x17c>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox0CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox0CompleteCallback(hcan);
 8003eea:	f7ff ffd8 	bl	8003e9e <HAL_CAN_TxMailbox0CompleteCallback>
  uint32_t errorcode = HAL_CAN_ERROR_NONE;
 8003eee:	2400      	movs	r4, #0
        }
      }
    }

    /* Transmit Mailbox 1 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP1) != 0U)
 8003ef0:	05fb      	lsls	r3, r7, #23
 8003ef2:	d509      	bpl.n	8003f08 <HAL_CAN_IRQHandler+0x50>
    {
      /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
 8003ef4:	682b      	ldr	r3, [r5, #0]
 8003ef6:	f44f 7280 	mov.w	r2, #256	; 0x100

      if ((tsrflags & CAN_TSR_TXOK1) != 0U)
 8003efa:	05b8      	lsls	r0, r7, #22
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
 8003efc:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK1) != 0U)
 8003efe:	f140 80a7 	bpl.w	8004050 <HAL_CAN_IRQHandler+0x198>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox1CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox1CompleteCallback(hcan);
 8003f02:	4628      	mov	r0, r5
 8003f04:	f7ff ffcc 	bl	8003ea0 <HAL_CAN_TxMailbox1CompleteCallback>
        }
      }
    }

    /* Transmit Mailbox 2 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP2) != 0U)
 8003f08:	03fb      	lsls	r3, r7, #15
 8003f0a:	d509      	bpl.n	8003f20 <HAL_CAN_IRQHandler+0x68>
    {
      /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
 8003f0c:	682b      	ldr	r3, [r5, #0]
 8003f0e:	f44f 3280 	mov.w	r2, #65536	; 0x10000

      if ((tsrflags & CAN_TSR_TXOK2) != 0U)
 8003f12:	03b8      	lsls	r0, r7, #14
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
 8003f14:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK2) != 0U)
 8003f16:	f140 80a9 	bpl.w	800406c <HAL_CAN_IRQHandler+0x1b4>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox2CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox2CompleteCallback(hcan);
 8003f1a:	4628      	mov	r0, r5
 8003f1c:	f7ff ffc1 	bl	8003ea2 <HAL_CAN_TxMailbox2CompleteCallback>
      }
    }
  }

  /* Receive FIFO 0 overrun interrupt management *****************************/
  if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
 8003f20:	0733      	lsls	r3, r6, #28
 8003f22:	d507      	bpl.n	8003f34 <HAL_CAN_IRQHandler+0x7c>
  {
    if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
 8003f24:	f01b 0f10 	tst.w	fp, #16
    {
      /* Set CAN error code to Rx Fifo 0 overrun error */
      errorcode |= HAL_CAN_ERROR_RX_FOV0;

      /* Clear FIFO0 Overrun Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
 8003f28:	bf1f      	itttt	ne
 8003f2a:	682b      	ldrne	r3, [r5, #0]
 8003f2c:	2210      	movne	r2, #16
      errorcode |= HAL_CAN_ERROR_RX_FOV0;
 8003f2e:	f444 7400 	orrne.w	r4, r4, #512	; 0x200
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
 8003f32:	60da      	strne	r2, [r3, #12]
    }
  }

  /* Receive FIFO 0 full interrupt management ********************************/
  if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
 8003f34:	0777      	lsls	r7, r6, #29
 8003f36:	d508      	bpl.n	8003f4a <HAL_CAN_IRQHandler+0x92>
  {
    if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
 8003f38:	f01b 0f08 	tst.w	fp, #8
 8003f3c:	d005      	beq.n	8003f4a <HAL_CAN_IRQHandler+0x92>
    {
      /* Clear FIFO 0 full Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
 8003f3e:	682b      	ldr	r3, [r5, #0]
 8003f40:	2208      	movs	r2, #8
 8003f42:	60da      	str	r2, [r3, #12]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo0FullCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo0FullCallback(hcan);
 8003f44:	4628      	mov	r0, r5
 8003f46:	f7ff ffb1 	bl	8003eac <HAL_CAN_RxFifo0FullCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 0 message pending interrupt management *********************/
  if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
 8003f4a:	07b0      	lsls	r0, r6, #30
 8003f4c:	d506      	bpl.n	8003f5c <HAL_CAN_IRQHandler+0xa4>
  {
    /* Check if message is still pending */
    if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
 8003f4e:	682b      	ldr	r3, [r5, #0]
 8003f50:	68db      	ldr	r3, [r3, #12]
 8003f52:	0799      	lsls	r1, r3, #30
 8003f54:	d002      	beq.n	8003f5c <HAL_CAN_IRQHandler+0xa4>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo0MsgPendingCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo0MsgPendingCallback(hcan);
 8003f56:	4628      	mov	r0, r5
 8003f58:	f7ff ffa7 	bl	8003eaa <HAL_CAN_RxFifo0MsgPendingCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 1 overrun interrupt management *****************************/
  if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
 8003f5c:	0672      	lsls	r2, r6, #25
 8003f5e:	d507      	bpl.n	8003f70 <HAL_CAN_IRQHandler+0xb8>
  {
    if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
 8003f60:	f01a 0f10 	tst.w	sl, #16
    {
      /* Set CAN error code to Rx Fifo 1 overrun error */
      errorcode |= HAL_CAN_ERROR_RX_FOV1;

      /* Clear FIFO1 Overrun Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
 8003f64:	bf1f      	itttt	ne
 8003f66:	682b      	ldrne	r3, [r5, #0]
 8003f68:	2210      	movne	r2, #16
      errorcode |= HAL_CAN_ERROR_RX_FOV1;
 8003f6a:	f444 6480 	orrne.w	r4, r4, #1024	; 0x400
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
 8003f6e:	611a      	strne	r2, [r3, #16]
    }
  }

  /* Receive FIFO 1 full interrupt management ********************************/
  if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
 8003f70:	06b3      	lsls	r3, r6, #26
 8003f72:	d508      	bpl.n	8003f86 <HAL_CAN_IRQHandler+0xce>
  {
    if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
 8003f74:	f01a 0f08 	tst.w	sl, #8
 8003f78:	d005      	beq.n	8003f86 <HAL_CAN_IRQHandler+0xce>
    {
      /* Clear FIFO 1 full Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
 8003f7a:	682b      	ldr	r3, [r5, #0]
 8003f7c:	2208      	movs	r2, #8
 8003f7e:	611a      	str	r2, [r3, #16]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo1FullCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo1FullCallback(hcan);
 8003f80:	4628      	mov	r0, r5
 8003f82:	f7ff ff95 	bl	8003eb0 <HAL_CAN_RxFifo1FullCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 1 message pending interrupt management *********************/
  if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
 8003f86:	06f7      	lsls	r7, r6, #27
 8003f88:	d506      	bpl.n	8003f98 <HAL_CAN_IRQHandler+0xe0>
  {
    /* Check if message is still pending */
    if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
 8003f8a:	682b      	ldr	r3, [r5, #0]
 8003f8c:	691b      	ldr	r3, [r3, #16]
 8003f8e:	0798      	lsls	r0, r3, #30
 8003f90:	d002      	beq.n	8003f98 <HAL_CAN_IRQHandler+0xe0>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo1MsgPendingCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo1MsgPendingCallback(hcan);
 8003f92:	4628      	mov	r0, r5
 8003f94:	f7ff ff8b 	bl	8003eae <HAL_CAN_RxFifo1MsgPendingCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Sleep interrupt management *********************************************/
  if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
 8003f98:	03b1      	lsls	r1, r6, #14
 8003f9a:	d508      	bpl.n	8003fae <HAL_CAN_IRQHandler+0xf6>
  {
    if ((msrflags & CAN_MSR_SLAKI) != 0U)
 8003f9c:	f019 0f10 	tst.w	r9, #16
 8003fa0:	d005      	beq.n	8003fae <HAL_CAN_IRQHandler+0xf6>
    {
      /* Clear Sleep interrupt Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
 8003fa2:	682b      	ldr	r3, [r5, #0]
 8003fa4:	2210      	movs	r2, #16
 8003fa6:	605a      	str	r2, [r3, #4]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->SleepCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_SleepCallback(hcan);
 8003fa8:	4628      	mov	r0, r5
 8003faa:	f7ff ff82 	bl	8003eb2 <HAL_CAN_SleepCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* WakeUp interrupt management *********************************************/
  if ((interrupts & CAN_IT_WAKEUP) != 0U)
 8003fae:	03f2      	lsls	r2, r6, #15
 8003fb0:	d508      	bpl.n	8003fc4 <HAL_CAN_IRQHandler+0x10c>
  {
    if ((msrflags & CAN_MSR_WKUI) != 0U)
 8003fb2:	f019 0f08 	tst.w	r9, #8
 8003fb6:	d005      	beq.n	8003fc4 <HAL_CAN_IRQHandler+0x10c>
    {
      /* Clear WakeUp Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
 8003fb8:	682b      	ldr	r3, [r5, #0]
 8003fba:	2208      	movs	r2, #8
 8003fbc:	605a      	str	r2, [r3, #4]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->WakeUpFromRxMsgCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_WakeUpFromRxMsgCallback(hcan);
 8003fbe:	4628      	mov	r0, r5
 8003fc0:	f7ff ff78 	bl	8003eb4 <HAL_CAN_WakeUpFromRxMsgCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Error interrupts management *********************************************/
  if ((interrupts & CAN_IT_ERROR) != 0U)
 8003fc4:	0433      	lsls	r3, r6, #16
 8003fc6:	d52c      	bpl.n	8004022 <HAL_CAN_IRQHandler+0x16a>
  {
    if ((msrflags & CAN_MSR_ERRI) != 0U)
 8003fc8:	f019 0f04 	tst.w	r9, #4
 8003fcc:	682a      	ldr	r2, [r5, #0]
 8003fce:	d026      	beq.n	800401e <HAL_CAN_IRQHandler+0x166>
    {
      /* Check Error Warning Flag */
      if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
 8003fd0:	05f7      	lsls	r7, r6, #23
 8003fd2:	d504      	bpl.n	8003fde <HAL_CAN_IRQHandler+0x126>
 8003fd4:	f018 0f01 	tst.w	r8, #1
          ((esrflags & CAN_ESR_EWGF) != 0U))
      {
        /* Set CAN error code to Error Warning */
        errorcode |= HAL_CAN_ERROR_EWG;
 8003fd8:	bf18      	it	ne
 8003fda:	f044 0401 	orrne.w	r4, r4, #1

        /* No need for clear of Error Warning Flag as read-only */
      }

      /* Check Error Passive Flag */
      if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
 8003fde:	05b0      	lsls	r0, r6, #22
 8003fe0:	d504      	bpl.n	8003fec <HAL_CAN_IRQHandler+0x134>
 8003fe2:	f018 0f02 	tst.w	r8, #2
          ((esrflags & CAN_ESR_EPVF) != 0U))
      {
        /* Set CAN error code to Error Passive */
        errorcode |= HAL_CAN_ERROR_EPV;
 8003fe6:	bf18      	it	ne
 8003fe8:	f044 0402 	orrne.w	r4, r4, #2

        /* No need for clear of Error Passive Flag as read-only */
      }

      /* Check Bus-off Flag */
      if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
 8003fec:	0571      	lsls	r1, r6, #21
 8003fee:	d504      	bpl.n	8003ffa <HAL_CAN_IRQHandler+0x142>
 8003ff0:	f018 0f04 	tst.w	r8, #4
          ((esrflags & CAN_ESR_BOFF) != 0U))
      {
        /* Set CAN error code to Bus-Off */
        errorcode |= HAL_CAN_ERROR_BOF;
 8003ff4:	bf18      	it	ne
 8003ff6:	f044 0404 	orrne.w	r4, r4, #4

        /* No need for clear of Error Bus-Off as read-only */
      }

      /* Check Last Error Code Flag */
      if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
 8003ffa:	0533      	lsls	r3, r6, #20
 8003ffc:	d50f      	bpl.n	800401e <HAL_CAN_IRQHandler+0x166>
 8003ffe:	f018 0370 	ands.w	r3, r8, #112	; 0x70
 8004002:	d00c      	beq.n	800401e <HAL_CAN_IRQHandler+0x166>
          ((esrflags & CAN_ESR_LEC) != 0U))
      {
        switch (esrflags & CAN_ESR_LEC)
 8004004:	2b40      	cmp	r3, #64	; 0x40
 8004006:	d04f      	beq.n	80040a8 <HAL_CAN_IRQHandler+0x1f0>
 8004008:	d83e      	bhi.n	8004088 <HAL_CAN_IRQHandler+0x1d0>
 800400a:	2b20      	cmp	r3, #32
 800400c:	d046      	beq.n	800409c <HAL_CAN_IRQHandler+0x1e4>
 800400e:	2b30      	cmp	r3, #48	; 0x30
 8004010:	d047      	beq.n	80040a2 <HAL_CAN_IRQHandler+0x1ea>
 8004012:	2b10      	cmp	r3, #16
 8004014:	d03f      	beq.n	8004096 <HAL_CAN_IRQHandler+0x1de>
          default:
            break;
        }

        /* Clear Last error code Flag */
        CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
 8004016:	6993      	ldr	r3, [r2, #24]
 8004018:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800401c:	6193      	str	r3, [r2, #24]
      }
    }

    /* Clear ERRI Flag */
    __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
 800401e:	2304      	movs	r3, #4
 8004020:	6053      	str	r3, [r2, #4]
  }

  /* Call the Error call Back in case of Errors */
  if (errorcode != HAL_CAN_ERROR_NONE)
 8004022:	b12c      	cbz	r4, 8004030 <HAL_CAN_IRQHandler+0x178>
  {
    /* Update error code in handle */
    hcan->ErrorCode |= errorcode;
 8004024:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004026:	431c      	orrs	r4, r3
 8004028:	626c      	str	r4, [r5, #36]	; 0x24
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
    /* Call registered callback*/
    hcan->ErrorCallback(hcan);
#else
    /* Call weak (surcharged) callback */
    HAL_CAN_ErrorCallback(hcan);
 800402a:	4628      	mov	r0, r5
 800402c:	f7ff ff43 	bl	8003eb6 <HAL_CAN_ErrorCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
  }
}
 8004030:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        if ((tsrflags & CAN_TSR_ALST0) != 0U)
 8004034:	077a      	lsls	r2, r7, #29
 8004036:	d405      	bmi.n	8004044 <HAL_CAN_IRQHandler+0x18c>
        else if ((tsrflags & CAN_TSR_TERR0) != 0U)
 8004038:	f017 0408 	ands.w	r4, r7, #8
 800403c:	d105      	bne.n	800404a <HAL_CAN_IRQHandler+0x192>
          HAL_CAN_TxMailbox0AbortCallback(hcan);
 800403e:	f7ff ff31 	bl	8003ea4 <HAL_CAN_TxMailbox0AbortCallback>
 8004042:	e755      	b.n	8003ef0 <HAL_CAN_IRQHandler+0x38>
          errorcode |= HAL_CAN_ERROR_TX_ALST0;
 8004044:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8004048:	e752      	b.n	8003ef0 <HAL_CAN_IRQHandler+0x38>
          errorcode |= HAL_CAN_ERROR_TX_TERR0;
 800404a:	f44f 5480 	mov.w	r4, #4096	; 0x1000
 800404e:	e74f      	b.n	8003ef0 <HAL_CAN_IRQHandler+0x38>
        if ((tsrflags & CAN_TSR_ALST1) != 0U)
 8004050:	0579      	lsls	r1, r7, #21
 8004052:	d502      	bpl.n	800405a <HAL_CAN_IRQHandler+0x1a2>
          errorcode |= HAL_CAN_ERROR_TX_ALST1;
 8004054:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
 8004058:	e756      	b.n	8003f08 <HAL_CAN_IRQHandler+0x50>
        else if ((tsrflags & CAN_TSR_TERR1) != 0U)
 800405a:	053a      	lsls	r2, r7, #20
 800405c:	d502      	bpl.n	8004064 <HAL_CAN_IRQHandler+0x1ac>
          errorcode |= HAL_CAN_ERROR_TX_TERR1;
 800405e:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8004062:	e751      	b.n	8003f08 <HAL_CAN_IRQHandler+0x50>
          HAL_CAN_TxMailbox1AbortCallback(hcan);
 8004064:	4628      	mov	r0, r5
 8004066:	f7ff ff1e 	bl	8003ea6 <HAL_CAN_TxMailbox1AbortCallback>
 800406a:	e74d      	b.n	8003f08 <HAL_CAN_IRQHandler+0x50>
        if ((tsrflags & CAN_TSR_ALST2) != 0U)
 800406c:	0379      	lsls	r1, r7, #13
 800406e:	d502      	bpl.n	8004076 <HAL_CAN_IRQHandler+0x1be>
          errorcode |= HAL_CAN_ERROR_TX_ALST2;
 8004070:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8004074:	e754      	b.n	8003f20 <HAL_CAN_IRQHandler+0x68>
        else if ((tsrflags & CAN_TSR_TERR2) != 0U)
 8004076:	033a      	lsls	r2, r7, #12
 8004078:	d502      	bpl.n	8004080 <HAL_CAN_IRQHandler+0x1c8>
          errorcode |= HAL_CAN_ERROR_TX_TERR2;
 800407a:	f444 3480 	orr.w	r4, r4, #65536	; 0x10000
 800407e:	e74f      	b.n	8003f20 <HAL_CAN_IRQHandler+0x68>
          HAL_CAN_TxMailbox2AbortCallback(hcan);
 8004080:	4628      	mov	r0, r5
 8004082:	f7ff ff11 	bl	8003ea8 <HAL_CAN_TxMailbox2AbortCallback>
 8004086:	e74b      	b.n	8003f20 <HAL_CAN_IRQHandler+0x68>
        switch (esrflags & CAN_ESR_LEC)
 8004088:	2b50      	cmp	r3, #80	; 0x50
 800408a:	d010      	beq.n	80040ae <HAL_CAN_IRQHandler+0x1f6>
 800408c:	2b60      	cmp	r3, #96	; 0x60
 800408e:	d1c2      	bne.n	8004016 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_CRC;
 8004090:	f444 7480 	orr.w	r4, r4, #256	; 0x100
            break;
 8004094:	e7bf      	b.n	8004016 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_STF;
 8004096:	f044 0408 	orr.w	r4, r4, #8
            break;
 800409a:	e7bc      	b.n	8004016 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_FOR;
 800409c:	f044 0410 	orr.w	r4, r4, #16
            break;
 80040a0:	e7b9      	b.n	8004016 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_ACK;
 80040a2:	f044 0420 	orr.w	r4, r4, #32
            break;
 80040a6:	e7b6      	b.n	8004016 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_BR;
 80040a8:	f044 0440 	orr.w	r4, r4, #64	; 0x40
            break;
 80040ac:	e7b3      	b.n	8004016 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_BD;
 80040ae:	f044 0480 	orr.w	r4, r4, #128	; 0x80
            break;
 80040b2:	e7b0      	b.n	8004016 <HAL_CAN_IRQHandler+0x15e>

080040b4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80040b4:	4907      	ldr	r1, [pc, #28]	; (80040d4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80040b6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040b8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80040bc:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040be:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80040c0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80040c4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80040c6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80040c8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80040cc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80040d0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80040d2:	4770      	bx	lr
 80040d4:	e000ed00 	.word	0xe000ed00

080040d8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80040d8:	4b16      	ldr	r3, [pc, #88]	; (8004134 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80040da:	b530      	push	{r4, r5, lr}
 80040dc:	68dc      	ldr	r4, [r3, #12]
 80040de:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80040e2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80040e6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80040e8:	2d04      	cmp	r5, #4
 80040ea:	bf28      	it	cs
 80040ec:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80040ee:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80040f0:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80040f4:	bf8c      	ite	hi
 80040f6:	3c03      	subhi	r4, #3
 80040f8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80040fa:	fa03 f505 	lsl.w	r5, r3, r5
 80040fe:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004102:	40a3      	lsls	r3, r4
 8004104:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004108:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800410a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800410c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004110:	bfac      	ite	ge
 8004112:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004116:	4a08      	ldrlt	r2, [pc, #32]	; (8004138 <HAL_NVIC_SetPriority+0x60>)
 8004118:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800411c:	bfb8      	it	lt
 800411e:	f000 000f 	andlt.w	r0, r0, #15
 8004122:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004124:	bfaa      	itet	ge
 8004126:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800412a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800412c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004130:	bd30      	pop	{r4, r5, pc}
 8004132:	bf00      	nop
 8004134:	e000ed00 	.word	0xe000ed00
 8004138:	e000ed14 	.word	0xe000ed14

0800413c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800413c:	2800      	cmp	r0, #0
 800413e:	db08      	blt.n	8004152 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004140:	0942      	lsrs	r2, r0, #5
 8004142:	2301      	movs	r3, #1
 8004144:	f000 001f 	and.w	r0, r0, #31
 8004148:	fa03 f000 	lsl.w	r0, r3, r0
 800414c:	4b01      	ldr	r3, [pc, #4]	; (8004154 <HAL_NVIC_EnableIRQ+0x18>)
 800414e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004152:	4770      	bx	lr
 8004154:	e000e100 	.word	0xe000e100

08004158 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004158:	2800      	cmp	r0, #0
 800415a:	db0d      	blt.n	8004178 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800415c:	0943      	lsrs	r3, r0, #5
 800415e:	2201      	movs	r2, #1
 8004160:	f000 001f 	and.w	r0, r0, #31
 8004164:	fa02 f000 	lsl.w	r0, r2, r0
 8004168:	3320      	adds	r3, #32
 800416a:	4a04      	ldr	r2, [pc, #16]	; (800417c <HAL_NVIC_DisableIRQ+0x24>)
 800416c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004170:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004174:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8004178:	4770      	bx	lr
 800417a:	bf00      	nop
 800417c:	e000e100 	.word	0xe000e100

08004180 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004180:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004182:	4604      	mov	r4, r0
 8004184:	b150      	cbz	r0, 800419c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004186:	7943      	ldrb	r3, [r0, #5]
 8004188:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800418c:	b913      	cbnz	r3, 8004194 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800418e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004190:	f7fd fc7e 	bl	8001a90 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004194:	2301      	movs	r3, #1
 8004196:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004198:	2000      	movs	r0, #0
}
 800419a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800419c:	2001      	movs	r0, #1
 800419e:	e7fc      	b.n	800419a <HAL_CRC_Init+0x1a>

080041a0 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80041a0:	6803      	ldr	r3, [r0, #0]
{
 80041a2:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80041a4:	4c08      	ldr	r4, [pc, #32]	; (80041c8 <DMA_CalcBaseAndBitshift+0x28>)
{
 80041a6:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80041a8:	b2d9      	uxtb	r1, r3
 80041aa:	3910      	subs	r1, #16
 80041ac:	2018      	movs	r0, #24
 80041ae:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80041b2:	5c20      	ldrb	r0, [r4, r0]
 80041b4:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 80041b6:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 80041ba:	f020 0003 	bic.w	r0, r0, #3
 80041be:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80041c0:	bf88      	it	hi
 80041c2:	3004      	addhi	r0, #4
 80041c4:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 80041c6:	bd10      	pop	{r4, pc}
 80041c8:	0801dac9 	.word	0x0801dac9

080041cc <HAL_DMA_Init>:
{
 80041cc:	b570      	push	{r4, r5, r6, lr}
 80041ce:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80041d0:	f7ff fdd0 	bl	8003d74 <HAL_GetTick>
 80041d4:	4605      	mov	r5, r0
  if(hdma == NULL)
 80041d6:	2c00      	cmp	r4, #0
 80041d8:	d073      	beq.n	80042c2 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 80041da:	2302      	movs	r3, #2
 80041dc:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 80041e0:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 80041e2:	2300      	movs	r3, #0
 80041e4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 80041e8:	6813      	ldr	r3, [r2, #0]
 80041ea:	f023 0301 	bic.w	r3, r3, #1
 80041ee:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80041f0:	6821      	ldr	r1, [r4, #0]
 80041f2:	680b      	ldr	r3, [r1, #0]
 80041f4:	07d8      	lsls	r0, r3, #31
 80041f6:	d42f      	bmi.n	8004258 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 80041f8:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80041fa:	4d33      	ldr	r5, [pc, #204]	; (80042c8 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80041fc:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80041fe:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004200:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8004204:	4313      	orrs	r3, r2
 8004206:	68e2      	ldr	r2, [r4, #12]
 8004208:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800420a:	6922      	ldr	r2, [r4, #16]
 800420c:	4313      	orrs	r3, r2
 800420e:	6962      	ldr	r2, [r4, #20]
 8004210:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004212:	69e2      	ldr	r2, [r4, #28]
 8004214:	4303      	orrs	r3, r0
 8004216:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8004218:	6a22      	ldr	r2, [r4, #32]
 800421a:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800421c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800421e:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004220:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8004224:	bf02      	ittt	eq
 8004226:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800422a:	4335      	orreq	r5, r6
 800422c:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800422e:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8004230:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004232:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004234:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8004238:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800423c:	d133      	bne.n	80042a6 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800423e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004240:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8004242:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004244:	b37d      	cbz	r5, 80042a6 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8004246:	b990      	cbnz	r0, 800426e <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8004248:	2a01      	cmp	r2, #1
 800424a:	d021      	beq.n	8004290 <HAL_DMA_Init+0xc4>
 800424c:	f032 0202 	bics.w	r2, r2, #2
 8004250:	d129      	bne.n	80042a6 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004252:	01ea      	lsls	r2, r5, #7
 8004254:	d527      	bpl.n	80042a6 <HAL_DMA_Init+0xda>
 8004256:	e01e      	b.n	8004296 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004258:	f7ff fd8c 	bl	8003d74 <HAL_GetTick>
 800425c:	1b40      	subs	r0, r0, r5
 800425e:	2805      	cmp	r0, #5
 8004260:	d9c6      	bls.n	80041f0 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004262:	2320      	movs	r3, #32
 8004264:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004266:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8004268:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800426c:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800426e:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8004272:	d114      	bne.n	800429e <HAL_DMA_Init+0xd2>
    switch (tmp)
 8004274:	2a03      	cmp	r2, #3
 8004276:	d816      	bhi.n	80042a6 <HAL_DMA_Init+0xda>
 8004278:	a001      	add	r0, pc, #4	; (adr r0, 8004280 <HAL_DMA_Init+0xb4>)
 800427a:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800427e:	bf00      	nop
 8004280:	08004297 	.word	0x08004297
 8004284:	08004253 	.word	0x08004253
 8004288:	08004297 	.word	0x08004297
 800428c:	08004291 	.word	0x08004291
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004290:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8004294:	d107      	bne.n	80042a6 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8004296:	2340      	movs	r3, #64	; 0x40
 8004298:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800429a:	2001      	movs	r0, #1
 800429c:	e7e4      	b.n	8004268 <HAL_DMA_Init+0x9c>
    switch (tmp)
 800429e:	2a02      	cmp	r2, #2
 80042a0:	d9f9      	bls.n	8004296 <HAL_DMA_Init+0xca>
 80042a2:	2a03      	cmp	r2, #3
 80042a4:	d0d5      	beq.n	8004252 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 80042a6:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80042a8:	4620      	mov	r0, r4
 80042aa:	f7ff ff79 	bl	80041a0 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80042ae:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80042b0:	233f      	movs	r3, #63	; 0x3f
 80042b2:	4093      	lsls	r3, r2
 80042b4:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80042b6:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80042b8:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80042ba:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80042bc:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 80042c0:	e7d4      	b.n	800426c <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 80042c2:	2001      	movs	r0, #1
 80042c4:	e7d2      	b.n	800426c <HAL_DMA_Init+0xa0>
 80042c6:	bf00      	nop
 80042c8:	f010803f 	.word	0xf010803f

080042cc <HAL_DMA_DeInit>:
{
 80042cc:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 80042ce:	4605      	mov	r5, r0
 80042d0:	b320      	cbz	r0, 800431c <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 80042d2:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80042d6:	2b02      	cmp	r3, #2
 80042d8:	b2dc      	uxtb	r4, r3
 80042da:	d01d      	beq.n	8004318 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 80042dc:	6803      	ldr	r3, [r0, #0]
 80042de:	681a      	ldr	r2, [r3, #0]
 80042e0:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 80042e4:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 80042e6:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 80042e8:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 80042ea:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 80042ec:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 80042ee:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 80042f0:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 80042f2:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 80042f4:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80042f6:	f7ff ff53 	bl	80041a0 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80042fa:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 80042fc:	233f      	movs	r3, #63	; 0x3f
 80042fe:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8004300:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8004304:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8004308:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800430c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800430e:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8004310:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8004314:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8004318:	4620      	mov	r0, r4
 800431a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800431c:	2401      	movs	r4, #1
 800431e:	e7fb      	b.n	8004318 <HAL_DMA_DeInit+0x4c>

08004320 <HAL_DMA_Abort>:
{
 8004320:	b570      	push	{r4, r5, r6, lr}
 8004322:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004324:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8004326:	f7ff fd25 	bl	8003d74 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800432a:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800432e:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8004330:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004332:	d006      	beq.n	8004342 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004334:	2380      	movs	r3, #128	; 0x80
 8004336:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8004338:	2300      	movs	r3, #0
 800433a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 800433e:	2001      	movs	r0, #1
}
 8004340:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004342:	6823      	ldr	r3, [r4, #0]
 8004344:	681a      	ldr	r2, [r3, #0]
 8004346:	f022 0216 	bic.w	r2, r2, #22
 800434a:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800434c:	695a      	ldr	r2, [r3, #20]
 800434e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004352:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004354:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004356:	b90a      	cbnz	r2, 800435c <HAL_DMA_Abort+0x3c>
 8004358:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800435a:	b11a      	cbz	r2, 8004364 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800435c:	681a      	ldr	r2, [r3, #0]
 800435e:	f022 0208 	bic.w	r2, r2, #8
 8004362:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8004364:	681a      	ldr	r2, [r3, #0]
 8004366:	f022 0201 	bic.w	r2, r2, #1
 800436a:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800436c:	6823      	ldr	r3, [r4, #0]
 800436e:	681b      	ldr	r3, [r3, #0]
 8004370:	f013 0301 	ands.w	r3, r3, #1
 8004374:	d10a      	bne.n	800438c <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004376:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8004378:	223f      	movs	r2, #63	; 0x3f
 800437a:	408a      	lsls	r2, r1
 800437c:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800437e:	2201      	movs	r2, #1
 8004380:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8004384:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8004388:	4618      	mov	r0, r3
 800438a:	e7d9      	b.n	8004340 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800438c:	f7ff fcf2 	bl	8003d74 <HAL_GetTick>
 8004390:	1b40      	subs	r0, r0, r5
 8004392:	2805      	cmp	r0, #5
 8004394:	d9ea      	bls.n	800436c <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004396:	2320      	movs	r3, #32
 8004398:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800439a:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800439c:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800439e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 80043a2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 80043a6:	e7cb      	b.n	8004340 <HAL_DMA_Abort+0x20>

080043a8 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80043a8:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80043aa:	4604      	mov	r4, r0
 80043ac:	b330      	cbz	r0, 80043fc <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80043ae:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80043b2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80043b6:	b91b      	cbnz	r3, 80043c0 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80043b8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80043bc:	f7fd fb80 	bl	8001ac0 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80043c0:	6822      	ldr	r2, [r4, #0]
 80043c2:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80043c4:	2302      	movs	r3, #2
 80043c6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80043ca:	6813      	ldr	r3, [r2, #0]
 80043cc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80043d0:	430b      	orrs	r3, r1
 80043d2:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80043d4:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80043d6:	68a1      	ldr	r1, [r4, #8]
 80043d8:	f023 0307 	bic.w	r3, r3, #7
 80043dc:	430b      	orrs	r3, r1
 80043de:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80043e0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80043e2:	68e1      	ldr	r1, [r4, #12]
 80043e4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80043e8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80043ec:	430b      	orrs	r3, r1
 80043ee:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80043f0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80043f2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80043f4:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80043f6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80043fa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80043fc:	2001      	movs	r0, #1
 80043fe:	e7fc      	b.n	80043fa <HAL_DMA2D_Init+0x52>

08004400 <HAL_DMA2D_LineEventCallback>:
 8004400:	4770      	bx	lr

08004402 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004402:	4770      	bx	lr

08004404 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004404:	6803      	ldr	r3, [r0, #0]
{
 8004406:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004408:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800440a:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800440c:	07f2      	lsls	r2, r6, #31
{
 800440e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004410:	d514      	bpl.n	800443c <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004412:	05e9      	lsls	r1, r5, #23
 8004414:	d512      	bpl.n	800443c <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004416:	681a      	ldr	r2, [r3, #0]
 8004418:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800441c:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800441e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004420:	f042 0201 	orr.w	r2, r2, #1
 8004424:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004426:	2201      	movs	r2, #1
 8004428:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800442a:	2304      	movs	r3, #4
 800442c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004430:	2300      	movs	r3, #0
 8004432:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004436:	6943      	ldr	r3, [r0, #20]
 8004438:	b103      	cbz	r3, 800443c <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800443a:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800443c:	06b2      	lsls	r2, r6, #26
 800443e:	d516      	bpl.n	800446e <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004440:	04ab      	lsls	r3, r5, #18
 8004442:	d514      	bpl.n	800446e <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004444:	6823      	ldr	r3, [r4, #0]
 8004446:	681a      	ldr	r2, [r3, #0]
 8004448:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800444c:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800444e:	2220      	movs	r2, #32
 8004450:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004452:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004454:	f043 0302 	orr.w	r3, r3, #2
 8004458:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800445a:	2304      	movs	r3, #4
 800445c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004460:	2300      	movs	r3, #0
 8004462:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004466:	6963      	ldr	r3, [r4, #20]
 8004468:	b10b      	cbz	r3, 800446e <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800446a:	4620      	mov	r0, r4
 800446c:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800446e:	0730      	lsls	r0, r6, #28
 8004470:	d516      	bpl.n	80044a0 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004472:	0529      	lsls	r1, r5, #20
 8004474:	d514      	bpl.n	80044a0 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004476:	6823      	ldr	r3, [r4, #0]
 8004478:	681a      	ldr	r2, [r3, #0]
 800447a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800447e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004480:	2208      	movs	r2, #8
 8004482:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004484:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004486:	f043 0304 	orr.w	r3, r3, #4
 800448a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800448c:	2304      	movs	r3, #4
 800448e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004492:	2300      	movs	r3, #0
 8004494:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004498:	6963      	ldr	r3, [r4, #20]
 800449a:	b10b      	cbz	r3, 80044a0 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800449c:	4620      	mov	r0, r4
 800449e:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80044a0:	0772      	lsls	r2, r6, #29
 80044a2:	d50b      	bpl.n	80044bc <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 80044a4:	056b      	lsls	r3, r5, #21
 80044a6:	d509      	bpl.n	80044bc <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80044a8:	6823      	ldr	r3, [r4, #0]
 80044aa:	681a      	ldr	r2, [r3, #0]
 80044ac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80044b0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80044b2:	2204      	movs	r2, #4
 80044b4:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 80044b6:	4620      	mov	r0, r4
 80044b8:	f7ff ffa2 	bl	8004400 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80044bc:	07b0      	lsls	r0, r6, #30
 80044be:	d514      	bpl.n	80044ea <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80044c0:	05a9      	lsls	r1, r5, #22
 80044c2:	d512      	bpl.n	80044ea <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80044c4:	6823      	ldr	r3, [r4, #0]
 80044c6:	681a      	ldr	r2, [r3, #0]
 80044c8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80044cc:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80044ce:	2202      	movs	r2, #2
 80044d0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80044d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80044d4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80044d6:	2301      	movs	r3, #1
 80044d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80044dc:	2300      	movs	r3, #0
 80044de:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 80044e2:	6923      	ldr	r3, [r4, #16]
 80044e4:	b10b      	cbz	r3, 80044ea <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80044e6:	4620      	mov	r0, r4
 80044e8:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80044ea:	06f2      	lsls	r2, r6, #27
 80044ec:	d513      	bpl.n	8004516 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80044ee:	04eb      	lsls	r3, r5, #19
 80044f0:	d511      	bpl.n	8004516 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80044f2:	6823      	ldr	r3, [r4, #0]
 80044f4:	681a      	ldr	r2, [r3, #0]
 80044f6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80044fa:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80044fc:	2210      	movs	r2, #16
 80044fe:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004500:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004502:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004504:	2301      	movs	r3, #1
 8004506:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800450a:	2300      	movs	r3, #0
 800450c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004510:	4620      	mov	r0, r4
 8004512:	f7ff ff76 	bl	8004402 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004516:	bd70      	pop	{r4, r5, r6, pc}

08004518 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004518:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800451a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800451e:	2b01      	cmp	r3, #1
 8004520:	f04f 0302 	mov.w	r3, #2
 8004524:	d02b      	beq.n	800457e <HAL_DMA2D_ConfigLayer+0x66>
 8004526:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004528:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800452c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004530:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8004534:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8004538:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800453a:	4f18      	ldr	r7, [pc, #96]	; (800459c <HAL_DMA2D_ConfigLayer+0x84>)
 800453c:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004540:	3c09      	subs	r4, #9
 8004542:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004544:	bf9c      	itt	ls
 8004546:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800454a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800454c:	ea4f 1601 	mov.w	r6, r1, lsl #4
 8004550:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004552:	bf88      	it	hi
 8004554:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004558:	b999      	cbnz	r1, 8004582 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800455a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800455c:	4039      	ands	r1, r7
 800455e:	430a      	orrs	r2, r1
 8004560:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004562:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004564:	6982      	ldr	r2, [r0, #24]
 8004566:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004568:	d803      	bhi.n	8004572 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800456a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800456c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004570:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004572:	2301      	movs	r3, #1
 8004574:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004578:	2300      	movs	r3, #0
 800457a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800457e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8004580:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004582:	69d9      	ldr	r1, [r3, #28]
 8004584:	4039      	ands	r1, r7
 8004586:	430a      	orrs	r2, r1
 8004588:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800458a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800458c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800458e:	6992      	ldr	r2, [r2, #24]
 8004590:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004592:	bf9c      	itt	ls
 8004594:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004598:	621d      	strls	r5, [r3, #32]
 800459a:	e7ea      	b.n	8004572 <HAL_DMA2D_ConfigLayer+0x5a>
 800459c:	00fcfff0 	.word	0x00fcfff0

080045a0 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 80045a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045a4:	4607      	mov	r7, r0
 80045a6:	460d      	mov	r5, r1
 80045a8:	4614      	mov	r4, r2
 80045aa:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 80045ac:	f7ff fbe2 	bl	8003d74 <HAL_GetTick>
 80045b0:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80045b2:	683a      	ldr	r2, [r7, #0]
 80045b4:	6f53      	ldr	r3, [r2, #116]	; 0x74
 80045b6:	07db      	lsls	r3, r3, #31
 80045b8:	d50a      	bpl.n	80045d0 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 80045ba:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 80045be:	9c06      	ldr	r4, [sp, #24]
 80045c0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80045c4:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 80045c8:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 80045ca:	2000      	movs	r0, #0
}
 80045cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 80045d0:	f7ff fbd0 	bl	8003d74 <HAL_GetTick>
 80045d4:	eba0 0008 	sub.w	r0, r0, r8
 80045d8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80045dc:	d9e9      	bls.n	80045b2 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 80045de:	2003      	movs	r0, #3
 80045e0:	e7f4      	b.n	80045cc <DSI_ShortWrite+0x2c>

080045e2 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80045e2:	7c03      	ldrb	r3, [r0, #16]
 80045e4:	2b01      	cmp	r3, #1
 80045e6:	d05d      	beq.n	80046a4 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 80045e8:	6803      	ldr	r3, [r0, #0]
 80045ea:	2200      	movs	r2, #0
 80045ec:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80045f0:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 80045f4:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80045f6:	bf48      	it	mi
 80045f8:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 80045fc:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80045fe:	bf42      	ittt	mi
 8004600:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8004604:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8004608:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800460c:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800460e:	bf42      	ittt	mi
 8004610:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8004614:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8004618:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800461c:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800461e:	bf42      	ittt	mi
 8004620:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004624:	f042 0201 	orrmi.w	r2, r2, #1
 8004628:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800462c:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800462e:	bf42      	ittt	mi
 8004630:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004634:	f042 0202 	orrmi.w	r2, r2, #2
 8004638:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800463c:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800463e:	bf42      	ittt	mi
 8004640:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004644:	f042 020c 	orrmi.w	r2, r2, #12
 8004648:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800464c:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800464e:	bf42      	ittt	mi
 8004650:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004654:	f042 0210 	orrmi.w	r2, r2, #16
 8004658:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800465c:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800465e:	bf42      	ittt	mi
 8004660:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004664:	f042 0220 	orrmi.w	r2, r2, #32
 8004668:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800466c:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800466e:	bf42      	ittt	mi
 8004670:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004674:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8004678:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800467c:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800467e:	bf42      	ittt	mi
 8004680:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004684:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004688:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800468c:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800468e:	bf42      	ittt	mi
 8004690:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004694:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8004698:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800469c:	2300      	movs	r3, #0
 800469e:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80046a0:	4618      	mov	r0, r3
 80046a2:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80046a4:	2002      	movs	r0, #2
}
 80046a6:	4770      	bx	lr

080046a8 <HAL_DSI_Init>:
{
 80046a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80046aa:	460d      	mov	r5, r1
  if (hdsi == NULL)
 80046ac:	4604      	mov	r4, r0
 80046ae:	2800      	cmp	r0, #0
 80046b0:	f000 80a7 	beq.w	8004802 <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 80046b4:	7c43      	ldrb	r3, [r0, #17]
 80046b6:	b90b      	cbnz	r3, 80046bc <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 80046b8:	f7fd fa24 	bl	8001b04 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 80046bc:	2303      	movs	r3, #3
 80046be:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 80046c0:	2300      	movs	r3, #0
 80046c2:	9300      	str	r3, [sp, #0]
 80046c4:	6823      	ldr	r3, [r4, #0]
 80046c6:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 80046ca:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80046ce:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 80046d2:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 80046d6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80046da:	9300      	str	r3, [sp, #0]
 80046dc:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 80046de:	f7ff fb49 	bl	8003d74 <HAL_GetTick>
 80046e2:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 80046e4:	6822      	ldr	r2, [r4, #0]
 80046e6:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80046ea:	04d9      	lsls	r1, r3, #19
 80046ec:	d578      	bpl.n	80047e0 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 80046ee:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80046f2:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 80046f6:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 80046fa:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 80046fe:	e9d5 0300 	ldrd	r0, r3, [r5]
 8004702:	02db      	lsls	r3, r3, #11
 8004704:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8004708:	68a8      	ldr	r0, [r5, #8]
 800470a:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 800470e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004712:	430b      	orrs	r3, r1
 8004714:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004718:	2300      	movs	r3, #0
 800471a:	9301      	str	r3, [sp, #4]
 800471c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004720:	f043 0301 	orr.w	r3, r3, #1
 8004724:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8004728:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800472c:	f003 0301 	and.w	r3, r3, #1
 8004730:	9301      	str	r3, [sp, #4]
 8004732:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8004734:	f7ff fb1e 	bl	8003d74 <HAL_GetTick>
 8004738:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800473a:	6823      	ldr	r3, [r4, #0]
 800473c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004740:	05d2      	lsls	r2, r2, #23
 8004742:	d557      	bpl.n	80047f4 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004744:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004748:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800474a:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800474c:	f042 0206 	orr.w	r2, r2, #6
 8004750:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004754:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004758:	f022 0203 	bic.w	r2, r2, #3
 800475c:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004760:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004764:	430a      	orrs	r2, r1
 8004766:	f042 0201 	orr.w	r2, r2, #1
 800476a:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800476e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004772:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004774:	f022 0203 	bic.w	r2, r2, #3
 8004778:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800477c:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004780:	430a      	orrs	r2, r1
 8004782:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004786:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004788:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800478a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800478e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004790:	689a      	ldr	r2, [r3, #8]
 8004792:	430a      	orrs	r2, r1
 8004794:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8004796:	686a      	ldr	r2, [r5, #4]
 8004798:	2a01      	cmp	r2, #1
 800479a:	bf38      	it	cc
 800479c:	2201      	movcc	r2, #1
 800479e:	4611      	mov	r1, r2
 80047a0:	4a19      	ldr	r2, [pc, #100]	; (8004808 <HAL_DSI_Init+0x160>)
 80047a2:	434a      	muls	r2, r1
 80047a4:	68a9      	ldr	r1, [r5, #8]
 80047a6:	f001 0103 	and.w	r1, r1, #3
 80047aa:	408a      	lsls	r2, r1
 80047ac:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 80047b0:	4341      	muls	r1, r0
 80047b2:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 80047b6:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 80047ba:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80047be:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80047c2:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80047c6:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80047c8:	430a      	orrs	r2, r1
 80047ca:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80047ce:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80047d2:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 80047d6:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 80047d8:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 80047da:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 80047dc:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 80047de:	e007      	b.n	80047f0 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80047e0:	f7ff fac8 	bl	8003d74 <HAL_GetTick>
 80047e4:	1b80      	subs	r0, r0, r6
 80047e6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80047ea:	f67f af7b 	bls.w	80046e4 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 80047ee:	2003      	movs	r0, #3
}
 80047f0:	b002      	add	sp, #8
 80047f2:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80047f4:	f7ff fabe 	bl	8003d74 <HAL_GetTick>
 80047f8:	1b80      	subs	r0, r0, r6
 80047fa:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80047fe:	d99c      	bls.n	800473a <HAL_DSI_Init+0x92>
 8004800:	e7f5      	b.n	80047ee <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 8004802:	2001      	movs	r0, #1
 8004804:	e7f4      	b.n	80047f0 <HAL_DSI_Init+0x148>
 8004806:	bf00      	nop
 8004808:	003d0900 	.word	0x003d0900

0800480c <HAL_DSI_ErrorCallback>:
 800480c:	4770      	bx	lr

0800480e <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800480e:	6803      	ldr	r3, [r0, #0]
 8004810:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004814:	07d1      	lsls	r1, r2, #31
{
 8004816:	b510      	push	{r4, lr}
 8004818:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800481a:	d508      	bpl.n	800482e <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800481c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004820:	07d2      	lsls	r2, r2, #31
 8004822:	d504      	bpl.n	800482e <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8004824:	2201      	movs	r2, #1
 8004826:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800482a:	f7fc f949 	bl	8000ac0 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800482e:	6823      	ldr	r3, [r4, #0]
 8004830:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004834:	0791      	lsls	r1, r2, #30
 8004836:	d509      	bpl.n	800484c <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8004838:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800483c:	0792      	lsls	r2, r2, #30
 800483e:	d505      	bpl.n	800484c <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8004840:	2202      	movs	r2, #2
 8004842:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8004846:	4620      	mov	r0, r4
 8004848:	f7fc f96e 	bl	8000b28 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800484c:	69a3      	ldr	r3, [r4, #24]
 800484e:	2b00      	cmp	r3, #0
 8004850:	d04e      	beq.n	80048f0 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8004852:	6821      	ldr	r1, [r4, #0]
 8004854:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004858:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800485c:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004860:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004862:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004866:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004868:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800486a:	b119      	cbz	r1, 8004874 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800486c:	6961      	ldr	r1, [r4, #20]
 800486e:	f041 0101 	orr.w	r1, r1, #1
 8004872:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004874:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8004878:	bf1e      	ittt	ne
 800487a:	6962      	ldrne	r2, [r4, #20]
 800487c:	f042 0202 	orrne.w	r2, r2, #2
 8004880:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8004882:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004884:	bf42      	ittt	mi
 8004886:	6962      	ldrmi	r2, [r4, #20]
 8004888:	f042 0204 	orrmi.w	r2, r2, #4
 800488c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800488e:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8004890:	bf42      	ittt	mi
 8004892:	6962      	ldrmi	r2, [r4, #20]
 8004894:	f042 0208 	orrmi.w	r2, r2, #8
 8004898:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800489a:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800489e:	bf1e      	ittt	ne
 80048a0:	6962      	ldrne	r2, [r4, #20]
 80048a2:	f042 0210 	orrne.w	r2, r2, #16
 80048a6:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 80048a8:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 80048aa:	bf42      	ittt	mi
 80048ac:	6962      	ldrmi	r2, [r4, #20]
 80048ae:	f042 0220 	orrmi.w	r2, r2, #32
 80048b2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 80048b4:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 80048b6:	bf42      	ittt	mi
 80048b8:	6962      	ldrmi	r2, [r4, #20]
 80048ba:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80048be:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 80048c0:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 80048c2:	bf42      	ittt	mi
 80048c4:	6962      	ldrmi	r2, [r4, #20]
 80048c6:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 80048ca:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 80048cc:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 80048ce:	bf42      	ittt	mi
 80048d0:	6962      	ldrmi	r2, [r4, #20]
 80048d2:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 80048d6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 80048d8:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 80048dc:	bf1e      	ittt	ne
 80048de:	6963      	ldrne	r3, [r4, #20]
 80048e0:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 80048e4:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 80048e6:	6963      	ldr	r3, [r4, #20]
 80048e8:	b113      	cbz	r3, 80048f0 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 80048ea:	4620      	mov	r0, r4
 80048ec:	f7ff ff8e 	bl	800480c <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 80048f0:	bd10      	pop	{r4, pc}

080048f2 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80048f2:	7c03      	ldrb	r3, [r0, #16]
 80048f4:	2b01      	cmp	r3, #1
 80048f6:	d00b      	beq.n	8004910 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 80048f8:	6803      	ldr	r3, [r0, #0]
 80048fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80048fc:	f022 0203 	bic.w	r2, r2, #3
 8004900:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8004902:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004904:	4311      	orrs	r1, r2
 8004906:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004908:	2300      	movs	r3, #0
 800490a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800490c:	4618      	mov	r0, r3
 800490e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004910:	2002      	movs	r0, #2
}
 8004912:	4770      	bx	lr

08004914 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8004914:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004916:	7c03      	ldrb	r3, [r0, #16]
 8004918:	2b01      	cmp	r3, #1
 800491a:	d06a      	beq.n	80049f2 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800491c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800491e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004920:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004922:	f042 0201 	orr.w	r2, r2, #1
 8004926:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8004928:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800492c:	f022 0201 	bic.w	r2, r2, #1
 8004930:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8004934:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004938:	f042 0201 	orr.w	r2, r2, #1
 800493c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8004940:	68da      	ldr	r2, [r3, #12]
 8004942:	f022 0203 	bic.w	r2, r2, #3
 8004946:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004948:	68da      	ldr	r2, [r3, #12]
 800494a:	4322      	orrs	r2, r4
 800494c:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800494e:	695a      	ldr	r2, [r3, #20]
 8004950:	f022 0207 	bic.w	r2, r2, #7
 8004954:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8004956:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800495a:	432a      	orrs	r2, r5
 800495c:	694d      	ldr	r5, [r1, #20]
 800495e:	695c      	ldr	r4, [r3, #20]
 8004960:	432a      	orrs	r2, r5
 8004962:	4322      	orrs	r2, r4
 8004964:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8004966:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004968:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800496a:	f022 020f 	bic.w	r2, r2, #15
 800496e:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004970:	691c      	ldr	r4, [r3, #16]
 8004972:	432c      	orrs	r4, r5
 8004974:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8004976:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800497a:	f024 040e 	bic.w	r4, r4, #14
 800497e:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004982:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004986:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004988:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800498c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8004990:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8004992:	0c12      	lsrs	r2, r2, #16
 8004994:	0412      	lsls	r2, r2, #16
 8004996:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004998:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800499a:	4322      	orrs	r2, r4
 800499c:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800499e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80049a2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80049a6:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80049aa:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80049ae:	432a      	orrs	r2, r5
 80049b0:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80049b2:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80049b6:	432a      	orrs	r2, r5
 80049b8:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80049ba:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80049bc:	432a      	orrs	r2, r5
 80049be:	4322      	orrs	r2, r4
 80049c0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 80049c4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80049c6:	f022 0201 	bic.w	r2, r2, #1
 80049ca:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80049cc:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80049ce:	430a      	orrs	r2, r1
 80049d0:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 80049d2:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80049d6:	f042 0201 	orr.w	r2, r2, #1
 80049da:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 80049de:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80049e2:	f042 0202 	orr.w	r2, r2, #2
 80049e6:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80049ea:	2300      	movs	r3, #0
 80049ec:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80049ee:	4618      	mov	r0, r3
}
 80049f0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80049f2:	2002      	movs	r0, #2
 80049f4:	e7fc      	b.n	80049f0 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

080049f8 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 80049f8:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80049fa:	7c03      	ldrb	r3, [r0, #16]
 80049fc:	2b01      	cmp	r3, #1
 80049fe:	d02a      	beq.n	8004a56 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8004a00:	6802      	ldr	r2, [r0, #0]
 8004a02:	4b16      	ldr	r3, [pc, #88]	; (8004a5c <HAL_DSI_ConfigCommand+0x64>)
 8004a04:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8004a06:	4023      	ands	r3, r4
 8004a08:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004a0a:	e9d1 3500 	ldrd	r3, r5, [r1]
 8004a0e:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8004a10:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004a12:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8004a14:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8004a16:	68cd      	ldr	r5, [r1, #12]
 8004a18:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8004a1a:	690d      	ldr	r5, [r1, #16]
 8004a1c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8004a1e:	694d      	ldr	r5, [r1, #20]
 8004a20:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8004a22:	698d      	ldr	r5, [r1, #24]
 8004a24:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8004a26:	69cd      	ldr	r5, [r1, #28]
 8004a28:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8004a2a:	6a0d      	ldr	r5, [r1, #32]
 8004a2c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8004a2e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004a30:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8004a32:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8004a34:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8004a36:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004a38:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8004a3a:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004a3c:	4323      	orrs	r3, r4
 8004a3e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8004a40:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004a42:	f023 0302 	bic.w	r3, r3, #2
 8004a46:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004a48:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004a4a:	430b      	orrs	r3, r1
 8004a4c:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004a4e:	2300      	movs	r3, #0
 8004a50:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004a52:	4618      	mov	r0, r3
}
 8004a54:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004a56:	2002      	movs	r0, #2
 8004a58:	e7fc      	b.n	8004a54 <HAL_DSI_ConfigCommand+0x5c>
 8004a5a:	bf00      	nop
 8004a5c:	fef080ff 	.word	0xfef080ff

08004a60 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004a60:	7c03      	ldrb	r3, [r0, #16]
 8004a62:	2b01      	cmp	r3, #1
 8004a64:	d00b      	beq.n	8004a7e <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 8004a66:	6803      	ldr	r3, [r0, #0]
 8004a68:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004a6a:	f022 021f 	bic.w	r2, r2, #31
 8004a6e:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8004a70:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004a72:	4311      	orrs	r1, r2
 8004a74:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004a76:	2300      	movs	r3, #0
 8004a78:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004a7a:	4618      	mov	r0, r3
 8004a7c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004a7e:	2002      	movs	r0, #2
}
 8004a80:	4770      	bx	lr

08004a82 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8004a82:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004a84:	7c03      	ldrb	r3, [r0, #16]
 8004a86:	2b01      	cmp	r3, #1
 8004a88:	d035      	beq.n	8004af6 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004a8a:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004a8e:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004a90:	4294      	cmp	r4, r2
 8004a92:	bf38      	it	cc
 8004a94:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004a96:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004a9a:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8004a9e:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8004aa2:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004aa6:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004aaa:	4322      	orrs	r2, r4
 8004aac:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8004ab0:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8004ab4:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8004ab8:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8004abc:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8004ac0:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8004ac2:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8004ac6:	690d      	ldr	r5, [r1, #16]
 8004ac8:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004acc:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8004ace:	432a      	orrs	r2, r5
 8004ad0:	4322      	orrs	r2, r4
 8004ad2:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8004ad6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004ada:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004ade:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004ae2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004ae6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004aea:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004aee:	2300      	movs	r3, #0
 8004af0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004af2:	4618      	mov	r0, r3
}
 8004af4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004af6:	2002      	movs	r0, #2
 8004af8:	e7fc      	b.n	8004af4 <HAL_DSI_ConfigPhyTimer+0x72>
	...

08004afc <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8004afc:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004afe:	7c03      	ldrb	r3, [r0, #16]
 8004b00:	2b01      	cmp	r3, #1
 8004b02:	d05c      	beq.n	8004bbe <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004b04:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004b06:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004b08:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004b0a:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004b0c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004b10:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004b12:	689a      	ldr	r2, [r3, #8]
 8004b14:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8004b18:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004b1a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004b1c:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004b1e:	b292      	uxth	r2, r2
 8004b20:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004b22:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8004b24:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004b28:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8004b2a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004b2c:	4a25      	ldr	r2, [pc, #148]	; (8004bc4 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8004b2e:	4014      	ands	r4, r2
 8004b30:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004b32:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004b34:	432c      	orrs	r4, r5
 8004b36:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004b38:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004b3a:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004b3c:	4014      	ands	r4, r2
 8004b3e:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004b40:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8004b42:	432c      	orrs	r4, r5
 8004b44:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004b46:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004b4a:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004b4c:	4014      	ands	r4, r2
 8004b4e:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004b52:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8004b56:	432c      	orrs	r4, r5
 8004b58:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004b5c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004b60:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004b62:	4014      	ands	r4, r2
 8004b64:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004b68:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004b6c:	432c      	orrs	r4, r5
 8004b6e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8004b72:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004b76:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8004b7a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8004b7e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004b82:	698d      	ldr	r5, [r1, #24]
 8004b84:	432c      	orrs	r4, r5
 8004b86:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004b8a:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004b8e:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004b90:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004b92:	4014      	ands	r4, r2
 8004b94:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004b98:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8004b9c:	432c      	orrs	r4, r5
 8004b9e:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 8004ba2:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8004ba6:	4022      	ands	r2, r4
 8004ba8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004bac:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8004bb0:	430a      	orrs	r2, r1
 8004bb2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004bb6:	2300      	movs	r3, #0
 8004bb8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004bba:	4618      	mov	r0, r3
}
 8004bbc:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004bbe:	2002      	movs	r0, #2
 8004bc0:	e7fc      	b.n	8004bbc <HAL_DSI_ConfigHostTimeouts+0xc0>
 8004bc2:	bf00      	nop
 8004bc4:	ffff0000 	.word	0xffff0000

08004bc8 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004bc8:	7c03      	ldrb	r3, [r0, #16]
 8004bca:	2b01      	cmp	r3, #1
{
 8004bcc:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 8004bce:	d01c      	beq.n	8004c0a <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8004bd0:	6802      	ldr	r2, [r0, #0]
 8004bd2:	2300      	movs	r3, #0
 8004bd4:	9300      	str	r3, [sp, #0]
 8004bd6:	6851      	ldr	r1, [r2, #4]
 8004bd8:	f041 0101 	orr.w	r1, r1, #1
 8004bdc:	6051      	str	r1, [r2, #4]
 8004bde:	6851      	ldr	r1, [r2, #4]
 8004be0:	f001 0101 	and.w	r1, r1, #1
 8004be4:	9100      	str	r1, [sp, #0]
 8004be6:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004be8:	9301      	str	r3, [sp, #4]
 8004bea:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8004bee:	f041 0108 	orr.w	r1, r1, #8
 8004bf2:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8004bf6:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004bfa:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004bfc:	f002 0208 	and.w	r2, r2, #8
 8004c00:	9201      	str	r2, [sp, #4]
 8004c02:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8004c04:	4618      	mov	r0, r3
}
 8004c06:	b002      	add	sp, #8
 8004c08:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004c0a:	2002      	movs	r0, #2
 8004c0c:	e7fb      	b.n	8004c06 <HAL_DSI_Start+0x3e>

08004c0e <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004c0e:	7c03      	ldrb	r3, [r0, #16]
 8004c10:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8004c12:	bf1f      	itttt	ne
 8004c14:	6802      	ldrne	r2, [r0, #0]
 8004c16:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8004c1a:	f043 0304 	orrne.w	r3, r3, #4
 8004c1e:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004c22:	bf1d      	ittte	ne
 8004c24:	2300      	movne	r3, #0
 8004c26:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8004c28:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 8004c2a:	2002      	moveq	r0, #2
}
 8004c2c:	4770      	bx	lr

08004c2e <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8004c2e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004c30:	7c05      	ldrb	r5, [r0, #16]
 8004c32:	2d01      	cmp	r5, #1
{
 8004c34:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8004c36:	d009      	beq.n	8004c4c <HAL_DSI_ShortWrite+0x1e>
 8004c38:	2501      	movs	r5, #1
 8004c3a:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8004c3c:	9d06      	ldr	r5, [sp, #24]
 8004c3e:	9500      	str	r5, [sp, #0]
 8004c40:	f7ff fcae 	bl	80045a0 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004c44:	2300      	movs	r3, #0
 8004c46:	7423      	strb	r3, [r4, #16]

  return status;
}
 8004c48:	b003      	add	sp, #12
 8004c4a:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004c4c:	2002      	movs	r0, #2
 8004c4e:	e7fb      	b.n	8004c48 <HAL_DSI_ShortWrite+0x1a>

08004c50 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8004c50:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c54:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004c56:	7c03      	ldrb	r3, [r0, #16]
 8004c58:	2b01      	cmp	r3, #1
{
 8004c5a:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 8004c5e:	4606      	mov	r6, r0
 8004c60:	460f      	mov	r7, r1
 8004c62:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8004c64:	d053      	beq.n	8004d0e <HAL_DSI_LongWrite+0xbe>
 8004c66:	2301      	movs	r3, #1
 8004c68:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8004c6a:	f7ff f883 	bl	8003d74 <HAL_GetTick>
 8004c6e:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004c70:	6832      	ldr	r2, [r6, #0]
 8004c72:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8004c74:	f013 0a01 	ands.w	sl, r3, #1
 8004c78:	d01a      	beq.n	8004cb0 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004c7a:	2c03      	cmp	r4, #3
 8004c7c:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 8004c7e:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004c82:	bf28      	it	cs
 8004c84:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 8004c86:	4288      	cmp	r0, r1
 8004c88:	d11e      	bne.n	8004cc8 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8004c8a:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 8004c8c:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 8004c90:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8004c92:	bb1b      	cbnz	r3, 8004cdc <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8004c94:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8004c96:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 8004c9a:	0225      	lsls	r5, r4, #8
 8004c9c:	b2ad      	uxth	r5, r5
 8004c9e:	0224      	lsls	r4, r4, #8
 8004ca0:	430d      	orrs	r5, r1
 8004ca2:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8004ca6:	432c      	orrs	r4, r5
 8004ca8:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8004caa:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8004cac:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8004cae:	e009      	b.n	8004cc4 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004cb0:	f7ff f860 	bl	8003d74 <HAL_GetTick>
 8004cb4:	eba0 000b 	sub.w	r0, r0, fp
 8004cb8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004cbc:	d9d8      	bls.n	8004c70 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 8004cbe:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8004cc2:	2003      	movs	r0, #3
}
 8004cc4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8004cc8:	f818 3000 	ldrb.w	r3, [r8, r0]
 8004ccc:	3001      	adds	r0, #1
 8004cce:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 8004cd2:	fa03 f30c 	lsl.w	r3, r3, ip
 8004cd6:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8004cda:	e7d4      	b.n	8004c86 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004cdc:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8004cde:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004ce2:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8004ce4:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004ce6:	bf28      	it	cs
 8004ce8:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004cec:	f810 8001 	ldrb.w	r8, [r0, r1]
 8004cf0:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8004cf4:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004cf6:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8004cfa:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004cfc:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8004d00:	d1f4      	bne.n	8004cec <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8004d02:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 8004d06:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8004d0a:	4470      	add	r0, lr
 8004d0c:	e7c1      	b.n	8004c92 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8004d0e:	2002      	movs	r0, #2
 8004d10:	e7d8      	b.n	8004cc4 <HAL_DSI_LongWrite+0x74>

08004d12 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004d12:	7c03      	ldrb	r3, [r0, #16]
 8004d14:	2b01      	cmp	r3, #1
 8004d16:	d010      	beq.n	8004d3a <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8004d18:	6803      	ldr	r3, [r0, #0]
 8004d1a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004d1e:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8004d22:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8004d26:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004d2a:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8004d2e:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004d32:	2300      	movs	r3, #0
 8004d34:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004d36:	4618      	mov	r0, r3
 8004d38:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004d3a:	2002      	movs	r0, #2
}
 8004d3c:	4770      	bx	lr
	...

08004d40 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004d40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004d44:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004f08 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004d48:	4a6d      	ldr	r2, [pc, #436]	; (8004f00 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004d4a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004d4c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004d4e:	2401      	movs	r4, #1
 8004d50:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004d52:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8004d56:	43ac      	bics	r4, r5
 8004d58:	f040 80b9 	bne.w	8004ece <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004d5c:	684d      	ldr	r5, [r1, #4]
 8004d5e:	f005 0403 	and.w	r4, r5, #3
 8004d62:	ea4f 0843 	mov.w	r8, r3, lsl #1
 8004d66:	2603      	movs	r6, #3
 8004d68:	1e67      	subs	r7, r4, #1
 8004d6a:	fa06 f608 	lsl.w	r6, r6, r8
 8004d6e:	2f01      	cmp	r7, #1
 8004d70:	ea6f 0606 	mvn.w	r6, r6
 8004d74:	d834      	bhi.n	8004de0 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004d76:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004d78:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004d7c:	68cf      	ldr	r7, [r1, #12]
 8004d7e:	fa07 f708 	lsl.w	r7, r7, r8
 8004d82:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004d86:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004d88:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004d8a:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004d8e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004d92:	409f      	lsls	r7, r3
 8004d94:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004d98:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004d9a:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004d9c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004da0:	688f      	ldr	r7, [r1, #8]
 8004da2:	fa07 f708 	lsl.w	r7, r7, r8
 8004da6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004daa:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004dac:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004dae:	d119      	bne.n	8004de4 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004db0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004db4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004db8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004dbc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004dc0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004dc4:	f04f 0e0f 	mov.w	lr, #15
 8004dc8:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004dcc:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004dd0:	690f      	ldr	r7, [r1, #16]
 8004dd2:	fa07 f70b 	lsl.w	r7, r7, fp
 8004dd6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8004dda:	f8ca 7020 	str.w	r7, [sl, #32]
 8004dde:	e001      	b.n	8004de4 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004de0:	2c03      	cmp	r4, #3
 8004de2:	d1da      	bne.n	8004d9a <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004de4:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004de6:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004dea:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004dec:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004dee:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8004df2:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004df4:	d06b      	beq.n	8004ece <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004df6:	f04f 0a00 	mov.w	sl, #0
 8004dfa:	f8cd a004 	str.w	sl, [sp, #4]
 8004dfe:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004e02:	4c40      	ldr	r4, [pc, #256]	; (8004f04 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004e04:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8004e08:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8004e0c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8004e10:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8004e14:	9601      	str	r6, [sp, #4]
 8004e16:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004e18:	f023 0603 	bic.w	r6, r3, #3
 8004e1c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8004e20:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004e24:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004e28:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004e2c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004e30:	270f      	movs	r7, #15
 8004e32:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004e36:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004e38:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004e3c:	d04e      	beq.n	8004edc <HAL_GPIO_Init+0x19c>
 8004e3e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e42:	42a0      	cmp	r0, r4
 8004e44:	d04c      	beq.n	8004ee0 <HAL_GPIO_Init+0x1a0>
 8004e46:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e4a:	42a0      	cmp	r0, r4
 8004e4c:	d04a      	beq.n	8004ee4 <HAL_GPIO_Init+0x1a4>
 8004e4e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e52:	42a0      	cmp	r0, r4
 8004e54:	d048      	beq.n	8004ee8 <HAL_GPIO_Init+0x1a8>
 8004e56:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e5a:	42a0      	cmp	r0, r4
 8004e5c:	d046      	beq.n	8004eec <HAL_GPIO_Init+0x1ac>
 8004e5e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e62:	42a0      	cmp	r0, r4
 8004e64:	d044      	beq.n	8004ef0 <HAL_GPIO_Init+0x1b0>
 8004e66:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e6a:	42a0      	cmp	r0, r4
 8004e6c:	d042      	beq.n	8004ef4 <HAL_GPIO_Init+0x1b4>
 8004e6e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e72:	42a0      	cmp	r0, r4
 8004e74:	d040      	beq.n	8004ef8 <HAL_GPIO_Init+0x1b8>
 8004e76:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e7a:	42a0      	cmp	r0, r4
 8004e7c:	d03e      	beq.n	8004efc <HAL_GPIO_Init+0x1bc>
 8004e7e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004e82:	42a0      	cmp	r0, r4
 8004e84:	bf0c      	ite	eq
 8004e86:	2409      	moveq	r4, #9
 8004e88:	240a      	movne	r4, #10
 8004e8a:	fa04 f40e 	lsl.w	r4, r4, lr
 8004e8e:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004e90:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 8004e92:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8004e94:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004e98:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004e9a:	bf54      	ite	pl
 8004e9c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004e9e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8004ea2:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 8004ea4:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004ea6:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8004ea8:	bf54      	ite	pl
 8004eaa:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004eac:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8004eb0:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004eb2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004eb4:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8004eb6:	bf54      	ite	pl
 8004eb8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004eba:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8004ebe:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004ec0:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004ec2:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8004ec4:	bf54      	ite	pl
 8004ec6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004ec8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8004ecc:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004ece:	3301      	adds	r3, #1
 8004ed0:	2b10      	cmp	r3, #16
 8004ed2:	f47f af3b 	bne.w	8004d4c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004ed6:	b003      	add	sp, #12
 8004ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004edc:	4654      	mov	r4, sl
 8004ede:	e7d4      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004ee0:	2401      	movs	r4, #1
 8004ee2:	e7d2      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004ee4:	2402      	movs	r4, #2
 8004ee6:	e7d0      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004ee8:	2403      	movs	r4, #3
 8004eea:	e7ce      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004eec:	2404      	movs	r4, #4
 8004eee:	e7cc      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004ef0:	2405      	movs	r4, #5
 8004ef2:	e7ca      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004ef4:	2406      	movs	r4, #6
 8004ef6:	e7c8      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004ef8:	2407      	movs	r4, #7
 8004efa:	e7c6      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004efc:	2408      	movs	r4, #8
 8004efe:	e7c4      	b.n	8004e8a <HAL_GPIO_Init+0x14a>
 8004f00:	40013c00 	.word	0x40013c00
 8004f04:	40020000 	.word	0x40020000
 8004f08:	40023800 	.word	0x40023800

08004f0c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004f10:	4c4a      	ldr	r4, [pc, #296]	; (800503c <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004f12:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8005044 <HAL_GPIO_DeInit+0x138>
 8004f16:	f8df a130 	ldr.w	sl, [pc, #304]	; 8005048 <HAL_GPIO_DeInit+0x13c>
 8004f1a:	f8df b130 	ldr.w	fp, [pc, #304]	; 800504c <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004f1e:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8004f20:	2301      	movs	r3, #1
 8004f22:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8004f26:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004f2a:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8004f2e:	d16e      	bne.n	800500e <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004f30:	f022 0503 	bic.w	r5, r2, #3
 8004f34:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8004f38:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004f3c:	4b40      	ldr	r3, [pc, #256]	; (8005040 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004f3e:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004f42:	f002 0c03 	and.w	ip, r2, #3
 8004f46:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004f4a:	260f      	movs	r6, #15
 8004f4c:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004f50:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004f52:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004f56:	d05f      	beq.n	8005018 <HAL_GPIO_DeInit+0x10c>
 8004f58:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f5c:	4298      	cmp	r0, r3
 8004f5e:	d05d      	beq.n	800501c <HAL_GPIO_DeInit+0x110>
 8004f60:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f64:	4298      	cmp	r0, r3
 8004f66:	d05b      	beq.n	8005020 <HAL_GPIO_DeInit+0x114>
 8004f68:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f6c:	4298      	cmp	r0, r3
 8004f6e:	d059      	beq.n	8005024 <HAL_GPIO_DeInit+0x118>
 8004f70:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f74:	4298      	cmp	r0, r3
 8004f76:	d057      	beq.n	8005028 <HAL_GPIO_DeInit+0x11c>
 8004f78:	4548      	cmp	r0, r9
 8004f7a:	d057      	beq.n	800502c <HAL_GPIO_DeInit+0x120>
 8004f7c:	4550      	cmp	r0, sl
 8004f7e:	d057      	beq.n	8005030 <HAL_GPIO_DeInit+0x124>
 8004f80:	4558      	cmp	r0, fp
 8004f82:	d057      	beq.n	8005034 <HAL_GPIO_DeInit+0x128>
 8004f84:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8004f88:	4298      	cmp	r0, r3
 8004f8a:	d055      	beq.n	8005038 <HAL_GPIO_DeInit+0x12c>
 8004f8c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004f90:	4298      	cmp	r0, r3
 8004f92:	bf0c      	ite	eq
 8004f94:	2309      	moveq	r3, #9
 8004f96:	230a      	movne	r3, #10
 8004f98:	fa03 f30c 	lsl.w	r3, r3, ip
 8004f9c:	4543      	cmp	r3, r8
 8004f9e:	d113      	bne.n	8004fc8 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004fa0:	6823      	ldr	r3, [r4, #0]
 8004fa2:	ea23 0307 	bic.w	r3, r3, r7
 8004fa6:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004fa8:	6863      	ldr	r3, [r4, #4]
 8004faa:	ea23 0307 	bic.w	r3, r3, r7
 8004fae:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004fb0:	68a3      	ldr	r3, [r4, #8]
 8004fb2:	ea23 0307 	bic.w	r3, r3, r7
 8004fb6:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004fb8:	68e3      	ldr	r3, [r4, #12]
 8004fba:	ea23 0707 	bic.w	r7, r3, r7
 8004fbe:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8004fc0:	68ab      	ldr	r3, [r5, #8]
 8004fc2:	ea23 0606 	bic.w	r6, r3, r6
 8004fc6:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004fc8:	6805      	ldr	r5, [r0, #0]
 8004fca:	2603      	movs	r6, #3
 8004fcc:	0053      	lsls	r3, r2, #1
 8004fce:	fa06 f303 	lsl.w	r3, r6, r3
 8004fd2:	ea25 0503 	bic.w	r5, r5, r3
 8004fd6:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004fd8:	fa22 f506 	lsr.w	r5, r2, r6
 8004fdc:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8004fe0:	f002 0c07 	and.w	ip, r2, #7
 8004fe4:	6a2e      	ldr	r6, [r5, #32]
 8004fe6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004fea:	270f      	movs	r7, #15
 8004fec:	fa07 f70c 	lsl.w	r7, r7, ip
 8004ff0:	ea26 0707 	bic.w	r7, r6, r7
 8004ff4:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004ff6:	68c5      	ldr	r5, [r0, #12]
 8004ff8:	ea25 0503 	bic.w	r5, r5, r3
 8004ffc:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004ffe:	6845      	ldr	r5, [r0, #4]
 8005000:	ea25 050e 	bic.w	r5, r5, lr
 8005004:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005006:	6885      	ldr	r5, [r0, #8]
 8005008:	ea25 0303 	bic.w	r3, r5, r3
 800500c:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800500e:	3201      	adds	r2, #1
 8005010:	2a10      	cmp	r2, #16
 8005012:	d185      	bne.n	8004f20 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8005014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005018:	2300      	movs	r3, #0
 800501a:	e7bd      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 800501c:	2301      	movs	r3, #1
 800501e:	e7bb      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 8005020:	2302      	movs	r3, #2
 8005022:	e7b9      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 8005024:	2303      	movs	r3, #3
 8005026:	e7b7      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 8005028:	2304      	movs	r3, #4
 800502a:	e7b5      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 800502c:	2305      	movs	r3, #5
 800502e:	e7b3      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 8005030:	2306      	movs	r3, #6
 8005032:	e7b1      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 8005034:	2307      	movs	r3, #7
 8005036:	e7af      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 8005038:	2308      	movs	r3, #8
 800503a:	e7ad      	b.n	8004f98 <HAL_GPIO_DeInit+0x8c>
 800503c:	40013c00 	.word	0x40013c00
 8005040:	40020000 	.word	0x40020000
 8005044:	40021400 	.word	0x40021400
 8005048:	40021800 	.word	0x40021800
 800504c:	40021c00 	.word	0x40021c00

08005050 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8005050:	6903      	ldr	r3, [r0, #16]
 8005052:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8005054:	bf14      	ite	ne
 8005056:	2001      	movne	r0, #1
 8005058:	2000      	moveq	r0, #0
 800505a:	4770      	bx	lr

0800505c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800505c:	b10a      	cbz	r2, 8005062 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800505e:	6181      	str	r1, [r0, #24]
  }
}
 8005060:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005062:	0409      	lsls	r1, r1, #16
 8005064:	e7fb      	b.n	800505e <HAL_GPIO_WritePin+0x2>

08005066 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 8005066:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8005068:	ea01 0203 	and.w	r2, r1, r3
 800506c:	ea21 0103 	bic.w	r1, r1, r3
 8005070:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005074:	6181      	str	r1, [r0, #24]
}
 8005076:	4770      	bx	lr

08005078 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005078:	6801      	ldr	r1, [r0, #0]
 800507a:	694b      	ldr	r3, [r1, #20]
 800507c:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8005080:	f04f 0200 	mov.w	r2, #0
 8005084:	d010      	beq.n	80050a8 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005086:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800508a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800508c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800508e:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005090:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005094:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005098:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800509a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800509e:	f043 0304 	orr.w	r3, r3, #4
 80050a2:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80050a4:	2001      	movs	r0, #1
 80050a6:	4770      	bx	lr
  }
  return HAL_OK;
 80050a8:	4618      	mov	r0, r3
}
 80050aa:	4770      	bx	lr

080050ac <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80050ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050b0:	4604      	mov	r4, r0
 80050b2:	460f      	mov	r7, r1
 80050b4:	4616      	mov	r6, r2
 80050b6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80050b8:	6825      	ldr	r5, [r4, #0]
 80050ba:	6968      	ldr	r0, [r5, #20]
 80050bc:	ea27 0000 	bic.w	r0, r7, r0
 80050c0:	b280      	uxth	r0, r0
 80050c2:	b1b8      	cbz	r0, 80050f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80050c4:	696b      	ldr	r3, [r5, #20]
 80050c6:	055a      	lsls	r2, r3, #21
 80050c8:	d516      	bpl.n	80050f8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80050ca:	682b      	ldr	r3, [r5, #0]
 80050cc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80050d0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80050d2:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80050d6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80050d8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80050da:	2300      	movs	r3, #0
 80050dc:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80050de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80050e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80050e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80050e8:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80050ec:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80050ee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80050f2:	2001      	movs	r0, #1
}
 80050f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80050f8:	1c73      	adds	r3, r6, #1
 80050fa:	d0de      	beq.n	80050ba <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80050fc:	f7fe fe3a 	bl	8003d74 <HAL_GetTick>
 8005100:	eba0 0008 	sub.w	r0, r0, r8
 8005104:	42b0      	cmp	r0, r6
 8005106:	d801      	bhi.n	800510c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8005108:	2e00      	cmp	r6, #0
 800510a:	d1d5      	bne.n	80050b8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800510c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800510e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005110:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005112:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005116:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800511a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800511c:	f042 0220 	orr.w	r2, r2, #32
 8005120:	e7e4      	b.n	80050ec <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08005122 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005122:	b570      	push	{r4, r5, r6, lr}
 8005124:	4604      	mov	r4, r0
 8005126:	460d      	mov	r5, r1
 8005128:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800512a:	6823      	ldr	r3, [r4, #0]
 800512c:	695b      	ldr	r3, [r3, #20]
 800512e:	075b      	lsls	r3, r3, #29
 8005130:	d501      	bpl.n	8005136 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005132:	2000      	movs	r0, #0
}
 8005134:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005136:	4620      	mov	r0, r4
 8005138:	f7ff ff9e 	bl	8005078 <I2C_IsAcknowledgeFailed>
 800513c:	b9a8      	cbnz	r0, 800516a <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800513e:	1c6a      	adds	r2, r5, #1
 8005140:	d0f3      	beq.n	800512a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005142:	f7fe fe17 	bl	8003d74 <HAL_GetTick>
 8005146:	1b80      	subs	r0, r0, r6
 8005148:	42a8      	cmp	r0, r5
 800514a:	d801      	bhi.n	8005150 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800514c:	2d00      	cmp	r5, #0
 800514e:	d1ec      	bne.n	800512a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005150:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005152:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005154:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005156:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800515a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800515e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005160:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005164:	f042 0220 	orr.w	r2, r2, #32
 8005168:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800516a:	2001      	movs	r0, #1
 800516c:	e7e2      	b.n	8005134 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800516e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800516e:	b570      	push	{r4, r5, r6, lr}
 8005170:	4604      	mov	r4, r0
 8005172:	460d      	mov	r5, r1
 8005174:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005176:	6821      	ldr	r1, [r4, #0]
 8005178:	694b      	ldr	r3, [r1, #20]
 800517a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800517e:	d001      	beq.n	8005184 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8005180:	2000      	movs	r0, #0
 8005182:	e010      	b.n	80051a6 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005184:	694a      	ldr	r2, [r1, #20]
 8005186:	06d2      	lsls	r2, r2, #27
 8005188:	d50e      	bpl.n	80051a8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800518a:	f06f 0210 	mvn.w	r2, #16
 800518e:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005190:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005192:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005194:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005198:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800519c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800519e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80051a0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 80051a4:	2001      	movs	r0, #1
}
 80051a6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80051a8:	f7fe fde4 	bl	8003d74 <HAL_GetTick>
 80051ac:	1b80      	subs	r0, r0, r6
 80051ae:	42a8      	cmp	r0, r5
 80051b0:	d801      	bhi.n	80051b6 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80051b2:	2d00      	cmp	r5, #0
 80051b4:	d1df      	bne.n	8005176 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80051b6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80051b8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80051ba:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80051bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80051c0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80051c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80051c6:	f042 0220 	orr.w	r2, r2, #32
 80051ca:	e7e8      	b.n	800519e <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080051cc <I2C_WaitOnFlagUntilTimeout>:
{
 80051cc:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80051d0:	4606      	mov	r6, r0
 80051d2:	460f      	mov	r7, r1
 80051d4:	4691      	mov	r9, r2
 80051d6:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80051d8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80051dc:	6833      	ldr	r3, [r6, #0]
 80051de:	f1ba 0f01 	cmp.w	sl, #1
 80051e2:	bf0c      	ite	eq
 80051e4:	695c      	ldreq	r4, [r3, #20]
 80051e6:	699c      	ldrne	r4, [r3, #24]
 80051e8:	ea27 0404 	bic.w	r4, r7, r4
 80051ec:	b2a4      	uxth	r4, r4
 80051ee:	fab4 f484 	clz	r4, r4
 80051f2:	0964      	lsrs	r4, r4, #5
 80051f4:	45a1      	cmp	r9, r4
 80051f6:	d001      	beq.n	80051fc <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80051f8:	2000      	movs	r0, #0
 80051fa:	e017      	b.n	800522c <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80051fc:	1c6a      	adds	r2, r5, #1
 80051fe:	d0ee      	beq.n	80051de <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005200:	f7fe fdb8 	bl	8003d74 <HAL_GetTick>
 8005204:	9b08      	ldr	r3, [sp, #32]
 8005206:	1ac0      	subs	r0, r0, r3
 8005208:	42a8      	cmp	r0, r5
 800520a:	d801      	bhi.n	8005210 <I2C_WaitOnFlagUntilTimeout+0x44>
 800520c:	2d00      	cmp	r5, #0
 800520e:	d1e5      	bne.n	80051dc <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005210:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005212:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005214:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005216:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800521a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800521e:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005220:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005224:	f042 0220 	orr.w	r2, r2, #32
 8005228:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800522a:	2001      	movs	r0, #1
}
 800522c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005230 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005230:	b570      	push	{r4, r5, r6, lr}
 8005232:	4604      	mov	r4, r0
 8005234:	460d      	mov	r5, r1
 8005236:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005238:	6823      	ldr	r3, [r4, #0]
 800523a:	695b      	ldr	r3, [r3, #20]
 800523c:	061b      	lsls	r3, r3, #24
 800523e:	d501      	bpl.n	8005244 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005240:	2000      	movs	r0, #0
}
 8005242:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005244:	4620      	mov	r0, r4
 8005246:	f7ff ff17 	bl	8005078 <I2C_IsAcknowledgeFailed>
 800524a:	b9a8      	cbnz	r0, 8005278 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800524c:	1c6a      	adds	r2, r5, #1
 800524e:	d0f3      	beq.n	8005238 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005250:	f7fe fd90 	bl	8003d74 <HAL_GetTick>
 8005254:	1b80      	subs	r0, r0, r6
 8005256:	42a8      	cmp	r0, r5
 8005258:	d801      	bhi.n	800525e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800525a:	2d00      	cmp	r5, #0
 800525c:	d1ec      	bne.n	8005238 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800525e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005260:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005262:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005264:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005268:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800526c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800526e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005272:	f042 0220 	orr.w	r2, r2, #32
 8005276:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005278:	2001      	movs	r0, #1
 800527a:	e7e2      	b.n	8005242 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800527c <I2C_RequestMemoryWrite>:
{
 800527c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005280:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005282:	6802      	ldr	r2, [r0, #0]
{
 8005284:	b085      	sub	sp, #20
 8005286:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800528a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800528c:	6813      	ldr	r3, [r2, #0]
 800528e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005292:	6013      	str	r3, [r2, #0]
{
 8005294:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005296:	463b      	mov	r3, r7
 8005298:	f8cd 8000 	str.w	r8, [sp]
 800529c:	2200      	movs	r2, #0
 800529e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80052a2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80052a4:	f7ff ff92 	bl	80051cc <I2C_WaitOnFlagUntilTimeout>
 80052a8:	6823      	ldr	r3, [r4, #0]
 80052aa:	b138      	cbz	r0, 80052bc <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80052ac:	681b      	ldr	r3, [r3, #0]
 80052ae:	05db      	lsls	r3, r3, #23
 80052b0:	d502      	bpl.n	80052b8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80052b2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80052b6:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80052b8:	2003      	movs	r0, #3
 80052ba:	e00a      	b.n	80052d2 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80052bc:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80052c0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80052c2:	4919      	ldr	r1, [pc, #100]	; (8005328 <I2C_RequestMemoryWrite+0xac>)
 80052c4:	4643      	mov	r3, r8
 80052c6:	463a      	mov	r2, r7
 80052c8:	4620      	mov	r0, r4
 80052ca:	f7ff feef 	bl	80050ac <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80052ce:	b118      	cbz	r0, 80052d8 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80052d0:	2001      	movs	r0, #1
}
 80052d2:	b005      	add	sp, #20
 80052d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80052d8:	6823      	ldr	r3, [r4, #0]
 80052da:	9003      	str	r0, [sp, #12]
 80052dc:	695a      	ldr	r2, [r3, #20]
 80052de:	9203      	str	r2, [sp, #12]
 80052e0:	699b      	ldr	r3, [r3, #24]
 80052e2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80052e4:	4642      	mov	r2, r8
 80052e6:	4639      	mov	r1, r7
 80052e8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80052ea:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80052ec:	f7ff ffa0 	bl	8005230 <I2C_WaitOnTXEFlagUntilTimeout>
 80052f0:	b140      	cbz	r0, 8005304 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80052f2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80052f4:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80052f6:	bf01      	itttt	eq
 80052f8:	6822      	ldreq	r2, [r4, #0]
 80052fa:	6813      	ldreq	r3, [r2, #0]
 80052fc:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005300:	6013      	streq	r3, [r2, #0]
 8005302:	e7e5      	b.n	80052d0 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005304:	f1b9 0f01 	cmp.w	r9, #1
 8005308:	6823      	ldr	r3, [r4, #0]
 800530a:	d102      	bne.n	8005312 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800530c:	b2ed      	uxtb	r5, r5
 800530e:	611d      	str	r5, [r3, #16]
 8005310:	e7df      	b.n	80052d2 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005312:	0a2a      	lsrs	r2, r5, #8
 8005314:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005316:	4639      	mov	r1, r7
 8005318:	4642      	mov	r2, r8
 800531a:	4620      	mov	r0, r4
 800531c:	f7ff ff88 	bl	8005230 <I2C_WaitOnTXEFlagUntilTimeout>
 8005320:	2800      	cmp	r0, #0
 8005322:	d1e6      	bne.n	80052f2 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005324:	6823      	ldr	r3, [r4, #0]
 8005326:	e7f1      	b.n	800530c <I2C_RequestMemoryWrite+0x90>
 8005328:	00010002 	.word	0x00010002

0800532c <I2C_RequestMemoryRead>:
{
 800532c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005330:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005332:	6803      	ldr	r3, [r0, #0]
{
 8005334:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005336:	681a      	ldr	r2, [r3, #0]
 8005338:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800533c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800533e:	681a      	ldr	r2, [r3, #0]
{
 8005340:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005344:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005348:	601a      	str	r2, [r3, #0]
{
 800534a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800534c:	463b      	mov	r3, r7
 800534e:	f8cd 8000 	str.w	r8, [sp]
 8005352:	2200      	movs	r2, #0
 8005354:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005358:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800535a:	f7ff ff37 	bl	80051cc <I2C_WaitOnFlagUntilTimeout>
 800535e:	6823      	ldr	r3, [r4, #0]
 8005360:	b148      	cbz	r0, 8005376 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005362:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005364:	05db      	lsls	r3, r3, #23
 8005366:	d502      	bpl.n	800536e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005368:	f44f 7300 	mov.w	r3, #512	; 0x200
 800536c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800536e:	2003      	movs	r0, #3
}
 8005370:	b004      	add	sp, #16
 8005372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005376:	fa5f f986 	uxtb.w	r9, r6
 800537a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800537e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005380:	492a      	ldr	r1, [pc, #168]	; (800542c <I2C_RequestMemoryRead+0x100>)
 8005382:	4643      	mov	r3, r8
 8005384:	463a      	mov	r2, r7
 8005386:	4620      	mov	r0, r4
 8005388:	f7ff fe90 	bl	80050ac <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800538c:	b108      	cbz	r0, 8005392 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800538e:	2001      	movs	r0, #1
 8005390:	e7ee      	b.n	8005370 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005392:	6823      	ldr	r3, [r4, #0]
 8005394:	9003      	str	r0, [sp, #12]
 8005396:	695a      	ldr	r2, [r3, #20]
 8005398:	9203      	str	r2, [sp, #12]
 800539a:	699b      	ldr	r3, [r3, #24]
 800539c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800539e:	4642      	mov	r2, r8
 80053a0:	4639      	mov	r1, r7
 80053a2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80053a4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053a6:	f7ff ff43 	bl	8005230 <I2C_WaitOnTXEFlagUntilTimeout>
 80053aa:	b140      	cbz	r0, 80053be <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80053ac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80053ae:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053b0:	bf01      	itttt	eq
 80053b2:	6822      	ldreq	r2, [r4, #0]
 80053b4:	6813      	ldreq	r3, [r2, #0]
 80053b6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80053ba:	6013      	streq	r3, [r2, #0]
 80053bc:	e7e7      	b.n	800538e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80053be:	f1ba 0f01 	cmp.w	sl, #1
 80053c2:	6823      	ldr	r3, [r4, #0]
 80053c4:	d11a      	bne.n	80053fc <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80053c6:	b2ed      	uxtb	r5, r5
 80053c8:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053ca:	4642      	mov	r2, r8
 80053cc:	4639      	mov	r1, r7
 80053ce:	4620      	mov	r0, r4
 80053d0:	f7ff ff2e 	bl	8005230 <I2C_WaitOnTXEFlagUntilTimeout>
 80053d4:	2800      	cmp	r0, #0
 80053d6:	d1e9      	bne.n	80053ac <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80053d8:	6822      	ldr	r2, [r4, #0]
 80053da:	6813      	ldr	r3, [r2, #0]
 80053dc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80053e0:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80053e2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80053e6:	4602      	mov	r2, r0
 80053e8:	f8cd 8000 	str.w	r8, [sp]
 80053ec:	463b      	mov	r3, r7
 80053ee:	4620      	mov	r0, r4
 80053f0:	f7ff feec 	bl	80051cc <I2C_WaitOnFlagUntilTimeout>
 80053f4:	6822      	ldr	r2, [r4, #0]
 80053f6:	b160      	cbz	r0, 8005412 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80053f8:	6813      	ldr	r3, [r2, #0]
 80053fa:	e7b3      	b.n	8005364 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80053fc:	0a2a      	lsrs	r2, r5, #8
 80053fe:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005400:	4639      	mov	r1, r7
 8005402:	4642      	mov	r2, r8
 8005404:	4620      	mov	r0, r4
 8005406:	f7ff ff13 	bl	8005230 <I2C_WaitOnTXEFlagUntilTimeout>
 800540a:	2800      	cmp	r0, #0
 800540c:	d1ce      	bne.n	80053ac <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800540e:	6823      	ldr	r3, [r4, #0]
 8005410:	e7d9      	b.n	80053c6 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005412:	f049 0301 	orr.w	r3, r9, #1
 8005416:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005418:	4904      	ldr	r1, [pc, #16]	; (800542c <I2C_RequestMemoryRead+0x100>)
 800541a:	4643      	mov	r3, r8
 800541c:	463a      	mov	r2, r7
 800541e:	4620      	mov	r0, r4
 8005420:	f7ff fe44 	bl	80050ac <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005424:	3800      	subs	r0, #0
 8005426:	bf18      	it	ne
 8005428:	2001      	movne	r0, #1
 800542a:	e7a1      	b.n	8005370 <I2C_RequestMemoryRead+0x44>
 800542c:	00010002 	.word	0x00010002

08005430 <HAL_I2C_Init>:
{
 8005430:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005432:	4604      	mov	r4, r0
 8005434:	b908      	cbnz	r0, 800543a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005436:	2001      	movs	r0, #1
}
 8005438:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800543a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800543e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005442:	b91b      	cbnz	r3, 800544c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005444:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005448:	f7fc fb9a 	bl	8001b80 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800544c:	2324      	movs	r3, #36	; 0x24
 800544e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005452:	6823      	ldr	r3, [r4, #0]
 8005454:	681a      	ldr	r2, [r3, #0]
 8005456:	f022 0201 	bic.w	r2, r2, #1
 800545a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800545c:	681a      	ldr	r2, [r3, #0]
 800545e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005462:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005464:	681a      	ldr	r2, [r3, #0]
 8005466:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800546a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800546c:	f001 f818 	bl	80064a0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005470:	4a3f      	ldr	r2, [pc, #252]	; (8005570 <HAL_I2C_Init+0x140>)
 8005472:	6863      	ldr	r3, [r4, #4]
 8005474:	4293      	cmp	r3, r2
 8005476:	bf94      	ite	ls
 8005478:	4a3e      	ldrls	r2, [pc, #248]	; (8005574 <HAL_I2C_Init+0x144>)
 800547a:	4a3f      	ldrhi	r2, [pc, #252]	; (8005578 <HAL_I2C_Init+0x148>)
 800547c:	4290      	cmp	r0, r2
 800547e:	bf8c      	ite	hi
 8005480:	2200      	movhi	r2, #0
 8005482:	2201      	movls	r2, #1
 8005484:	2a00      	cmp	r2, #0
 8005486:	d1d6      	bne.n	8005436 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005488:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800548a:	4e3c      	ldr	r6, [pc, #240]	; (800557c <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800548c:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800548e:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005492:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8005496:	4332      	orrs	r2, r6
 8005498:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800549a:	4a35      	ldr	r2, [pc, #212]	; (8005570 <HAL_I2C_Init+0x140>)
 800549c:	6a0d      	ldr	r5, [r1, #32]
 800549e:	4293      	cmp	r3, r2
 80054a0:	bf84      	itt	hi
 80054a2:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 80054a6:	4372      	mulhi	r2, r6
 80054a8:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80054ac:	bf91      	iteee	ls
 80054ae:	1c72      	addls	r2, r6, #1
 80054b0:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80054b4:	fbb2 f2f6 	udivhi	r2, r2, r6
 80054b8:	3201      	addhi	r2, #1
 80054ba:	432a      	orrs	r2, r5
 80054bc:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80054be:	69cd      	ldr	r5, [r1, #28]
 80054c0:	1e42      	subs	r2, r0, #1
 80054c2:	482b      	ldr	r0, [pc, #172]	; (8005570 <HAL_I2C_Init+0x140>)
 80054c4:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 80054c8:	4283      	cmp	r3, r0
 80054ca:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80054ce:	d832      	bhi.n	8005536 <HAL_I2C_Init+0x106>
 80054d0:	005b      	lsls	r3, r3, #1
 80054d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80054d6:	f640 72fc 	movw	r2, #4092	; 0xffc
 80054da:	3301      	adds	r3, #1
 80054dc:	4213      	tst	r3, r2
 80054de:	d042      	beq.n	8005566 <HAL_I2C_Init+0x136>
 80054e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80054e4:	432b      	orrs	r3, r5
 80054e6:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80054e8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80054ec:	680a      	ldr	r2, [r1, #0]
 80054ee:	4303      	orrs	r3, r0
 80054f0:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 80054f4:	4313      	orrs	r3, r2
 80054f6:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80054f8:	688a      	ldr	r2, [r1, #8]
 80054fa:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80054fe:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 8005502:	4303      	orrs	r3, r0
 8005504:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8005508:	4313      	orrs	r3, r2
 800550a:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800550c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005510:	68ca      	ldr	r2, [r1, #12]
 8005512:	4303      	orrs	r3, r0
 8005514:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8005518:	4313      	orrs	r3, r2
 800551a:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 800551c:	680b      	ldr	r3, [r1, #0]
 800551e:	f043 0301 	orr.w	r3, r3, #1
 8005522:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005524:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8005526:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005528:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800552a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800552e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005530:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005534:	e780      	b.n	8005438 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005536:	68a0      	ldr	r0, [r4, #8]
 8005538:	b950      	cbnz	r0, 8005550 <HAL_I2C_Init+0x120>
 800553a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800553e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005542:	3301      	adds	r3, #1
 8005544:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005548:	b17b      	cbz	r3, 800556a <HAL_I2C_Init+0x13a>
 800554a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800554e:	e7c9      	b.n	80054e4 <HAL_I2C_Init+0xb4>
 8005550:	2019      	movs	r0, #25
 8005552:	4343      	muls	r3, r0
 8005554:	fbb2 f3f3 	udiv	r3, r2, r3
 8005558:	3301      	adds	r3, #1
 800555a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800555e:	b123      	cbz	r3, 800556a <HAL_I2C_Init+0x13a>
 8005560:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005564:	e7be      	b.n	80054e4 <HAL_I2C_Init+0xb4>
 8005566:	2304      	movs	r3, #4
 8005568:	e7bc      	b.n	80054e4 <HAL_I2C_Init+0xb4>
 800556a:	2301      	movs	r3, #1
 800556c:	e7ba      	b.n	80054e4 <HAL_I2C_Init+0xb4>
 800556e:	bf00      	nop
 8005570:	000186a0 	.word	0x000186a0
 8005574:	001e847f 	.word	0x001e847f
 8005578:	003d08ff 	.word	0x003d08ff
 800557c:	000f4240 	.word	0x000f4240

08005580 <HAL_I2C_DeInit>:
{
 8005580:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005582:	4604      	mov	r4, r0
 8005584:	b198      	cbz	r0, 80055ae <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005586:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005588:	2324      	movs	r3, #36	; 0x24
 800558a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800558e:	6813      	ldr	r3, [r2, #0]
 8005590:	f023 0301 	bic.w	r3, r3, #1
 8005594:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005596:	f7fc fb37 	bl	8001c08 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800559a:	2000      	movs	r0, #0
 800559c:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800559e:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 80055a2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80055a6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 80055a8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 80055ac:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80055ae:	2001      	movs	r0, #1
 80055b0:	e7fc      	b.n	80055ac <HAL_I2C_DeInit+0x2c>
	...

080055b4 <HAL_I2C_Mem_Write>:
{
 80055b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80055b8:	4604      	mov	r4, r0
 80055ba:	4699      	mov	r9, r3
 80055bc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80055be:	460f      	mov	r7, r1
 80055c0:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80055c2:	f7fe fbd7 	bl	8003d74 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80055c6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80055ca:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80055cc:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80055ce:	d003      	beq.n	80055d8 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80055d0:	2002      	movs	r0, #2
}
 80055d2:	b003      	add	sp, #12
 80055d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80055d8:	9000      	str	r0, [sp, #0]
 80055da:	493c      	ldr	r1, [pc, #240]	; (80056cc <HAL_I2C_Mem_Write+0x118>)
 80055dc:	2319      	movs	r3, #25
 80055de:	2201      	movs	r2, #1
 80055e0:	4620      	mov	r0, r4
 80055e2:	f7ff fdf3 	bl	80051cc <I2C_WaitOnFlagUntilTimeout>
 80055e6:	2800      	cmp	r0, #0
 80055e8:	d1f2      	bne.n	80055d0 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80055ea:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80055ee:	2b01      	cmp	r3, #1
 80055f0:	d0ee      	beq.n	80055d0 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80055f2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80055f4:	2301      	movs	r3, #1
 80055f6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80055fa:	6803      	ldr	r3, [r0, #0]
 80055fc:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80055fe:	bf5e      	ittt	pl
 8005600:	6803      	ldrpl	r3, [r0, #0]
 8005602:	f043 0301 	orrpl.w	r3, r3, #1
 8005606:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005608:	6803      	ldr	r3, [r0, #0]
 800560a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800560e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005610:	2321      	movs	r3, #33	; 0x21
 8005612:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005616:	2340      	movs	r3, #64	; 0x40
 8005618:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800561c:	2300      	movs	r3, #0
 800561e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005620:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005622:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005624:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8005628:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800562a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800562c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800562e:	4b28      	ldr	r3, [pc, #160]	; (80056d0 <HAL_I2C_Mem_Write+0x11c>)
 8005630:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005632:	e9cd 6500 	strd	r6, r5, [sp]
 8005636:	464b      	mov	r3, r9
 8005638:	4642      	mov	r2, r8
 800563a:	4639      	mov	r1, r7
 800563c:	4620      	mov	r0, r4
 800563e:	f7ff fe1d 	bl	800527c <I2C_RequestMemoryWrite>
 8005642:	2800      	cmp	r0, #0
 8005644:	d02a      	beq.n	800569c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8005646:	2001      	movs	r0, #1
 8005648:	e7c3      	b.n	80055d2 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800564a:	f7ff fdf1 	bl	8005230 <I2C_WaitOnTXEFlagUntilTimeout>
 800564e:	b140      	cbz	r0, 8005662 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005650:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005652:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005654:	bf01      	itttt	eq
 8005656:	6822      	ldreq	r2, [r4, #0]
 8005658:	6813      	ldreq	r3, [r2, #0]
 800565a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800565e:	6013      	streq	r3, [r2, #0]
 8005660:	e7f1      	b.n	8005646 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005662:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005664:	6827      	ldr	r7, [r4, #0]
 8005666:	461a      	mov	r2, r3
 8005668:	f812 1b01 	ldrb.w	r1, [r2], #1
 800566c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800566e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005670:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005672:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005674:	3a01      	subs	r2, #1
 8005676:	b292      	uxth	r2, r2
 8005678:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800567a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800567c:	1e48      	subs	r0, r1, #1
 800567e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005680:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005682:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005684:	d50a      	bpl.n	800569c <HAL_I2C_Mem_Write+0xe8>
 8005686:	b148      	cbz	r0, 800569c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005688:	785a      	ldrb	r2, [r3, #1]
 800568a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800568c:	3302      	adds	r3, #2
 800568e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005690:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005692:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005694:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005696:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005698:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800569a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800569c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800569e:	462a      	mov	r2, r5
 80056a0:	4631      	mov	r1, r6
 80056a2:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80056a4:	2b00      	cmp	r3, #0
 80056a6:	d1d0      	bne.n	800564a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80056a8:	f7ff fd3b 	bl	8005122 <I2C_WaitOnBTFFlagUntilTimeout>
 80056ac:	2800      	cmp	r0, #0
 80056ae:	d1cf      	bne.n	8005650 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056b0:	6822      	ldr	r2, [r4, #0]
 80056b2:	6813      	ldr	r3, [r2, #0]
 80056b4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80056b8:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80056ba:	2320      	movs	r3, #32
 80056bc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80056c0:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80056c4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80056c8:	e783      	b.n	80055d2 <HAL_I2C_Mem_Write+0x1e>
 80056ca:	bf00      	nop
 80056cc:	00100002 	.word	0x00100002
 80056d0:	ffff0000 	.word	0xffff0000

080056d4 <HAL_I2C_Mem_Read>:
{
 80056d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80056d8:	4604      	mov	r4, r0
 80056da:	b087      	sub	sp, #28
 80056dc:	4699      	mov	r9, r3
 80056de:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80056e0:	460d      	mov	r5, r1
 80056e2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80056e4:	f7fe fb46 	bl	8003d74 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80056e8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80056ec:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80056ee:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80056f0:	d004      	beq.n	80056fc <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80056f2:	2502      	movs	r5, #2
}
 80056f4:	4628      	mov	r0, r5
 80056f6:	b007      	add	sp, #28
 80056f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80056fc:	9000      	str	r0, [sp, #0]
 80056fe:	4976      	ldr	r1, [pc, #472]	; (80058d8 <HAL_I2C_Mem_Read+0x204>)
 8005700:	2319      	movs	r3, #25
 8005702:	2201      	movs	r2, #1
 8005704:	4620      	mov	r0, r4
 8005706:	f7ff fd61 	bl	80051cc <I2C_WaitOnFlagUntilTimeout>
 800570a:	2800      	cmp	r0, #0
 800570c:	d1f1      	bne.n	80056f2 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800570e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005712:	2b01      	cmp	r3, #1
 8005714:	d0ed      	beq.n	80056f2 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005716:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005718:	2301      	movs	r3, #1
 800571a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800571e:	6803      	ldr	r3, [r0, #0]
 8005720:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005722:	bf5e      	ittt	pl
 8005724:	6803      	ldrpl	r3, [r0, #0]
 8005726:	f043 0301 	orrpl.w	r3, r3, #1
 800572a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800572c:	6803      	ldr	r3, [r0, #0]
 800572e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005732:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005734:	2322      	movs	r3, #34	; 0x22
 8005736:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800573a:	2340      	movs	r3, #64	; 0x40
 800573c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005740:	2300      	movs	r3, #0
 8005742:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005744:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005746:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005748:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800574c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800574e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005750:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005752:	4b62      	ldr	r3, [pc, #392]	; (80058dc <HAL_I2C_Mem_Read+0x208>)
 8005754:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005756:	4629      	mov	r1, r5
 8005758:	e9cd 7600 	strd	r7, r6, [sp]
 800575c:	464b      	mov	r3, r9
 800575e:	4642      	mov	r2, r8
 8005760:	4620      	mov	r0, r4
 8005762:	f7ff fde3 	bl	800532c <I2C_RequestMemoryRead>
 8005766:	4605      	mov	r5, r0
 8005768:	b108      	cbz	r0, 800576e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800576a:	2501      	movs	r5, #1
 800576c:	e7c2      	b.n	80056f4 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800576e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8005770:	6823      	ldr	r3, [r4, #0]
 8005772:	b9b2      	cbnz	r2, 80057a2 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005774:	9002      	str	r0, [sp, #8]
 8005776:	695a      	ldr	r2, [r3, #20]
 8005778:	9202      	str	r2, [sp, #8]
 800577a:	699a      	ldr	r2, [r3, #24]
 800577c:	9202      	str	r2, [sp, #8]
 800577e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005780:	681a      	ldr	r2, [r3, #0]
 8005782:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005786:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005788:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80058e0 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800578c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800578e:	2b00      	cmp	r3, #0
 8005790:	d12c      	bne.n	80057ec <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005792:	2220      	movs	r2, #32
 8005794:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005798:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800579c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80057a0:	e7a8      	b.n	80056f4 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80057a2:	2a01      	cmp	r2, #1
 80057a4:	d10a      	bne.n	80057bc <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80057a6:	681a      	ldr	r2, [r3, #0]
 80057a8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80057ac:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80057ae:	9003      	str	r0, [sp, #12]
 80057b0:	695a      	ldr	r2, [r3, #20]
 80057b2:	9203      	str	r2, [sp, #12]
 80057b4:	699a      	ldr	r2, [r3, #24]
 80057b6:	9203      	str	r2, [sp, #12]
 80057b8:	9a03      	ldr	r2, [sp, #12]
 80057ba:	e7e1      	b.n	8005780 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80057bc:	2a02      	cmp	r2, #2
 80057be:	d10e      	bne.n	80057de <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80057c0:	681a      	ldr	r2, [r3, #0]
 80057c2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80057c6:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80057c8:	681a      	ldr	r2, [r3, #0]
 80057ca:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80057ce:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80057d0:	9004      	str	r0, [sp, #16]
 80057d2:	695a      	ldr	r2, [r3, #20]
 80057d4:	9204      	str	r2, [sp, #16]
 80057d6:	699b      	ldr	r3, [r3, #24]
 80057d8:	9304      	str	r3, [sp, #16]
 80057da:	9b04      	ldr	r3, [sp, #16]
 80057dc:	e7d4      	b.n	8005788 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80057de:	9005      	str	r0, [sp, #20]
 80057e0:	695a      	ldr	r2, [r3, #20]
 80057e2:	9205      	str	r2, [sp, #20]
 80057e4:	699b      	ldr	r3, [r3, #24]
 80057e6:	9305      	str	r3, [sp, #20]
 80057e8:	9b05      	ldr	r3, [sp, #20]
 80057ea:	e7cd      	b.n	8005788 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80057ec:	2b03      	cmp	r3, #3
 80057ee:	d856      	bhi.n	800589e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80057f0:	2b01      	cmp	r3, #1
 80057f2:	d115      	bne.n	8005820 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80057f4:	4632      	mov	r2, r6
 80057f6:	4639      	mov	r1, r7
 80057f8:	4620      	mov	r0, r4
 80057fa:	f7ff fcb8 	bl	800516e <I2C_WaitOnRXNEFlagUntilTimeout>
 80057fe:	2800      	cmp	r0, #0
 8005800:	d1b3      	bne.n	800576a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005802:	6823      	ldr	r3, [r4, #0]
 8005804:	691a      	ldr	r2, [r3, #16]
 8005806:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005808:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800580a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800580c:	3301      	adds	r3, #1
 800580e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005810:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005812:	3b01      	subs	r3, #1
 8005814:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005816:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005818:	3b01      	subs	r3, #1
 800581a:	b29b      	uxth	r3, r3
 800581c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800581e:	e7b5      	b.n	800578c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005820:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005822:	9600      	str	r6, [sp, #0]
 8005824:	463b      	mov	r3, r7
 8005826:	f04f 0200 	mov.w	r2, #0
 800582a:	4641      	mov	r1, r8
 800582c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800582e:	d119      	bne.n	8005864 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005830:	f7ff fccc 	bl	80051cc <I2C_WaitOnFlagUntilTimeout>
 8005834:	2800      	cmp	r0, #0
 8005836:	d198      	bne.n	800576a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005838:	6823      	ldr	r3, [r4, #0]
 800583a:	681a      	ldr	r2, [r3, #0]
 800583c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005840:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005842:	691a      	ldr	r2, [r3, #16]
 8005844:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005846:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005848:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800584a:	1c53      	adds	r3, r2, #1
 800584c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800584e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005850:	3b01      	subs	r3, #1
 8005852:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005854:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005856:	3b01      	subs	r3, #1
 8005858:	b29b      	uxth	r3, r3
 800585a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800585c:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800585e:	691b      	ldr	r3, [r3, #16]
 8005860:	7053      	strb	r3, [r2, #1]
 8005862:	e7d2      	b.n	800580a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005864:	f7ff fcb2 	bl	80051cc <I2C_WaitOnFlagUntilTimeout>
 8005868:	2800      	cmp	r0, #0
 800586a:	f47f af7e 	bne.w	800576a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800586e:	6823      	ldr	r3, [r4, #0]
 8005870:	681a      	ldr	r2, [r3, #0]
 8005872:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005876:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005878:	691a      	ldr	r2, [r3, #16]
 800587a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800587c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800587e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005880:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005882:	3301      	adds	r3, #1
 8005884:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005886:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005888:	3b01      	subs	r3, #1
 800588a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800588c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800588e:	3b01      	subs	r3, #1
 8005890:	b29b      	uxth	r3, r3
 8005892:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005894:	4602      	mov	r2, r0
 8005896:	463b      	mov	r3, r7
 8005898:	4641      	mov	r1, r8
 800589a:	4620      	mov	r0, r4
 800589c:	e7c8      	b.n	8005830 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800589e:	4632      	mov	r2, r6
 80058a0:	4639      	mov	r1, r7
 80058a2:	4620      	mov	r0, r4
 80058a4:	f7ff fc63 	bl	800516e <I2C_WaitOnRXNEFlagUntilTimeout>
 80058a8:	2800      	cmp	r0, #0
 80058aa:	f47f af5e 	bne.w	800576a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80058ae:	6823      	ldr	r3, [r4, #0]
 80058b0:	691a      	ldr	r2, [r3, #16]
 80058b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80058b4:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 80058b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80058b8:	1c53      	adds	r3, r2, #1
 80058ba:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 80058bc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80058be:	3b01      	subs	r3, #1
 80058c0:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80058c2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80058c4:	3b01      	subs	r3, #1
 80058c6:	b29b      	uxth	r3, r3
 80058c8:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80058ca:	6823      	ldr	r3, [r4, #0]
 80058cc:	6959      	ldr	r1, [r3, #20]
 80058ce:	0749      	lsls	r1, r1, #29
 80058d0:	f57f af5c 	bpl.w	800578c <HAL_I2C_Mem_Read+0xb8>
 80058d4:	e7c3      	b.n	800585e <HAL_I2C_Mem_Read+0x18a>
 80058d6:	bf00      	nop
 80058d8:	00100002 	.word	0x00100002
 80058dc:	ffff0000 	.word	0xffff0000
 80058e0:	00010004 	.word	0x00010004

080058e4 <HAL_I2C_GetState>:
  return hi2c->State;
 80058e4:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 80058e8:	4770      	bx	lr

080058ea <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80058ea:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80058ee:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80058f0:	6804      	ldr	r4, [r0, #0]
 80058f2:	684f      	ldr	r7, [r1, #4]
 80058f4:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80058f6:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80058fa:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80058fe:	3284      	adds	r2, #132	; 0x84
 8005900:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005902:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005906:	6858      	ldr	r0, [r3, #4]
 8005908:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800590c:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800590e:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005910:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005914:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8005918:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800591a:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800591c:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005920:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005922:	68e0      	ldr	r0, [r4, #12]
 8005924:	68cd      	ldr	r5, [r1, #12]
 8005926:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800592a:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800592c:	6898      	ldr	r0, [r3, #8]
 800592e:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005932:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005934:	68e6      	ldr	r6, [r4, #12]
 8005936:	6888      	ldr	r0, [r1, #8]
 8005938:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800593c:	3001      	adds	r0, #1
 800593e:	4430      	add	r0, r6
 8005940:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005944:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005946:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005948:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800594a:	f020 0007 	bic.w	r0, r0, #7
 800594e:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005950:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005954:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005956:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005958:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800595c:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005960:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005964:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005968:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800596c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005970:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8005974:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005976:	6958      	ldr	r0, [r3, #20]
 8005978:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800597c:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800597e:	6948      	ldr	r0, [r1, #20]
 8005980:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005982:	69d8      	ldr	r0, [r3, #28]
 8005984:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8005988:	f020 0007 	bic.w	r0, r0, #7
 800598c:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800598e:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8005992:	4305      	orrs	r5, r0
 8005994:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005996:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005998:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800599a:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800599e:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80059a0:	b31e      	cbz	r6, 80059ea <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80059a2:	2e01      	cmp	r6, #1
 80059a4:	d023      	beq.n	80059ee <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80059a6:	1eb0      	subs	r0, r6, #2
 80059a8:	2802      	cmp	r0, #2
 80059aa:	d922      	bls.n	80059f2 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80059ac:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80059ae:	bf0c      	ite	eq
 80059b0:	2002      	moveq	r0, #2
 80059b2:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80059b4:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80059b6:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80059ba:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80059bc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80059be:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80059c0:	eba7 070c 	sub.w	r7, r7, ip
 80059c4:	4345      	muls	r5, r0
 80059c6:	4378      	muls	r0, r7
 80059c8:	3003      	adds	r0, #3
 80059ca:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80059ce:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80059d0:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80059d2:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80059d6:	f020 0007 	bic.w	r0, r0, #7
 80059da:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80059dc:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80059de:	58a3      	ldr	r3, [r4, r2]
 80059e0:	f043 0301 	orr.w	r3, r3, #1
 80059e4:	50a3      	str	r3, [r4, r2]
}
 80059e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80059ea:	2004      	movs	r0, #4
 80059ec:	e7e2      	b.n	80059b4 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80059ee:	2003      	movs	r0, #3
 80059f0:	e7e0      	b.n	80059b4 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80059f2:	2002      	movs	r0, #2
 80059f4:	e7de      	b.n	80059b4 <LTDC_SetConfig+0xca>
	...

080059f8 <HAL_LTDC_Init>:
{
 80059f8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80059fa:	4604      	mov	r4, r0
 80059fc:	2800      	cmp	r0, #0
 80059fe:	d063      	beq.n	8005ac8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005a00:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005a04:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005a08:	b91b      	cbnz	r3, 8005a12 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005a0a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005a0e:	f7fc f919 	bl	8001c44 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005a12:	2302      	movs	r3, #2
 8005a14:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005a18:	6823      	ldr	r3, [r4, #0]
 8005a1a:	699a      	ldr	r2, [r3, #24]
 8005a1c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005a20:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005a22:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005a26:	4302      	orrs	r2, r0
 8005a28:	68e0      	ldr	r0, [r4, #12]
 8005a2a:	6999      	ldr	r1, [r3, #24]
 8005a2c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005a2e:	6920      	ldr	r0, [r4, #16]
 8005a30:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005a32:	430a      	orrs	r2, r1
 8005a34:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005a36:	689a      	ldr	r2, [r3, #8]
 8005a38:	4924      	ldr	r1, [pc, #144]	; (8005acc <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005a3a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005a3c:	400a      	ands	r2, r1
 8005a3e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005a40:	689a      	ldr	r2, [r3, #8]
 8005a42:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005a46:	69a0      	ldr	r0, [r4, #24]
 8005a48:	4302      	orrs	r2, r0
 8005a4a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005a4c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005a4e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005a50:	400a      	ands	r2, r1
 8005a52:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005a54:	68da      	ldr	r2, [r3, #12]
 8005a56:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005a5a:	6a20      	ldr	r0, [r4, #32]
 8005a5c:	4302      	orrs	r2, r0
 8005a5e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005a60:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005a62:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005a64:	400a      	ands	r2, r1
 8005a66:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005a68:	691a      	ldr	r2, [r3, #16]
 8005a6a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005a6e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005a70:	4302      	orrs	r2, r0
 8005a72:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005a74:	695a      	ldr	r2, [r3, #20]
 8005a76:	4011      	ands	r1, r2
 8005a78:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005a7a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005a7c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005a7e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005a82:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005a84:	430a      	orrs	r2, r1
 8005a86:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005a88:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005a8a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005a8e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005a92:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005a96:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005a98:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005a9a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005a9e:	430a      	orrs	r2, r1
 8005aa0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005aa4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005aa8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005aaa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005aac:	f042 0206 	orr.w	r2, r2, #6
 8005ab0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005ab2:	699a      	ldr	r2, [r3, #24]
 8005ab4:	f042 0201 	orr.w	r2, r2, #1
 8005ab8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005aba:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005abc:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005abe:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005ac2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005ac6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005ac8:	2001      	movs	r0, #1
 8005aca:	e7fc      	b.n	8005ac6 <HAL_LTDC_Init+0xce>
 8005acc:	f000f800 	.word	0xf000f800

08005ad0 <HAL_LTDC_ErrorCallback>:
 8005ad0:	4770      	bx	lr

08005ad2 <HAL_LTDC_LineEventCallback>:
 8005ad2:	4770      	bx	lr

08005ad4 <HAL_LTDC_ReloadEventCallback>:
 8005ad4:	4770      	bx	lr

08005ad6 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005ad6:	6803      	ldr	r3, [r0, #0]
{
 8005ad8:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005ada:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005adc:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005ade:	0772      	lsls	r2, r6, #29
{
 8005ae0:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005ae2:	d514      	bpl.n	8005b0e <HAL_LTDC_IRQHandler+0x38>
 8005ae4:	0769      	lsls	r1, r5, #29
 8005ae6:	d512      	bpl.n	8005b0e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005ae8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005aea:	f022 0204 	bic.w	r2, r2, #4
 8005aee:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005af0:	2204      	movs	r2, #4
 8005af2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005af4:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005af8:	f043 0301 	orr.w	r3, r3, #1
 8005afc:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005b00:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005b02:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005b06:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005b0a:	f7ff ffe1 	bl	8005ad0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005b0e:	07b2      	lsls	r2, r6, #30
 8005b10:	d516      	bpl.n	8005b40 <HAL_LTDC_IRQHandler+0x6a>
 8005b12:	07ab      	lsls	r3, r5, #30
 8005b14:	d514      	bpl.n	8005b40 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005b16:	6823      	ldr	r3, [r4, #0]
 8005b18:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005b1a:	f022 0202 	bic.w	r2, r2, #2
 8005b1e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005b20:	2202      	movs	r2, #2
 8005b22:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005b24:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005b28:	4313      	orrs	r3, r2
 8005b2a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005b2e:	2304      	movs	r3, #4
 8005b30:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005b34:	2300      	movs	r3, #0
 8005b36:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005b3a:	4620      	mov	r0, r4
 8005b3c:	f7ff ffc8 	bl	8005ad0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005b40:	07f0      	lsls	r0, r6, #31
 8005b42:	d510      	bpl.n	8005b66 <HAL_LTDC_IRQHandler+0x90>
 8005b44:	07e9      	lsls	r1, r5, #31
 8005b46:	d50e      	bpl.n	8005b66 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005b48:	6823      	ldr	r3, [r4, #0]
 8005b4a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005b4c:	f022 0201 	bic.w	r2, r2, #1
 8005b50:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005b52:	2201      	movs	r2, #1
 8005b54:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005b56:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005b58:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005b5c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005b60:	4620      	mov	r0, r4
 8005b62:	f7ff ffb6 	bl	8005ad2 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005b66:	0732      	lsls	r2, r6, #28
 8005b68:	d511      	bpl.n	8005b8e <HAL_LTDC_IRQHandler+0xb8>
 8005b6a:	072b      	lsls	r3, r5, #28
 8005b6c:	d50f      	bpl.n	8005b8e <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005b6e:	6823      	ldr	r3, [r4, #0]
 8005b70:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005b72:	f022 0208 	bic.w	r2, r2, #8
 8005b76:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005b78:	2208      	movs	r2, #8
 8005b7a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005b7c:	2301      	movs	r3, #1
 8005b7e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005b82:	2300      	movs	r3, #0
 8005b84:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005b88:	4620      	mov	r0, r4
 8005b8a:	f7ff ffa3 	bl	8005ad4 <HAL_LTDC_ReloadEventCallback>
}
 8005b8e:	bd70      	pop	{r4, r5, r6, pc}

08005b90 <HAL_LTDC_ConfigLayer>:
{
 8005b90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005b94:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005b98:	2b01      	cmp	r3, #1
{
 8005b9a:	4606      	mov	r6, r0
 8005b9c:	460f      	mov	r7, r1
 8005b9e:	4694      	mov	ip, r2
 8005ba0:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005ba4:	d01f      	beq.n	8005be6 <HAL_LTDC_ConfigLayer+0x56>
 8005ba6:	f04f 0801 	mov.w	r8, #1
 8005baa:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005bae:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005bb2:	2434      	movs	r4, #52	; 0x34
 8005bb4:	460d      	mov	r5, r1
 8005bb6:	fb04 6402 	mla	r4, r4, r2, r6
 8005bba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005bbc:	3438      	adds	r4, #56	; 0x38
 8005bbe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005bc0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005bc2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005bc4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005bc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005bc8:	682b      	ldr	r3, [r5, #0]
 8005bca:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005bcc:	4630      	mov	r0, r6
 8005bce:	4662      	mov	r2, ip
 8005bd0:	4639      	mov	r1, r7
 8005bd2:	f7ff fe8a 	bl	80058ea <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005bd6:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005bd8:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005bda:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005bde:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005be2:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005be6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005bec <HAL_LTDC_SetPitch>:
{
 8005bec:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8005bee:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005bf2:	2b01      	cmp	r3, #1
 8005bf4:	f04f 0302 	mov.w	r3, #2
 8005bf8:	d02c      	beq.n	8005c54 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005bfa:	2434      	movs	r4, #52	; 0x34
 8005bfc:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005c00:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005c04:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005c06:	b33c      	cbz	r4, 8005c58 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005c08:	2c01      	cmp	r4, #1
 8005c0a:	d027      	beq.n	8005c5c <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005c0c:	1ea5      	subs	r5, r4, #2
 8005c0e:	429d      	cmp	r5, r3
 8005c10:	d902      	bls.n	8005c18 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8005c12:	2c07      	cmp	r4, #7
 8005c14:	bf18      	it	ne
 8005c16:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005c18:	6804      	ldr	r4, [r0, #0]
 8005c1a:	01d2      	lsls	r2, r2, #7
 8005c1c:	3284      	adds	r2, #132	; 0x84
 8005c1e:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8005c20:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005c22:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8005c24:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8005c28:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8005c2c:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005c2e:	4c0c      	ldr	r4, [pc, #48]	; (8005c60 <HAL_LTDC_SetPitch+0x74>)
 8005c30:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005c32:	f045 0501 	orr.w	r5, r5, #1
 8005c36:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8005c38:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8005c3a:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8005c3e:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005c40:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c42:	f043 0301 	orr.w	r3, r3, #1
 8005c46:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8005c48:	2301      	movs	r3, #1
 8005c4a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005c4e:	2300      	movs	r3, #0
 8005c50:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8005c54:	4618      	mov	r0, r3
 8005c56:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8005c58:	2304      	movs	r3, #4
 8005c5a:	e7dd      	b.n	8005c18 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8005c5c:	2303      	movs	r3, #3
 8005c5e:	e7db      	b.n	8005c18 <HAL_LTDC_SetPitch+0x2c>
 8005c60:	40016800 	.word	0x40016800

08005c64 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005c64:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8005c66:	2300      	movs	r3, #0
 8005c68:	9301      	str	r3, [sp, #4]
 8005c6a:	4b18      	ldr	r3, [pc, #96]	; (8005ccc <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005c6c:	4d18      	ldr	r5, [pc, #96]	; (8005cd0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8005c6e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005c70:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005c74:	641a      	str	r2, [r3, #64]	; 0x40
 8005c76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c78:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005c7c:	9301      	str	r3, [sp, #4]
 8005c7e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005c80:	4b14      	ldr	r3, [pc, #80]	; (8005cd4 <HAL_PWREx_EnableOverDrive+0x70>)
 8005c82:	2201      	movs	r2, #1
 8005c84:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005c86:	f7fe f875 	bl	8003d74 <HAL_GetTick>
 8005c8a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005c8c:	686b      	ldr	r3, [r5, #4]
 8005c8e:	03da      	lsls	r2, r3, #15
 8005c90:	d50b      	bpl.n	8005caa <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005c92:	4b11      	ldr	r3, [pc, #68]	; (8005cd8 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005c94:	4d0e      	ldr	r5, [pc, #56]	; (8005cd0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005c96:	2201      	movs	r2, #1
 8005c98:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005c9a:	f7fe f86b 	bl	8003d74 <HAL_GetTick>
 8005c9e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005ca0:	686b      	ldr	r3, [r5, #4]
 8005ca2:	039b      	lsls	r3, r3, #14
 8005ca4:	d50a      	bpl.n	8005cbc <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005ca6:	2000      	movs	r0, #0
 8005ca8:	e006      	b.n	8005cb8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005caa:	f7fe f863 	bl	8003d74 <HAL_GetTick>
 8005cae:	1b00      	subs	r0, r0, r4
 8005cb0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005cb4:	d9ea      	bls.n	8005c8c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8005cb6:	2003      	movs	r0, #3
}
 8005cb8:	b003      	add	sp, #12
 8005cba:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005cbc:	f7fe f85a 	bl	8003d74 <HAL_GetTick>
 8005cc0:	1b00      	subs	r0, r0, r4
 8005cc2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005cc6:	d9eb      	bls.n	8005ca0 <HAL_PWREx_EnableOverDrive+0x3c>
 8005cc8:	e7f5      	b.n	8005cb6 <HAL_PWREx_EnableOverDrive+0x52>
 8005cca:	bf00      	nop
 8005ccc:	40023800 	.word	0x40023800
 8005cd0:	40007000 	.word	0x40007000
 8005cd4:	420e0040 	.word	0x420e0040
 8005cd8:	420e0044 	.word	0x420e0044

08005cdc <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005cdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005ce0:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8005ce2:	b13e      	cbz	r6, 8005cf4 <QSPI_Config+0x18>
 8005ce4:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005ce8:	bf1f      	itttt	ne
 8005cea:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8005cec:	6804      	ldrne	r4, [r0, #0]
 8005cee:	f103 33ff 	addne.w	r3, r3, #4294967295
 8005cf2:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005cf4:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8005cf8:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 8005cfc:	f1ba 0f00 	cmp.w	sl, #0
 8005d00:	d04e      	beq.n	8005da0 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005d02:	694b      	ldr	r3, [r1, #20]
 8005d04:	6805      	ldr	r5, [r0, #0]
 8005d06:	f8d1 8000 	ldr.w	r8, [r1]
 8005d0a:	6b48      	ldr	r0, [r1, #52]	; 0x34
 8005d0c:	ea46 0a0a 	orr.w	sl, r6, sl
 8005d10:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 8005d14:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 8005d18:	ea4a 0a02 	orr.w	sl, sl, r2
 8005d1c:	f1bc 0f00 	cmp.w	ip, #0
 8005d20:	d026      	beq.n	8005d70 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005d22:	688b      	ldr	r3, [r1, #8]
 8005d24:	690e      	ldr	r6, [r1, #16]
 8005d26:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005d28:	ea4c 0c0a 	orr.w	ip, ip, sl
 8005d2c:	b1a7      	cbz	r7, 8005d58 <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d2e:	ea48 0307 	orr.w	r3, r8, r7
 8005d32:	4323      	orrs	r3, r4
 8005d34:	ea43 0309 	orr.w	r3, r3, r9
 8005d38:	4303      	orrs	r3, r0
 8005d3a:	68c8      	ldr	r0, [r1, #12]
 8005d3c:	4333      	orrs	r3, r6
 8005d3e:	4303      	orrs	r3, r0
 8005d40:	ea43 030e 	orr.w	r3, r3, lr
 8005d44:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005d48:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d4c:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005d4e:	d001      	beq.n	8005d54 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005d50:	684b      	ldr	r3, [r1, #4]
 8005d52:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005d54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d58:	ea48 0304 	orr.w	r3, r8, r4
 8005d5c:	ea43 0309 	orr.w	r3, r3, r9
 8005d60:	4303      	orrs	r3, r0
 8005d62:	4333      	orrs	r3, r6
 8005d64:	ea43 030e 	orr.w	r3, r3, lr
 8005d68:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d6c:	616b      	str	r3, [r5, #20]
 8005d6e:	e7f1      	b.n	8005d54 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005d70:	b167      	cbz	r7, 8005d8c <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d72:	ea48 0307 	orr.w	r3, r8, r7
 8005d76:	4323      	orrs	r3, r4
 8005d78:	ea43 0309 	orr.w	r3, r3, r9
 8005d7c:	4303      	orrs	r3, r0
 8005d7e:	68c8      	ldr	r0, [r1, #12]
 8005d80:	4303      	orrs	r3, r0
 8005d82:	ea43 030e 	orr.w	r3, r3, lr
 8005d86:	ea43 030a 	orr.w	r3, r3, sl
 8005d8a:	e7dd      	b.n	8005d48 <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005d8c:	ea48 0304 	orr.w	r3, r8, r4
 8005d90:	ea43 0309 	orr.w	r3, r3, r9
 8005d94:	4303      	orrs	r3, r0
 8005d96:	ea43 030e 	orr.w	r3, r3, lr
 8005d9a:	ea43 030a 	orr.w	r3, r3, sl
 8005d9e:	e7e5      	b.n	8005d6c <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005da0:	f1bc 0f00 	cmp.w	ip, #0
 8005da4:	d028      	beq.n	8005df8 <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005da6:	6804      	ldr	r4, [r0, #0]
 8005da8:	688b      	ldr	r3, [r1, #8]
 8005daa:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005dac:	ea46 030c 	orr.w	r3, r6, ip
 8005db0:	694e      	ldr	r6, [r1, #20]
 8005db2:	6908      	ldr	r0, [r1, #16]
 8005db4:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8005db8:	ea43 0502 	orr.w	r5, r3, r2
 8005dbc:	04b6      	lsls	r6, r6, #18
 8005dbe:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 8005dc2:	b187      	cbz	r7, 8005de6 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005dc4:	4338      	orrs	r0, r7
 8005dc6:	ea40 0008 	orr.w	r0, r0, r8
 8005dca:	4303      	orrs	r3, r0
 8005dcc:	68c8      	ldr	r0, [r1, #12]
 8005dce:	ea43 030c 	orr.w	r3, r3, ip
 8005dd2:	4303      	orrs	r3, r0
 8005dd4:	4333      	orrs	r3, r6
 8005dd6:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005dd8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ddc:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005dde:	d0b9      	beq.n	8005d54 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005de0:	684b      	ldr	r3, [r1, #4]
 8005de2:	61a3      	str	r3, [r4, #24]
 8005de4:	e7b6      	b.n	8005d54 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005de6:	ea40 0008 	orr.w	r0, r0, r8
 8005dea:	4303      	orrs	r3, r0
 8005dec:	ea43 030c 	orr.w	r3, r3, ip
 8005df0:	4333      	orrs	r3, r6
 8005df2:	432b      	orrs	r3, r5
 8005df4:	6163      	str	r3, [r4, #20]
 8005df6:	e7ad      	b.n	8005d54 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005df8:	b1af      	cbz	r7, 8005e26 <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005dfa:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8005dfc:	6800      	ldr	r0, [r0, #0]
 8005dfe:	ea46 0307 	orr.w	r3, r6, r7
 8005e02:	4313      	orrs	r3, r2
 8005e04:	4323      	orrs	r3, r4
 8005e06:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8005e08:	4323      	orrs	r3, r4
 8005e0a:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8005e0c:	4323      	orrs	r3, r4
 8005e0e:	68cc      	ldr	r4, [r1, #12]
 8005e10:	4323      	orrs	r3, r4
 8005e12:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005e14:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005e18:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005e1c:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005e1e:	d099      	beq.n	8005d54 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005e20:	684b      	ldr	r3, [r1, #4]
 8005e22:	6183      	str	r3, [r0, #24]
 8005e24:	e796      	b.n	8005d54 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005e26:	2e00      	cmp	r6, #0
 8005e28:	d094      	beq.n	8005d54 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005e2a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005e2c:	6800      	ldr	r0, [r0, #0]
 8005e2e:	4333      	orrs	r3, r6
 8005e30:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8005e32:	431a      	orrs	r2, r3
 8005e34:	4332      	orrs	r2, r6
 8005e36:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8005e38:	694b      	ldr	r3, [r1, #20]
 8005e3a:	4332      	orrs	r2, r6
 8005e3c:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8005e40:	6142      	str	r2, [r0, #20]
}
 8005e42:	e787      	b.n	8005d54 <QSPI_Config+0x78>

08005e44 <QSPI_WaitFlagStateUntilTimeout>:
{
 8005e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e48:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005e4c:	4604      	mov	r4, r0
 8005e4e:	460e      	mov	r6, r1
 8005e50:	4615      	mov	r5, r2
 8005e52:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005e54:	6822      	ldr	r2, [r4, #0]
 8005e56:	6893      	ldr	r3, [r2, #8]
 8005e58:	4233      	tst	r3, r6
 8005e5a:	bf14      	ite	ne
 8005e5c:	2301      	movne	r3, #1
 8005e5e:	2300      	moveq	r3, #0
 8005e60:	42ab      	cmp	r3, r5
 8005e62:	d101      	bne.n	8005e68 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005e64:	2000      	movs	r0, #0
 8005e66:	e012      	b.n	8005e8e <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005e68:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005e6c:	d0f3      	beq.n	8005e56 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005e6e:	f7fd ff81 	bl	8003d74 <HAL_GetTick>
 8005e72:	1bc0      	subs	r0, r0, r7
 8005e74:	4540      	cmp	r0, r8
 8005e76:	d802      	bhi.n	8005e7e <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005e78:	f1b8 0f00 	cmp.w	r8, #0
 8005e7c:	d1ea      	bne.n	8005e54 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005e7e:	2304      	movs	r3, #4
 8005e80:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005e84:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005e86:	f043 0301 	orr.w	r3, r3, #1
 8005e8a:	6463      	str	r3, [r4, #68]	; 0x44
 8005e8c:	2001      	movs	r0, #1
}
 8005e8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005e94 <HAL_QSPI_Init>:
{
 8005e94:	b530      	push	{r4, r5, lr}
 8005e96:	b085      	sub	sp, #20
 8005e98:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005e9a:	f7fd ff6b 	bl	8003d74 <HAL_GetTick>
 8005e9e:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8005ea0:	2c00      	cmp	r4, #0
 8005ea2:	d047      	beq.n	8005f34 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005ea4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005ea8:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8005eac:	b94a      	cbnz	r2, 8005ec2 <HAL_QSPI_Init+0x2e>
 8005eae:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8005eb0:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8005eb4:	4620      	mov	r0, r4
 8005eb6:	f7fb fef9 	bl	8001cac <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8005eba:	f241 3288 	movw	r2, #5000	; 0x1388
 8005ebe:	9b03      	ldr	r3, [sp, #12]
 8005ec0:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005ec2:	6820      	ldr	r0, [r4, #0]
 8005ec4:	68a1      	ldr	r1, [r4, #8]
 8005ec6:	6802      	ldr	r2, [r0, #0]
 8005ec8:	3901      	subs	r1, #1
 8005eca:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8005ece:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005ed2:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005ed4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005ed6:	9200      	str	r2, [sp, #0]
 8005ed8:	2120      	movs	r1, #32
 8005eda:	2200      	movs	r2, #0
 8005edc:	4620      	mov	r0, r4
 8005ede:	f7ff ffb1 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005ee2:	bb10      	cbnz	r0, 8005f2a <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005ee4:	69e5      	ldr	r5, [r4, #28]
 8005ee6:	68e3      	ldr	r3, [r4, #12]
 8005ee8:	6822      	ldr	r2, [r4, #0]
 8005eea:	432b      	orrs	r3, r5
 8005eec:	6a25      	ldr	r5, [r4, #32]
 8005eee:	6811      	ldr	r1, [r2, #0]
 8005ef0:	432b      	orrs	r3, r5
 8005ef2:	6865      	ldr	r5, [r4, #4]
 8005ef4:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005ef8:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005efc:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005f00:	430b      	orrs	r3, r1
 8005f02:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005f04:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005f08:	430b      	orrs	r3, r1
 8005f0a:	6921      	ldr	r1, [r4, #16]
 8005f0c:	6855      	ldr	r5, [r2, #4]
 8005f0e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005f12:	4909      	ldr	r1, [pc, #36]	; (8005f38 <HAL_QSPI_Init+0xa4>)
 8005f14:	4029      	ands	r1, r5
 8005f16:	430b      	orrs	r3, r1
 8005f18:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005f1a:	6813      	ldr	r3, [r2, #0]
 8005f1c:	f043 0301 	orr.w	r3, r3, #1
 8005f20:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005f22:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005f24:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005f26:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005f2a:	2300      	movs	r3, #0
 8005f2c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005f30:	b005      	add	sp, #20
 8005f32:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005f34:	2001      	movs	r0, #1
 8005f36:	e7fb      	b.n	8005f30 <HAL_QSPI_Init+0x9c>
 8005f38:	ffe0f8fe 	.word	0xffe0f8fe

08005f3c <HAL_QSPI_DeInit>:
{
 8005f3c:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005f3e:	4604      	mov	r4, r0
 8005f40:	b168      	cbz	r0, 8005f5e <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005f42:	6802      	ldr	r2, [r0, #0]
 8005f44:	6813      	ldr	r3, [r2, #0]
 8005f46:	f023 0301 	bic.w	r3, r3, #1
 8005f4a:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005f4c:	f7fb ff08 	bl	8001d60 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005f50:	2000      	movs	r0, #0
 8005f52:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005f54:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005f58:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8005f5c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005f5e:	2001      	movs	r0, #1
 8005f60:	e7fc      	b.n	8005f5c <HAL_QSPI_DeInit+0x20>

08005f62 <HAL_QSPI_Command>:
{
 8005f62:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005f66:	4604      	mov	r4, r0
 8005f68:	b085      	sub	sp, #20
 8005f6a:	4617      	mov	r7, r2
 8005f6c:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8005f6e:	f7fd ff01 	bl	8003d74 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005f72:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005f76:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005f78:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005f7a:	d034      	beq.n	8005fe6 <HAL_QSPI_Command+0x84>
 8005f7c:	2201      	movs	r2, #1
 8005f7e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005f82:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005f86:	2a01      	cmp	r2, #1
 8005f88:	fa5f f882 	uxtb.w	r8, r2
 8005f8c:	f04f 0602 	mov.w	r6, #2
 8005f90:	d127      	bne.n	8005fe2 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005f92:	2200      	movs	r2, #0
 8005f94:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005f96:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005f98:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005f9c:	9700      	str	r7, [sp, #0]
 8005f9e:	2120      	movs	r1, #32
 8005fa0:	4620      	mov	r0, r4
 8005fa2:	f7ff ff4f 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005fa6:	4605      	mov	r5, r0
 8005fa8:	b9a0      	cbnz	r0, 8005fd4 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005faa:	4602      	mov	r2, r0
 8005fac:	4649      	mov	r1, r9
 8005fae:	4620      	mov	r0, r4
 8005fb0:	f7ff fe94 	bl	8005cdc <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005fb4:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8005fb8:	9b03      	ldr	r3, [sp, #12]
 8005fba:	b94a      	cbnz	r2, 8005fd0 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005fbc:	9700      	str	r7, [sp, #0]
 8005fbe:	4642      	mov	r2, r8
 8005fc0:	4631      	mov	r1, r6
 8005fc2:	4620      	mov	r0, r4
 8005fc4:	f7ff ff3e 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005fc8:	4605      	mov	r5, r0
 8005fca:	b918      	cbnz	r0, 8005fd4 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005fcc:	6823      	ldr	r3, [r4, #0]
 8005fce:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005fd0:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005fd4:	2300      	movs	r3, #0
 8005fd6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005fda:	4628      	mov	r0, r5
 8005fdc:	b005      	add	sp, #20
 8005fde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8005fe2:	4635      	mov	r5, r6
 8005fe4:	e7f6      	b.n	8005fd4 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8005fe6:	2502      	movs	r5, #2
 8005fe8:	e7f7      	b.n	8005fda <HAL_QSPI_Command+0x78>

08005fea <HAL_QSPI_AutoPolling>:
{
 8005fea:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005fee:	4604      	mov	r4, r0
 8005ff0:	4615      	mov	r5, r2
 8005ff2:	461e      	mov	r6, r3
 8005ff4:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8005ff6:	f7fd febd 	bl	8003d74 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005ffa:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005ffe:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006000:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006002:	d040      	beq.n	8006086 <HAL_QSPI_AutoPolling+0x9c>
 8006004:	2201      	movs	r2, #1
 8006006:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800600a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800600e:	2a01      	cmp	r2, #1
 8006010:	b2d7      	uxtb	r7, r2
 8006012:	d136      	bne.n	8006082 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006014:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006016:	2200      	movs	r2, #0
 8006018:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800601a:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800601c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006020:	9600      	str	r6, [sp, #0]
 8006022:	2120      	movs	r1, #32
 8006024:	4620      	mov	r0, r4
 8006026:	f7ff ff0d 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800602a:	bb20      	cbnz	r0, 8006076 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800602c:	6821      	ldr	r1, [r4, #0]
 800602e:	682a      	ldr	r2, [r5, #0]
 8006030:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8006032:	686a      	ldr	r2, [r5, #4]
 8006034:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8006036:	68aa      	ldr	r2, [r5, #8]
 8006038:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800603a:	680a      	ldr	r2, [r1, #0]
 800603c:	6928      	ldr	r0, [r5, #16]
 800603e:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8006042:	4302      	orrs	r2, r0
 8006044:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006048:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800604a:	68ea      	ldr	r2, [r5, #12]
 800604c:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006050:	4641      	mov	r1, r8
 8006052:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006056:	4620      	mov	r0, r4
 8006058:	f7ff fe40 	bl	8005cdc <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800605c:	9b03      	ldr	r3, [sp, #12]
 800605e:	9600      	str	r6, [sp, #0]
 8006060:	463a      	mov	r2, r7
 8006062:	2108      	movs	r1, #8
 8006064:	4620      	mov	r0, r4
 8006066:	f7ff feed 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800606a:	b920      	cbnz	r0, 8006076 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800606c:	6823      	ldr	r3, [r4, #0]
 800606e:	2208      	movs	r2, #8
 8006070:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006072:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006076:	2300      	movs	r3, #0
 8006078:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800607c:	b004      	add	sp, #16
 800607e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8006082:	2002      	movs	r0, #2
 8006084:	e7f7      	b.n	8006076 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8006086:	2002      	movs	r0, #2
 8006088:	e7f8      	b.n	800607c <HAL_QSPI_AutoPolling+0x92>

0800608a <HAL_QSPI_MemoryMapped>:
{
 800608a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800608c:	4604      	mov	r4, r0
 800608e:	4616      	mov	r6, r2
 8006090:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006092:	f7fd fe6f 	bl	8003d74 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006096:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800609a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800609c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800609e:	d032      	beq.n	8006106 <HAL_QSPI_MemoryMapped+0x7c>
 80060a0:	2201      	movs	r2, #1
 80060a2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80060a6:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80060aa:	2a01      	cmp	r2, #1
 80060ac:	d129      	bne.n	8006102 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80060ae:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80060b0:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80060b2:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80060b4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80060b8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80060ba:	9100      	str	r1, [sp, #0]
 80060bc:	4620      	mov	r0, r4
 80060be:	2120      	movs	r1, #32
 80060c0:	f7ff fec0 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80060c4:	4605      	mov	r5, r0
 80060c6:	b9b0      	cbnz	r0, 80060f6 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80060c8:	6823      	ldr	r3, [r4, #0]
 80060ca:	6872      	ldr	r2, [r6, #4]
 80060cc:	6818      	ldr	r0, [r3, #0]
 80060ce:	f020 0008 	bic.w	r0, r0, #8
 80060d2:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80060d4:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80060d6:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80060d8:	d107      	bne.n	80060ea <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 80060da:	6832      	ldr	r2, [r6, #0]
 80060dc:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 80060de:	2210      	movs	r2, #16
 80060e0:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 80060e2:	681a      	ldr	r2, [r3, #0]
 80060e4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80060e8:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 80060ea:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 80060ee:	4639      	mov	r1, r7
 80060f0:	4620      	mov	r0, r4
 80060f2:	f7ff fdf3 	bl	8005cdc <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 80060f6:	2300      	movs	r3, #0
 80060f8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80060fc:	4628      	mov	r0, r5
 80060fe:	b003      	add	sp, #12
 8006100:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8006102:	2502      	movs	r5, #2
 8006104:	e7f7      	b.n	80060f6 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8006106:	2502      	movs	r5, #2
 8006108:	e7f8      	b.n	80060fc <HAL_QSPI_MemoryMapped+0x72>

0800610a <HAL_QSPI_Abort>:
{
 800610a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800610c:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800610e:	f7fd fe31 	bl	8003d74 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8006112:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 8006116:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8006118:	f012 0002 	ands.w	r0, r2, #2
 800611c:	d036      	beq.n	800618c <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 800611e:	2200      	movs	r2, #0
 8006120:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8006124:	6822      	ldr	r2, [r4, #0]
 8006126:	6811      	ldr	r1, [r2, #0]
 8006128:	0749      	lsls	r1, r1, #29
 800612a:	d50d      	bpl.n	8006148 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800612c:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800612e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8006130:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006132:	f021 0104 	bic.w	r1, r1, #4
 8006136:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8006138:	f7fe f8f2 	bl	8004320 <HAL_DMA_Abort>
      if(status != HAL_OK)
 800613c:	9b03      	ldr	r3, [sp, #12]
 800613e:	b118      	cbz	r0, 8006148 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8006140:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8006142:	f042 0204 	orr.w	r2, r2, #4
 8006146:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006148:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800614a:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800614c:	680a      	ldr	r2, [r1, #0]
 800614e:	f042 0202 	orr.w	r2, r2, #2
 8006152:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006154:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006156:	9200      	str	r2, [sp, #0]
 8006158:	2102      	movs	r1, #2
 800615a:	2201      	movs	r2, #1
 800615c:	4620      	mov	r0, r4
 800615e:	f7ff fe71 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006162:	9b03      	ldr	r3, [sp, #12]
 8006164:	b990      	cbnz	r0, 800618c <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006166:	6822      	ldr	r2, [r4, #0]
 8006168:	2102      	movs	r1, #2
 800616a:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800616c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800616e:	9200      	str	r2, [sp, #0]
 8006170:	2120      	movs	r1, #32
 8006172:	4602      	mov	r2, r0
 8006174:	4620      	mov	r0, r4
 8006176:	f7ff fe65 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800617a:	b938      	cbnz	r0, 800618c <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800617c:	6822      	ldr	r2, [r4, #0]
 800617e:	6953      	ldr	r3, [r2, #20]
 8006180:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8006184:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8006186:	2301      	movs	r3, #1
 8006188:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800618c:	b004      	add	sp, #16
 800618e:	bd10      	pop	{r4, pc}

08006190 <HAL_QSPI_Transmit>:
{
 8006190:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006192:	4604      	mov	r4, r0
 8006194:	b085      	sub	sp, #20
 8006196:	4616      	mov	r6, r2
 8006198:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800619a:	f7fd fdeb 	bl	8003d74 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800619e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80061a2:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 80061a4:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80061a6:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80061a8:	d04c      	beq.n	8006244 <HAL_QSPI_Transmit+0xb4>
 80061aa:	2201      	movs	r2, #1
 80061ac:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80061b0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80061b4:	2a01      	cmp	r2, #1
 80061b6:	b2d0      	uxtb	r0, r2
 80061b8:	d142      	bne.n	8006240 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80061ba:	2200      	movs	r2, #0
 80061bc:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80061be:	2f00      	cmp	r7, #0
 80061c0:	d039      	beq.n	8006236 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80061c2:	2212      	movs	r2, #18
 80061c4:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80061c8:	692a      	ldr	r2, [r5, #16]
 80061ca:	3201      	adds	r2, #1
 80061cc:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80061ce:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 80061d0:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80061d2:	3201      	adds	r2, #1
 80061d4:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80061d6:	696a      	ldr	r2, [r5, #20]
 80061d8:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 80061dc:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 80061de:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80061e0:	b9a2      	cbnz	r2, 800620c <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80061e2:	9600      	str	r6, [sp, #0]
 80061e4:	2201      	movs	r2, #1
 80061e6:	2102      	movs	r1, #2
 80061e8:	4620      	mov	r0, r4
 80061ea:	f7ff fe2b 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80061ee:	b928      	cbnz	r0, 80061fc <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80061f0:	6823      	ldr	r3, [r4, #0]
 80061f2:	2202      	movs	r2, #2
 80061f4:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80061f6:	4620      	mov	r0, r4
 80061f8:	f7ff ff87 	bl	800610a <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80061fc:	2301      	movs	r3, #1
 80061fe:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006202:	2300      	movs	r3, #0
 8006204:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006208:	b005      	add	sp, #20
 800620a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800620c:	9600      	str	r6, [sp, #0]
 800620e:	2201      	movs	r2, #1
 8006210:	2104      	movs	r1, #4
 8006212:	4620      	mov	r0, r4
 8006214:	9303      	str	r3, [sp, #12]
 8006216:	f7ff fe15 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800621a:	2800      	cmp	r0, #0
 800621c:	d1ee      	bne.n	80061fc <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800621e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006220:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006222:	7812      	ldrb	r2, [r2, #0]
 8006224:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8006228:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800622a:	3201      	adds	r2, #1
 800622c:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800622e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006230:	3a01      	subs	r2, #1
 8006232:	62e2      	str	r2, [r4, #44]	; 0x2c
 8006234:	e7d3      	b.n	80061de <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006236:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006238:	f043 0308 	orr.w	r3, r3, #8
 800623c:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800623e:	e7e0      	b.n	8006202 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8006240:	2002      	movs	r0, #2
 8006242:	e7de      	b.n	8006202 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8006244:	2002      	movs	r0, #2
 8006246:	e7df      	b.n	8006208 <HAL_QSPI_Transmit+0x78>

08006248 <HAL_QSPI_Receive>:
{
 8006248:	b5f0      	push	{r4, r5, r6, r7, lr}
 800624a:	4604      	mov	r4, r0
 800624c:	b085      	sub	sp, #20
 800624e:	4616      	mov	r6, r2
 8006250:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8006252:	f7fd fd8f 	bl	8003d74 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8006256:	6825      	ldr	r5, [r4, #0]
 8006258:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800625c:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006260:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006262:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8006264:	d050      	beq.n	8006308 <HAL_QSPI_Receive+0xc0>
 8006266:	2201      	movs	r2, #1
 8006268:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800626c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006270:	2a01      	cmp	r2, #1
 8006272:	b2d0      	uxtb	r0, r2
 8006274:	d146      	bne.n	8006304 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006276:	2200      	movs	r2, #0
 8006278:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800627a:	2f00      	cmp	r7, #0
 800627c:	d03d      	beq.n	80062fa <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800627e:	2222      	movs	r2, #34	; 0x22
 8006280:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006284:	692a      	ldr	r2, [r5, #16]
 8006286:	3201      	adds	r2, #1
 8006288:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800628a:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800628c:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800628e:	3201      	adds	r2, #1
 8006290:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8006292:	6969      	ldr	r1, [r5, #20]
 8006294:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8006298:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800629c:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800629e:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 80062a2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80062a4:	b9a2      	cbnz	r2, 80062d0 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80062a6:	9600      	str	r6, [sp, #0]
 80062a8:	2201      	movs	r2, #1
 80062aa:	2102      	movs	r1, #2
 80062ac:	4620      	mov	r0, r4
 80062ae:	f7ff fdc9 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80062b2:	b928      	cbnz	r0, 80062c0 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80062b4:	6823      	ldr	r3, [r4, #0]
 80062b6:	2202      	movs	r2, #2
 80062b8:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80062ba:	4620      	mov	r0, r4
 80062bc:	f7ff ff25 	bl	800610a <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80062c0:	2301      	movs	r3, #1
 80062c2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80062c6:	2300      	movs	r3, #0
 80062c8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80062cc:	b005      	add	sp, #20
 80062ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 80062d0:	9600      	str	r6, [sp, #0]
 80062d2:	2201      	movs	r2, #1
 80062d4:	2106      	movs	r1, #6
 80062d6:	4620      	mov	r0, r4
 80062d8:	9303      	str	r3, [sp, #12]
 80062da:	f7ff fdb3 	bl	8005e44 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 80062de:	2800      	cmp	r0, #0
 80062e0:	d1ee      	bne.n	80062c0 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 80062e2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80062e4:	f895 1020 	ldrb.w	r1, [r5, #32]
 80062e8:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 80062ea:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80062ec:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 80062ee:	3201      	adds	r2, #1
 80062f0:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80062f2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80062f4:	3a01      	subs	r2, #1
 80062f6:	63a2      	str	r2, [r4, #56]	; 0x38
 80062f8:	e7d3      	b.n	80062a2 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80062fa:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80062fc:	f043 0308 	orr.w	r3, r3, #8
 8006300:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006302:	e7e0      	b.n	80062c6 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8006304:	2002      	movs	r0, #2
 8006306:	e7de      	b.n	80062c6 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8006308:	2002      	movs	r0, #2
 800630a:	e7df      	b.n	80062cc <HAL_QSPI_Receive+0x84>

0800630c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800630c:	4913      	ldr	r1, [pc, #76]	; (800635c <HAL_RCC_GetSysClockFreq+0x50>)
{
 800630e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006310:	688b      	ldr	r3, [r1, #8]
 8006312:	f003 030c 	and.w	r3, r3, #12
 8006316:	2b04      	cmp	r3, #4
 8006318:	d01c      	beq.n	8006354 <HAL_RCC_GetSysClockFreq+0x48>
 800631a:	2b08      	cmp	r3, #8
 800631c:	d11c      	bne.n	8006358 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800631e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006320:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006322:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006324:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006328:	bf14      	ite	ne
 800632a:	480d      	ldrne	r0, [pc, #52]	; (8006360 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800632c:	480d      	ldreq	r0, [pc, #52]	; (8006364 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800632e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006332:	bf18      	it	ne
 8006334:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006336:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800633a:	fba1 0100 	umull	r0, r1, r1, r0
 800633e:	f7f9 ffaf 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006342:	4b06      	ldr	r3, [pc, #24]	; (800635c <HAL_RCC_GetSysClockFreq+0x50>)
 8006344:	685b      	ldr	r3, [r3, #4]
 8006346:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800634a:	3301      	adds	r3, #1
 800634c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800634e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006352:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006354:	4802      	ldr	r0, [pc, #8]	; (8006360 <HAL_RCC_GetSysClockFreq+0x54>)
 8006356:	e7fc      	b.n	8006352 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006358:	4802      	ldr	r0, [pc, #8]	; (8006364 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800635a:	e7fa      	b.n	8006352 <HAL_RCC_GetSysClockFreq+0x46>
 800635c:	40023800 	.word	0x40023800
 8006360:	007a1200 	.word	0x007a1200
 8006364:	00f42400 	.word	0x00f42400

08006368 <HAL_RCC_ClockConfig>:
{
 8006368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800636c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800636e:	4604      	mov	r4, r0
 8006370:	b910      	cbnz	r0, 8006378 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006372:	2001      	movs	r0, #1
}
 8006374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006378:	4b44      	ldr	r3, [pc, #272]	; (800648c <HAL_RCC_ClockConfig+0x124>)
 800637a:	681a      	ldr	r2, [r3, #0]
 800637c:	f002 020f 	and.w	r2, r2, #15
 8006380:	428a      	cmp	r2, r1
 8006382:	d328      	bcc.n	80063d6 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006384:	6822      	ldr	r2, [r4, #0]
 8006386:	0797      	lsls	r7, r2, #30
 8006388:	d42d      	bmi.n	80063e6 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800638a:	07d0      	lsls	r0, r2, #31
 800638c:	d441      	bmi.n	8006412 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800638e:	4b3f      	ldr	r3, [pc, #252]	; (800648c <HAL_RCC_ClockConfig+0x124>)
 8006390:	681a      	ldr	r2, [r3, #0]
 8006392:	f002 020f 	and.w	r2, r2, #15
 8006396:	42aa      	cmp	r2, r5
 8006398:	d866      	bhi.n	8006468 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800639a:	6822      	ldr	r2, [r4, #0]
 800639c:	0751      	lsls	r1, r2, #29
 800639e:	d46c      	bmi.n	800647a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80063a0:	0713      	lsls	r3, r2, #28
 80063a2:	d507      	bpl.n	80063b4 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80063a4:	4a3a      	ldr	r2, [pc, #232]	; (8006490 <HAL_RCC_ClockConfig+0x128>)
 80063a6:	6921      	ldr	r1, [r4, #16]
 80063a8:	6893      	ldr	r3, [r2, #8]
 80063aa:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80063ae:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80063b2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80063b4:	f7ff ffaa 	bl	800630c <HAL_RCC_GetSysClockFreq>
 80063b8:	4b35      	ldr	r3, [pc, #212]	; (8006490 <HAL_RCC_ClockConfig+0x128>)
 80063ba:	4a36      	ldr	r2, [pc, #216]	; (8006494 <HAL_RCC_ClockConfig+0x12c>)
 80063bc:	689b      	ldr	r3, [r3, #8]
 80063be:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80063c2:	5cd3      	ldrb	r3, [r2, r3]
 80063c4:	40d8      	lsrs	r0, r3
 80063c6:	4b34      	ldr	r3, [pc, #208]	; (8006498 <HAL_RCC_ClockConfig+0x130>)
 80063c8:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80063ca:	4b34      	ldr	r3, [pc, #208]	; (800649c <HAL_RCC_ClockConfig+0x134>)
 80063cc:	6818      	ldr	r0, [r3, #0]
 80063ce:	f7fb fd9d 	bl	8001f0c <HAL_InitTick>
  return HAL_OK;
 80063d2:	2000      	movs	r0, #0
 80063d4:	e7ce      	b.n	8006374 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80063d6:	b2ca      	uxtb	r2, r1
 80063d8:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80063da:	681b      	ldr	r3, [r3, #0]
 80063dc:	f003 030f 	and.w	r3, r3, #15
 80063e0:	428b      	cmp	r3, r1
 80063e2:	d1c6      	bne.n	8006372 <HAL_RCC_ClockConfig+0xa>
 80063e4:	e7ce      	b.n	8006384 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80063e6:	4b2a      	ldr	r3, [pc, #168]	; (8006490 <HAL_RCC_ClockConfig+0x128>)
 80063e8:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80063ec:	bf1e      	ittt	ne
 80063ee:	6899      	ldrne	r1, [r3, #8]
 80063f0:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 80063f4:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80063f6:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80063f8:	bf42      	ittt	mi
 80063fa:	6899      	ldrmi	r1, [r3, #8]
 80063fc:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006400:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006402:	4923      	ldr	r1, [pc, #140]	; (8006490 <HAL_RCC_ClockConfig+0x128>)
 8006404:	68a0      	ldr	r0, [r4, #8]
 8006406:	688b      	ldr	r3, [r1, #8]
 8006408:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800640c:	4303      	orrs	r3, r0
 800640e:	608b      	str	r3, [r1, #8]
 8006410:	e7bb      	b.n	800638a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006412:	6862      	ldr	r2, [r4, #4]
 8006414:	4b1e      	ldr	r3, [pc, #120]	; (8006490 <HAL_RCC_ClockConfig+0x128>)
 8006416:	2a01      	cmp	r2, #1
 8006418:	d11c      	bne.n	8006454 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800641a:	681b      	ldr	r3, [r3, #0]
 800641c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006420:	d0a7      	beq.n	8006372 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006422:	4e1b      	ldr	r6, [pc, #108]	; (8006490 <HAL_RCC_ClockConfig+0x128>)
 8006424:	68b3      	ldr	r3, [r6, #8]
 8006426:	f023 0303 	bic.w	r3, r3, #3
 800642a:	4313      	orrs	r3, r2
 800642c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800642e:	f7fd fca1 	bl	8003d74 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006432:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8006436:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006438:	68b3      	ldr	r3, [r6, #8]
 800643a:	6862      	ldr	r2, [r4, #4]
 800643c:	f003 030c 	and.w	r3, r3, #12
 8006440:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006444:	d0a3      	beq.n	800638e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006446:	f7fd fc95 	bl	8003d74 <HAL_GetTick>
 800644a:	1bc0      	subs	r0, r0, r7
 800644c:	4540      	cmp	r0, r8
 800644e:	d9f3      	bls.n	8006438 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006450:	2003      	movs	r0, #3
 8006452:	e78f      	b.n	8006374 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006454:	1e91      	subs	r1, r2, #2
 8006456:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006458:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800645a:	d802      	bhi.n	8006462 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800645c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006460:	e7de      	b.n	8006420 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006462:	f013 0f02 	tst.w	r3, #2
 8006466:	e7db      	b.n	8006420 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006468:	b2ea      	uxtb	r2, r5
 800646a:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800646c:	681b      	ldr	r3, [r3, #0]
 800646e:	f003 030f 	and.w	r3, r3, #15
 8006472:	42ab      	cmp	r3, r5
 8006474:	f47f af7d 	bne.w	8006372 <HAL_RCC_ClockConfig+0xa>
 8006478:	e78f      	b.n	800639a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800647a:	4905      	ldr	r1, [pc, #20]	; (8006490 <HAL_RCC_ClockConfig+0x128>)
 800647c:	68e0      	ldr	r0, [r4, #12]
 800647e:	688b      	ldr	r3, [r1, #8]
 8006480:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006484:	4303      	orrs	r3, r0
 8006486:	608b      	str	r3, [r1, #8]
 8006488:	e78a      	b.n	80063a0 <HAL_RCC_ClockConfig+0x38>
 800648a:	bf00      	nop
 800648c:	40023c00 	.word	0x40023c00
 8006490:	40023800 	.word	0x40023800
 8006494:	0801dab1 	.word	0x0801dab1
 8006498:	20000050 	.word	0x20000050
 800649c:	20000058 	.word	0x20000058

080064a0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80064a0:	4b04      	ldr	r3, [pc, #16]	; (80064b4 <HAL_RCC_GetPCLK1Freq+0x14>)
 80064a2:	4a05      	ldr	r2, [pc, #20]	; (80064b8 <HAL_RCC_GetPCLK1Freq+0x18>)
 80064a4:	689b      	ldr	r3, [r3, #8]
 80064a6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80064aa:	5cd3      	ldrb	r3, [r2, r3]
 80064ac:	4a03      	ldr	r2, [pc, #12]	; (80064bc <HAL_RCC_GetPCLK1Freq+0x1c>)
 80064ae:	6810      	ldr	r0, [r2, #0]
}
 80064b0:	40d8      	lsrs	r0, r3
 80064b2:	4770      	bx	lr
 80064b4:	40023800 	.word	0x40023800
 80064b8:	0801dac1 	.word	0x0801dac1
 80064bc:	20000050 	.word	0x20000050

080064c0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80064c0:	230f      	movs	r3, #15
 80064c2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80064c4:	4b0b      	ldr	r3, [pc, #44]	; (80064f4 <HAL_RCC_GetClockConfig+0x34>)
 80064c6:	689a      	ldr	r2, [r3, #8]
 80064c8:	f002 0203 	and.w	r2, r2, #3
 80064cc:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80064ce:	689a      	ldr	r2, [r3, #8]
 80064d0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80064d4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80064d6:	689a      	ldr	r2, [r3, #8]
 80064d8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80064dc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80064de:	689b      	ldr	r3, [r3, #8]
 80064e0:	08db      	lsrs	r3, r3, #3
 80064e2:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80064e6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80064e8:	4b03      	ldr	r3, [pc, #12]	; (80064f8 <HAL_RCC_GetClockConfig+0x38>)
 80064ea:	681b      	ldr	r3, [r3, #0]
 80064ec:	f003 030f 	and.w	r3, r3, #15
 80064f0:	600b      	str	r3, [r1, #0]
}
 80064f2:	4770      	bx	lr
 80064f4:	40023800 	.word	0x40023800
 80064f8:	40023c00 	.word	0x40023c00

080064fc <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80064fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80064fe:	6802      	ldr	r2, [r0, #0]
{
 8006500:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006502:	0610      	lsls	r0, r2, #24
 8006504:	d508      	bpl.n	8006518 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006506:	49a8      	ldr	r1, [pc, #672]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8006508:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800650a:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800650e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8006512:	4303      	orrs	r3, r0
 8006514:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8006518:	05d1      	lsls	r1, r2, #23
 800651a:	d508      	bpl.n	800652e <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800651c:	49a2      	ldr	r1, [pc, #648]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800651e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8006520:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006524:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006528:	4303      	orrs	r3, r0
 800652a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800652e:	f012 0f43 	tst.w	r2, #67	; 0x43
 8006532:	d172      	bne.n	800661a <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006534:	6823      	ldr	r3, [r4, #0]
 8006536:	f013 0f0c 	tst.w	r3, #12
 800653a:	f000 80bf 	beq.w	80066bc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800653e:	4d9b      	ldr	r5, [pc, #620]	; (80067ac <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006540:	4e99      	ldr	r6, [pc, #612]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006542:	2300      	movs	r3, #0
 8006544:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006546:	f7fd fc15 	bl	8003d74 <HAL_GetTick>
 800654a:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800654c:	6833      	ldr	r3, [r6, #0]
 800654e:	009a      	lsls	r2, r3, #2
 8006550:	f100 80f9 	bmi.w	8006746 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006554:	6822      	ldr	r2, [r4, #0]
 8006556:	0753      	lsls	r3, r2, #29
 8006558:	d51a      	bpl.n	8006590 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800655a:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800655e:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8006562:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006566:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800656a:	430b      	orrs	r3, r1
 800656c:	6921      	ldr	r1, [r4, #16]
 800656e:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8006572:	69a1      	ldr	r1, [r4, #24]
 8006574:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8006578:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800657c:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8006580:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006582:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006586:	3901      	subs	r1, #1
 8006588:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800658c:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006590:	0717      	lsls	r7, r2, #28
 8006592:	d519      	bpl.n	80065c8 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8006594:	4984      	ldr	r1, [pc, #528]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8006596:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800659a:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800659e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80065a2:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 80065a6:	4303      	orrs	r3, r0
 80065a8:	6920      	ldr	r0, [r4, #16]
 80065aa:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80065ae:	69e0      	ldr	r0, [r4, #28]
 80065b0:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 80065b4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80065b8:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80065bc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80065be:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80065c2:	4303      	orrs	r3, r0
 80065c4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 80065c8:	0616      	lsls	r6, r2, #24
 80065ca:	d517      	bpl.n	80065fc <HAL_RCCEx_PeriphCLKConfig+0x100>
 80065cc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80065ce:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80065d2:	d113      	bne.n	80065fc <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80065d4:	4974      	ldr	r1, [pc, #464]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80065d6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80065da:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 80065de:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 80065e2:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80065e6:	4313      	orrs	r3, r2
 80065e8:	6922      	ldr	r2, [r4, #16]
 80065ea:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80065ee:	6962      	ldr	r2, [r4, #20]
 80065f0:	0852      	lsrs	r2, r2, #1
 80065f2:	3a01      	subs	r2, #1
 80065f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80065f8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80065fc:	2301      	movs	r3, #1
 80065fe:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006600:	f7fd fbb8 	bl	8003d74 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006604:	4e68      	ldr	r6, [pc, #416]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8006606:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006608:	6833      	ldr	r3, [r6, #0]
 800660a:	0098      	lsls	r0, r3, #2
 800660c:	d458      	bmi.n	80066c0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800660e:	f7fd fbb1 	bl	8003d74 <HAL_GetTick>
 8006612:	1b40      	subs	r0, r0, r5
 8006614:	2802      	cmp	r0, #2
 8006616:	d9f7      	bls.n	8006608 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8006618:	e04d      	b.n	80066b6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 800661a:	4d65      	ldr	r5, [pc, #404]	; (80067b0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800661c:	4f62      	ldr	r7, [pc, #392]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 800661e:	2300      	movs	r3, #0
 8006620:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006622:	f7fd fba7 	bl	8003d74 <HAL_GetTick>
 8006626:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006628:	683b      	ldr	r3, [r7, #0]
 800662a:	011b      	lsls	r3, r3, #4
 800662c:	d43e      	bmi.n	80066ac <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800662e:	6821      	ldr	r1, [r4, #0]
 8006630:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006632:	bf41      	itttt	mi
 8006634:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006638:	071b      	lslmi	r3, r3, #28
 800663a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800663e:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006642:	078a      	lsls	r2, r1, #30
 8006644:	d515      	bpl.n	8006672 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006646:	4a58      	ldr	r2, [pc, #352]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006648:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800664a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800664e:	6866      	ldr	r6, [r4, #4]
 8006650:	061b      	lsls	r3, r3, #24
 8006652:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006656:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 800665a:	4303      	orrs	r3, r0
 800665c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006660:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006664:	6a23      	ldr	r3, [r4, #32]
 8006666:	f020 001f 	bic.w	r0, r0, #31
 800666a:	3b01      	subs	r3, #1
 800666c:	4303      	orrs	r3, r0
 800666e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006672:	064b      	lsls	r3, r1, #25
 8006674:	d50a      	bpl.n	800668c <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006676:	68e3      	ldr	r3, [r4, #12]
 8006678:	6862      	ldr	r2, [r4, #4]
 800667a:	061b      	lsls	r3, r3, #24
 800667c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006680:	68a2      	ldr	r2, [r4, #8]
 8006682:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006686:	4a48      	ldr	r2, [pc, #288]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8006688:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800668c:	2301      	movs	r3, #1
 800668e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006690:	f7fd fb70 	bl	8003d74 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006694:	4e44      	ldr	r6, [pc, #272]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8006696:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006698:	6833      	ldr	r3, [r6, #0]
 800669a:	011f      	lsls	r7, r3, #4
 800669c:	f53f af4a 	bmi.w	8006534 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80066a0:	f7fd fb68 	bl	8003d74 <HAL_GetTick>
 80066a4:	1b40      	subs	r0, r0, r5
 80066a6:	2802      	cmp	r0, #2
 80066a8:	d9f6      	bls.n	8006698 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80066aa:	e004      	b.n	80066b6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80066ac:	f7fd fb62 	bl	8003d74 <HAL_GetTick>
 80066b0:	1b80      	subs	r0, r0, r6
 80066b2:	2802      	cmp	r0, #2
 80066b4:	d9b8      	bls.n	8006628 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 80066b6:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 80066b8:	b003      	add	sp, #12
 80066ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 80066bc:	0618      	lsls	r0, r3, #24
 80066be:	d43d      	bmi.n	800673c <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80066c0:	6823      	ldr	r3, [r4, #0]
 80066c2:	0699      	lsls	r1, r3, #26
 80066c4:	d530      	bpl.n	8006728 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 80066c6:	2300      	movs	r3, #0
 80066c8:	9301      	str	r3, [sp, #4]
 80066ca:	4b37      	ldr	r3, [pc, #220]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 80066cc:	4d39      	ldr	r5, [pc, #228]	; (80067b4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80066ce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80066d0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80066d4:	641a      	str	r2, [r3, #64]	; 0x40
 80066d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066d8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80066dc:	9301      	str	r3, [sp, #4]
 80066de:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80066e0:	682b      	ldr	r3, [r5, #0]
 80066e2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80066e6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80066e8:	f7fd fb44 	bl	8003d74 <HAL_GetTick>
 80066ec:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 80066ee:	682b      	ldr	r3, [r5, #0]
 80066f0:	05d9      	lsls	r1, r3, #23
 80066f2:	d52f      	bpl.n	8006754 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80066f4:	4d2c      	ldr	r5, [pc, #176]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80066f6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80066f8:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80066fc:	d130      	bne.n	8006760 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80066fe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006700:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006704:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006708:	4a27      	ldr	r2, [pc, #156]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800670a:	d148      	bne.n	800679e <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 800670c:	6891      	ldr	r1, [r2, #8]
 800670e:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8006712:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006716:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800671a:	4301      	orrs	r1, r0
 800671c:	6091      	str	r1, [r2, #8]
 800671e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006720:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006724:	430b      	orrs	r3, r1
 8006726:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006728:	6820      	ldr	r0, [r4, #0]
 800672a:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800672e:	bf1f      	itttt	ne
 8006730:	4b21      	ldrne	r3, [pc, #132]	; (80067b8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8006732:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8006736:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 8006738:	2000      	movne	r0, #0
 800673a:	e7bd      	b.n	80066b8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800673c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800673e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006742:	d1bd      	bne.n	80066c0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 8006744:	e6fb      	b.n	800653e <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006746:	f7fd fb15 	bl	8003d74 <HAL_GetTick>
 800674a:	1bc0      	subs	r0, r0, r7
 800674c:	2802      	cmp	r0, #2
 800674e:	f67f aefd 	bls.w	800654c <HAL_RCCEx_PeriphCLKConfig+0x50>
 8006752:	e7b0      	b.n	80066b6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006754:	f7fd fb0e 	bl	8003d74 <HAL_GetTick>
 8006758:	1b80      	subs	r0, r0, r6
 800675a:	2802      	cmp	r0, #2
 800675c:	d9c7      	bls.n	80066ee <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 800675e:	e7aa      	b.n	80066b6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006760:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006762:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006766:	4293      	cmp	r3, r2
 8006768:	d0c9      	beq.n	80066fe <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800676a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800676c:	4a13      	ldr	r2, [pc, #76]	; (80067bc <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800676e:	2101      	movs	r1, #1
 8006770:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006772:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006776:	2100      	movs	r1, #0
 8006778:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800677a:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800677c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800677e:	07da      	lsls	r2, r3, #31
 8006780:	d5bd      	bpl.n	80066fe <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 8006782:	f7fd faf7 	bl	8003d74 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006786:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800678a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800678c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800678e:	079b      	lsls	r3, r3, #30
 8006790:	d4b5      	bmi.n	80066fe <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006792:	f7fd faef 	bl	8003d74 <HAL_GetTick>
 8006796:	1b80      	subs	r0, r0, r6
 8006798:	42b8      	cmp	r0, r7
 800679a:	d9f7      	bls.n	800678c <HAL_RCCEx_PeriphCLKConfig+0x290>
 800679c:	e78b      	b.n	80066b6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800679e:	6891      	ldr	r1, [r2, #8]
 80067a0:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80067a4:	e7ba      	b.n	800671c <HAL_RCCEx_PeriphCLKConfig+0x220>
 80067a6:	bf00      	nop
 80067a8:	40023800 	.word	0x40023800
 80067ac:	42470070 	.word	0x42470070
 80067b0:	42470068 	.word	0x42470068
 80067b4:	40007000 	.word	0x40007000
 80067b8:	424711e0 	.word	0x424711e0
 80067bc:	42470e40 	.word	0x42470e40

080067c0 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80067c0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80067c4:	4604      	mov	r4, r0
 80067c6:	b340      	cbz	r0, 800681a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80067c8:	6803      	ldr	r3, [r0, #0]
 80067ca:	07dd      	lsls	r5, r3, #31
 80067cc:	d410      	bmi.n	80067f0 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80067ce:	6823      	ldr	r3, [r4, #0]
 80067d0:	0798      	lsls	r0, r3, #30
 80067d2:	d45e      	bmi.n	8006892 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80067d4:	6823      	ldr	r3, [r4, #0]
 80067d6:	071a      	lsls	r2, r3, #28
 80067d8:	f100 80a0 	bmi.w	800691c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80067dc:	6823      	ldr	r3, [r4, #0]
 80067de:	075b      	lsls	r3, r3, #29
 80067e0:	f100 80be 	bmi.w	8006960 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80067e4:	69a0      	ldr	r0, [r4, #24]
 80067e6:	2800      	cmp	r0, #0
 80067e8:	f040 811f 	bne.w	8006a2a <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80067ec:	2000      	movs	r0, #0
 80067ee:	e02b      	b.n	8006848 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 80067f0:	4ba7      	ldr	r3, [pc, #668]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 80067f2:	689a      	ldr	r2, [r3, #8]
 80067f4:	f002 020c 	and.w	r2, r2, #12
 80067f8:	2a04      	cmp	r2, #4
 80067fa:	d007      	beq.n	800680c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80067fc:	689a      	ldr	r2, [r3, #8]
 80067fe:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006802:	2a08      	cmp	r2, #8
 8006804:	d10b      	bne.n	800681e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006806:	685a      	ldr	r2, [r3, #4]
 8006808:	0251      	lsls	r1, r2, #9
 800680a:	d508      	bpl.n	800681e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800680c:	4ba0      	ldr	r3, [pc, #640]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 800680e:	681b      	ldr	r3, [r3, #0]
 8006810:	039a      	lsls	r2, r3, #14
 8006812:	d5dc      	bpl.n	80067ce <HAL_RCC_OscConfig+0xe>
 8006814:	6863      	ldr	r3, [r4, #4]
 8006816:	2b00      	cmp	r3, #0
 8006818:	d1d9      	bne.n	80067ce <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800681a:	2001      	movs	r0, #1
 800681c:	e014      	b.n	8006848 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800681e:	6862      	ldr	r2, [r4, #4]
 8006820:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006824:	d113      	bne.n	800684e <HAL_RCC_OscConfig+0x8e>
 8006826:	681a      	ldr	r2, [r3, #0]
 8006828:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800682c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800682e:	f7fd faa1 	bl	8003d74 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006832:	4e97      	ldr	r6, [pc, #604]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8006834:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006836:	6833      	ldr	r3, [r6, #0]
 8006838:	039b      	lsls	r3, r3, #14
 800683a:	d4c8      	bmi.n	80067ce <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800683c:	f7fd fa9a 	bl	8003d74 <HAL_GetTick>
 8006840:	1b40      	subs	r0, r0, r5
 8006842:	2864      	cmp	r0, #100	; 0x64
 8006844:	d9f7      	bls.n	8006836 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8006846:	2003      	movs	r0, #3
}
 8006848:	b002      	add	sp, #8
 800684a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800684e:	4d90      	ldr	r5, [pc, #576]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 8006850:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006854:	682b      	ldr	r3, [r5, #0]
 8006856:	d107      	bne.n	8006868 <HAL_RCC_OscConfig+0xa8>
 8006858:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800685c:	602b      	str	r3, [r5, #0]
 800685e:	682b      	ldr	r3, [r5, #0]
 8006860:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006864:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006866:	e7e2      	b.n	800682e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006868:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800686c:	602b      	str	r3, [r5, #0]
 800686e:	682b      	ldr	r3, [r5, #0]
 8006870:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006874:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006876:	2a00      	cmp	r2, #0
 8006878:	d1d9      	bne.n	800682e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800687a:	f7fd fa7b 	bl	8003d74 <HAL_GetTick>
 800687e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006880:	682b      	ldr	r3, [r5, #0]
 8006882:	039f      	lsls	r7, r3, #14
 8006884:	d5a3      	bpl.n	80067ce <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006886:	f7fd fa75 	bl	8003d74 <HAL_GetTick>
 800688a:	1b80      	subs	r0, r0, r6
 800688c:	2864      	cmp	r0, #100	; 0x64
 800688e:	d9f7      	bls.n	8006880 <HAL_RCC_OscConfig+0xc0>
 8006890:	e7d9      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006892:	4b7f      	ldr	r3, [pc, #508]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 8006894:	689a      	ldr	r2, [r3, #8]
 8006896:	f012 0f0c 	tst.w	r2, #12
 800689a:	d007      	beq.n	80068ac <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800689c:	689a      	ldr	r2, [r3, #8]
 800689e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80068a2:	2a08      	cmp	r2, #8
 80068a4:	d111      	bne.n	80068ca <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80068a6:	685b      	ldr	r3, [r3, #4]
 80068a8:	025e      	lsls	r6, r3, #9
 80068aa:	d40e      	bmi.n	80068ca <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80068ac:	4b78      	ldr	r3, [pc, #480]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 80068ae:	681a      	ldr	r2, [r3, #0]
 80068b0:	0795      	lsls	r5, r2, #30
 80068b2:	d502      	bpl.n	80068ba <HAL_RCC_OscConfig+0xfa>
 80068b4:	68e2      	ldr	r2, [r4, #12]
 80068b6:	2a01      	cmp	r2, #1
 80068b8:	d1af      	bne.n	800681a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80068ba:	681a      	ldr	r2, [r3, #0]
 80068bc:	6921      	ldr	r1, [r4, #16]
 80068be:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 80068c2:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 80068c6:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80068c8:	e784      	b.n	80067d4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80068ca:	68e2      	ldr	r2, [r4, #12]
 80068cc:	4b71      	ldr	r3, [pc, #452]	; (8006a94 <HAL_RCC_OscConfig+0x2d4>)
 80068ce:	b1b2      	cbz	r2, 80068fe <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80068d0:	2201      	movs	r2, #1
 80068d2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80068d4:	f7fd fa4e 	bl	8003d74 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80068d8:	4d6d      	ldr	r5, [pc, #436]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 80068da:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80068dc:	682b      	ldr	r3, [r5, #0]
 80068de:	0798      	lsls	r0, r3, #30
 80068e0:	d507      	bpl.n	80068f2 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80068e2:	682b      	ldr	r3, [r5, #0]
 80068e4:	6922      	ldr	r2, [r4, #16]
 80068e6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80068ea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80068ee:	602b      	str	r3, [r5, #0]
 80068f0:	e770      	b.n	80067d4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80068f2:	f7fd fa3f 	bl	8003d74 <HAL_GetTick>
 80068f6:	1b80      	subs	r0, r0, r6
 80068f8:	2802      	cmp	r0, #2
 80068fa:	d9ef      	bls.n	80068dc <HAL_RCC_OscConfig+0x11c>
 80068fc:	e7a3      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 80068fe:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006900:	f7fd fa38 	bl	8003d74 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006904:	4e62      	ldr	r6, [pc, #392]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8006906:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006908:	6833      	ldr	r3, [r6, #0]
 800690a:	0799      	lsls	r1, r3, #30
 800690c:	f57f af62 	bpl.w	80067d4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006910:	f7fd fa30 	bl	8003d74 <HAL_GetTick>
 8006914:	1b40      	subs	r0, r0, r5
 8006916:	2802      	cmp	r0, #2
 8006918:	d9f6      	bls.n	8006908 <HAL_RCC_OscConfig+0x148>
 800691a:	e794      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800691c:	6962      	ldr	r2, [r4, #20]
 800691e:	4b5e      	ldr	r3, [pc, #376]	; (8006a98 <HAL_RCC_OscConfig+0x2d8>)
 8006920:	b17a      	cbz	r2, 8006942 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8006922:	2201      	movs	r2, #1
 8006924:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8006926:	f7fd fa25 	bl	8003d74 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800692a:	4e59      	ldr	r6, [pc, #356]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800692c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800692e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006930:	079f      	lsls	r7, r3, #30
 8006932:	f53f af53 	bmi.w	80067dc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006936:	f7fd fa1d 	bl	8003d74 <HAL_GetTick>
 800693a:	1b40      	subs	r0, r0, r5
 800693c:	2802      	cmp	r0, #2
 800693e:	d9f6      	bls.n	800692e <HAL_RCC_OscConfig+0x16e>
 8006940:	e781      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006942:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8006944:	f7fd fa16 	bl	8003d74 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006948:	4e51      	ldr	r6, [pc, #324]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800694a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800694c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800694e:	0798      	lsls	r0, r3, #30
 8006950:	f57f af44 	bpl.w	80067dc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006954:	f7fd fa0e 	bl	8003d74 <HAL_GetTick>
 8006958:	1b40      	subs	r0, r0, r5
 800695a:	2802      	cmp	r0, #2
 800695c:	d9f6      	bls.n	800694c <HAL_RCC_OscConfig+0x18c>
 800695e:	e772      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006960:	4b4b      	ldr	r3, [pc, #300]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 8006962:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006964:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006968:	d128      	bne.n	80069bc <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 800696a:	9201      	str	r2, [sp, #4]
 800696c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800696e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006972:	641a      	str	r2, [r3, #64]	; 0x40
 8006974:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006976:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800697a:	9301      	str	r3, [sp, #4]
 800697c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800697e:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006980:	4d46      	ldr	r5, [pc, #280]	; (8006a9c <HAL_RCC_OscConfig+0x2dc>)
 8006982:	682b      	ldr	r3, [r5, #0]
 8006984:	05d9      	lsls	r1, r3, #23
 8006986:	d51b      	bpl.n	80069c0 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006988:	68a3      	ldr	r3, [r4, #8]
 800698a:	4d41      	ldr	r5, [pc, #260]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 800698c:	2b01      	cmp	r3, #1
 800698e:	d127      	bne.n	80069e0 <HAL_RCC_OscConfig+0x220>
 8006990:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006992:	f043 0301 	orr.w	r3, r3, #1
 8006996:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006998:	f7fd f9ec 	bl	8003d74 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800699c:	4e3c      	ldr	r6, [pc, #240]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800699e:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80069a0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80069a4:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80069a6:	079b      	lsls	r3, r3, #30
 80069a8:	d539      	bpl.n	8006a1e <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 80069aa:	2f00      	cmp	r7, #0
 80069ac:	f43f af1a 	beq.w	80067e4 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80069b0:	4a37      	ldr	r2, [pc, #220]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 80069b2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80069b4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80069b8:	6413      	str	r3, [r2, #64]	; 0x40
 80069ba:	e713      	b.n	80067e4 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80069bc:	2700      	movs	r7, #0
 80069be:	e7df      	b.n	8006980 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80069c0:	682b      	ldr	r3, [r5, #0]
 80069c2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80069c6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80069c8:	f7fd f9d4 	bl	8003d74 <HAL_GetTick>
 80069cc:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80069ce:	682b      	ldr	r3, [r5, #0]
 80069d0:	05da      	lsls	r2, r3, #23
 80069d2:	d4d9      	bmi.n	8006988 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80069d4:	f7fd f9ce 	bl	8003d74 <HAL_GetTick>
 80069d8:	1b80      	subs	r0, r0, r6
 80069da:	2802      	cmp	r0, #2
 80069dc:	d9f7      	bls.n	80069ce <HAL_RCC_OscConfig+0x20e>
 80069de:	e732      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80069e0:	2b05      	cmp	r3, #5
 80069e2:	d104      	bne.n	80069ee <HAL_RCC_OscConfig+0x22e>
 80069e4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80069e6:	f043 0304 	orr.w	r3, r3, #4
 80069ea:	672b      	str	r3, [r5, #112]	; 0x70
 80069ec:	e7d0      	b.n	8006990 <HAL_RCC_OscConfig+0x1d0>
 80069ee:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80069f0:	f022 0201 	bic.w	r2, r2, #1
 80069f4:	672a      	str	r2, [r5, #112]	; 0x70
 80069f6:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80069f8:	f022 0204 	bic.w	r2, r2, #4
 80069fc:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80069fe:	2b00      	cmp	r3, #0
 8006a00:	d1ca      	bne.n	8006998 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 8006a02:	f7fd f9b7 	bl	8003d74 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006a06:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006a0a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006a0c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006a0e:	0798      	lsls	r0, r3, #30
 8006a10:	d5cb      	bpl.n	80069aa <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006a12:	f7fd f9af 	bl	8003d74 <HAL_GetTick>
 8006a16:	1b80      	subs	r0, r0, r6
 8006a18:	4540      	cmp	r0, r8
 8006a1a:	d9f7      	bls.n	8006a0c <HAL_RCC_OscConfig+0x24c>
 8006a1c:	e713      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006a1e:	f7fd f9a9 	bl	8003d74 <HAL_GetTick>
 8006a22:	1b40      	subs	r0, r0, r5
 8006a24:	4540      	cmp	r0, r8
 8006a26:	d9bd      	bls.n	80069a4 <HAL_RCC_OscConfig+0x1e4>
 8006a28:	e70d      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006a2a:	4d19      	ldr	r5, [pc, #100]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
 8006a2c:	68ab      	ldr	r3, [r5, #8]
 8006a2e:	f003 030c 	and.w	r3, r3, #12
 8006a32:	2b08      	cmp	r3, #8
 8006a34:	d049      	beq.n	8006aca <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006a36:	4e1a      	ldr	r6, [pc, #104]	; (8006aa0 <HAL_RCC_OscConfig+0x2e0>)
 8006a38:	2300      	movs	r3, #0
 8006a3a:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006a3c:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006a3e:	d137      	bne.n	8006ab0 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8006a40:	f7fd f998 	bl	8003d74 <HAL_GetTick>
 8006a44:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006a46:	682b      	ldr	r3, [r5, #0]
 8006a48:	0199      	lsls	r1, r3, #6
 8006a4a:	d42b      	bmi.n	8006aa4 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006a4c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006a50:	4313      	orrs	r3, r2
 8006a52:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006a54:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006a58:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006a5a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006a5e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006a60:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006a64:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006a66:	0852      	lsrs	r2, r2, #1
 8006a68:	3a01      	subs	r2, #1
 8006a6a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006a6e:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006a70:	2301      	movs	r3, #1
 8006a72:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8006a74:	f7fd f97e 	bl	8003d74 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006a78:	4d05      	ldr	r5, [pc, #20]	; (8006a90 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8006a7a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006a7c:	682b      	ldr	r3, [r5, #0]
 8006a7e:	019a      	lsls	r2, r3, #6
 8006a80:	f53f aeb4 	bmi.w	80067ec <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006a84:	f7fd f976 	bl	8003d74 <HAL_GetTick>
 8006a88:	1b00      	subs	r0, r0, r4
 8006a8a:	2802      	cmp	r0, #2
 8006a8c:	d9f6      	bls.n	8006a7c <HAL_RCC_OscConfig+0x2bc>
 8006a8e:	e6da      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
 8006a90:	40023800 	.word	0x40023800
 8006a94:	42470000 	.word	0x42470000
 8006a98:	42470e80 	.word	0x42470e80
 8006a9c:	40007000 	.word	0x40007000
 8006aa0:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006aa4:	f7fd f966 	bl	8003d74 <HAL_GetTick>
 8006aa8:	1bc0      	subs	r0, r0, r7
 8006aaa:	2802      	cmp	r0, #2
 8006aac:	d9cb      	bls.n	8006a46 <HAL_RCC_OscConfig+0x286>
 8006aae:	e6ca      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8006ab0:	f7fd f960 	bl	8003d74 <HAL_GetTick>
 8006ab4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006ab6:	682b      	ldr	r3, [r5, #0]
 8006ab8:	019b      	lsls	r3, r3, #6
 8006aba:	f57f ae97 	bpl.w	80067ec <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006abe:	f7fd f959 	bl	8003d74 <HAL_GetTick>
 8006ac2:	1b00      	subs	r0, r0, r4
 8006ac4:	2802      	cmp	r0, #2
 8006ac6:	d9f6      	bls.n	8006ab6 <HAL_RCC_OscConfig+0x2f6>
 8006ac8:	e6bd      	b.n	8006846 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006aca:	2801      	cmp	r0, #1
 8006acc:	f43f aebc 	beq.w	8006848 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006ad0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006ad2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006ad4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006ad8:	4291      	cmp	r1, r2
 8006ada:	f47f ae9e 	bne.w	800681a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006ade:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006ae0:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006ae4:	428a      	cmp	r2, r1
 8006ae6:	f47f ae98 	bne.w	800681a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006aea:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006aec:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006af0:	401a      	ands	r2, r3
 8006af2:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006af6:	f47f ae90 	bne.w	800681a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006afa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006afc:	0852      	lsrs	r2, r2, #1
 8006afe:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8006b02:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006b04:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006b08:	f47f ae87 	bne.w	800681a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006b0c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006b0e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006b12:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 8006b16:	f47f ae80 	bne.w	800681a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8006b1a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006b1c:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006b20:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 8006b24:	f43f ae62 	beq.w	80067ec <HAL_RCC_OscConfig+0x2c>
 8006b28:	e677      	b.n	800681a <HAL_RCC_OscConfig+0x5a>
 8006b2a:	bf00      	nop

08006b2c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006b2c:	b538      	push	{r3, r4, r5, lr}
 8006b2e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006b30:	4604      	mov	r4, r0
 8006b32:	b1c8      	cbz	r0, 8006b68 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006b34:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006b38:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006b3c:	b91b      	cbnz	r3, 8006b46 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006b3e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006b42:	f7fb f92b 	bl	8001d9c <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006b46:	2302      	movs	r3, #2
 8006b48:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006b4c:	1d21      	adds	r1, r4, #4
 8006b4e:	6820      	ldr	r0, [r4, #0]
 8006b50:	f000 f9b8 	bl	8006ec4 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006b54:	6862      	ldr	r2, [r4, #4]
 8006b56:	6820      	ldr	r0, [r4, #0]
 8006b58:	4629      	mov	r1, r5
 8006b5a:	f000 f9e9 	bl	8006f30 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006b5e:	2301      	movs	r3, #1
 8006b60:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006b64:	2000      	movs	r0, #0
}
 8006b66:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006b68:	2001      	movs	r0, #1
 8006b6a:	e7fc      	b.n	8006b66 <HAL_SDRAM_Init+0x3a>

08006b6c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8006b6c:	b510      	push	{r4, lr}
 8006b6e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8006b70:	f7fb f98a 	bl	8001e88 <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8006b74:	e9d4 0100 	ldrd	r0, r1, [r4]
 8006b78:	f000 fa16 	bl	8006fa8 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8006b7c:	2000      	movs	r0, #0
 8006b7e:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8006b82:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8006b86:	bd10      	pop	{r4, pc}

08006b88 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006b88:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006b8a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006b8e:	2b02      	cmp	r3, #2
{
 8006b90:	4604      	mov	r4, r0
 8006b92:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006b94:	b2d8      	uxtb	r0, r3
 8006b96:	d00d      	beq.n	8006bb4 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006b98:	2302      	movs	r3, #2
 8006b9a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006b9e:	6820      	ldr	r0, [r4, #0]
 8006ba0:	f000 fa11 	bl	8006fc6 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006ba4:	682b      	ldr	r3, [r5, #0]
 8006ba6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006ba8:	bf0c      	ite	eq
 8006baa:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006bac:	2301      	movne	r3, #1
 8006bae:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006bb2:	2000      	movs	r0, #0
}
 8006bb4:	bd38      	pop	{r3, r4, r5, pc}

08006bb6 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006bb6:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006bb8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006bbc:	2b02      	cmp	r3, #2
{
 8006bbe:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006bc0:	b2d8      	uxtb	r0, r3
 8006bc2:	d009      	beq.n	8006bd8 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006bc4:	2302      	movs	r3, #2
 8006bc6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8006bca:	6820      	ldr	r0, [r4, #0]
 8006bcc:	f000 fa22 	bl	8007014 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006bd0:	2301      	movs	r3, #1
 8006bd2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8006bd6:	2000      	movs	r0, #0
}
 8006bd8:	bd10      	pop	{r4, pc}

08006bda <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006bda:	4770      	bx	lr

08006bdc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006bdc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006be0:	2b01      	cmp	r3, #1
 8006be2:	d130      	bne.n	8006c46 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006be4:	2302      	movs	r3, #2
 8006be6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006bea:	6803      	ldr	r3, [r0, #0]
 8006bec:	68da      	ldr	r2, [r3, #12]
 8006bee:	f042 0201 	orr.w	r2, r2, #1
 8006bf2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006bf4:	4a15      	ldr	r2, [pc, #84]	; (8006c4c <HAL_TIM_Base_Start_IT+0x70>)
 8006bf6:	4293      	cmp	r3, r2
 8006bf8:	d01a      	beq.n	8006c30 <HAL_TIM_Base_Start_IT+0x54>
 8006bfa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006bfe:	d017      	beq.n	8006c30 <HAL_TIM_Base_Start_IT+0x54>
 8006c00:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006c04:	4293      	cmp	r3, r2
 8006c06:	d013      	beq.n	8006c30 <HAL_TIM_Base_Start_IT+0x54>
 8006c08:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006c0c:	4293      	cmp	r3, r2
 8006c0e:	d00f      	beq.n	8006c30 <HAL_TIM_Base_Start_IT+0x54>
 8006c10:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006c14:	4293      	cmp	r3, r2
 8006c16:	d00b      	beq.n	8006c30 <HAL_TIM_Base_Start_IT+0x54>
 8006c18:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006c1c:	4293      	cmp	r3, r2
 8006c1e:	d007      	beq.n	8006c30 <HAL_TIM_Base_Start_IT+0x54>
 8006c20:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8006c24:	4293      	cmp	r3, r2
 8006c26:	d003      	beq.n	8006c30 <HAL_TIM_Base_Start_IT+0x54>
 8006c28:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006c2c:	4293      	cmp	r3, r2
 8006c2e:	d104      	bne.n	8006c3a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006c30:	689a      	ldr	r2, [r3, #8]
 8006c32:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006c36:	2a06      	cmp	r2, #6
 8006c38:	d003      	beq.n	8006c42 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006c3a:	681a      	ldr	r2, [r3, #0]
 8006c3c:	f042 0201 	orr.w	r2, r2, #1
 8006c40:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006c42:	2000      	movs	r0, #0
}
 8006c44:	4770      	bx	lr
    return HAL_ERROR;
 8006c46:	2001      	movs	r0, #1
 8006c48:	4770      	bx	lr
 8006c4a:	bf00      	nop
 8006c4c:	40010000 	.word	0x40010000

08006c50 <HAL_TIM_OC_DelayElapsedCallback>:
 8006c50:	4770      	bx	lr

08006c52 <HAL_TIM_IC_CaptureCallback>:
 8006c52:	4770      	bx	lr

08006c54 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006c54:	4770      	bx	lr

08006c56 <HAL_TIM_TriggerCallback>:
 8006c56:	4770      	bx	lr

08006c58 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006c58:	6803      	ldr	r3, [r0, #0]
 8006c5a:	691a      	ldr	r2, [r3, #16]
 8006c5c:	0791      	lsls	r1, r2, #30
{
 8006c5e:	b510      	push	{r4, lr}
 8006c60:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006c62:	d50e      	bpl.n	8006c82 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006c64:	68da      	ldr	r2, [r3, #12]
 8006c66:	0792      	lsls	r2, r2, #30
 8006c68:	d50b      	bpl.n	8006c82 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006c6a:	f06f 0202 	mvn.w	r2, #2
 8006c6e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006c70:	2201      	movs	r2, #1
 8006c72:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006c74:	699b      	ldr	r3, [r3, #24]
 8006c76:	079b      	lsls	r3, r3, #30
 8006c78:	d077      	beq.n	8006d6a <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006c7a:	f7ff ffea 	bl	8006c52 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006c7e:	2300      	movs	r3, #0
 8006c80:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006c82:	6823      	ldr	r3, [r4, #0]
 8006c84:	691a      	ldr	r2, [r3, #16]
 8006c86:	0750      	lsls	r0, r2, #29
 8006c88:	d510      	bpl.n	8006cac <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006c8a:	68da      	ldr	r2, [r3, #12]
 8006c8c:	0751      	lsls	r1, r2, #29
 8006c8e:	d50d      	bpl.n	8006cac <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006c90:	f06f 0204 	mvn.w	r2, #4
 8006c94:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006c96:	2202      	movs	r2, #2
 8006c98:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006c9a:	699b      	ldr	r3, [r3, #24]
 8006c9c:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006ca0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006ca2:	d068      	beq.n	8006d76 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006ca4:	f7ff ffd5 	bl	8006c52 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006ca8:	2300      	movs	r3, #0
 8006caa:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006cac:	6823      	ldr	r3, [r4, #0]
 8006cae:	691a      	ldr	r2, [r3, #16]
 8006cb0:	0712      	lsls	r2, r2, #28
 8006cb2:	d50f      	bpl.n	8006cd4 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006cb4:	68da      	ldr	r2, [r3, #12]
 8006cb6:	0710      	lsls	r0, r2, #28
 8006cb8:	d50c      	bpl.n	8006cd4 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006cba:	f06f 0208 	mvn.w	r2, #8
 8006cbe:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006cc0:	2204      	movs	r2, #4
 8006cc2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006cc4:	69db      	ldr	r3, [r3, #28]
 8006cc6:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006cc8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006cca:	d05a      	beq.n	8006d82 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006ccc:	f7ff ffc1 	bl	8006c52 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006cd0:	2300      	movs	r3, #0
 8006cd2:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006cd4:	6823      	ldr	r3, [r4, #0]
 8006cd6:	691a      	ldr	r2, [r3, #16]
 8006cd8:	06d2      	lsls	r2, r2, #27
 8006cda:	d510      	bpl.n	8006cfe <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006cdc:	68da      	ldr	r2, [r3, #12]
 8006cde:	06d0      	lsls	r0, r2, #27
 8006ce0:	d50d      	bpl.n	8006cfe <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006ce2:	f06f 0210 	mvn.w	r2, #16
 8006ce6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006ce8:	2208      	movs	r2, #8
 8006cea:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006cec:	69db      	ldr	r3, [r3, #28]
 8006cee:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006cf2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006cf4:	d04b      	beq.n	8006d8e <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006cf6:	f7ff ffac 	bl	8006c52 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006cfa:	2300      	movs	r3, #0
 8006cfc:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006cfe:	6823      	ldr	r3, [r4, #0]
 8006d00:	691a      	ldr	r2, [r3, #16]
 8006d02:	07d1      	lsls	r1, r2, #31
 8006d04:	d508      	bpl.n	8006d18 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006d06:	68da      	ldr	r2, [r3, #12]
 8006d08:	07d2      	lsls	r2, r2, #31
 8006d0a:	d505      	bpl.n	8006d18 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006d0c:	f06f 0201 	mvn.w	r2, #1
 8006d10:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006d12:	4620      	mov	r0, r4
 8006d14:	f7fa fe3e 	bl	8001994 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006d18:	6823      	ldr	r3, [r4, #0]
 8006d1a:	691a      	ldr	r2, [r3, #16]
 8006d1c:	0610      	lsls	r0, r2, #24
 8006d1e:	d508      	bpl.n	8006d32 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006d20:	68da      	ldr	r2, [r3, #12]
 8006d22:	0611      	lsls	r1, r2, #24
 8006d24:	d505      	bpl.n	8006d32 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006d26:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006d2a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006d2c:	4620      	mov	r0, r4
 8006d2e:	f000 f8c8 	bl	8006ec2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006d32:	6823      	ldr	r3, [r4, #0]
 8006d34:	691a      	ldr	r2, [r3, #16]
 8006d36:	0652      	lsls	r2, r2, #25
 8006d38:	d508      	bpl.n	8006d4c <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006d3a:	68da      	ldr	r2, [r3, #12]
 8006d3c:	0650      	lsls	r0, r2, #25
 8006d3e:	d505      	bpl.n	8006d4c <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006d40:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006d44:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006d46:	4620      	mov	r0, r4
 8006d48:	f7ff ff85 	bl	8006c56 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006d4c:	6823      	ldr	r3, [r4, #0]
 8006d4e:	691a      	ldr	r2, [r3, #16]
 8006d50:	0691      	lsls	r1, r2, #26
 8006d52:	d522      	bpl.n	8006d9a <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006d54:	68da      	ldr	r2, [r3, #12]
 8006d56:	0692      	lsls	r2, r2, #26
 8006d58:	d51f      	bpl.n	8006d9a <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006d5a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006d5e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006d60:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006d62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006d66:	f000 b8ab 	b.w	8006ec0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d6a:	f7ff ff71 	bl	8006c50 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d6e:	4620      	mov	r0, r4
 8006d70:	f7ff ff70 	bl	8006c54 <HAL_TIM_PWM_PulseFinishedCallback>
 8006d74:	e783      	b.n	8006c7e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d76:	f7ff ff6b 	bl	8006c50 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d7a:	4620      	mov	r0, r4
 8006d7c:	f7ff ff6a 	bl	8006c54 <HAL_TIM_PWM_PulseFinishedCallback>
 8006d80:	e792      	b.n	8006ca8 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d82:	f7ff ff65 	bl	8006c50 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d86:	4620      	mov	r0, r4
 8006d88:	f7ff ff64 	bl	8006c54 <HAL_TIM_PWM_PulseFinishedCallback>
 8006d8c:	e7a0      	b.n	8006cd0 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d8e:	f7ff ff5f 	bl	8006c50 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d92:	4620      	mov	r0, r4
 8006d94:	f7ff ff5e 	bl	8006c54 <HAL_TIM_PWM_PulseFinishedCallback>
 8006d98:	e7af      	b.n	8006cfa <HAL_TIM_IRQHandler+0xa2>
}
 8006d9a:	bd10      	pop	{r4, pc}

08006d9c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006d9c:	4a30      	ldr	r2, [pc, #192]	; (8006e60 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006d9e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006da0:	4290      	cmp	r0, r2
 8006da2:	d012      	beq.n	8006dca <TIM_Base_SetConfig+0x2e>
 8006da4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006da8:	d00f      	beq.n	8006dca <TIM_Base_SetConfig+0x2e>
 8006daa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006dae:	4290      	cmp	r0, r2
 8006db0:	d00b      	beq.n	8006dca <TIM_Base_SetConfig+0x2e>
 8006db2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006db6:	4290      	cmp	r0, r2
 8006db8:	d007      	beq.n	8006dca <TIM_Base_SetConfig+0x2e>
 8006dba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006dbe:	4290      	cmp	r0, r2
 8006dc0:	d003      	beq.n	8006dca <TIM_Base_SetConfig+0x2e>
 8006dc2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006dc6:	4290      	cmp	r0, r2
 8006dc8:	d119      	bne.n	8006dfe <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006dca:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006dcc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8006dd0:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006dd2:	4a23      	ldr	r2, [pc, #140]	; (8006e60 <TIM_Base_SetConfig+0xc4>)
 8006dd4:	4290      	cmp	r0, r2
 8006dd6:	d029      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006dd8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006ddc:	d026      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006dde:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006de2:	4290      	cmp	r0, r2
 8006de4:	d022      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006de6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006dea:	4290      	cmp	r0, r2
 8006dec:	d01e      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006dee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006df2:	4290      	cmp	r0, r2
 8006df4:	d01a      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006df6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006dfa:	4290      	cmp	r0, r2
 8006dfc:	d016      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006dfe:	4a19      	ldr	r2, [pc, #100]	; (8006e64 <TIM_Base_SetConfig+0xc8>)
 8006e00:	4290      	cmp	r0, r2
 8006e02:	d013      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006e04:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006e08:	4290      	cmp	r0, r2
 8006e0a:	d00f      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006e0c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006e10:	4290      	cmp	r0, r2
 8006e12:	d00b      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006e14:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006e18:	4290      	cmp	r0, r2
 8006e1a:	d007      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006e1c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006e20:	4290      	cmp	r0, r2
 8006e22:	d003      	beq.n	8006e2c <TIM_Base_SetConfig+0x90>
 8006e24:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006e28:	4290      	cmp	r0, r2
 8006e2a:	d103      	bne.n	8006e34 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006e2c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006e2e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006e32:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006e34:	694a      	ldr	r2, [r1, #20]
 8006e36:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006e3a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006e3c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006e3e:	688b      	ldr	r3, [r1, #8]
 8006e40:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006e42:	680b      	ldr	r3, [r1, #0]
 8006e44:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006e46:	4b06      	ldr	r3, [pc, #24]	; (8006e60 <TIM_Base_SetConfig+0xc4>)
 8006e48:	4298      	cmp	r0, r3
 8006e4a:	d003      	beq.n	8006e54 <TIM_Base_SetConfig+0xb8>
 8006e4c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006e50:	4298      	cmp	r0, r3
 8006e52:	d101      	bne.n	8006e58 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006e54:	690b      	ldr	r3, [r1, #16]
 8006e56:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006e58:	2301      	movs	r3, #1
 8006e5a:	6143      	str	r3, [r0, #20]
}
 8006e5c:	4770      	bx	lr
 8006e5e:	bf00      	nop
 8006e60:	40010000 	.word	0x40010000
 8006e64:	40014000 	.word	0x40014000

08006e68 <HAL_TIM_Base_Init>:
{
 8006e68:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006e6a:	4604      	mov	r4, r0
 8006e6c:	b330      	cbz	r0, 8006ebc <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006e6e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e72:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006e76:	b91b      	cbnz	r3, 8006e80 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006e78:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006e7c:	f7ff fead 	bl	8006bda <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006e80:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006e82:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006e84:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006e88:	1d21      	adds	r1, r4, #4
 8006e8a:	f7ff ff87 	bl	8006d9c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006e8e:	2301      	movs	r3, #1
 8006e90:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8006e94:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006e96:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006e9a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8006e9e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8006ea2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006ea6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006eaa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006eae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8006eb2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006eb6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8006eba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006ebc:	2001      	movs	r0, #1
 8006ebe:	e7fc      	b.n	8006eba <HAL_TIM_Base_Init+0x52>

08006ec0 <HAL_TIMEx_CommutCallback>:
 8006ec0:	4770      	bx	lr

08006ec2 <HAL_TIMEx_BreakCallback>:
 8006ec2:	4770      	bx	lr

08006ec4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006ec4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ec8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006eca:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8006ece:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8006ed2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8006ed6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006eda:	6809      	ldr	r1, [r1, #0]
 8006edc:	2901      	cmp	r1, #1
 8006ede:	ea43 0304 	orr.w	r3, r3, r4
 8006ee2:	4912      	ldr	r1, [pc, #72]	; (8006f2c <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8006ee4:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006ee6:	d00f      	beq.n	8006f08 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006ee8:	431a      	orrs	r2, r3
 8006eea:	432a      	orrs	r2, r5
 8006eec:	ea42 0308 	orr.w	r3, r2, r8
 8006ef0:	ea43 030e 	orr.w	r3, r3, lr
 8006ef4:	ea43 030c 	orr.w	r3, r3, ip
 8006ef8:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006efa:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006efc:	4333      	orrs	r3, r6
 8006efe:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006f00:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8006f02:	2000      	movs	r0, #0
 8006f04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006f08:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8006f0a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006f0c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006f0e:	ea45 0208 	orr.w	r2, r5, r8
 8006f12:	ea42 020e 	orr.w	r2, r2, lr
 8006f16:	ea42 020c 	orr.w	r2, r2, ip
 8006f1a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8006f1c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006f20:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006f22:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006f24:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006f26:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006f28:	6042      	str	r2, [r0, #4]
 8006f2a:	e7ea      	b.n	8006f02 <FMC_SDRAM_Init+0x3e>
 8006f2c:	ffff8000 	.word	0xffff8000

08006f30 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8006f30:	68cb      	ldr	r3, [r1, #12]
{
 8006f32:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f34:	680c      	ldr	r4, [r1, #0]
 8006f36:	688e      	ldr	r6, [r1, #8]
 8006f38:	690d      	ldr	r5, [r1, #16]
 8006f3a:	1e5f      	subs	r7, r3, #1
 8006f3c:	694b      	ldr	r3, [r1, #20]
 8006f3e:	f104 3cff 	add.w	ip, r4, #4294967295
 8006f42:	684c      	ldr	r4, [r1, #4]
 8006f44:	6989      	ldr	r1, [r1, #24]
 8006f46:	3b01      	subs	r3, #1
 8006f48:	051b      	lsls	r3, r3, #20
 8006f4a:	3c01      	subs	r4, #1
 8006f4c:	3e01      	subs	r6, #1
 8006f4e:	3d01      	subs	r5, #1
 8006f50:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8006f52:	2a01      	cmp	r2, #1
 8006f54:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8006f58:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8006f5c:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8006f60:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8006f64:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8006f68:	d00c      	beq.n	8006f84 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006f6a:	ea43 030c 	orr.w	r3, r3, ip
 8006f6e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006f70:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006f72:	4333      	orrs	r3, r6
 8006f74:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006f76:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006f7a:	430b      	orrs	r3, r1
 8006f7c:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006f7e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8006f80:	2000      	movs	r0, #0
 8006f82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006f84:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8006f86:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8006f8a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006f8e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006f90:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006f92:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8006f96:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006f98:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006f9a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006f9c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006fa0:	430a      	orrs	r2, r1
 8006fa2:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8006fa4:	60c2      	str	r2, [r0, #12]
 8006fa6:	e7eb      	b.n	8006f80 <FMC_SDRAM_Timing_Init+0x50>

08006fa8 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8006fa8:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8006fac:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8006fb0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 8006fb4:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006fb8:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8006fba:	2300      	movs	r3, #0
 8006fbc:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8006fbe:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8006fc0:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8006fc2:	4618      	mov	r0, r3
 8006fc4:	4770      	bx	lr

08006fc6 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006fc6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006fc8:	2300      	movs	r3, #0
 8006fca:	9301      	str	r3, [sp, #4]
{
 8006fcc:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006fce:	e9d1 3200 	ldrd	r3, r2, [r1]
 8006fd2:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006fd4:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006fd6:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8006fda:	688a      	ldr	r2, [r1, #8]
 8006fdc:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006fde:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006fe2:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8006fe4:	9b01      	ldr	r3, [sp, #4]
 8006fe6:	6103      	str	r3, [r0, #16]
{
 8006fe8:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8006fea:	f7fc fec3 	bl	8003d74 <HAL_GetTick>
 8006fee:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006ff0:	69a3      	ldr	r3, [r4, #24]
 8006ff2:	f013 0320 	ands.w	r3, r3, #32
 8006ff6:	d101      	bne.n	8006ffc <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006ff8:	4618      	mov	r0, r3
 8006ffa:	e003      	b.n	8007004 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8006ffc:	1c6b      	adds	r3, r5, #1
 8006ffe:	d0f7      	beq.n	8006ff0 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007000:	b915      	cbnz	r5, 8007008 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8007002:	2003      	movs	r0, #3
}
 8007004:	b002      	add	sp, #8
 8007006:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007008:	f7fc feb4 	bl	8003d74 <HAL_GetTick>
 800700c:	1b80      	subs	r0, r0, r6
 800700e:	42a8      	cmp	r0, r5
 8007010:	d9ee      	bls.n	8006ff0 <FMC_SDRAM_SendCommand+0x2a>
 8007012:	e7f6      	b.n	8007002 <FMC_SDRAM_SendCommand+0x3c>

08007014 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007014:	6943      	ldr	r3, [r0, #20]
 8007016:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800701a:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800701c:	2000      	movs	r0, #0
 800701e:	4770      	bx	lr

08007020 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007020:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007022:	4b05      	ldr	r3, [pc, #20]	; (8007038 <SysTick_Handler+0x18>)
 8007024:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8007026:	f001 fe7d 	bl	8008d24 <xTaskGetSchedulerState>
 800702a:	2801      	cmp	r0, #1
 800702c:	d003      	beq.n	8007036 <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800702e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007032:	f000 bbef 	b.w	8007814 <xPortSysTickHandler>
}
 8007036:	bd08      	pop	{r3, pc}
 8007038:	e000e010 	.word	0xe000e010

0800703c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800703c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007040:	b92b      	cbnz	r3, 800704e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007042:	4b06      	ldr	r3, [pc, #24]	; (800705c <osKernelInitialize+0x20>)
 8007044:	6818      	ldr	r0, [r3, #0]
 8007046:	b928      	cbnz	r0, 8007054 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007048:	2201      	movs	r2, #1
 800704a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800704c:	4770      	bx	lr
    stat = osErrorISR;
 800704e:	f06f 0005 	mvn.w	r0, #5
 8007052:	4770      	bx	lr
    } else {
      stat = osError;
 8007054:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007058:	4770      	bx	lr
 800705a:	bf00      	nop
 800705c:	20001804 	.word	0x20001804

08007060 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007060:	b510      	push	{r4, lr}
 8007062:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007066:	b95c      	cbnz	r4, 8007080 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007068:	4b08      	ldr	r3, [pc, #32]	; (800708c <osKernelStart+0x2c>)
 800706a:	681a      	ldr	r2, [r3, #0]
 800706c:	2a01      	cmp	r2, #1
 800706e:	d10a      	bne.n	8007086 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007070:	4a07      	ldr	r2, [pc, #28]	; (8007090 <osKernelStart+0x30>)
 8007072:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007074:	2202      	movs	r2, #2
 8007076:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007078:	f001 fcf0 	bl	8008a5c <vTaskStartScheduler>
      stat = osOK;
 800707c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800707e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007080:	f06f 0005 	mvn.w	r0, #5
 8007084:	e7fb      	b.n	800707e <osKernelStart+0x1e>
      stat = osError;
 8007086:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800708a:	e7f8      	b.n	800707e <osKernelStart+0x1e>
 800708c:	20001804 	.word	0x20001804
 8007090:	e000ed00 	.word	0xe000ed00

08007094 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007096:	b087      	sub	sp, #28
 8007098:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800709a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800709c:	460b      	mov	r3, r1
  hTask = NULL;
 800709e:	9205      	str	r2, [sp, #20]
 80070a0:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80070a4:	b9d2      	cbnz	r2, 80070dc <osThreadNew+0x48>
 80070a6:	b1c8      	cbz	r0, 80070dc <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80070a8:	2c00      	cmp	r4, #0
 80070aa:	d02f      	beq.n	800710c <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80070ac:	69a5      	ldr	r5, [r4, #24]
 80070ae:	2d00      	cmp	r5, #0
 80070b0:	bf08      	it	eq
 80070b2:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80070b4:	1e69      	subs	r1, r5, #1
 80070b6:	2937      	cmp	r1, #55	; 0x37
 80070b8:	46ac      	mov	ip, r5
 80070ba:	d82b      	bhi.n	8007114 <osThreadNew+0x80>
 80070bc:	6861      	ldr	r1, [r4, #4]
 80070be:	07c9      	lsls	r1, r1, #31
 80070c0:	d428      	bmi.n	8007114 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80070c2:	6966      	ldr	r6, [r4, #20]
 80070c4:	b16e      	cbz	r6, 80070e2 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80070c6:	08b2      	lsrs	r2, r6, #2
 80070c8:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 80070cc:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80070ce:	b157      	cbz	r7, 80070e6 <osThreadNew+0x52>
 80070d0:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 80070d4:	d902      	bls.n	80070dc <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80070d6:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80070d8:	b104      	cbz	r4, 80070dc <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80070da:	b9ee      	cbnz	r6, 8007118 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80070dc:	9805      	ldr	r0, [sp, #20]
}
 80070de:	b007      	add	sp, #28
 80070e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80070e2:	2280      	movs	r2, #128	; 0x80
 80070e4:	e7f0      	b.n	80070c8 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80070e6:	f1be 0f00 	cmp.w	lr, #0
 80070ea:	d1f7      	bne.n	80070dc <osThreadNew+0x48>
      if (mem == 0) {
 80070ec:	6924      	ldr	r4, [r4, #16]
 80070ee:	2c00      	cmp	r4, #0
 80070f0:	d1f4      	bne.n	80070dc <osThreadNew+0x48>
 80070f2:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80070f4:	a905      	add	r1, sp, #20
 80070f6:	e9cd c100 	strd	ip, r1, [sp]
 80070fa:	b292      	uxth	r2, r2
 80070fc:	4621      	mov	r1, r4
 80070fe:	f001 fb27 	bl	8008750 <xTaskCreate>
 8007102:	2801      	cmp	r0, #1
            hTask = NULL;
 8007104:	bf1c      	itt	ne
 8007106:	2300      	movne	r3, #0
 8007108:	9305      	strne	r3, [sp, #20]
 800710a:	e7e7      	b.n	80070dc <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800710c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007110:	2280      	movs	r2, #128	; 0x80
 8007112:	e7ef      	b.n	80070f4 <osThreadNew+0x60>
        return (NULL);
 8007114:	4610      	mov	r0, r2
 8007116:	e7e2      	b.n	80070de <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007118:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800711c:	9500      	str	r5, [sp, #0]
 800711e:	f001 fadf 	bl	80086e0 <xTaskCreateStatic>
 8007122:	9005      	str	r0, [sp, #20]
 8007124:	e7da      	b.n	80070dc <osThreadNew+0x48>
	...

08007128 <osThreadYield>:
 8007128:	f3ef 8005 	mrs	r0, IPSR
}

osStatus_t osThreadYield (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800712c:	b940      	cbnz	r0, 8007140 <osThreadYield+0x18>
    stat = osErrorISR;
  } else {
    stat = osOK;
    taskYIELD();
 800712e:	4b06      	ldr	r3, [pc, #24]	; (8007148 <osThreadYield+0x20>)
 8007130:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007134:	601a      	str	r2, [r3, #0]
 8007136:	f3bf 8f4f 	dsb	sy
 800713a:	f3bf 8f6f 	isb	sy
 800713e:	4770      	bx	lr
    stat = osErrorISR;
 8007140:	f06f 0005 	mvn.w	r0, #5
  }

  return (stat);
}
 8007144:	4770      	bx	lr
 8007146:	bf00      	nop
 8007148:	e000ed04 	.word	0xe000ed04

0800714c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800714c:	b510      	push	{r4, lr}
 800714e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007152:	b924      	cbnz	r4, 800715e <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007154:	b110      	cbz	r0, 800715c <osDelay+0x10>
      vTaskDelay(ticks);
 8007156:	f001 fc41 	bl	80089dc <vTaskDelay>
    stat = osOK;
 800715a:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800715c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800715e:	f06f 0005 	mvn.w	r0, #5
 8007162:	e7fb      	b.n	800715c <osDelay+0x10>

08007164 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007164:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007166:	4604      	mov	r4, r0
 8007168:	460e      	mov	r6, r1
 800716a:	4615      	mov	r5, r2
 800716c:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007170:	b11a      	cbz	r2, 800717a <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8007172:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007174:	4620      	mov	r0, r4
 8007176:	b003      	add	sp, #12
 8007178:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800717a:	2800      	cmp	r0, #0
 800717c:	d0f9      	beq.n	8007172 <osSemaphoreNew+0xe>
 800717e:	4288      	cmp	r0, r1
 8007180:	d3f7      	bcc.n	8007172 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8007182:	b1e5      	cbz	r5, 80071be <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007184:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8007188:	b1bb      	cbz	r3, 80071ba <osSemaphoreNew+0x56>
 800718a:	2f4f      	cmp	r7, #79	; 0x4f
 800718c:	d9f1      	bls.n	8007172 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800718e:	2801      	cmp	r0, #1
 8007190:	d12a      	bne.n	80071e8 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007192:	2103      	movs	r1, #3
 8007194:	9100      	str	r1, [sp, #0]
 8007196:	4611      	mov	r1, r2
 8007198:	f000 fcec 	bl	8007b74 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800719c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800719e:	2800      	cmp	r0, #0
 80071a0:	d0e7      	beq.n	8007172 <osSemaphoreNew+0xe>
 80071a2:	b1de      	cbz	r6, 80071dc <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80071a4:	2300      	movs	r3, #0
 80071a6:	461a      	mov	r2, r3
 80071a8:	4619      	mov	r1, r3
 80071aa:	f000 fd99 	bl	8007ce0 <xQueueGenericSend>
 80071ae:	2801      	cmp	r0, #1
 80071b0:	d014      	beq.n	80071dc <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 80071b2:	4620      	mov	r0, r4
 80071b4:	f001 f8da 	bl	800836c <vQueueDelete>
 80071b8:	e7db      	b.n	8007172 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80071ba:	2f00      	cmp	r7, #0
 80071bc:	d1d9      	bne.n	8007172 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80071be:	2c01      	cmp	r4, #1
 80071c0:	d105      	bne.n	80071ce <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 80071c2:	2203      	movs	r2, #3
 80071c4:	2100      	movs	r1, #0
 80071c6:	4620      	mov	r0, r4
 80071c8:	f000 fd22 	bl	8007c10 <xQueueGenericCreate>
 80071cc:	e7e6      	b.n	800719c <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80071ce:	4620      	mov	r0, r4
 80071d0:	4631      	mov	r1, r6
 80071d2:	f000 fd66 	bl	8007ca2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80071d6:	4604      	mov	r4, r0
 80071d8:	2800      	cmp	r0, #0
 80071da:	d0ca      	beq.n	8007172 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 80071dc:	b955      	cbnz	r5, 80071f4 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 80071de:	4629      	mov	r1, r5
 80071e0:	4620      	mov	r0, r4
 80071e2:	f001 f899 	bl	8008318 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80071e6:	e7c5      	b.n	8007174 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80071e8:	461a      	mov	r2, r3
 80071ea:	f000 fd38 	bl	8007c5e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80071ee:	4604      	mov	r4, r0
 80071f0:	2800      	cmp	r0, #0
 80071f2:	d0be      	beq.n	8007172 <osSemaphoreNew+0xe>
          name = attr->name;
 80071f4:	682d      	ldr	r5, [r5, #0]
 80071f6:	e7f2      	b.n	80071de <osSemaphoreNew+0x7a>

080071f8 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80071f8:	b513      	push	{r0, r1, r4, lr}
 80071fa:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80071fc:	b1f8      	cbz	r0, 800723e <osSemaphoreAcquire+0x46>
 80071fe:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007202:	b1a3      	cbz	r3, 800722e <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 8007204:	b9d9      	cbnz	r1, 800723e <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007206:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007208:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800720a:	f001 f835 	bl	8008278 <xQueueReceiveFromISR>
 800720e:	2801      	cmp	r0, #1
 8007210:	d112      	bne.n	8007238 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007212:	9b01      	ldr	r3, [sp, #4]
 8007214:	b913      	cbnz	r3, 800721c <osSemaphoreAcquire+0x24>
  stat = osOK;
 8007216:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007218:	b002      	add	sp, #8
 800721a:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800721c:	4b0b      	ldr	r3, [pc, #44]	; (800724c <osSemaphoreAcquire+0x54>)
 800721e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007222:	601a      	str	r2, [r3, #0]
 8007224:	f3bf 8f4f 	dsb	sy
 8007228:	f3bf 8f6f 	isb	sy
 800722c:	e7f3      	b.n	8007216 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800722e:	f000 ff5f 	bl	80080f0 <xQueueSemaphoreTake>
 8007232:	2801      	cmp	r0, #1
 8007234:	d0ef      	beq.n	8007216 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8007236:	b92c      	cbnz	r4, 8007244 <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 8007238:	f06f 0002 	mvn.w	r0, #2
 800723c:	e7ec      	b.n	8007218 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800723e:	f06f 0003 	mvn.w	r0, #3
 8007242:	e7e9      	b.n	8007218 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8007244:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007248:	e7e6      	b.n	8007218 <osSemaphoreAcquire+0x20>
 800724a:	bf00      	nop
 800724c:	e000ed04 	.word	0xe000ed04

08007250 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007250:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007252:	b300      	cbz	r0, 8007296 <osSemaphoreRelease+0x46>
 8007254:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007258:	b1a3      	cbz	r3, 8007284 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 800725a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800725c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800725e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007260:	f000 fe52 	bl	8007f08 <xQueueGiveFromISR>
 8007264:	2801      	cmp	r0, #1
 8007266:	d113      	bne.n	8007290 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8007268:	9b01      	ldr	r3, [sp, #4]
 800726a:	b913      	cbnz	r3, 8007272 <osSemaphoreRelease+0x22>
  stat = osOK;
 800726c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800726e:	b002      	add	sp, #8
 8007270:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007272:	4b0a      	ldr	r3, [pc, #40]	; (800729c <osSemaphoreRelease+0x4c>)
 8007274:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007278:	601a      	str	r2, [r3, #0]
 800727a:	f3bf 8f4f 	dsb	sy
 800727e:	f3bf 8f6f 	isb	sy
 8007282:	e7f3      	b.n	800726c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007284:	461a      	mov	r2, r3
 8007286:	4619      	mov	r1, r3
 8007288:	f000 fd2a 	bl	8007ce0 <xQueueGenericSend>
 800728c:	2801      	cmp	r0, #1
 800728e:	d0ed      	beq.n	800726c <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8007290:	f06f 0002 	mvn.w	r0, #2
 8007294:	e7eb      	b.n	800726e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8007296:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800729a:	e7e8      	b.n	800726e <osSemaphoreRelease+0x1e>
 800729c:	e000ed04 	.word	0xe000ed04

080072a0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80072a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80072a2:	4606      	mov	r6, r0
 80072a4:	460d      	mov	r5, r1
 80072a6:	4614      	mov	r4, r2
 80072a8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80072ac:	b11f      	cbz	r7, 80072b6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 80072ae:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80072b0:	4628      	mov	r0, r5
 80072b2:	b003      	add	sp, #12
 80072b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80072b6:	2800      	cmp	r0, #0
 80072b8:	d0f9      	beq.n	80072ae <osMessageQueueNew+0xe>
 80072ba:	2900      	cmp	r1, #0
 80072bc:	d0f7      	beq.n	80072ae <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80072be:	b1da      	cbz	r2, 80072f8 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80072c0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80072c4:	b183      	cbz	r3, 80072e8 <osMessageQueueNew+0x48>
 80072c6:	2a4f      	cmp	r2, #79	; 0x4f
 80072c8:	d9f1      	bls.n	80072ae <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80072ca:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80072cc:	2a00      	cmp	r2, #0
 80072ce:	d0ee      	beq.n	80072ae <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80072d0:	6966      	ldr	r6, [r4, #20]
 80072d2:	4345      	muls	r5, r0
 80072d4:	42ae      	cmp	r6, r5
 80072d6:	d3ea      	bcc.n	80072ae <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80072d8:	9700      	str	r7, [sp, #0]
 80072da:	f000 fc4b 	bl	8007b74 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80072de:	4605      	mov	r5, r0
 80072e0:	2800      	cmp	r0, #0
 80072e2:	d0e4      	beq.n	80072ae <osMessageQueueNew+0xe>
        name = attr->name;
 80072e4:	6824      	ldr	r4, [r4, #0]
 80072e6:	e011      	b.n	800730c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80072e8:	2a00      	cmp	r2, #0
 80072ea:	d1e0      	bne.n	80072ae <osMessageQueueNew+0xe>
 80072ec:	6923      	ldr	r3, [r4, #16]
 80072ee:	2b00      	cmp	r3, #0
 80072f0:	d1dd      	bne.n	80072ae <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80072f2:	6963      	ldr	r3, [r4, #20]
 80072f4:	2b00      	cmp	r3, #0
 80072f6:	d1da      	bne.n	80072ae <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80072f8:	4629      	mov	r1, r5
 80072fa:	2200      	movs	r2, #0
 80072fc:	4630      	mov	r0, r6
 80072fe:	f000 fc87 	bl	8007c10 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007302:	4605      	mov	r5, r0
 8007304:	2800      	cmp	r0, #0
 8007306:	d0d2      	beq.n	80072ae <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007308:	2c00      	cmp	r4, #0
 800730a:	d1eb      	bne.n	80072e4 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800730c:	4621      	mov	r1, r4
 800730e:	4628      	mov	r0, r5
 8007310:	f001 f802 	bl	8008318 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007314:	e7cc      	b.n	80072b0 <osMessageQueueNew+0x10>
	...

08007318 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007318:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800731a:	461c      	mov	r4, r3
 800731c:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007320:	b1b6      	cbz	r6, 8007350 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007322:	b308      	cbz	r0, 8007368 <osMessageQueuePut+0x50>
 8007324:	b301      	cbz	r1, 8007368 <osMessageQueuePut+0x50>
 8007326:	b9fb      	cbnz	r3, 8007368 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007328:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800732a:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800732c:	f000 fd8a 	bl	8007e44 <xQueueGenericSendFromISR>
 8007330:	2801      	cmp	r0, #1
 8007332:	d116      	bne.n	8007362 <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007334:	9b01      	ldr	r3, [sp, #4]
 8007336:	b913      	cbnz	r3, 800733e <osMessageQueuePut+0x26>
  stat = osOK;
 8007338:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800733a:	b002      	add	sp, #8
 800733c:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800733e:	4b0d      	ldr	r3, [pc, #52]	; (8007374 <osMessageQueuePut+0x5c>)
 8007340:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007344:	601a      	str	r2, [r3, #0]
 8007346:	f3bf 8f4f 	dsb	sy
 800734a:	f3bf 8f6f 	isb	sy
 800734e:	e7f3      	b.n	8007338 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007350:	b150      	cbz	r0, 8007368 <osMessageQueuePut+0x50>
 8007352:	b149      	cbz	r1, 8007368 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007354:	4633      	mov	r3, r6
 8007356:	4622      	mov	r2, r4
 8007358:	f000 fcc2 	bl	8007ce0 <xQueueGenericSend>
 800735c:	2801      	cmp	r0, #1
 800735e:	d0eb      	beq.n	8007338 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8007360:	b92c      	cbnz	r4, 800736e <osMessageQueuePut+0x56>
          stat = osErrorResource;
 8007362:	f06f 0002 	mvn.w	r0, #2
 8007366:	e7e8      	b.n	800733a <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8007368:	f06f 0003 	mvn.w	r0, #3
 800736c:	e7e5      	b.n	800733a <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800736e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007372:	e7e2      	b.n	800733a <osMessageQueuePut+0x22>
 8007374:	e000ed04 	.word	0xe000ed04

08007378 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007378:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800737a:	461c      	mov	r4, r3
 800737c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007380:	b1b3      	cbz	r3, 80073b0 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007382:	b300      	cbz	r0, 80073c6 <osMessageQueueGet+0x4e>
 8007384:	b1f9      	cbz	r1, 80073c6 <osMessageQueueGet+0x4e>
 8007386:	b9f4      	cbnz	r4, 80073c6 <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007388:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800738a:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800738c:	f000 ff74 	bl	8008278 <xQueueReceiveFromISR>
 8007390:	2801      	cmp	r0, #1
 8007392:	d115      	bne.n	80073c0 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8007394:	9b01      	ldr	r3, [sp, #4]
 8007396:	b913      	cbnz	r3, 800739e <osMessageQueueGet+0x26>
  stat = osOK;
 8007398:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800739a:	b003      	add	sp, #12
 800739c:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800739e:	4b0d      	ldr	r3, [pc, #52]	; (80073d4 <osMessageQueueGet+0x5c>)
 80073a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80073a4:	601a      	str	r2, [r3, #0]
 80073a6:	f3bf 8f4f 	dsb	sy
 80073aa:	f3bf 8f6f 	isb	sy
 80073ae:	e7f3      	b.n	8007398 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80073b0:	b148      	cbz	r0, 80073c6 <osMessageQueueGet+0x4e>
 80073b2:	b141      	cbz	r1, 80073c6 <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80073b4:	4622      	mov	r2, r4
 80073b6:	f000 fdfb 	bl	8007fb0 <xQueueReceive>
 80073ba:	2801      	cmp	r0, #1
 80073bc:	d0ec      	beq.n	8007398 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 80073be:	b92c      	cbnz	r4, 80073cc <osMessageQueueGet+0x54>
          stat = osErrorResource;
 80073c0:	f06f 0002 	mvn.w	r0, #2
 80073c4:	e7e9      	b.n	800739a <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 80073c6:	f06f 0003 	mvn.w	r0, #3
 80073ca:	e7e6      	b.n	800739a <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 80073cc:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80073d0:	e7e3      	b.n	800739a <osMessageQueueGet+0x22>
 80073d2:	bf00      	nop
 80073d4:	e000ed04 	.word	0xe000ed04

080073d8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80073d8:	4b03      	ldr	r3, [pc, #12]	; (80073e8 <vApplicationGetIdleTaskMemory+0x10>)
 80073da:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80073dc:	4b03      	ldr	r3, [pc, #12]	; (80073ec <vApplicationGetIdleTaskMemory+0x14>)
 80073de:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80073e0:	2380      	movs	r3, #128	; 0x80
 80073e2:	6013      	str	r3, [r2, #0]
}
 80073e4:	4770      	bx	lr
 80073e6:	bf00      	nop
 80073e8:	20001744 	.word	0x20001744
 80073ec:	20001544 	.word	0x20001544

080073f0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80073f0:	4b03      	ldr	r3, [pc, #12]	; (8007400 <vApplicationGetTimerTaskMemory+0x10>)
 80073f2:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80073f4:	4b03      	ldr	r3, [pc, #12]	; (8007404 <vApplicationGetTimerTaskMemory+0x14>)
 80073f6:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80073f8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80073fc:	6013      	str	r3, [r2, #0]
}
 80073fe:	4770      	bx	lr
 8007400:	20001c08 	.word	0x20001c08
 8007404:	20001808 	.word	0x20001808

08007408 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007408:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800740a:	4b0f      	ldr	r3, [pc, #60]	; (8007448 <prvInsertBlockIntoFreeList+0x40>)
 800740c:	461a      	mov	r2, r3
 800740e:	681b      	ldr	r3, [r3, #0]
 8007410:	4283      	cmp	r3, r0
 8007412:	d3fb      	bcc.n	800740c <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007414:	6854      	ldr	r4, [r2, #4]
 8007416:	1911      	adds	r1, r2, r4
 8007418:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800741a:	bf01      	itttt	eq
 800741c:	6841      	ldreq	r1, [r0, #4]
 800741e:	4610      	moveq	r0, r2
 8007420:	1909      	addeq	r1, r1, r4
 8007422:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007424:	6844      	ldr	r4, [r0, #4]
 8007426:	1901      	adds	r1, r0, r4
 8007428:	428b      	cmp	r3, r1
 800742a:	d107      	bne.n	800743c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800742c:	4907      	ldr	r1, [pc, #28]	; (800744c <prvInsertBlockIntoFreeList+0x44>)
 800742e:	6809      	ldr	r1, [r1, #0]
 8007430:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007432:	bf1f      	itttt	ne
 8007434:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007436:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007438:	1909      	addne	r1, r1, r4
 800743a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800743c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800743e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007440:	bf18      	it	ne
 8007442:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007444:	bd10      	pop	{r4, pc}
 8007446:	bf00      	nop
 8007448:	20009ce0 	.word	0x20009ce0
 800744c:	20001cc8 	.word	0x20001cc8

08007450 <pvPortMalloc>:
{
 8007450:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007454:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007456:	f001 f9a9 	bl	80087ac <vTaskSuspendAll>
		if( pxEnd == NULL )
 800745a:	4b3e      	ldr	r3, [pc, #248]	; (8007554 <pvPortMalloc+0x104>)
 800745c:	483e      	ldr	r0, [pc, #248]	; (8007558 <pvPortMalloc+0x108>)
 800745e:	681a      	ldr	r2, [r3, #0]
 8007460:	469c      	mov	ip, r3
 8007462:	b9d2      	cbnz	r2, 800749a <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 8007464:	4a3d      	ldr	r2, [pc, #244]	; (800755c <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007466:	4b3e      	ldr	r3, [pc, #248]	; (8007560 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007468:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800746a:	bf1c      	itt	ne
 800746c:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800746e:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007472:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007474:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8007476:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 8007478:	4b3a      	ldr	r3, [pc, #232]	; (8007564 <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800747a:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 800747e:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007482:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007484:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 8007488:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800748c:	4b36      	ldr	r3, [pc, #216]	; (8007568 <pvPortMalloc+0x118>)
 800748e:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007490:	4b36      	ldr	r3, [pc, #216]	; (800756c <pvPortMalloc+0x11c>)
 8007492:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007494:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007498:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800749a:	6807      	ldr	r7, [r0, #0]
 800749c:	4227      	tst	r7, r4
 800749e:	d153      	bne.n	8007548 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 80074a0:	2c00      	cmp	r4, #0
 80074a2:	d044      	beq.n	800752e <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 80074a4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80074a8:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80074aa:	bf1c      	itt	ne
 80074ac:	f023 0307 	bicne.w	r3, r3, #7
 80074b0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	d048      	beq.n	8007548 <pvPortMalloc+0xf8>
 80074b6:	4a2d      	ldr	r2, [pc, #180]	; (800756c <pvPortMalloc+0x11c>)
 80074b8:	6816      	ldr	r6, [r2, #0]
 80074ba:	429e      	cmp	r6, r3
 80074bc:	4690      	mov	r8, r2
 80074be:	d343      	bcc.n	8007548 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 80074c0:	4a27      	ldr	r2, [pc, #156]	; (8007560 <pvPortMalloc+0x110>)
 80074c2:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80074c4:	6869      	ldr	r1, [r5, #4]
 80074c6:	4299      	cmp	r1, r3
 80074c8:	d201      	bcs.n	80074ce <pvPortMalloc+0x7e>
 80074ca:	6828      	ldr	r0, [r5, #0]
 80074cc:	b9a8      	cbnz	r0, 80074fa <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 80074ce:	f8dc 0000 	ldr.w	r0, [ip]
 80074d2:	42a8      	cmp	r0, r5
 80074d4:	d038      	beq.n	8007548 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80074d6:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80074d8:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80074da:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80074dc:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80074de:	2910      	cmp	r1, #16
 80074e0:	d912      	bls.n	8007508 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80074e2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80074e4:	0742      	lsls	r2, r0, #29
 80074e6:	d00b      	beq.n	8007500 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80074e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074ec:	f383 8811 	msr	BASEPRI, r3
 80074f0:	f3bf 8f6f 	isb	sy
 80074f4:	f3bf 8f4f 	dsb	sy
 80074f8:	e7fe      	b.n	80074f8 <pvPortMalloc+0xa8>
 80074fa:	462a      	mov	r2, r5
 80074fc:	4605      	mov	r5, r0
 80074fe:	e7e1      	b.n	80074c4 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007500:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007502:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007504:	f7ff ff80 	bl	8007408 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007508:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800750a:	4917      	ldr	r1, [pc, #92]	; (8007568 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 800750c:	4a18      	ldr	r2, [pc, #96]	; (8007570 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800750e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007510:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007512:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8007514:	2300      	movs	r3, #0
 8007516:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8007518:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800751a:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800751e:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8007520:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007524:	bf38      	it	cc
 8007526:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007528:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800752a:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800752c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800752e:	f001 f9e1 	bl	80088f4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007532:	0763      	lsls	r3, r4, #29
 8007534:	d00a      	beq.n	800754c <pvPortMalloc+0xfc>
 8007536:	f04f 0350 	mov.w	r3, #80	; 0x50
 800753a:	f383 8811 	msr	BASEPRI, r3
 800753e:	f3bf 8f6f 	isb	sy
 8007542:	f3bf 8f4f 	dsb	sy
 8007546:	e7fe      	b.n	8007546 <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 8007548:	2400      	movs	r4, #0
 800754a:	e7f0      	b.n	800752e <pvPortMalloc+0xde>
}
 800754c:	4620      	mov	r0, r4
 800754e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007552:	bf00      	nop
 8007554:	20001cc8 	.word	0x20001cc8
 8007558:	20009ccc 	.word	0x20009ccc
 800755c:	20001ccc 	.word	0x20001ccc
 8007560:	20009ce0 	.word	0x20009ce0
 8007564:	20009cc4 	.word	0x20009cc4
 8007568:	20009cd4 	.word	0x20009cd4
 800756c:	20009cd0 	.word	0x20009cd0
 8007570:	20009cd8 	.word	0x20009cd8

08007574 <vPortFree>:
{
 8007574:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007576:	4604      	mov	r4, r0
 8007578:	b390      	cbz	r0, 80075e0 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800757a:	4a1a      	ldr	r2, [pc, #104]	; (80075e4 <vPortFree+0x70>)
 800757c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007580:	6812      	ldr	r2, [r2, #0]
 8007582:	4213      	tst	r3, r2
 8007584:	d108      	bne.n	8007598 <vPortFree+0x24>
 8007586:	f04f 0350 	mov.w	r3, #80	; 0x50
 800758a:	f383 8811 	msr	BASEPRI, r3
 800758e:	f3bf 8f6f 	isb	sy
 8007592:	f3bf 8f4f 	dsb	sy
 8007596:	e7fe      	b.n	8007596 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007598:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800759c:	b141      	cbz	r1, 80075b0 <vPortFree+0x3c>
 800759e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075a2:	f383 8811 	msr	BASEPRI, r3
 80075a6:	f3bf 8f6f 	isb	sy
 80075aa:	f3bf 8f4f 	dsb	sy
 80075ae:	e7fe      	b.n	80075ae <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80075b0:	ea23 0302 	bic.w	r3, r3, r2
 80075b4:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80075b8:	f001 f8f8 	bl	80087ac <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80075bc:	4a0a      	ldr	r2, [pc, #40]	; (80075e8 <vPortFree+0x74>)
 80075be:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80075c2:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80075c4:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80075c8:	440b      	add	r3, r1
 80075ca:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80075cc:	f7ff ff1c 	bl	8007408 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80075d0:	4a06      	ldr	r2, [pc, #24]	; (80075ec <vPortFree+0x78>)
 80075d2:	6813      	ldr	r3, [r2, #0]
}
 80075d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80075d8:	3301      	adds	r3, #1
 80075da:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80075dc:	f001 b98a 	b.w	80088f4 <xTaskResumeAll>
}
 80075e0:	bd10      	pop	{r4, pc}
 80075e2:	bf00      	nop
 80075e4:	20009ccc 	.word	0x20009ccc
 80075e8:	20009cd0 	.word	0x20009cd0
 80075ec:	20009cdc 	.word	0x20009cdc

080075f0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80075f0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80075f4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80075f8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80075fc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80075fe:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007600:	2300      	movs	r3, #0
 8007602:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007604:	4770      	bx	lr

08007606 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007606:	2300      	movs	r3, #0
 8007608:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800760a:	4770      	bx	lr

0800760c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800760c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800760e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007610:	689a      	ldr	r2, [r3, #8]
 8007612:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007614:	689a      	ldr	r2, [r3, #8]
 8007616:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007618:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800761a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800761c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800761e:	3301      	adds	r3, #1
 8007620:	6003      	str	r3, [r0, #0]
}
 8007622:	4770      	bx	lr

08007624 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007624:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007626:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007628:	1c63      	adds	r3, r4, #1
 800762a:	d10a      	bne.n	8007642 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800762c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800762e:	685a      	ldr	r2, [r3, #4]
 8007630:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007632:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007634:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007636:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007638:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800763a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800763c:	3301      	adds	r3, #1
 800763e:	6003      	str	r3, [r0, #0]
}
 8007640:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007642:	f100 0208 	add.w	r2, r0, #8
 8007646:	4613      	mov	r3, r2
 8007648:	6852      	ldr	r2, [r2, #4]
 800764a:	6815      	ldr	r5, [r2, #0]
 800764c:	42a5      	cmp	r5, r4
 800764e:	d9fa      	bls.n	8007646 <vListInsert+0x22>
 8007650:	e7ed      	b.n	800762e <vListInsert+0xa>

08007652 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007652:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007656:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007658:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800765a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800765c:	6859      	ldr	r1, [r3, #4]
 800765e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007660:	bf08      	it	eq
 8007662:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007664:	2200      	movs	r2, #0
 8007666:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007668:	681a      	ldr	r2, [r3, #0]
 800766a:	3a01      	subs	r2, #1
 800766c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800766e:	6818      	ldr	r0, [r3, #0]
}
 8007670:	4770      	bx	lr
	...

08007674 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007674:	4808      	ldr	r0, [pc, #32]	; (8007698 <prvPortStartFirstTask+0x24>)
 8007676:	6800      	ldr	r0, [r0, #0]
 8007678:	6800      	ldr	r0, [r0, #0]
 800767a:	f380 8808 	msr	MSP, r0
 800767e:	f04f 0000 	mov.w	r0, #0
 8007682:	f380 8814 	msr	CONTROL, r0
 8007686:	b662      	cpsie	i
 8007688:	b661      	cpsie	f
 800768a:	f3bf 8f4f 	dsb	sy
 800768e:	f3bf 8f6f 	isb	sy
 8007692:	df00      	svc	0
 8007694:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007696:	0000      	.short	0x0000
 8007698:	e000ed08 	.word	0xe000ed08

0800769c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800769c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80076ac <vPortEnableVFP+0x10>
 80076a0:	6801      	ldr	r1, [r0, #0]
 80076a2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80076a6:	6001      	str	r1, [r0, #0]
 80076a8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80076aa:	0000      	.short	0x0000
 80076ac:	e000ed88 	.word	0xe000ed88

080076b0 <prvTaskExitError>:
{
 80076b0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80076b2:	2300      	movs	r3, #0
 80076b4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80076b6:	4b0d      	ldr	r3, [pc, #52]	; (80076ec <prvTaskExitError+0x3c>)
 80076b8:	681b      	ldr	r3, [r3, #0]
 80076ba:	3301      	adds	r3, #1
 80076bc:	d008      	beq.n	80076d0 <prvTaskExitError+0x20>
 80076be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076c2:	f383 8811 	msr	BASEPRI, r3
 80076c6:	f3bf 8f6f 	isb	sy
 80076ca:	f3bf 8f4f 	dsb	sy
 80076ce:	e7fe      	b.n	80076ce <prvTaskExitError+0x1e>
 80076d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076d4:	f383 8811 	msr	BASEPRI, r3
 80076d8:	f3bf 8f6f 	isb	sy
 80076dc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80076e0:	9b01      	ldr	r3, [sp, #4]
 80076e2:	2b00      	cmp	r3, #0
 80076e4:	d0fc      	beq.n	80076e0 <prvTaskExitError+0x30>
}
 80076e6:	b002      	add	sp, #8
 80076e8:	4770      	bx	lr
 80076ea:	bf00      	nop
 80076ec:	2000005c 	.word	0x2000005c

080076f0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80076f0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80076f4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80076f8:	4b07      	ldr	r3, [pc, #28]	; (8007718 <pxPortInitialiseStack+0x28>)
 80076fa:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80076fe:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007702:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007706:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800770a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800770e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007712:	3844      	subs	r0, #68	; 0x44
 8007714:	4770      	bx	lr
 8007716:	bf00      	nop
 8007718:	080076b1 	.word	0x080076b1
 800771c:	00000000 	.word	0x00000000

08007720 <SVC_Handler>:
	__asm volatile (
 8007720:	4b07      	ldr	r3, [pc, #28]	; (8007740 <pxCurrentTCBConst2>)
 8007722:	6819      	ldr	r1, [r3, #0]
 8007724:	6808      	ldr	r0, [r1, #0]
 8007726:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800772a:	f380 8809 	msr	PSP, r0
 800772e:	f3bf 8f6f 	isb	sy
 8007732:	f04f 0000 	mov.w	r0, #0
 8007736:	f380 8811 	msr	BASEPRI, r0
 800773a:	4770      	bx	lr
 800773c:	f3af 8000 	nop.w

08007740 <pxCurrentTCBConst2>:
 8007740:	20009cf0 	.word	0x20009cf0

08007744 <vPortEnterCritical>:
 8007744:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007748:	f383 8811 	msr	BASEPRI, r3
 800774c:	f3bf 8f6f 	isb	sy
 8007750:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007754:	4a0a      	ldr	r2, [pc, #40]	; (8007780 <vPortEnterCritical+0x3c>)
 8007756:	6813      	ldr	r3, [r2, #0]
 8007758:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800775a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800775c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800775e:	d10d      	bne.n	800777c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007760:	4b08      	ldr	r3, [pc, #32]	; (8007784 <vPortEnterCritical+0x40>)
 8007762:	681b      	ldr	r3, [r3, #0]
 8007764:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007768:	d008      	beq.n	800777c <vPortEnterCritical+0x38>
 800776a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800776e:	f383 8811 	msr	BASEPRI, r3
 8007772:	f3bf 8f6f 	isb	sy
 8007776:	f3bf 8f4f 	dsb	sy
 800777a:	e7fe      	b.n	800777a <vPortEnterCritical+0x36>
}
 800777c:	4770      	bx	lr
 800777e:	bf00      	nop
 8007780:	2000005c 	.word	0x2000005c
 8007784:	e000ed04 	.word	0xe000ed04

08007788 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007788:	4a08      	ldr	r2, [pc, #32]	; (80077ac <vPortExitCritical+0x24>)
 800778a:	6813      	ldr	r3, [r2, #0]
 800778c:	b943      	cbnz	r3, 80077a0 <vPortExitCritical+0x18>
 800778e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007792:	f383 8811 	msr	BASEPRI, r3
 8007796:	f3bf 8f6f 	isb	sy
 800779a:	f3bf 8f4f 	dsb	sy
 800779e:	e7fe      	b.n	800779e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80077a0:	3b01      	subs	r3, #1
 80077a2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80077a4:	b90b      	cbnz	r3, 80077aa <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80077a6:	f383 8811 	msr	BASEPRI, r3
}
 80077aa:	4770      	bx	lr
 80077ac:	2000005c 	.word	0x2000005c

080077b0 <PendSV_Handler>:
	__asm volatile
 80077b0:	f3ef 8009 	mrs	r0, PSP
 80077b4:	f3bf 8f6f 	isb	sy
 80077b8:	4b15      	ldr	r3, [pc, #84]	; (8007810 <pxCurrentTCBConst>)
 80077ba:	681a      	ldr	r2, [r3, #0]
 80077bc:	f01e 0f10 	tst.w	lr, #16
 80077c0:	bf08      	it	eq
 80077c2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80077c6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077ca:	6010      	str	r0, [r2, #0]
 80077cc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80077d0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80077d4:	f380 8811 	msr	BASEPRI, r0
 80077d8:	f3bf 8f4f 	dsb	sy
 80077dc:	f3bf 8f6f 	isb	sy
 80077e0:	f001 f98c 	bl	8008afc <vTaskSwitchContext>
 80077e4:	f04f 0000 	mov.w	r0, #0
 80077e8:	f380 8811 	msr	BASEPRI, r0
 80077ec:	bc09      	pop	{r0, r3}
 80077ee:	6819      	ldr	r1, [r3, #0]
 80077f0:	6808      	ldr	r0, [r1, #0]
 80077f2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077f6:	f01e 0f10 	tst.w	lr, #16
 80077fa:	bf08      	it	eq
 80077fc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007800:	f380 8809 	msr	PSP, r0
 8007804:	f3bf 8f6f 	isb	sy
 8007808:	4770      	bx	lr
 800780a:	bf00      	nop
 800780c:	f3af 8000 	nop.w

08007810 <pxCurrentTCBConst>:
 8007810:	20009cf0 	.word	0x20009cf0

08007814 <xPortSysTickHandler>:
{
 8007814:	b508      	push	{r3, lr}
	__asm volatile
 8007816:	f04f 0350 	mov.w	r3, #80	; 0x50
 800781a:	f383 8811 	msr	BASEPRI, r3
 800781e:	f3bf 8f6f 	isb	sy
 8007822:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007826:	f000 ffcf 	bl	80087c8 <xTaskIncrementTick>
 800782a:	b118      	cbz	r0, 8007834 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800782c:	4b03      	ldr	r3, [pc, #12]	; (800783c <xPortSysTickHandler+0x28>)
 800782e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007832:	601a      	str	r2, [r3, #0]
	__asm volatile
 8007834:	2300      	movs	r3, #0
 8007836:	f383 8811 	msr	BASEPRI, r3
}
 800783a:	bd08      	pop	{r3, pc}
 800783c:	e000ed04 	.word	0xe000ed04

08007840 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007840:	4a08      	ldr	r2, [pc, #32]	; (8007864 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007842:	4909      	ldr	r1, [pc, #36]	; (8007868 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007844:	2300      	movs	r3, #0
 8007846:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007848:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800784a:	4b08      	ldr	r3, [pc, #32]	; (800786c <vPortSetupTimerInterrupt+0x2c>)
 800784c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007850:	681b      	ldr	r3, [r3, #0]
 8007852:	fbb3 f3f1 	udiv	r3, r3, r1
 8007856:	4906      	ldr	r1, [pc, #24]	; (8007870 <vPortSetupTimerInterrupt+0x30>)
 8007858:	3b01      	subs	r3, #1
 800785a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800785c:	2307      	movs	r3, #7
 800785e:	6013      	str	r3, [r2, #0]
}
 8007860:	4770      	bx	lr
 8007862:	bf00      	nop
 8007864:	e000e010 	.word	0xe000e010
 8007868:	e000e018 	.word	0xe000e018
 800786c:	20000050 	.word	0x20000050
 8007870:	e000e014 	.word	0xe000e014

08007874 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007874:	4b38      	ldr	r3, [pc, #224]	; (8007958 <xPortStartScheduler+0xe4>)
 8007876:	4a39      	ldr	r2, [pc, #228]	; (800795c <xPortStartScheduler+0xe8>)
{
 8007878:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800787a:	6819      	ldr	r1, [r3, #0]
 800787c:	4291      	cmp	r1, r2
 800787e:	d108      	bne.n	8007892 <xPortStartScheduler+0x1e>
	__asm volatile
 8007880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007884:	f383 8811 	msr	BASEPRI, r3
 8007888:	f3bf 8f6f 	isb	sy
 800788c:	f3bf 8f4f 	dsb	sy
 8007890:	e7fe      	b.n	8007890 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007892:	681a      	ldr	r2, [r3, #0]
 8007894:	4b32      	ldr	r3, [pc, #200]	; (8007960 <xPortStartScheduler+0xec>)
 8007896:	429a      	cmp	r2, r3
 8007898:	d108      	bne.n	80078ac <xPortStartScheduler+0x38>
 800789a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800789e:	f383 8811 	msr	BASEPRI, r3
 80078a2:	f3bf 8f6f 	isb	sy
 80078a6:	f3bf 8f4f 	dsb	sy
 80078aa:	e7fe      	b.n	80078aa <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80078ac:	4b2d      	ldr	r3, [pc, #180]	; (8007964 <xPortStartScheduler+0xf0>)
 80078ae:	781a      	ldrb	r2, [r3, #0]
 80078b0:	b2d2      	uxtb	r2, r2
 80078b2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80078b4:	22ff      	movs	r2, #255	; 0xff
 80078b6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80078b8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80078ba:	4a2b      	ldr	r2, [pc, #172]	; (8007968 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80078bc:	b2db      	uxtb	r3, r3
 80078be:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80078c2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80078c6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80078ca:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80078cc:	4a27      	ldr	r2, [pc, #156]	; (800796c <xPortStartScheduler+0xf8>)
 80078ce:	2307      	movs	r3, #7
 80078d0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80078d2:	2100      	movs	r1, #0
 80078d4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80078d8:	0600      	lsls	r0, r0, #24
 80078da:	f103 34ff 	add.w	r4, r3, #4294967295
 80078de:	d40c      	bmi.n	80078fa <xPortStartScheduler+0x86>
 80078e0:	b111      	cbz	r1, 80078e8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80078e2:	2b03      	cmp	r3, #3
 80078e4:	6013      	str	r3, [r2, #0]
 80078e6:	d011      	beq.n	800790c <xPortStartScheduler+0x98>
 80078e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078ec:	f383 8811 	msr	BASEPRI, r3
 80078f0:	f3bf 8f6f 	isb	sy
 80078f4:	f3bf 8f4f 	dsb	sy
 80078f8:	e7fe      	b.n	80078f8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80078fa:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80078fe:	005b      	lsls	r3, r3, #1
 8007900:	b2db      	uxtb	r3, r3
 8007902:	f88d 3003 	strb.w	r3, [sp, #3]
 8007906:	2101      	movs	r1, #1
 8007908:	4623      	mov	r3, r4
 800790a:	e7e3      	b.n	80078d4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800790c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007910:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007912:	9b01      	ldr	r3, [sp, #4]
 8007914:	4a13      	ldr	r2, [pc, #76]	; (8007964 <xPortStartScheduler+0xf0>)
 8007916:	b2db      	uxtb	r3, r3
 8007918:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800791a:	4b15      	ldr	r3, [pc, #84]	; (8007970 <xPortStartScheduler+0xfc>)
 800791c:	681a      	ldr	r2, [r3, #0]
 800791e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007922:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007924:	681a      	ldr	r2, [r3, #0]
 8007926:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800792a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800792c:	f7ff ff88 	bl	8007840 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007930:	4b10      	ldr	r3, [pc, #64]	; (8007974 <xPortStartScheduler+0x100>)
 8007932:	2400      	movs	r4, #0
 8007934:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8007936:	f7ff feb1 	bl	800769c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800793a:	4a0f      	ldr	r2, [pc, #60]	; (8007978 <xPortStartScheduler+0x104>)
 800793c:	6813      	ldr	r3, [r2, #0]
 800793e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007942:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8007944:	f7ff fe96 	bl	8007674 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007948:	f001 f8d8 	bl	8008afc <vTaskSwitchContext>
	prvTaskExitError();
 800794c:	f7ff feb0 	bl	80076b0 <prvTaskExitError>
}
 8007950:	4620      	mov	r0, r4
 8007952:	b002      	add	sp, #8
 8007954:	bd10      	pop	{r4, pc}
 8007956:	bf00      	nop
 8007958:	e000ed00 	.word	0xe000ed00
 800795c:	410fc271 	.word	0x410fc271
 8007960:	410fc270 	.word	0x410fc270
 8007964:	e000e400 	.word	0xe000e400
 8007968:	20009ce8 	.word	0x20009ce8
 800796c:	20009cec 	.word	0x20009cec
 8007970:	e000ed20 	.word	0xe000ed20
 8007974:	2000005c 	.word	0x2000005c
 8007978:	e000ef34 	.word	0xe000ef34

0800797c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800797c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007980:	2b0f      	cmp	r3, #15
 8007982:	d90e      	bls.n	80079a2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007984:	4a10      	ldr	r2, [pc, #64]	; (80079c8 <vPortValidateInterruptPriority+0x4c>)
 8007986:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007988:	4a10      	ldr	r2, [pc, #64]	; (80079cc <vPortValidateInterruptPriority+0x50>)
 800798a:	7812      	ldrb	r2, [r2, #0]
 800798c:	429a      	cmp	r2, r3
 800798e:	d908      	bls.n	80079a2 <vPortValidateInterruptPriority+0x26>
 8007990:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007994:	f383 8811 	msr	BASEPRI, r3
 8007998:	f3bf 8f6f 	isb	sy
 800799c:	f3bf 8f4f 	dsb	sy
 80079a0:	e7fe      	b.n	80079a0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80079a2:	4b0b      	ldr	r3, [pc, #44]	; (80079d0 <vPortValidateInterruptPriority+0x54>)
 80079a4:	4a0b      	ldr	r2, [pc, #44]	; (80079d4 <vPortValidateInterruptPriority+0x58>)
 80079a6:	681b      	ldr	r3, [r3, #0]
 80079a8:	6812      	ldr	r2, [r2, #0]
 80079aa:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80079ae:	4293      	cmp	r3, r2
 80079b0:	d908      	bls.n	80079c4 <vPortValidateInterruptPriority+0x48>
 80079b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079b6:	f383 8811 	msr	BASEPRI, r3
 80079ba:	f3bf 8f6f 	isb	sy
 80079be:	f3bf 8f4f 	dsb	sy
 80079c2:	e7fe      	b.n	80079c2 <vPortValidateInterruptPriority+0x46>
	}
 80079c4:	4770      	bx	lr
 80079c6:	bf00      	nop
 80079c8:	e000e3f0 	.word	0xe000e3f0
 80079cc:	20009ce8 	.word	0x20009ce8
 80079d0:	e000ed0c 	.word	0xe000ed0c
 80079d4:	20009cec 	.word	0x20009cec

080079d8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80079d8:	b510      	push	{r4, lr}
 80079da:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80079dc:	f7ff feb2 	bl	8007744 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80079e0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80079e2:	f7ff fed1 	bl	8007788 <vPortExitCritical>

	return xReturn;
}
 80079e6:	fab4 f084 	clz	r0, r4
 80079ea:	0940      	lsrs	r0, r0, #5
 80079ec:	bd10      	pop	{r4, pc}

080079ee <prvCopyDataToQueue>:
{
 80079ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80079f0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80079f2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80079f4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80079f6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80079f8:	b952      	cbnz	r2, 8007a10 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80079fa:	6807      	ldr	r7, [r0, #0]
 80079fc:	bb47      	cbnz	r7, 8007a50 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80079fe:	6880      	ldr	r0, [r0, #8]
 8007a00:	f001 f9e2 	bl	8008dc8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007a04:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007a06:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007a08:	3601      	adds	r6, #1
 8007a0a:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007a0c:	4628      	mov	r0, r5
 8007a0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007a10:	b965      	cbnz	r5, 8007a2c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007a12:	6840      	ldr	r0, [r0, #4]
 8007a14:	f013 fec0 	bl	801b798 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007a18:	6863      	ldr	r3, [r4, #4]
 8007a1a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007a1c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007a1e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007a20:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007a22:	4293      	cmp	r3, r2
 8007a24:	d3f0      	bcc.n	8007a08 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007a26:	6823      	ldr	r3, [r4, #0]
 8007a28:	6063      	str	r3, [r4, #4]
 8007a2a:	e7ed      	b.n	8007a08 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007a2c:	68c0      	ldr	r0, [r0, #12]
 8007a2e:	f013 feb3 	bl	801b798 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007a32:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007a34:	68e3      	ldr	r3, [r4, #12]
 8007a36:	4251      	negs	r1, r2
 8007a38:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007a3a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007a3c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007a3e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007a40:	bf3e      	ittt	cc
 8007a42:	68a3      	ldrcc	r3, [r4, #8]
 8007a44:	185b      	addcc	r3, r3, r1
 8007a46:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007a48:	2d02      	cmp	r5, #2
 8007a4a:	d101      	bne.n	8007a50 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007a4c:	b116      	cbz	r6, 8007a54 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007a4e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007a50:	2500      	movs	r5, #0
 8007a52:	e7d9      	b.n	8007a08 <prvCopyDataToQueue+0x1a>
 8007a54:	4635      	mov	r5, r6
 8007a56:	e7d7      	b.n	8007a08 <prvCopyDataToQueue+0x1a>

08007a58 <prvCopyDataFromQueue>:
{
 8007a58:	4603      	mov	r3, r0
 8007a5a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007a5c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007a5e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007a60:	b16a      	cbz	r2, 8007a7e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007a62:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007a64:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007a66:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007a68:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007a6a:	bf28      	it	cs
 8007a6c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007a6e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007a70:	bf28      	it	cs
 8007a72:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007a74:	68d9      	ldr	r1, [r3, #12]
}
 8007a76:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007a7a:	f013 be8d 	b.w	801b798 <memcpy>
}
 8007a7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007a82:	4770      	bx	lr

08007a84 <prvUnlockQueue>:
{
 8007a84:	b570      	push	{r4, r5, r6, lr}
 8007a86:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007a88:	f7ff fe5c 	bl	8007744 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007a8c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007a90:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007a94:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007a96:	2d00      	cmp	r5, #0
 8007a98:	dc14      	bgt.n	8007ac4 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007a9a:	23ff      	movs	r3, #255	; 0xff
 8007a9c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007aa0:	f7ff fe72 	bl	8007788 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007aa4:	f7ff fe4e 	bl	8007744 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007aa8:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007aac:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007ab0:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007ab2:	2d00      	cmp	r5, #0
 8007ab4:	dc12      	bgt.n	8007adc <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007ab6:	23ff      	movs	r3, #255	; 0xff
 8007ab8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007abc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007ac0:	f7ff be62 	b.w	8007788 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007ac4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007ac6:	2b00      	cmp	r3, #0
 8007ac8:	d0e7      	beq.n	8007a9a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007aca:	4630      	mov	r0, r6
 8007acc:	f001 f898 	bl	8008c00 <xTaskRemoveFromEventList>
 8007ad0:	b108      	cbz	r0, 8007ad6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007ad2:	f001 f921 	bl	8008d18 <vTaskMissedYield>
			--cTxLock;
 8007ad6:	3d01      	subs	r5, #1
 8007ad8:	b26d      	sxtb	r5, r5
 8007ada:	e7dc      	b.n	8007a96 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007adc:	6923      	ldr	r3, [r4, #16]
 8007ade:	2b00      	cmp	r3, #0
 8007ae0:	d0e9      	beq.n	8007ab6 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007ae2:	4630      	mov	r0, r6
 8007ae4:	f001 f88c 	bl	8008c00 <xTaskRemoveFromEventList>
 8007ae8:	b108      	cbz	r0, 8007aee <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007aea:	f001 f915 	bl	8008d18 <vTaskMissedYield>
				--cRxLock;
 8007aee:	3d01      	subs	r5, #1
 8007af0:	b26d      	sxtb	r5, r5
 8007af2:	e7de      	b.n	8007ab2 <prvUnlockQueue+0x2e>

08007af4 <xQueueGenericReset>:
{
 8007af4:	b538      	push	{r3, r4, r5, lr}
 8007af6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007af8:	4604      	mov	r4, r0
 8007afa:	b940      	cbnz	r0, 8007b0e <xQueueGenericReset+0x1a>
 8007afc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b00:	f383 8811 	msr	BASEPRI, r3
 8007b04:	f3bf 8f6f 	isb	sy
 8007b08:	f3bf 8f4f 	dsb	sy
 8007b0c:	e7fe      	b.n	8007b0c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007b0e:	f7ff fe19 	bl	8007744 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b12:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007b16:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007b18:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b1a:	434b      	muls	r3, r1
 8007b1c:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b1e:	1a5b      	subs	r3, r3, r1
 8007b20:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b22:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007b24:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007b26:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007b28:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007b2a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007b2c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007b30:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007b34:	b995      	cbnz	r5, 8007b5c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007b36:	6923      	ldr	r3, [r4, #16]
 8007b38:	b163      	cbz	r3, 8007b54 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007b3a:	f104 0010 	add.w	r0, r4, #16
 8007b3e:	f001 f85f 	bl	8008c00 <xTaskRemoveFromEventList>
 8007b42:	b138      	cbz	r0, 8007b54 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007b44:	4b0a      	ldr	r3, [pc, #40]	; (8007b70 <xQueueGenericReset+0x7c>)
 8007b46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b4a:	601a      	str	r2, [r3, #0]
 8007b4c:	f3bf 8f4f 	dsb	sy
 8007b50:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007b54:	f7ff fe18 	bl	8007788 <vPortExitCritical>
}
 8007b58:	2001      	movs	r0, #1
 8007b5a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007b5c:	f104 0010 	add.w	r0, r4, #16
 8007b60:	f7ff fd46 	bl	80075f0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007b64:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007b68:	f7ff fd42 	bl	80075f0 <vListInitialise>
 8007b6c:	e7f2      	b.n	8007b54 <xQueueGenericReset+0x60>
 8007b6e:	bf00      	nop
 8007b70:	e000ed04 	.word	0xe000ed04

08007b74 <xQueueGenericCreateStatic>:
	{
 8007b74:	b513      	push	{r0, r1, r4, lr}
 8007b76:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007b78:	b940      	cbnz	r0, 8007b8c <xQueueGenericCreateStatic+0x18>
 8007b7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b7e:	f383 8811 	msr	BASEPRI, r3
 8007b82:	f3bf 8f6f 	isb	sy
 8007b86:	f3bf 8f4f 	dsb	sy
 8007b8a:	e7fe      	b.n	8007b8a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8007b8c:	b943      	cbnz	r3, 8007ba0 <xQueueGenericCreateStatic+0x2c>
 8007b8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b92:	f383 8811 	msr	BASEPRI, r3
 8007b96:	f3bf 8f6f 	isb	sy
 8007b9a:	f3bf 8f4f 	dsb	sy
 8007b9e:	e7fe      	b.n	8007b9e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007ba0:	b14a      	cbz	r2, 8007bb6 <xQueueGenericCreateStatic+0x42>
 8007ba2:	b991      	cbnz	r1, 8007bca <xQueueGenericCreateStatic+0x56>
 8007ba4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ba8:	f383 8811 	msr	BASEPRI, r3
 8007bac:	f3bf 8f6f 	isb	sy
 8007bb0:	f3bf 8f4f 	dsb	sy
 8007bb4:	e7fe      	b.n	8007bb4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007bb6:	b141      	cbz	r1, 8007bca <xQueueGenericCreateStatic+0x56>
 8007bb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bbc:	f383 8811 	msr	BASEPRI, r3
 8007bc0:	f3bf 8f6f 	isb	sy
 8007bc4:	f3bf 8f4f 	dsb	sy
 8007bc8:	e7fe      	b.n	8007bc8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007bca:	2350      	movs	r3, #80	; 0x50
 8007bcc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007bce:	9b01      	ldr	r3, [sp, #4]
 8007bd0:	2b50      	cmp	r3, #80	; 0x50
 8007bd2:	d008      	beq.n	8007be6 <xQueueGenericCreateStatic+0x72>
 8007bd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bd8:	f383 8811 	msr	BASEPRI, r3
 8007bdc:	f3bf 8f6f 	isb	sy
 8007be0:	f3bf 8f4f 	dsb	sy
 8007be4:	e7fe      	b.n	8007be4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007be6:	2900      	cmp	r1, #0
 8007be8:	bf08      	it	eq
 8007bea:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007bec:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007bee:	6022      	str	r2, [r4, #0]
 8007bf0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007bf2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007bf6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007bfa:	4619      	mov	r1, r3
 8007bfc:	4620      	mov	r0, r4
 8007bfe:	f7ff ff79 	bl	8007af4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007c02:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007c06:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8007c0a:	4620      	mov	r0, r4
 8007c0c:	b002      	add	sp, #8
 8007c0e:	bd10      	pop	{r4, pc}

08007c10 <xQueueGenericCreate>:
	{
 8007c10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c12:	460d      	mov	r5, r1
 8007c14:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007c16:	4606      	mov	r6, r0
 8007c18:	b940      	cbnz	r0, 8007c2c <xQueueGenericCreate+0x1c>
 8007c1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c1e:	f383 8811 	msr	BASEPRI, r3
 8007c22:	f3bf 8f6f 	isb	sy
 8007c26:	f3bf 8f4f 	dsb	sy
 8007c2a:	e7fe      	b.n	8007c2a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007c2c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007c2e:	3050      	adds	r0, #80	; 0x50
 8007c30:	f7ff fc0e 	bl	8007450 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007c34:	4604      	mov	r4, r0
 8007c36:	b170      	cbz	r0, 8007c56 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007c38:	2300      	movs	r3, #0
 8007c3a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007c3e:	b165      	cbz	r5, 8007c5a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007c40:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007c44:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8007c48:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007c4a:	2101      	movs	r1, #1
 8007c4c:	4620      	mov	r0, r4
 8007c4e:	f7ff ff51 	bl	8007af4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007c52:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007c56:	4620      	mov	r0, r4
 8007c58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007c5a:	4603      	mov	r3, r0
 8007c5c:	e7f2      	b.n	8007c44 <xQueueGenericCreate+0x34>

08007c5e <xQueueCreateCountingSemaphoreStatic>:
	{
 8007c5e:	b513      	push	{r0, r1, r4, lr}
 8007c60:	4613      	mov	r3, r2
 8007c62:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007c64:	b940      	cbnz	r0, 8007c78 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007c66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c6a:	f383 8811 	msr	BASEPRI, r3
 8007c6e:	f3bf 8f6f 	isb	sy
 8007c72:	f3bf 8f4f 	dsb	sy
 8007c76:	e7fe      	b.n	8007c76 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007c78:	4288      	cmp	r0, r1
 8007c7a:	d208      	bcs.n	8007c8e <xQueueCreateCountingSemaphoreStatic+0x30>
 8007c7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c80:	f383 8811 	msr	BASEPRI, r3
 8007c84:	f3bf 8f6f 	isb	sy
 8007c88:	f3bf 8f4f 	dsb	sy
 8007c8c:	e7fe      	b.n	8007c8c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007c8e:	2202      	movs	r2, #2
 8007c90:	9200      	str	r2, [sp, #0]
 8007c92:	2200      	movs	r2, #0
 8007c94:	4611      	mov	r1, r2
 8007c96:	f7ff ff6d 	bl	8007b74 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007c9a:	b100      	cbz	r0, 8007c9e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007c9c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007c9e:	b002      	add	sp, #8
 8007ca0:	bd10      	pop	{r4, pc}

08007ca2 <xQueueCreateCountingSemaphore>:
	{
 8007ca2:	b510      	push	{r4, lr}
 8007ca4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007ca6:	b940      	cbnz	r0, 8007cba <xQueueCreateCountingSemaphore+0x18>
 8007ca8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cac:	f383 8811 	msr	BASEPRI, r3
 8007cb0:	f3bf 8f6f 	isb	sy
 8007cb4:	f3bf 8f4f 	dsb	sy
 8007cb8:	e7fe      	b.n	8007cb8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007cba:	4288      	cmp	r0, r1
 8007cbc:	d208      	bcs.n	8007cd0 <xQueueCreateCountingSemaphore+0x2e>
 8007cbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cc2:	f383 8811 	msr	BASEPRI, r3
 8007cc6:	f3bf 8f6f 	isb	sy
 8007cca:	f3bf 8f4f 	dsb	sy
 8007cce:	e7fe      	b.n	8007cce <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007cd0:	2202      	movs	r2, #2
 8007cd2:	2100      	movs	r1, #0
 8007cd4:	f7ff ff9c 	bl	8007c10 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007cd8:	b100      	cbz	r0, 8007cdc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007cda:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007cdc:	bd10      	pop	{r4, pc}
	...

08007ce0 <xQueueGenericSend>:
{
 8007ce0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007ce4:	4688      	mov	r8, r1
 8007ce6:	9201      	str	r2, [sp, #4]
 8007ce8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007cea:	4604      	mov	r4, r0
 8007cec:	b940      	cbnz	r0, 8007d00 <xQueueGenericSend+0x20>
 8007cee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cf2:	f383 8811 	msr	BASEPRI, r3
 8007cf6:	f3bf 8f6f 	isb	sy
 8007cfa:	f3bf 8f4f 	dsb	sy
 8007cfe:	e7fe      	b.n	8007cfe <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007d00:	b951      	cbnz	r1, 8007d18 <xQueueGenericSend+0x38>
 8007d02:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007d04:	b143      	cbz	r3, 8007d18 <xQueueGenericSend+0x38>
 8007d06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d0a:	f383 8811 	msr	BASEPRI, r3
 8007d0e:	f3bf 8f6f 	isb	sy
 8007d12:	f3bf 8f4f 	dsb	sy
 8007d16:	e7fe      	b.n	8007d16 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007d18:	2f02      	cmp	r7, #2
 8007d1a:	d10b      	bne.n	8007d34 <xQueueGenericSend+0x54>
 8007d1c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007d1e:	2b01      	cmp	r3, #1
 8007d20:	d008      	beq.n	8007d34 <xQueueGenericSend+0x54>
 8007d22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d26:	f383 8811 	msr	BASEPRI, r3
 8007d2a:	f3bf 8f6f 	isb	sy
 8007d2e:	f3bf 8f4f 	dsb	sy
 8007d32:	e7fe      	b.n	8007d32 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007d34:	f000 fff6 	bl	8008d24 <xTaskGetSchedulerState>
 8007d38:	4606      	mov	r6, r0
 8007d3a:	b950      	cbnz	r0, 8007d52 <xQueueGenericSend+0x72>
 8007d3c:	9b01      	ldr	r3, [sp, #4]
 8007d3e:	b14b      	cbz	r3, 8007d54 <xQueueGenericSend+0x74>
 8007d40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d44:	f383 8811 	msr	BASEPRI, r3
 8007d48:	f3bf 8f6f 	isb	sy
 8007d4c:	f3bf 8f4f 	dsb	sy
 8007d50:	e7fe      	b.n	8007d50 <xQueueGenericSend+0x70>
 8007d52:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8007d54:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8007e40 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8007d58:	f04f 0900 	mov.w	r9, #0
 8007d5c:	e037      	b.n	8007dce <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007d5e:	9d01      	ldr	r5, [sp, #4]
 8007d60:	b91d      	cbnz	r5, 8007d6a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8007d62:	f7ff fd11 	bl	8007788 <vPortExitCritical>
			return errQUEUE_FULL;
 8007d66:	2000      	movs	r0, #0
 8007d68:	e050      	b.n	8007e0c <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 8007d6a:	b916      	cbnz	r6, 8007d72 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007d6c:	a802      	add	r0, sp, #8
 8007d6e:	f000 ff8b 	bl	8008c88 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007d72:	f7ff fd09 	bl	8007788 <vPortExitCritical>
		vTaskSuspendAll();
 8007d76:	f000 fd19 	bl	80087ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007d7a:	f7ff fce3 	bl	8007744 <vPortEnterCritical>
 8007d7e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007d82:	2bff      	cmp	r3, #255	; 0xff
 8007d84:	bf08      	it	eq
 8007d86:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007d8a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007d8e:	2bff      	cmp	r3, #255	; 0xff
 8007d90:	bf08      	it	eq
 8007d92:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007d96:	f7ff fcf7 	bl	8007788 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007d9a:	a901      	add	r1, sp, #4
 8007d9c:	a802      	add	r0, sp, #8
 8007d9e:	f000 ff7f 	bl	8008ca0 <xTaskCheckForTimeOut>
 8007da2:	2800      	cmp	r0, #0
 8007da4:	d146      	bne.n	8007e34 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007da6:	f7ff fccd 	bl	8007744 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007daa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007dac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007dae:	429a      	cmp	r2, r3
 8007db0:	d12f      	bne.n	8007e12 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007db2:	f7ff fce9 	bl	8007788 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007db6:	9901      	ldr	r1, [sp, #4]
 8007db8:	f104 0010 	add.w	r0, r4, #16
 8007dbc:	f000 fee8 	bl	8008b90 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007dc0:	4620      	mov	r0, r4
 8007dc2:	f7ff fe5f 	bl	8007a84 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007dc6:	f000 fd95 	bl	80088f4 <xTaskResumeAll>
 8007dca:	b350      	cbz	r0, 8007e22 <xQueueGenericSend+0x142>
 8007dcc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007dce:	f7ff fcb9 	bl	8007744 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007dd2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007dd4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007dd6:	429a      	cmp	r2, r3
 8007dd8:	d301      	bcc.n	8007dde <xQueueGenericSend+0xfe>
 8007dda:	2f02      	cmp	r7, #2
 8007ddc:	d1bf      	bne.n	8007d5e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007dde:	463a      	mov	r2, r7
 8007de0:	4641      	mov	r1, r8
 8007de2:	4620      	mov	r0, r4
 8007de4:	f7ff fe03 	bl	80079ee <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007de8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007dea:	b11b      	cbz	r3, 8007df4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007dec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007df0:	f000 ff06 	bl	8008c00 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007df4:	b138      	cbz	r0, 8007e06 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 8007df6:	4b12      	ldr	r3, [pc, #72]	; (8007e40 <xQueueGenericSend+0x160>)
 8007df8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007dfc:	601a      	str	r2, [r3, #0]
 8007dfe:	f3bf 8f4f 	dsb	sy
 8007e02:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007e06:	f7ff fcbf 	bl	8007788 <vPortExitCritical>
				return pdPASS;
 8007e0a:	2001      	movs	r0, #1
}
 8007e0c:	b004      	add	sp, #16
 8007e0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8007e12:	f7ff fcb9 	bl	8007788 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007e16:	4620      	mov	r0, r4
 8007e18:	f7ff fe34 	bl	8007a84 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007e1c:	f000 fd6a 	bl	80088f4 <xTaskResumeAll>
 8007e20:	e7d4      	b.n	8007dcc <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8007e22:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007e26:	f8ca 3000 	str.w	r3, [sl]
 8007e2a:	f3bf 8f4f 	dsb	sy
 8007e2e:	f3bf 8f6f 	isb	sy
 8007e32:	e7cb      	b.n	8007dcc <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8007e34:	4620      	mov	r0, r4
 8007e36:	f7ff fe25 	bl	8007a84 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007e3a:	f000 fd5b 	bl	80088f4 <xTaskResumeAll>
 8007e3e:	e792      	b.n	8007d66 <xQueueGenericSend+0x86>
 8007e40:	e000ed04 	.word	0xe000ed04

08007e44 <xQueueGenericSendFromISR>:
{
 8007e44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007e48:	4689      	mov	r9, r1
 8007e4a:	4690      	mov	r8, r2
 8007e4c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007e4e:	4604      	mov	r4, r0
 8007e50:	b940      	cbnz	r0, 8007e64 <xQueueGenericSendFromISR+0x20>
 8007e52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e56:	f383 8811 	msr	BASEPRI, r3
 8007e5a:	f3bf 8f6f 	isb	sy
 8007e5e:	f3bf 8f4f 	dsb	sy
 8007e62:	e7fe      	b.n	8007e62 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007e64:	b951      	cbnz	r1, 8007e7c <xQueueGenericSendFromISR+0x38>
 8007e66:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007e68:	b143      	cbz	r3, 8007e7c <xQueueGenericSendFromISR+0x38>
 8007e6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e6e:	f383 8811 	msr	BASEPRI, r3
 8007e72:	f3bf 8f6f 	isb	sy
 8007e76:	f3bf 8f4f 	dsb	sy
 8007e7a:	e7fe      	b.n	8007e7a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007e7c:	2f02      	cmp	r7, #2
 8007e7e:	d10b      	bne.n	8007e98 <xQueueGenericSendFromISR+0x54>
 8007e80:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007e82:	2b01      	cmp	r3, #1
 8007e84:	d008      	beq.n	8007e98 <xQueueGenericSendFromISR+0x54>
 8007e86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e8a:	f383 8811 	msr	BASEPRI, r3
 8007e8e:	f3bf 8f6f 	isb	sy
 8007e92:	f3bf 8f4f 	dsb	sy
 8007e96:	e7fe      	b.n	8007e96 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007e98:	f7ff fd70 	bl	800797c <vPortValidateInterruptPriority>
	__asm volatile
 8007e9c:	f3ef 8611 	mrs	r6, BASEPRI
 8007ea0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ea4:	f383 8811 	msr	BASEPRI, r3
 8007ea8:	f3bf 8f6f 	isb	sy
 8007eac:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007eb0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007eb2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007eb4:	429a      	cmp	r2, r3
 8007eb6:	d301      	bcc.n	8007ebc <xQueueGenericSendFromISR+0x78>
 8007eb8:	2f02      	cmp	r7, #2
 8007eba:	d123      	bne.n	8007f04 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007ebc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007ec0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007ec2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007ec4:	463a      	mov	r2, r7
 8007ec6:	4649      	mov	r1, r9
 8007ec8:	4620      	mov	r0, r4
 8007eca:	f7ff fd90 	bl	80079ee <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007ece:	1c6b      	adds	r3, r5, #1
 8007ed0:	d113      	bne.n	8007efa <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007ed2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007ed4:	b90b      	cbnz	r3, 8007eda <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8007ed6:	2001      	movs	r0, #1
 8007ed8:	e00b      	b.n	8007ef2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007eda:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007ede:	f000 fe8f 	bl	8008c00 <xTaskRemoveFromEventList>
 8007ee2:	2800      	cmp	r0, #0
 8007ee4:	d0f7      	beq.n	8007ed6 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8007ee6:	f1b8 0f00 	cmp.w	r8, #0
 8007eea:	d0f4      	beq.n	8007ed6 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007eec:	2001      	movs	r0, #1
 8007eee:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007ef2:	f386 8811 	msr	BASEPRI, r6
}
 8007ef6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007efa:	3501      	adds	r5, #1
 8007efc:	b26d      	sxtb	r5, r5
 8007efe:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007f02:	e7e8      	b.n	8007ed6 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8007f04:	2000      	movs	r0, #0
 8007f06:	e7f4      	b.n	8007ef2 <xQueueGenericSendFromISR+0xae>

08007f08 <xQueueGiveFromISR>:
{
 8007f08:	b570      	push	{r4, r5, r6, lr}
 8007f0a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007f0c:	4604      	mov	r4, r0
 8007f0e:	b940      	cbnz	r0, 8007f22 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007f10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f14:	f383 8811 	msr	BASEPRI, r3
 8007f18:	f3bf 8f6f 	isb	sy
 8007f1c:	f3bf 8f4f 	dsb	sy
 8007f20:	e7fe      	b.n	8007f20 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007f22:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007f24:	b143      	cbz	r3, 8007f38 <xQueueGiveFromISR+0x30>
 8007f26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f2a:	f383 8811 	msr	BASEPRI, r3
 8007f2e:	f3bf 8f6f 	isb	sy
 8007f32:	f3bf 8f4f 	dsb	sy
 8007f36:	e7fe      	b.n	8007f36 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007f38:	6803      	ldr	r3, [r0, #0]
 8007f3a:	b953      	cbnz	r3, 8007f52 <xQueueGiveFromISR+0x4a>
 8007f3c:	6883      	ldr	r3, [r0, #8]
 8007f3e:	b143      	cbz	r3, 8007f52 <xQueueGiveFromISR+0x4a>
 8007f40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f44:	f383 8811 	msr	BASEPRI, r3
 8007f48:	f3bf 8f6f 	isb	sy
 8007f4c:	f3bf 8f4f 	dsb	sy
 8007f50:	e7fe      	b.n	8007f50 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007f52:	f7ff fd13 	bl	800797c <vPortValidateInterruptPriority>
	__asm volatile
 8007f56:	f3ef 8611 	mrs	r6, BASEPRI
 8007f5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f5e:	f383 8811 	msr	BASEPRI, r3
 8007f62:	f3bf 8f6f 	isb	sy
 8007f66:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007f6a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007f6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f6e:	4293      	cmp	r3, r2
 8007f70:	d91c      	bls.n	8007fac <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007f72:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007f76:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007f78:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007f7a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007f7c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8007f7e:	d110      	bne.n	8007fa2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007f80:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007f82:	b90b      	cbnz	r3, 8007f88 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007f84:	2001      	movs	r0, #1
 8007f86:	e009      	b.n	8007f9c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007f88:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007f8c:	f000 fe38 	bl	8008c00 <xTaskRemoveFromEventList>
 8007f90:	2800      	cmp	r0, #0
 8007f92:	d0f7      	beq.n	8007f84 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007f94:	2d00      	cmp	r5, #0
 8007f96:	d0f5      	beq.n	8007f84 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007f98:	2001      	movs	r0, #1
 8007f9a:	6028      	str	r0, [r5, #0]
	__asm volatile
 8007f9c:	f386 8811 	msr	BASEPRI, r6
}
 8007fa0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007fa2:	3301      	adds	r3, #1
 8007fa4:	b25b      	sxtb	r3, r3
 8007fa6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007faa:	e7eb      	b.n	8007f84 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8007fac:	2000      	movs	r0, #0
 8007fae:	e7f5      	b.n	8007f9c <xQueueGiveFromISR+0x94>

08007fb0 <xQueueReceive>:
{
 8007fb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007fb4:	b085      	sub	sp, #20
 8007fb6:	460f      	mov	r7, r1
 8007fb8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007fba:	4604      	mov	r4, r0
 8007fbc:	b940      	cbnz	r0, 8007fd0 <xQueueReceive+0x20>
	__asm volatile
 8007fbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fc2:	f383 8811 	msr	BASEPRI, r3
 8007fc6:	f3bf 8f6f 	isb	sy
 8007fca:	f3bf 8f4f 	dsb	sy
 8007fce:	e7fe      	b.n	8007fce <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007fd0:	b951      	cbnz	r1, 8007fe8 <xQueueReceive+0x38>
 8007fd2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007fd4:	b143      	cbz	r3, 8007fe8 <xQueueReceive+0x38>
 8007fd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fda:	f383 8811 	msr	BASEPRI, r3
 8007fde:	f3bf 8f6f 	isb	sy
 8007fe2:	f3bf 8f4f 	dsb	sy
 8007fe6:	e7fe      	b.n	8007fe6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007fe8:	f000 fe9c 	bl	8008d24 <xTaskGetSchedulerState>
 8007fec:	4606      	mov	r6, r0
 8007fee:	b950      	cbnz	r0, 8008006 <xQueueReceive+0x56>
 8007ff0:	9b01      	ldr	r3, [sp, #4]
 8007ff2:	b14b      	cbz	r3, 8008008 <xQueueReceive+0x58>
 8007ff4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ff8:	f383 8811 	msr	BASEPRI, r3
 8007ffc:	f3bf 8f6f 	isb	sy
 8008000:	f3bf 8f4f 	dsb	sy
 8008004:	e7fe      	b.n	8008004 <xQueueReceive+0x54>
 8008006:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8008008:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80080ec <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 800800c:	f04f 0800 	mov.w	r8, #0
 8008010:	e03b      	b.n	800808a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008012:	9d01      	ldr	r5, [sp, #4]
 8008014:	b91d      	cbnz	r5, 800801e <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 8008016:	f7ff fbb7 	bl	8007788 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800801a:	2000      	movs	r0, #0
 800801c:	e052      	b.n	80080c4 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 800801e:	b916      	cbnz	r6, 8008026 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008020:	a802      	add	r0, sp, #8
 8008022:	f000 fe31 	bl	8008c88 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008026:	f7ff fbaf 	bl	8007788 <vPortExitCritical>
		vTaskSuspendAll();
 800802a:	f000 fbbf 	bl	80087ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800802e:	f7ff fb89 	bl	8007744 <vPortEnterCritical>
 8008032:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008036:	2bff      	cmp	r3, #255	; 0xff
 8008038:	bf08      	it	eq
 800803a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800803e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008042:	2bff      	cmp	r3, #255	; 0xff
 8008044:	bf08      	it	eq
 8008046:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800804a:	f7ff fb9d 	bl	8007788 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800804e:	a901      	add	r1, sp, #4
 8008050:	a802      	add	r0, sp, #8
 8008052:	f000 fe25 	bl	8008ca0 <xTaskCheckForTimeOut>
 8008056:	2800      	cmp	r0, #0
 8008058:	d13d      	bne.n	80080d6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800805a:	4620      	mov	r0, r4
 800805c:	f7ff fcbc 	bl	80079d8 <prvIsQueueEmpty>
 8008060:	b398      	cbz	r0, 80080ca <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008062:	9901      	ldr	r1, [sp, #4]
 8008064:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008068:	f000 fd92 	bl	8008b90 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800806c:	4620      	mov	r0, r4
 800806e:	f7ff fd09 	bl	8007a84 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008072:	f000 fc3f 	bl	80088f4 <xTaskResumeAll>
 8008076:	b938      	cbnz	r0, 8008088 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8008078:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800807c:	f8c9 3000 	str.w	r3, [r9]
 8008080:	f3bf 8f4f 	dsb	sy
 8008084:	f3bf 8f6f 	isb	sy
 8008088:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800808a:	f7ff fb5b 	bl	8007744 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800808e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008090:	2d00      	cmp	r5, #0
 8008092:	d0be      	beq.n	8008012 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008094:	4639      	mov	r1, r7
 8008096:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008098:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800809a:	f7ff fcdd 	bl	8007a58 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800809e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80080a0:	6923      	ldr	r3, [r4, #16]
 80080a2:	b163      	cbz	r3, 80080be <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80080a4:	f104 0010 	add.w	r0, r4, #16
 80080a8:	f000 fdaa 	bl	8008c00 <xTaskRemoveFromEventList>
 80080ac:	b138      	cbz	r0, 80080be <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 80080ae:	4b0f      	ldr	r3, [pc, #60]	; (80080ec <xQueueReceive+0x13c>)
 80080b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80080b4:	601a      	str	r2, [r3, #0]
 80080b6:	f3bf 8f4f 	dsb	sy
 80080ba:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80080be:	f7ff fb63 	bl	8007788 <vPortExitCritical>
				return pdPASS;
 80080c2:	2001      	movs	r0, #1
}
 80080c4:	b005      	add	sp, #20
 80080c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 80080ca:	4620      	mov	r0, r4
 80080cc:	f7ff fcda 	bl	8007a84 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80080d0:	f000 fc10 	bl	80088f4 <xTaskResumeAll>
 80080d4:	e7d8      	b.n	8008088 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 80080d6:	4620      	mov	r0, r4
 80080d8:	f7ff fcd4 	bl	8007a84 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80080dc:	f000 fc0a 	bl	80088f4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80080e0:	4620      	mov	r0, r4
 80080e2:	f7ff fc79 	bl	80079d8 <prvIsQueueEmpty>
 80080e6:	2800      	cmp	r0, #0
 80080e8:	d0ce      	beq.n	8008088 <xQueueReceive+0xd8>
 80080ea:	e796      	b.n	800801a <xQueueReceive+0x6a>
 80080ec:	e000ed04 	.word	0xe000ed04

080080f0 <xQueueSemaphoreTake>:
{
 80080f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 80080f4:	4604      	mov	r4, r0
{
 80080f6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80080f8:	b940      	cbnz	r0, 800810c <xQueueSemaphoreTake+0x1c>
 80080fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080fe:	f383 8811 	msr	BASEPRI, r3
 8008102:	f3bf 8f6f 	isb	sy
 8008106:	f3bf 8f4f 	dsb	sy
 800810a:	e7fe      	b.n	800810a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800810c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800810e:	b145      	cbz	r5, 8008122 <xQueueSemaphoreTake+0x32>
 8008110:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008114:	f383 8811 	msr	BASEPRI, r3
 8008118:	f3bf 8f6f 	isb	sy
 800811c:	f3bf 8f4f 	dsb	sy
 8008120:	e7fe      	b.n	8008120 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008122:	f000 fdff 	bl	8008d24 <xTaskGetSchedulerState>
 8008126:	4606      	mov	r6, r0
 8008128:	b950      	cbnz	r0, 8008140 <xQueueSemaphoreTake+0x50>
 800812a:	9b01      	ldr	r3, [sp, #4]
 800812c:	b16b      	cbz	r3, 800814a <xQueueSemaphoreTake+0x5a>
 800812e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008132:	f383 8811 	msr	BASEPRI, r3
 8008136:	f3bf 8f6f 	isb	sy
 800813a:	f3bf 8f4f 	dsb	sy
 800813e:	e7fe      	b.n	800813e <xQueueSemaphoreTake+0x4e>
 8008140:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 8008142:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8008274 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 8008146:	2700      	movs	r7, #0
 8008148:	e051      	b.n	80081ee <xQueueSemaphoreTake+0xfe>
 800814a:	4605      	mov	r5, r0
 800814c:	e7f9      	b.n	8008142 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800814e:	9b01      	ldr	r3, [sp, #4]
 8008150:	b963      	cbnz	r3, 800816c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008152:	b145      	cbz	r5, 8008166 <xQueueSemaphoreTake+0x76>
 8008154:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008158:	f383 8811 	msr	BASEPRI, r3
 800815c:	f3bf 8f6f 	isb	sy
 8008160:	f3bf 8f4f 	dsb	sy
 8008164:	e7fe      	b.n	8008164 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8008166:	f7ff fb0f 	bl	8007788 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800816a:	e05e      	b.n	800822a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800816c:	b916      	cbnz	r6, 8008174 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800816e:	a802      	add	r0, sp, #8
 8008170:	f000 fd8a 	bl	8008c88 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008174:	f7ff fb08 	bl	8007788 <vPortExitCritical>
		vTaskSuspendAll();
 8008178:	f000 fb18 	bl	80087ac <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800817c:	f7ff fae2 	bl	8007744 <vPortEnterCritical>
 8008180:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008184:	2bff      	cmp	r3, #255	; 0xff
 8008186:	bf08      	it	eq
 8008188:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800818c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008190:	2bff      	cmp	r3, #255	; 0xff
 8008192:	bf08      	it	eq
 8008194:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008198:	f7ff faf6 	bl	8007788 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800819c:	a901      	add	r1, sp, #4
 800819e:	a802      	add	r0, sp, #8
 80081a0:	f000 fd7e 	bl	8008ca0 <xTaskCheckForTimeOut>
 80081a4:	2800      	cmp	r0, #0
 80081a6:	d14a      	bne.n	800823e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80081a8:	4620      	mov	r0, r4
 80081aa:	f7ff fc15 	bl	80079d8 <prvIsQueueEmpty>
 80081ae:	2800      	cmp	r0, #0
 80081b0:	d03f      	beq.n	8008232 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80081b2:	6823      	ldr	r3, [r4, #0]
 80081b4:	b93b      	cbnz	r3, 80081c6 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 80081b6:	f7ff fac5 	bl	8007744 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80081ba:	68a0      	ldr	r0, [r4, #8]
 80081bc:	f000 fdc2 	bl	8008d44 <xTaskPriorityInherit>
 80081c0:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80081c2:	f7ff fae1 	bl	8007788 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80081c6:	9901      	ldr	r1, [sp, #4]
 80081c8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80081cc:	f000 fce0 	bl	8008b90 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80081d0:	4620      	mov	r0, r4
 80081d2:	f7ff fc57 	bl	8007a84 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80081d6:	f000 fb8d 	bl	80088f4 <xTaskResumeAll>
 80081da:	b938      	cbnz	r0, 80081ec <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80081dc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80081e0:	f8c8 3000 	str.w	r3, [r8]
 80081e4:	f3bf 8f4f 	dsb	sy
 80081e8:	f3bf 8f6f 	isb	sy
 80081ec:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80081ee:	f7ff faa9 	bl	8007744 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80081f2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80081f4:	2b00      	cmp	r3, #0
 80081f6:	d0aa      	beq.n	800814e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80081f8:	3b01      	subs	r3, #1
 80081fa:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80081fc:	6823      	ldr	r3, [r4, #0]
 80081fe:	b913      	cbnz	r3, 8008206 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008200:	f000 fe78 	bl	8008ef4 <pvTaskIncrementMutexHeldCount>
 8008204:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008206:	6923      	ldr	r3, [r4, #16]
 8008208:	b163      	cbz	r3, 8008224 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800820a:	f104 0010 	add.w	r0, r4, #16
 800820e:	f000 fcf7 	bl	8008c00 <xTaskRemoveFromEventList>
 8008212:	b138      	cbz	r0, 8008224 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 8008214:	4b17      	ldr	r3, [pc, #92]	; (8008274 <xQueueSemaphoreTake+0x184>)
 8008216:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800821a:	601a      	str	r2, [r3, #0]
 800821c:	f3bf 8f4f 	dsb	sy
 8008220:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008224:	f7ff fab0 	bl	8007788 <vPortExitCritical>
				return pdPASS;
 8008228:	2501      	movs	r5, #1
}
 800822a:	4628      	mov	r0, r5
 800822c:	b004      	add	sp, #16
 800822e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008232:	4620      	mov	r0, r4
 8008234:	f7ff fc26 	bl	8007a84 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008238:	f000 fb5c 	bl	80088f4 <xTaskResumeAll>
 800823c:	e7d6      	b.n	80081ec <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800823e:	4620      	mov	r0, r4
 8008240:	f7ff fc20 	bl	8007a84 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008244:	f000 fb56 	bl	80088f4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008248:	4620      	mov	r0, r4
 800824a:	f7ff fbc5 	bl	80079d8 <prvIsQueueEmpty>
 800824e:	2800      	cmp	r0, #0
 8008250:	d0cc      	beq.n	80081ec <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008252:	2d00      	cmp	r5, #0
 8008254:	d0e9      	beq.n	800822a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8008256:	f7ff fa75 	bl	8007744 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800825a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800825c:	b119      	cbz	r1, 8008266 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800825e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008260:	6819      	ldr	r1, [r3, #0]
 8008262:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008266:	68a0      	ldr	r0, [r4, #8]
 8008268:	f000 fdf2 	bl	8008e50 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800826c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800826e:	f7ff fa8b 	bl	8007788 <vPortExitCritical>
 8008272:	e7da      	b.n	800822a <xQueueSemaphoreTake+0x13a>
 8008274:	e000ed04 	.word	0xe000ed04

08008278 <xQueueReceiveFromISR>:
{
 8008278:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800827c:	4689      	mov	r9, r1
 800827e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008280:	4605      	mov	r5, r0
 8008282:	b940      	cbnz	r0, 8008296 <xQueueReceiveFromISR+0x1e>
 8008284:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008288:	f383 8811 	msr	BASEPRI, r3
 800828c:	f3bf 8f6f 	isb	sy
 8008290:	f3bf 8f4f 	dsb	sy
 8008294:	e7fe      	b.n	8008294 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008296:	b951      	cbnz	r1, 80082ae <xQueueReceiveFromISR+0x36>
 8008298:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800829a:	b143      	cbz	r3, 80082ae <xQueueReceiveFromISR+0x36>
 800829c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082a0:	f383 8811 	msr	BASEPRI, r3
 80082a4:	f3bf 8f6f 	isb	sy
 80082a8:	f3bf 8f4f 	dsb	sy
 80082ac:	e7fe      	b.n	80082ac <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80082ae:	f7ff fb65 	bl	800797c <vPortValidateInterruptPriority>
	__asm volatile
 80082b2:	f3ef 8711 	mrs	r7, BASEPRI
 80082b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082ba:	f383 8811 	msr	BASEPRI, r3
 80082be:	f3bf 8f6f 	isb	sy
 80082c2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80082c6:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80082c8:	b31c      	cbz	r4, 8008312 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80082ca:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082ce:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80082d0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082d2:	4628      	mov	r0, r5
 80082d4:	f7ff fbc0 	bl	8007a58 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80082d8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80082da:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80082dc:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80082de:	d113      	bne.n	8008308 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80082e0:	692b      	ldr	r3, [r5, #16]
 80082e2:	b90b      	cbnz	r3, 80082e8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80082e4:	2001      	movs	r0, #1
 80082e6:	e00b      	b.n	8008300 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80082e8:	f105 0010 	add.w	r0, r5, #16
 80082ec:	f000 fc88 	bl	8008c00 <xTaskRemoveFromEventList>
 80082f0:	2800      	cmp	r0, #0
 80082f2:	d0f7      	beq.n	80082e4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80082f4:	f1b8 0f00 	cmp.w	r8, #0
 80082f8:	d0f4      	beq.n	80082e4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80082fa:	2001      	movs	r0, #1
 80082fc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008300:	f387 8811 	msr	BASEPRI, r7
}
 8008304:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008308:	3601      	adds	r6, #1
 800830a:	b276      	sxtb	r6, r6
 800830c:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8008310:	e7e8      	b.n	80082e4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008312:	4620      	mov	r0, r4
 8008314:	e7f4      	b.n	8008300 <xQueueReceiveFromISR+0x88>
	...

08008318 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008318:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800831a:	4a07      	ldr	r2, [pc, #28]	; (8008338 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800831c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800831e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8008322:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8008326:	b91d      	cbnz	r5, 8008330 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008328:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800832c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800832e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008330:	3301      	adds	r3, #1
 8008332:	2b08      	cmp	r3, #8
 8008334:	d1f3      	bne.n	800831e <vQueueAddToRegistry+0x6>
 8008336:	e7fa      	b.n	800832e <vQueueAddToRegistry+0x16>
 8008338:	2000a868 	.word	0x2000a868

0800833c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800833c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800833e:	4909      	ldr	r1, [pc, #36]	; (8008364 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008340:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008342:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8008346:	4282      	cmp	r2, r0
 8008348:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800834c:	d106      	bne.n	800835c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800834e:	4a06      	ldr	r2, [pc, #24]	; (8008368 <vQueueUnregisterQueue+0x2c>)
 8008350:	2100      	movs	r1, #0
 8008352:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008356:	4422      	add	r2, r4
 8008358:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800835a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800835c:	3301      	adds	r3, #1
 800835e:	2b08      	cmp	r3, #8
 8008360:	d1ef      	bne.n	8008342 <vQueueUnregisterQueue+0x6>
 8008362:	e7fa      	b.n	800835a <vQueueUnregisterQueue+0x1e>
 8008364:	2000a86c 	.word	0x2000a86c
 8008368:	2000a868 	.word	0x2000a868

0800836c <vQueueDelete>:
{
 800836c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800836e:	b940      	cbnz	r0, 8008382 <vQueueDelete+0x16>
	__asm volatile
 8008370:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008374:	f383 8811 	msr	BASEPRI, r3
 8008378:	f3bf 8f6f 	isb	sy
 800837c:	f3bf 8f4f 	dsb	sy
 8008380:	e7fe      	b.n	8008380 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8008382:	f7ff ffdb 	bl	800833c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008386:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800838a:	b91b      	cbnz	r3, 8008394 <vQueueDelete+0x28>
}
 800838c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008390:	f7ff b8f0 	b.w	8007574 <vPortFree>
}
 8008394:	bd10      	pop	{r4, pc}

08008396 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008396:	b570      	push	{r4, r5, r6, lr}
 8008398:	4604      	mov	r4, r0
 800839a:	460d      	mov	r5, r1
 800839c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800839e:	f7ff f9d1 	bl	8007744 <vPortEnterCritical>
 80083a2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80083a6:	2bff      	cmp	r3, #255	; 0xff
 80083a8:	bf04      	itt	eq
 80083aa:	2300      	moveq	r3, #0
 80083ac:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80083b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80083b4:	2bff      	cmp	r3, #255	; 0xff
 80083b6:	bf04      	itt	eq
 80083b8:	2300      	moveq	r3, #0
 80083ba:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80083be:	f7ff f9e3 	bl	8007788 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80083c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80083c4:	b92b      	cbnz	r3, 80083d2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80083c6:	4632      	mov	r2, r6
 80083c8:	4629      	mov	r1, r5
 80083ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80083ce:	f000 fbf9 	bl	8008bc4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80083d2:	4620      	mov	r0, r4
	}
 80083d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80083d8:	f7ff bb54 	b.w	8007a84 <prvUnlockQueue>

080083dc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80083dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083e0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80083e2:	f7ff f9af 	bl	8007744 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80083e6:	4b2f      	ldr	r3, [pc, #188]	; (80084a4 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 80083e8:	4d2f      	ldr	r5, [pc, #188]	; (80084a8 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 80083ea:	681a      	ldr	r2, [r3, #0]
 80083ec:	4f2f      	ldr	r7, [pc, #188]	; (80084ac <prvAddNewTaskToReadyList+0xd0>)
 80083ee:	3201      	adds	r2, #1
 80083f0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80083f2:	682e      	ldr	r6, [r5, #0]
 80083f4:	2e00      	cmp	r6, #0
 80083f6:	d149      	bne.n	800848c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80083f8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80083fa:	681b      	ldr	r3, [r3, #0]
 80083fc:	2b01      	cmp	r3, #1
 80083fe:	d11f      	bne.n	8008440 <prvAddNewTaskToReadyList+0x64>
 8008400:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008402:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008404:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008406:	f7ff f8f3 	bl	80075f0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800840a:	2e38      	cmp	r6, #56	; 0x38
 800840c:	f108 0814 	add.w	r8, r8, #20
 8008410:	d1f7      	bne.n	8008402 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008412:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80084d8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8008416:	4e26      	ldr	r6, [pc, #152]	; (80084b0 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8008418:	4640      	mov	r0, r8
 800841a:	f7ff f8e9 	bl	80075f0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800841e:	4630      	mov	r0, r6
 8008420:	f7ff f8e6 	bl	80075f0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008424:	4823      	ldr	r0, [pc, #140]	; (80084b4 <prvAddNewTaskToReadyList+0xd8>)
 8008426:	f7ff f8e3 	bl	80075f0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800842a:	4823      	ldr	r0, [pc, #140]	; (80084b8 <prvAddNewTaskToReadyList+0xdc>)
 800842c:	f7ff f8e0 	bl	80075f0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008430:	4822      	ldr	r0, [pc, #136]	; (80084bc <prvAddNewTaskToReadyList+0xe0>)
 8008432:	f7ff f8dd 	bl	80075f0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008436:	4b22      	ldr	r3, [pc, #136]	; (80084c0 <prvAddNewTaskToReadyList+0xe4>)
 8008438:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800843c:	4b21      	ldr	r3, [pc, #132]	; (80084c4 <prvAddNewTaskToReadyList+0xe8>)
 800843e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8008440:	4a21      	ldr	r2, [pc, #132]	; (80084c8 <prvAddNewTaskToReadyList+0xec>)
 8008442:	6813      	ldr	r3, [r2, #0]
 8008444:	3301      	adds	r3, #1
 8008446:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008448:	4a20      	ldr	r2, [pc, #128]	; (80084cc <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800844a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800844c:	6811      	ldr	r1, [r2, #0]
 800844e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008450:	2014      	movs	r0, #20
 8008452:	428b      	cmp	r3, r1
 8008454:	fb00 7003 	mla	r0, r0, r3, r7
 8008458:	f104 0104 	add.w	r1, r4, #4
 800845c:	bf88      	it	hi
 800845e:	6013      	strhi	r3, [r2, #0]
 8008460:	f7ff f8d4 	bl	800760c <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008464:	f7ff f990 	bl	8007788 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008468:	4b19      	ldr	r3, [pc, #100]	; (80084d0 <prvAddNewTaskToReadyList+0xf4>)
 800846a:	681b      	ldr	r3, [r3, #0]
 800846c:	b163      	cbz	r3, 8008488 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800846e:	682b      	ldr	r3, [r5, #0]
 8008470:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008472:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008474:	429a      	cmp	r2, r3
 8008476:	d207      	bcs.n	8008488 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8008478:	4b16      	ldr	r3, [pc, #88]	; (80084d4 <prvAddNewTaskToReadyList+0xf8>)
 800847a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800847e:	601a      	str	r2, [r3, #0]
 8008480:	f3bf 8f4f 	dsb	sy
 8008484:	f3bf 8f6f 	isb	sy
}
 8008488:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800848c:	4b10      	ldr	r3, [pc, #64]	; (80084d0 <prvAddNewTaskToReadyList+0xf4>)
 800848e:	681b      	ldr	r3, [r3, #0]
 8008490:	2b00      	cmp	r3, #0
 8008492:	d1d5      	bne.n	8008440 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008494:	682b      	ldr	r3, [r5, #0]
 8008496:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008498:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800849a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800849c:	bf98      	it	ls
 800849e:	602c      	strls	r4, [r5, #0]
 80084a0:	e7ce      	b.n	8008440 <prvAddNewTaskToReadyList+0x64>
 80084a2:	bf00      	nop
 80084a4:	2000a15c 	.word	0x2000a15c
 80084a8:	20009cf0 	.word	0x20009cf0
 80084ac:	20009cfc 	.word	0x20009cfc
 80084b0:	2000a184 	.word	0x2000a184
 80084b4:	2000a1a4 	.word	0x2000a1a4
 80084b8:	2000a1d0 	.word	0x2000a1d0
 80084bc:	2000a1bc 	.word	0x2000a1bc
 80084c0:	20009cf4 	.word	0x20009cf4
 80084c4:	20009cf8 	.word	0x20009cf8
 80084c8:	2000a168 	.word	0x2000a168
 80084cc:	2000a16c 	.word	0x2000a16c
 80084d0:	2000a1b8 	.word	0x2000a1b8
 80084d4:	e000ed04 	.word	0xe000ed04
 80084d8:	2000a170 	.word	0x2000a170

080084dc <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80084dc:	4a06      	ldr	r2, [pc, #24]	; (80084f8 <prvResetNextTaskUnblockTime+0x1c>)
 80084de:	6813      	ldr	r3, [r2, #0]
 80084e0:	6819      	ldr	r1, [r3, #0]
 80084e2:	4b06      	ldr	r3, [pc, #24]	; (80084fc <prvResetNextTaskUnblockTime+0x20>)
 80084e4:	b919      	cbnz	r1, 80084ee <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80084e6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80084ea:	601a      	str	r2, [r3, #0]
	}
}
 80084ec:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084ee:	6812      	ldr	r2, [r2, #0]
 80084f0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80084f2:	68d2      	ldr	r2, [r2, #12]
 80084f4:	6852      	ldr	r2, [r2, #4]
 80084f6:	e7f8      	b.n	80084ea <prvResetNextTaskUnblockTime+0xe>
 80084f8:	20009cf4 	.word	0x20009cf4
 80084fc:	2000a198 	.word	0x2000a198

08008500 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008500:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008504:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008508:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800850c:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800850e:	4606      	mov	r6, r0
 8008510:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008512:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008514:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008516:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008518:	f013 f94c 	bl	801b7b4 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800851c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800851e:	f1a9 0904 	sub.w	r9, r9, #4
 8008522:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008524:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008528:	2d00      	cmp	r5, #0
 800852a:	d043      	beq.n	80085b4 <prvInitialiseNewTask.isra.0+0xb4>
 800852c:	1e6b      	subs	r3, r5, #1
 800852e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008532:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008534:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008538:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800853c:	7819      	ldrb	r1, [r3, #0]
 800853e:	b109      	cbz	r1, 8008544 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008540:	42ab      	cmp	r3, r5
 8008542:	d1f7      	bne.n	8008534 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008544:	2300      	movs	r3, #0
 8008546:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800854a:	9d08      	ldr	r5, [sp, #32]
 800854c:	2d37      	cmp	r5, #55	; 0x37
 800854e:	bf28      	it	cs
 8008550:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008552:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008556:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008558:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800855a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800855c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008560:	f7ff f851 	bl	8007606 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008564:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008568:	f104 0018 	add.w	r0, r4, #24
 800856c:	f7ff f84b 	bl	8007606 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008570:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008574:	2260      	movs	r2, #96	; 0x60
 8008576:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008578:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800857a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800857c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800857e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008582:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008586:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800858a:	f013 f913 	bl	801b7b4 <memset>
 800858e:	4b0b      	ldr	r3, [pc, #44]	; (80085bc <prvInitialiseNewTask.isra.0+0xbc>)
 8008590:	65e3      	str	r3, [r4, #92]	; 0x5c
 8008592:	4b0b      	ldr	r3, [pc, #44]	; (80085c0 <prvInitialiseNewTask.isra.0+0xc0>)
 8008594:	6623      	str	r3, [r4, #96]	; 0x60
 8008596:	4b0b      	ldr	r3, [pc, #44]	; (80085c4 <prvInitialiseNewTask.isra.0+0xc4>)
 8008598:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800859a:	463a      	mov	r2, r7
 800859c:	4631      	mov	r1, r6
 800859e:	4648      	mov	r0, r9
 80085a0:	f7ff f8a6 	bl	80076f0 <pxPortInitialiseStack>
 80085a4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80085a6:	f1b8 0f00 	cmp.w	r8, #0
 80085aa:	d001      	beq.n	80085b0 <prvInitialiseNewTask.isra.0+0xb0>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80085ac:	f8c8 4000 	str.w	r4, [r8]
}
 80085b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80085b4:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80085b8:	e7c7      	b.n	800854a <prvInitialiseNewTask.isra.0+0x4a>
 80085ba:	bf00      	nop
 80085bc:	0801fddc 	.word	0x0801fddc
 80085c0:	0801fdfc 	.word	0x0801fdfc
 80085c4:	0801fdbc 	.word	0x0801fdbc

080085c8 <prvDeleteTCB>:
	{
 80085c8:	b510      	push	{r4, lr}
 80085ca:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 80085cc:	3058      	adds	r0, #88	; 0x58
 80085ce:	f013 fc9f 	bl	801bf10 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80085d2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 80085d6:	b93b      	cbnz	r3, 80085e8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 80085d8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80085da:	f7fe ffcb 	bl	8007574 <vPortFree>
				vPortFree( pxTCB );
 80085de:	4620      	mov	r0, r4
	}
 80085e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80085e4:	f7fe bfc6 	b.w	8007574 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80085e8:	2b01      	cmp	r3, #1
 80085ea:	d0f8      	beq.n	80085de <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80085ec:	2b02      	cmp	r3, #2
 80085ee:	d008      	beq.n	8008602 <prvDeleteTCB+0x3a>
 80085f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085f4:	f383 8811 	msr	BASEPRI, r3
 80085f8:	f3bf 8f6f 	isb	sy
 80085fc:	f3bf 8f4f 	dsb	sy
 8008600:	e7fe      	b.n	8008600 <prvDeleteTCB+0x38>
	}
 8008602:	bd10      	pop	{r4, pc}

08008604 <prvIdleTask>:
{
 8008604:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008606:	4e14      	ldr	r6, [pc, #80]	; (8008658 <prvIdleTask+0x54>)
				taskYIELD();
 8008608:	4f14      	ldr	r7, [pc, #80]	; (800865c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800860a:	4c15      	ldr	r4, [pc, #84]	; (8008660 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 800860c:	4d15      	ldr	r5, [pc, #84]	; (8008664 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800860e:	6823      	ldr	r3, [r4, #0]
 8008610:	b96b      	cbnz	r3, 800862e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008612:	4b15      	ldr	r3, [pc, #84]	; (8008668 <prvIdleTask+0x64>)
 8008614:	681b      	ldr	r3, [r3, #0]
 8008616:	2b01      	cmp	r3, #1
 8008618:	d906      	bls.n	8008628 <prvIdleTask+0x24>
				taskYIELD();
 800861a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800861e:	603b      	str	r3, [r7, #0]
 8008620:	f3bf 8f4f 	dsb	sy
 8008624:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8008628:	f7f8 fee8 	bl	80013fc <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800862c:	e7ed      	b.n	800860a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800862e:	f7ff f889 	bl	8007744 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008632:	68f3      	ldr	r3, [r6, #12]
 8008634:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008638:	f108 0004 	add.w	r0, r8, #4
 800863c:	f7ff f809 	bl	8007652 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008640:	682b      	ldr	r3, [r5, #0]
 8008642:	3b01      	subs	r3, #1
 8008644:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008646:	6823      	ldr	r3, [r4, #0]
 8008648:	3b01      	subs	r3, #1
 800864a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800864c:	f7ff f89c 	bl	8007788 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008650:	4640      	mov	r0, r8
 8008652:	f7ff ffb9 	bl	80085c8 <prvDeleteTCB>
 8008656:	e7da      	b.n	800860e <prvIdleTask+0xa>
 8008658:	2000a1d0 	.word	0x2000a1d0
 800865c:	e000ed04 	.word	0xe000ed04
 8008660:	2000a160 	.word	0x2000a160
 8008664:	2000a15c 	.word	0x2000a15c
 8008668:	20009cfc 	.word	0x20009cfc

0800866c <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800866c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800866e:	4b16      	ldr	r3, [pc, #88]	; (80086c8 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008670:	4e16      	ldr	r6, [pc, #88]	; (80086cc <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8008672:	681d      	ldr	r5, [r3, #0]
{
 8008674:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008676:	6830      	ldr	r0, [r6, #0]
 8008678:	3004      	adds	r0, #4
{
 800867a:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800867c:	f7fe ffe9 	bl	8007652 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008680:	1c63      	adds	r3, r4, #1
 8008682:	4633      	mov	r3, r6
 8008684:	d107      	bne.n	8008696 <prvAddCurrentTaskToDelayedList+0x2a>
 8008686:	b137      	cbz	r7, 8008696 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008688:	6831      	ldr	r1, [r6, #0]
 800868a:	4811      	ldr	r0, [pc, #68]	; (80086d0 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800868c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008690:	3104      	adds	r1, #4
 8008692:	f7fe bfbb 	b.w	800760c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008696:	681a      	ldr	r2, [r3, #0]
 8008698:	192c      	adds	r4, r5, r4
 800869a:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800869c:	d307      	bcc.n	80086ae <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800869e:	4a0d      	ldr	r2, [pc, #52]	; (80086d4 <prvAddCurrentTaskToDelayedList+0x68>)
 80086a0:	6810      	ldr	r0, [r2, #0]
 80086a2:	6819      	ldr	r1, [r3, #0]
}
 80086a4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80086a8:	3104      	adds	r1, #4
 80086aa:	f7fe bfbb 	b.w	8007624 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80086ae:	4a0a      	ldr	r2, [pc, #40]	; (80086d8 <prvAddCurrentTaskToDelayedList+0x6c>)
 80086b0:	6810      	ldr	r0, [r2, #0]
 80086b2:	6819      	ldr	r1, [r3, #0]
 80086b4:	3104      	adds	r1, #4
 80086b6:	f7fe ffb5 	bl	8007624 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80086ba:	4b08      	ldr	r3, [pc, #32]	; (80086dc <prvAddCurrentTaskToDelayedList+0x70>)
 80086bc:	681a      	ldr	r2, [r3, #0]
 80086be:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80086c0:	bf88      	it	hi
 80086c2:	601c      	strhi	r4, [r3, #0]
}
 80086c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80086c6:	bf00      	nop
 80086c8:	2000a1e4 	.word	0x2000a1e4
 80086cc:	20009cf0 	.word	0x20009cf0
 80086d0:	2000a1bc 	.word	0x2000a1bc
 80086d4:	20009cf8 	.word	0x20009cf8
 80086d8:	20009cf4 	.word	0x20009cf4
 80086dc:	2000a198 	.word	0x2000a198

080086e0 <xTaskCreateStatic>:
	{
 80086e0:	b570      	push	{r4, r5, r6, lr}
 80086e2:	b086      	sub	sp, #24
 80086e4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80086e8:	b945      	cbnz	r5, 80086fc <xTaskCreateStatic+0x1c>
 80086ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086ee:	f383 8811 	msr	BASEPRI, r3
 80086f2:	f3bf 8f6f 	isb	sy
 80086f6:	f3bf 8f4f 	dsb	sy
 80086fa:	e7fe      	b.n	80086fa <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80086fc:	b944      	cbnz	r4, 8008710 <xTaskCreateStatic+0x30>
 80086fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008702:	f383 8811 	msr	BASEPRI, r3
 8008706:	f3bf 8f6f 	isb	sy
 800870a:	f3bf 8f4f 	dsb	sy
 800870e:	e7fe      	b.n	800870e <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008710:	26c0      	movs	r6, #192	; 0xc0
 8008712:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008714:	9e05      	ldr	r6, [sp, #20]
 8008716:	2ec0      	cmp	r6, #192	; 0xc0
 8008718:	d008      	beq.n	800872c <xTaskCreateStatic+0x4c>
 800871a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800871e:	f383 8811 	msr	BASEPRI, r3
 8008722:	f3bf 8f6f 	isb	sy
 8008726:	f3bf 8f4f 	dsb	sy
 800872a:	e7fe      	b.n	800872a <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800872c:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800872e:	2502      	movs	r5, #2
 8008730:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008734:	ad04      	add	r5, sp, #16
 8008736:	9501      	str	r5, [sp, #4]
 8008738:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800873a:	9402      	str	r4, [sp, #8]
 800873c:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800873e:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008740:	f7ff fede 	bl	8008500 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008744:	4620      	mov	r0, r4
 8008746:	f7ff fe49 	bl	80083dc <prvAddNewTaskToReadyList>
	}
 800874a:	9804      	ldr	r0, [sp, #16]
 800874c:	b006      	add	sp, #24
 800874e:	bd70      	pop	{r4, r5, r6, pc}

08008750 <xTaskCreate>:
	{
 8008750:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008754:	4607      	mov	r7, r0
 8008756:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008758:	0090      	lsls	r0, r2, #2
	{
 800875a:	4688      	mov	r8, r1
 800875c:	4616      	mov	r6, r2
 800875e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008760:	f7fe fe76 	bl	8007450 <pvPortMalloc>
			if( pxStack != NULL )
 8008764:	4605      	mov	r5, r0
 8008766:	b1e8      	cbz	r0, 80087a4 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008768:	20c0      	movs	r0, #192	; 0xc0
 800876a:	f7fe fe71 	bl	8007450 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800876e:	4604      	mov	r4, r0
 8008770:	b1a8      	cbz	r0, 800879e <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008772:	2300      	movs	r3, #0
 8008774:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008778:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800877a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800877c:	9301      	str	r3, [sp, #4]
 800877e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008780:	9002      	str	r0, [sp, #8]
 8008782:	9300      	str	r3, [sp, #0]
 8008784:	4632      	mov	r2, r6
 8008786:	464b      	mov	r3, r9
 8008788:	4641      	mov	r1, r8
 800878a:	4638      	mov	r0, r7
 800878c:	f7ff feb8 	bl	8008500 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008790:	4620      	mov	r0, r4
 8008792:	f7ff fe23 	bl	80083dc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008796:	2001      	movs	r0, #1
	}
 8008798:	b005      	add	sp, #20
 800879a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800879e:	4628      	mov	r0, r5
 80087a0:	f7fe fee8 	bl	8007574 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80087a4:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80087a8:	e7f6      	b.n	8008798 <xTaskCreate+0x48>
	...

080087ac <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80087ac:	4a02      	ldr	r2, [pc, #8]	; (80087b8 <vTaskSuspendAll+0xc>)
 80087ae:	6813      	ldr	r3, [r2, #0]
 80087b0:	3301      	adds	r3, #1
 80087b2:	6013      	str	r3, [r2, #0]
}
 80087b4:	4770      	bx	lr
 80087b6:	bf00      	nop
 80087b8:	2000a164 	.word	0x2000a164

080087bc <xTaskGetTickCount>:
		xTicks = xTickCount;
 80087bc:	4b01      	ldr	r3, [pc, #4]	; (80087c4 <xTaskGetTickCount+0x8>)
 80087be:	6818      	ldr	r0, [r3, #0]
}
 80087c0:	4770      	bx	lr
 80087c2:	bf00      	nop
 80087c4:	2000a1e4 	.word	0x2000a1e4

080087c8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80087c8:	4b3f      	ldr	r3, [pc, #252]	; (80088c8 <xTaskIncrementTick+0x100>)
 80087ca:	681b      	ldr	r3, [r3, #0]
{
 80087cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80087d0:	2b00      	cmp	r3, #0
 80087d2:	d173      	bne.n	80088bc <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80087d4:	4b3d      	ldr	r3, [pc, #244]	; (80088cc <xTaskIncrementTick+0x104>)
 80087d6:	681d      	ldr	r5, [r3, #0]
 80087d8:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 80087da:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80087dc:	b9bd      	cbnz	r5, 800880e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80087de:	4b3c      	ldr	r3, [pc, #240]	; (80088d0 <xTaskIncrementTick+0x108>)
 80087e0:	681a      	ldr	r2, [r3, #0]
 80087e2:	6812      	ldr	r2, [r2, #0]
 80087e4:	b142      	cbz	r2, 80087f8 <xTaskIncrementTick+0x30>
 80087e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087ea:	f383 8811 	msr	BASEPRI, r3
 80087ee:	f3bf 8f6f 	isb	sy
 80087f2:	f3bf 8f4f 	dsb	sy
 80087f6:	e7fe      	b.n	80087f6 <xTaskIncrementTick+0x2e>
 80087f8:	4a36      	ldr	r2, [pc, #216]	; (80088d4 <xTaskIncrementTick+0x10c>)
 80087fa:	6819      	ldr	r1, [r3, #0]
 80087fc:	6810      	ldr	r0, [r2, #0]
 80087fe:	6018      	str	r0, [r3, #0]
 8008800:	6011      	str	r1, [r2, #0]
 8008802:	4a35      	ldr	r2, [pc, #212]	; (80088d8 <xTaskIncrementTick+0x110>)
 8008804:	6813      	ldr	r3, [r2, #0]
 8008806:	3301      	adds	r3, #1
 8008808:	6013      	str	r3, [r2, #0]
 800880a:	f7ff fe67 	bl	80084dc <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800880e:	4e33      	ldr	r6, [pc, #204]	; (80088dc <xTaskIncrementTick+0x114>)
 8008810:	4f33      	ldr	r7, [pc, #204]	; (80088e0 <xTaskIncrementTick+0x118>)
 8008812:	6833      	ldr	r3, [r6, #0]
 8008814:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80088ec <xTaskIncrementTick+0x124>
 8008818:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800881a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800881e:	d211      	bcs.n	8008844 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008820:	f8d8 3000 	ldr.w	r3, [r8]
 8008824:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008826:	2314      	movs	r3, #20
 8008828:	4353      	muls	r3, r2
 800882a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800882c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800882e:	4b2d      	ldr	r3, [pc, #180]	; (80088e4 <xTaskIncrementTick+0x11c>)
 8008830:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8008832:	bf28      	it	cs
 8008834:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8008836:	2b00      	cmp	r3, #0
 8008838:	bf18      	it	ne
 800883a:	2401      	movne	r4, #1
}
 800883c:	4620      	mov	r0, r4
 800883e:	b003      	add	sp, #12
 8008840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008844:	f8df 9088 	ldr.w	r9, [pc, #136]	; 80088d0 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008848:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 80088f0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800884c:	f8d9 3000 	ldr.w	r3, [r9]
 8008850:	681b      	ldr	r3, [r3, #0]
 8008852:	b91b      	cbnz	r3, 800885c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008854:	f04f 33ff 	mov.w	r3, #4294967295
 8008858:	6033      	str	r3, [r6, #0]
					break;
 800885a:	e7e1      	b.n	8008820 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800885c:	f8d9 3000 	ldr.w	r3, [r9]
 8008860:	68db      	ldr	r3, [r3, #12]
 8008862:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008866:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800886a:	4295      	cmp	r5, r2
 800886c:	d201      	bcs.n	8008872 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800886e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008870:	e7d6      	b.n	8008820 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008872:	f10b 0104 	add.w	r1, fp, #4
 8008876:	4608      	mov	r0, r1
 8008878:	9101      	str	r1, [sp, #4]
 800887a:	f7fe feea 	bl	8007652 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800887e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008882:	9901      	ldr	r1, [sp, #4]
 8008884:	b122      	cbz	r2, 8008890 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008886:	f10b 0018 	add.w	r0, fp, #24
 800888a:	f7fe fee2 	bl	8007652 <uxListRemove>
 800888e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008890:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008894:	f8da 2000 	ldr.w	r2, [sl]
 8008898:	2314      	movs	r3, #20
 800889a:	4290      	cmp	r0, r2
 800889c:	bf88      	it	hi
 800889e:	f8ca 0000 	strhi.w	r0, [sl]
 80088a2:	fb03 7000 	mla	r0, r3, r0, r7
 80088a6:	f7fe feb1 	bl	800760c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80088aa:	f8d8 1000 	ldr.w	r1, [r8]
 80088ae:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80088b2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80088b4:	429a      	cmp	r2, r3
 80088b6:	bf28      	it	cs
 80088b8:	2401      	movcs	r4, #1
 80088ba:	e7c7      	b.n	800884c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 80088bc:	4a0a      	ldr	r2, [pc, #40]	; (80088e8 <xTaskIncrementTick+0x120>)
 80088be:	6813      	ldr	r3, [r2, #0]
 80088c0:	3301      	adds	r3, #1
 80088c2:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 80088c4:	2400      	movs	r4, #0
	return xSwitchRequired;
 80088c6:	e7b9      	b.n	800883c <xTaskIncrementTick+0x74>
 80088c8:	2000a164 	.word	0x2000a164
 80088cc:	2000a1e4 	.word	0x2000a1e4
 80088d0:	20009cf4 	.word	0x20009cf4
 80088d4:	20009cf8 	.word	0x20009cf8
 80088d8:	2000a19c 	.word	0x2000a19c
 80088dc:	2000a198 	.word	0x2000a198
 80088e0:	20009cfc 	.word	0x20009cfc
 80088e4:	2000a1e8 	.word	0x2000a1e8
 80088e8:	2000a1a0 	.word	0x2000a1a0
 80088ec:	20009cf0 	.word	0x20009cf0
 80088f0:	2000a16c 	.word	0x2000a16c

080088f4 <xTaskResumeAll>:
{
 80088f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 80088f6:	4c30      	ldr	r4, [pc, #192]	; (80089b8 <xTaskResumeAll+0xc4>)
 80088f8:	6823      	ldr	r3, [r4, #0]
 80088fa:	b943      	cbnz	r3, 800890e <xTaskResumeAll+0x1a>
 80088fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008900:	f383 8811 	msr	BASEPRI, r3
 8008904:	f3bf 8f6f 	isb	sy
 8008908:	f3bf 8f4f 	dsb	sy
 800890c:	e7fe      	b.n	800890c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800890e:	f7fe ff19 	bl	8007744 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008912:	6823      	ldr	r3, [r4, #0]
 8008914:	3b01      	subs	r3, #1
 8008916:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008918:	6824      	ldr	r4, [r4, #0]
 800891a:	b12c      	cbz	r4, 8008928 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800891c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800891e:	f7fe ff33 	bl	8007788 <vPortExitCritical>
}
 8008922:	4620      	mov	r0, r4
 8008924:	b003      	add	sp, #12
 8008926:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008928:	4b24      	ldr	r3, [pc, #144]	; (80089bc <xTaskResumeAll+0xc8>)
 800892a:	681b      	ldr	r3, [r3, #0]
 800892c:	2b00      	cmp	r3, #0
 800892e:	d0f5      	beq.n	800891c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008930:	4d23      	ldr	r5, [pc, #140]	; (80089c0 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8008932:	4e24      	ldr	r6, [pc, #144]	; (80089c4 <xTaskResumeAll+0xd0>)
 8008934:	4f24      	ldr	r7, [pc, #144]	; (80089c8 <xTaskResumeAll+0xd4>)
 8008936:	e01e      	b.n	8008976 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008938:	68eb      	ldr	r3, [r5, #12]
 800893a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800893c:	f104 0018 	add.w	r0, r4, #24
 8008940:	f7fe fe87 	bl	8007652 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008944:	1d21      	adds	r1, r4, #4
 8008946:	4608      	mov	r0, r1
 8008948:	9101      	str	r1, [sp, #4]
 800894a:	f7fe fe82 	bl	8007652 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800894e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008950:	6832      	ldr	r2, [r6, #0]
 8008952:	9901      	ldr	r1, [sp, #4]
 8008954:	2014      	movs	r0, #20
 8008956:	4293      	cmp	r3, r2
 8008958:	fb00 7003 	mla	r0, r0, r3, r7
 800895c:	bf88      	it	hi
 800895e:	6033      	strhi	r3, [r6, #0]
 8008960:	f7fe fe54 	bl	800760c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008964:	4b19      	ldr	r3, [pc, #100]	; (80089cc <xTaskResumeAll+0xd8>)
 8008966:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008968:	681b      	ldr	r3, [r3, #0]
 800896a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800896c:	429a      	cmp	r2, r3
 800896e:	d302      	bcc.n	8008976 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008970:	4b17      	ldr	r3, [pc, #92]	; (80089d0 <xTaskResumeAll+0xdc>)
 8008972:	2201      	movs	r2, #1
 8008974:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008976:	682b      	ldr	r3, [r5, #0]
 8008978:	2b00      	cmp	r3, #0
 800897a:	d1dd      	bne.n	8008938 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800897c:	b10c      	cbz	r4, 8008982 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800897e:	f7ff fdad 	bl	80084dc <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008982:	4d14      	ldr	r5, [pc, #80]	; (80089d4 <xTaskResumeAll+0xe0>)
 8008984:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008986:	b144      	cbz	r4, 800899a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008988:	4e11      	ldr	r6, [pc, #68]	; (80089d0 <xTaskResumeAll+0xdc>)
 800898a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800898c:	f7ff ff1c 	bl	80087c8 <xTaskIncrementTick>
 8008990:	b100      	cbz	r0, 8008994 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008992:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008994:	3c01      	subs	r4, #1
 8008996:	d1f9      	bne.n	800898c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8008998:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800899a:	4b0d      	ldr	r3, [pc, #52]	; (80089d0 <xTaskResumeAll+0xdc>)
 800899c:	681b      	ldr	r3, [r3, #0]
 800899e:	2b00      	cmp	r3, #0
 80089a0:	d0bc      	beq.n	800891c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 80089a2:	4b0d      	ldr	r3, [pc, #52]	; (80089d8 <xTaskResumeAll+0xe4>)
 80089a4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80089a8:	601a      	str	r2, [r3, #0]
 80089aa:	f3bf 8f4f 	dsb	sy
 80089ae:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80089b2:	2401      	movs	r4, #1
 80089b4:	e7b3      	b.n	800891e <xTaskResumeAll+0x2a>
 80089b6:	bf00      	nop
 80089b8:	2000a164 	.word	0x2000a164
 80089bc:	2000a15c 	.word	0x2000a15c
 80089c0:	2000a1a4 	.word	0x2000a1a4
 80089c4:	2000a16c 	.word	0x2000a16c
 80089c8:	20009cfc 	.word	0x20009cfc
 80089cc:	20009cf0 	.word	0x20009cf0
 80089d0:	2000a1e8 	.word	0x2000a1e8
 80089d4:	2000a1a0 	.word	0x2000a1a0
 80089d8:	e000ed04 	.word	0xe000ed04

080089dc <vTaskDelay>:
	{
 80089dc:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80089de:	b940      	cbnz	r0, 80089f2 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 80089e0:	4b0e      	ldr	r3, [pc, #56]	; (8008a1c <vTaskDelay+0x40>)
 80089e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80089e6:	601a      	str	r2, [r3, #0]
 80089e8:	f3bf 8f4f 	dsb	sy
 80089ec:	f3bf 8f6f 	isb	sy
	}
 80089f0:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80089f2:	4b0b      	ldr	r3, [pc, #44]	; (8008a20 <vTaskDelay+0x44>)
 80089f4:	6819      	ldr	r1, [r3, #0]
 80089f6:	b141      	cbz	r1, 8008a0a <vTaskDelay+0x2e>
 80089f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089fc:	f383 8811 	msr	BASEPRI, r3
 8008a00:	f3bf 8f6f 	isb	sy
 8008a04:	f3bf 8f4f 	dsb	sy
 8008a08:	e7fe      	b.n	8008a08 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 8008a0a:	f7ff fecf 	bl	80087ac <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008a0e:	f7ff fe2d 	bl	800866c <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008a12:	f7ff ff6f 	bl	80088f4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008a16:	2800      	cmp	r0, #0
 8008a18:	d0e2      	beq.n	80089e0 <vTaskDelay+0x4>
 8008a1a:	e7e9      	b.n	80089f0 <vTaskDelay+0x14>
 8008a1c:	e000ed04 	.word	0xe000ed04
 8008a20:	2000a164 	.word	0x2000a164

08008a24 <vTaskSetApplicationTaskTag>:
	{
 8008a24:	b538      	push	{r3, r4, r5, lr}
 8008a26:	460d      	mov	r5, r1
		if( xTask == NULL )
 8008a28:	4604      	mov	r4, r0
 8008a2a:	b908      	cbnz	r0, 8008a30 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8008a2c:	4b04      	ldr	r3, [pc, #16]	; (8008a40 <vTaskSetApplicationTaskTag+0x1c>)
 8008a2e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8008a30:	f7fe fe88 	bl	8007744 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8008a34:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8008a36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8008a3a:	f7fe bea5 	b.w	8007788 <vPortExitCritical>
 8008a3e:	bf00      	nop
 8008a40:	20009cf0 	.word	0x20009cf0

08008a44 <xTaskCallApplicationTaskHook>:
	{
 8008a44:	4603      	mov	r3, r0
 8008a46:	4608      	mov	r0, r1
		if( xTask == NULL )
 8008a48:	b90b      	cbnz	r3, 8008a4e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8008a4a:	4b03      	ldr	r3, [pc, #12]	; (8008a58 <xTaskCallApplicationTaskHook+0x14>)
 8008a4c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8008a4e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008a50:	b103      	cbz	r3, 8008a54 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8008a52:	4718      	bx	r3
	}
 8008a54:	4618      	mov	r0, r3
 8008a56:	4770      	bx	lr
 8008a58:	20009cf0 	.word	0x20009cf0

08008a5c <vTaskStartScheduler>:
{
 8008a5c:	b510      	push	{r4, lr}
 8008a5e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008a60:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008a62:	aa07      	add	r2, sp, #28
 8008a64:	a906      	add	r1, sp, #24
 8008a66:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008a68:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008a6c:	f7fe fcb4 	bl	80073d8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008a70:	9b05      	ldr	r3, [sp, #20]
 8008a72:	9302      	str	r3, [sp, #8]
 8008a74:	9b06      	ldr	r3, [sp, #24]
 8008a76:	9a07      	ldr	r2, [sp, #28]
 8008a78:	4919      	ldr	r1, [pc, #100]	; (8008ae0 <vTaskStartScheduler+0x84>)
 8008a7a:	481a      	ldr	r0, [pc, #104]	; (8008ae4 <vTaskStartScheduler+0x88>)
 8008a7c:	e9cd 4300 	strd	r4, r3, [sp]
 8008a80:	4623      	mov	r3, r4
 8008a82:	f7ff fe2d 	bl	80086e0 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008a86:	b1f0      	cbz	r0, 8008ac6 <vTaskStartScheduler+0x6a>
			xReturn = xTimerCreateTimerTask();
 8008a88:	f000 fa92 	bl	8008fb0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008a8c:	2801      	cmp	r0, #1
 8008a8e:	d11c      	bne.n	8008aca <vTaskStartScheduler+0x6e>
 8008a90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a94:	f383 8811 	msr	BASEPRI, r3
 8008a98:	f3bf 8f6f 	isb	sy
 8008a9c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008aa0:	4a11      	ldr	r2, [pc, #68]	; (8008ae8 <vTaskStartScheduler+0x8c>)
 8008aa2:	4912      	ldr	r1, [pc, #72]	; (8008aec <vTaskStartScheduler+0x90>)
 8008aa4:	6813      	ldr	r3, [r2, #0]
 8008aa6:	3358      	adds	r3, #88	; 0x58
 8008aa8:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8008aaa:	4b11      	ldr	r3, [pc, #68]	; (8008af0 <vTaskStartScheduler+0x94>)
 8008aac:	f04f 31ff 	mov.w	r1, #4294967295
 8008ab0:	6019      	str	r1, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008ab2:	4b10      	ldr	r3, [pc, #64]	; (8008af4 <vTaskStartScheduler+0x98>)
 8008ab4:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008ab6:	4b10      	ldr	r3, [pc, #64]	; (8008af8 <vTaskStartScheduler+0x9c>)
 8008ab8:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8008aba:	6810      	ldr	r0, [r2, #0]
 8008abc:	4621      	mov	r1, r4
 8008abe:	f7ff ffc1 	bl	8008a44 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 8008ac2:	f7fe fed7 	bl	8007874 <xPortStartScheduler>
}
 8008ac6:	b008      	add	sp, #32
 8008ac8:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008aca:	3001      	adds	r0, #1
 8008acc:	d1fb      	bne.n	8008ac6 <vTaskStartScheduler+0x6a>
 8008ace:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ad2:	f383 8811 	msr	BASEPRI, r3
 8008ad6:	f3bf 8f6f 	isb	sy
 8008ada:	f3bf 8f4f 	dsb	sy
 8008ade:	e7fe      	b.n	8008ade <vTaskStartScheduler+0x82>
 8008ae0:	0801dad1 	.word	0x0801dad1
 8008ae4:	08008605 	.word	0x08008605
 8008ae8:	20009cf0 	.word	0x20009cf0
 8008aec:	200000d8 	.word	0x200000d8
 8008af0:	2000a198 	.word	0x2000a198
 8008af4:	2000a1b8 	.word	0x2000a1b8
 8008af8:	2000a1e4 	.word	0x2000a1e4

08008afc <vTaskSwitchContext>:
{
 8008afc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008afe:	4b1e      	ldr	r3, [pc, #120]	; (8008b78 <vTaskSwitchContext+0x7c>)
 8008b00:	681a      	ldr	r2, [r3, #0]
 8008b02:	4b1e      	ldr	r3, [pc, #120]	; (8008b7c <vTaskSwitchContext+0x80>)
 8008b04:	b112      	cbz	r2, 8008b0c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008b06:	2201      	movs	r2, #1
 8008b08:	601a      	str	r2, [r3, #0]
}
 8008b0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8008b0c:	4c1c      	ldr	r4, [pc, #112]	; (8008b80 <vTaskSwitchContext+0x84>)
		xYieldPending = pdFALSE;
 8008b0e:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8008b10:	6820      	ldr	r0, [r4, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b12:	4e1c      	ldr	r6, [pc, #112]	; (8008b84 <vTaskSwitchContext+0x88>)
		traceTASK_SWITCHED_OUT();
 8008b14:	2101      	movs	r1, #1
 8008b16:	f7ff ff95 	bl	8008a44 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b1a:	4a1b      	ldr	r2, [pc, #108]	; (8008b88 <vTaskSwitchContext+0x8c>)
 8008b1c:	6833      	ldr	r3, [r6, #0]
 8008b1e:	f04f 0c14 	mov.w	ip, #20
 8008b22:	4617      	mov	r7, r2
 8008b24:	fb0c f103 	mul.w	r1, ip, r3
 8008b28:	1850      	adds	r0, r2, r1
 8008b2a:	5855      	ldr	r5, [r2, r1]
 8008b2c:	b1c5      	cbz	r5, 8008b60 <vTaskSwitchContext+0x64>
 8008b2e:	6845      	ldr	r5, [r0, #4]
 8008b30:	3108      	adds	r1, #8
 8008b32:	686d      	ldr	r5, [r5, #4]
 8008b34:	6045      	str	r5, [r0, #4]
 8008b36:	440a      	add	r2, r1
 8008b38:	4295      	cmp	r5, r2
 8008b3a:	bf04      	itt	eq
 8008b3c:	686a      	ldreq	r2, [r5, #4]
 8008b3e:	6042      	streq	r2, [r0, #4]
 8008b40:	2214      	movs	r2, #20
 8008b42:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 8008b46:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b48:	6852      	ldr	r2, [r2, #4]
 8008b4a:	68d2      	ldr	r2, [r2, #12]
 8008b4c:	6022      	str	r2, [r4, #0]
 8008b4e:	6033      	str	r3, [r6, #0]
		traceTASK_SWITCHED_IN();
 8008b50:	6820      	ldr	r0, [r4, #0]
 8008b52:	f7ff ff77 	bl	8008a44 <xTaskCallApplicationTaskHook>
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008b56:	6823      	ldr	r3, [r4, #0]
 8008b58:	4a0c      	ldr	r2, [pc, #48]	; (8008b8c <vTaskSwitchContext+0x90>)
 8008b5a:	3358      	adds	r3, #88	; 0x58
 8008b5c:	6013      	str	r3, [r2, #0]
}
 8008b5e:	e7d4      	b.n	8008b0a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b60:	b943      	cbnz	r3, 8008b74 <vTaskSwitchContext+0x78>
 8008b62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b66:	f383 8811 	msr	BASEPRI, r3
 8008b6a:	f3bf 8f6f 	isb	sy
 8008b6e:	f3bf 8f4f 	dsb	sy
 8008b72:	e7fe      	b.n	8008b72 <vTaskSwitchContext+0x76>
 8008b74:	3b01      	subs	r3, #1
 8008b76:	e7d5      	b.n	8008b24 <vTaskSwitchContext+0x28>
 8008b78:	2000a164 	.word	0x2000a164
 8008b7c:	2000a1e8 	.word	0x2000a1e8
 8008b80:	20009cf0 	.word	0x20009cf0
 8008b84:	2000a16c 	.word	0x2000a16c
 8008b88:	20009cfc 	.word	0x20009cfc
 8008b8c:	200000d8 	.word	0x200000d8

08008b90 <vTaskPlaceOnEventList>:
{
 8008b90:	b510      	push	{r4, lr}
 8008b92:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008b94:	b940      	cbnz	r0, 8008ba8 <vTaskPlaceOnEventList+0x18>
 8008b96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b9a:	f383 8811 	msr	BASEPRI, r3
 8008b9e:	f3bf 8f6f 	isb	sy
 8008ba2:	f3bf 8f4f 	dsb	sy
 8008ba6:	e7fe      	b.n	8008ba6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008ba8:	4b05      	ldr	r3, [pc, #20]	; (8008bc0 <vTaskPlaceOnEventList+0x30>)
 8008baa:	6819      	ldr	r1, [r3, #0]
 8008bac:	3118      	adds	r1, #24
 8008bae:	f7fe fd39 	bl	8007624 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008bb2:	4620      	mov	r0, r4
 8008bb4:	2101      	movs	r1, #1
}
 8008bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008bba:	f7ff bd57 	b.w	800866c <prvAddCurrentTaskToDelayedList>
 8008bbe:	bf00      	nop
 8008bc0:	20009cf0 	.word	0x20009cf0

08008bc4 <vTaskPlaceOnEventListRestricted>:
	{
 8008bc4:	b538      	push	{r3, r4, r5, lr}
 8008bc6:	460d      	mov	r5, r1
 8008bc8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008bca:	b940      	cbnz	r0, 8008bde <vTaskPlaceOnEventListRestricted+0x1a>
 8008bcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bd0:	f383 8811 	msr	BASEPRI, r3
 8008bd4:	f3bf 8f6f 	isb	sy
 8008bd8:	f3bf 8f4f 	dsb	sy
 8008bdc:	e7fe      	b.n	8008bdc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008bde:	4b07      	ldr	r3, [pc, #28]	; (8008bfc <vTaskPlaceOnEventListRestricted+0x38>)
 8008be0:	6819      	ldr	r1, [r3, #0]
 8008be2:	3118      	adds	r1, #24
 8008be4:	f7fe fd12 	bl	800760c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008be8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008bea:	4621      	mov	r1, r4
 8008bec:	bf0c      	ite	eq
 8008bee:	4628      	moveq	r0, r5
 8008bf0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008bf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008bf8:	f7ff bd38 	b.w	800866c <prvAddCurrentTaskToDelayedList>
 8008bfc:	20009cf0 	.word	0x20009cf0

08008c00 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c00:	68c3      	ldr	r3, [r0, #12]
{
 8008c02:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c04:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008c06:	b944      	cbnz	r4, 8008c1a <xTaskRemoveFromEventList+0x1a>
 8008c08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c0c:	f383 8811 	msr	BASEPRI, r3
 8008c10:	f3bf 8f6f 	isb	sy
 8008c14:	f3bf 8f4f 	dsb	sy
 8008c18:	e7fe      	b.n	8008c18 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008c1a:	f104 0118 	add.w	r1, r4, #24
 8008c1e:	4608      	mov	r0, r1
 8008c20:	9101      	str	r1, [sp, #4]
 8008c22:	f7fe fd16 	bl	8007652 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008c26:	4b12      	ldr	r3, [pc, #72]	; (8008c70 <xTaskRemoveFromEventList+0x70>)
 8008c28:	9901      	ldr	r1, [sp, #4]
 8008c2a:	681b      	ldr	r3, [r3, #0]
 8008c2c:	b9eb      	cbnz	r3, 8008c6a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008c2e:	1d21      	adds	r1, r4, #4
 8008c30:	4608      	mov	r0, r1
 8008c32:	9101      	str	r1, [sp, #4]
 8008c34:	f7fe fd0d 	bl	8007652 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008c38:	4a0e      	ldr	r2, [pc, #56]	; (8008c74 <xTaskRemoveFromEventList+0x74>)
 8008c3a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008c3c:	6810      	ldr	r0, [r2, #0]
 8008c3e:	9901      	ldr	r1, [sp, #4]
 8008c40:	4283      	cmp	r3, r0
 8008c42:	bf88      	it	hi
 8008c44:	6013      	strhi	r3, [r2, #0]
 8008c46:	4a0c      	ldr	r2, [pc, #48]	; (8008c78 <xTaskRemoveFromEventList+0x78>)
 8008c48:	2014      	movs	r0, #20
 8008c4a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008c4e:	f7fe fcdd 	bl	800760c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008c52:	4b0a      	ldr	r3, [pc, #40]	; (8008c7c <xTaskRemoveFromEventList+0x7c>)
 8008c54:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008c56:	681b      	ldr	r3, [r3, #0]
 8008c58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c5a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008c5c:	bf85      	ittet	hi
 8008c5e:	4b08      	ldrhi	r3, [pc, #32]	; (8008c80 <xTaskRemoveFromEventList+0x80>)
 8008c60:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008c62:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008c64:	6018      	strhi	r0, [r3, #0]
}
 8008c66:	b002      	add	sp, #8
 8008c68:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008c6a:	4806      	ldr	r0, [pc, #24]	; (8008c84 <xTaskRemoveFromEventList+0x84>)
 8008c6c:	e7ef      	b.n	8008c4e <xTaskRemoveFromEventList+0x4e>
 8008c6e:	bf00      	nop
 8008c70:	2000a164 	.word	0x2000a164
 8008c74:	2000a16c 	.word	0x2000a16c
 8008c78:	20009cfc 	.word	0x20009cfc
 8008c7c:	20009cf0 	.word	0x20009cf0
 8008c80:	2000a1e8 	.word	0x2000a1e8
 8008c84:	2000a1a4 	.word	0x2000a1a4

08008c88 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008c88:	4b03      	ldr	r3, [pc, #12]	; (8008c98 <vTaskInternalSetTimeOutState+0x10>)
 8008c8a:	681b      	ldr	r3, [r3, #0]
 8008c8c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008c8e:	4b03      	ldr	r3, [pc, #12]	; (8008c9c <vTaskInternalSetTimeOutState+0x14>)
 8008c90:	681b      	ldr	r3, [r3, #0]
 8008c92:	6043      	str	r3, [r0, #4]
}
 8008c94:	4770      	bx	lr
 8008c96:	bf00      	nop
 8008c98:	2000a19c 	.word	0x2000a19c
 8008c9c:	2000a1e4 	.word	0x2000a1e4

08008ca0 <xTaskCheckForTimeOut>:
{
 8008ca0:	b570      	push	{r4, r5, r6, lr}
 8008ca2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008ca4:	4605      	mov	r5, r0
 8008ca6:	b940      	cbnz	r0, 8008cba <xTaskCheckForTimeOut+0x1a>
 8008ca8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cac:	f383 8811 	msr	BASEPRI, r3
 8008cb0:	f3bf 8f6f 	isb	sy
 8008cb4:	f3bf 8f4f 	dsb	sy
 8008cb8:	e7fe      	b.n	8008cb8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008cba:	b941      	cbnz	r1, 8008cce <xTaskCheckForTimeOut+0x2e>
 8008cbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cc0:	f383 8811 	msr	BASEPRI, r3
 8008cc4:	f3bf 8f6f 	isb	sy
 8008cc8:	f3bf 8f4f 	dsb	sy
 8008ccc:	e7fe      	b.n	8008ccc <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008cce:	f7fe fd39 	bl	8007744 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008cd2:	4b0f      	ldr	r3, [pc, #60]	; (8008d10 <xTaskCheckForTimeOut+0x70>)
 8008cd4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008cd6:	6823      	ldr	r3, [r4, #0]
 8008cd8:	1c5a      	adds	r2, r3, #1
 8008cda:	d010      	beq.n	8008cfe <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008cdc:	480d      	ldr	r0, [pc, #52]	; (8008d14 <xTaskCheckForTimeOut+0x74>)
 8008cde:	682e      	ldr	r6, [r5, #0]
 8008ce0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008ce2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008ce4:	4286      	cmp	r6, r0
 8008ce6:	d001      	beq.n	8008cec <xTaskCheckForTimeOut+0x4c>
 8008ce8:	428a      	cmp	r2, r1
 8008cea:	d90f      	bls.n	8008d0c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008cec:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008cee:	4283      	cmp	r3, r0
 8008cf0:	d90a      	bls.n	8008d08 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008cf2:	1a5b      	subs	r3, r3, r1
 8008cf4:	4413      	add	r3, r2
 8008cf6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008cf8:	4628      	mov	r0, r5
 8008cfa:	f7ff ffc5 	bl	8008c88 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008cfe:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008d00:	f7fe fd42 	bl	8007788 <vPortExitCritical>
}
 8008d04:	4620      	mov	r0, r4
 8008d06:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008d08:	2300      	movs	r3, #0
 8008d0a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008d0c:	2401      	movs	r4, #1
 8008d0e:	e7f7      	b.n	8008d00 <xTaskCheckForTimeOut+0x60>
 8008d10:	2000a1e4 	.word	0x2000a1e4
 8008d14:	2000a19c 	.word	0x2000a19c

08008d18 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008d18:	4b01      	ldr	r3, [pc, #4]	; (8008d20 <vTaskMissedYield+0x8>)
 8008d1a:	2201      	movs	r2, #1
 8008d1c:	601a      	str	r2, [r3, #0]
}
 8008d1e:	4770      	bx	lr
 8008d20:	2000a1e8 	.word	0x2000a1e8

08008d24 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008d24:	4b05      	ldr	r3, [pc, #20]	; (8008d3c <xTaskGetSchedulerState+0x18>)
 8008d26:	681b      	ldr	r3, [r3, #0]
 8008d28:	b133      	cbz	r3, 8008d38 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008d2a:	4b05      	ldr	r3, [pc, #20]	; (8008d40 <xTaskGetSchedulerState+0x1c>)
 8008d2c:	681b      	ldr	r3, [r3, #0]
 8008d2e:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8008d30:	bf0c      	ite	eq
 8008d32:	2002      	moveq	r0, #2
 8008d34:	2000      	movne	r0, #0
 8008d36:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008d38:	2001      	movs	r0, #1
	}
 8008d3a:	4770      	bx	lr
 8008d3c:	2000a1b8 	.word	0x2000a1b8
 8008d40:	2000a164 	.word	0x2000a164

08008d44 <xTaskPriorityInherit>:
	{
 8008d44:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008d46:	4604      	mov	r4, r0
 8008d48:	b350      	cbz	r0, 8008da0 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008d4a:	4a1c      	ldr	r2, [pc, #112]	; (8008dbc <xTaskPriorityInherit+0x78>)
 8008d4c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008d4e:	6811      	ldr	r1, [r2, #0]
 8008d50:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8008d52:	428b      	cmp	r3, r1
 8008d54:	4616      	mov	r6, r2
 8008d56:	d229      	bcs.n	8008dac <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008d58:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008d5a:	4d19      	ldr	r5, [pc, #100]	; (8008dc0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008d5c:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d5e:	bfa1      	itttt	ge
 8008d60:	6832      	ldrge	r2, [r6, #0]
 8008d62:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008d64:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008d68:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008d6a:	2214      	movs	r2, #20
 8008d6c:	fb02 5303 	mla	r3, r2, r3, r5
 8008d70:	6942      	ldr	r2, [r0, #20]
 8008d72:	429a      	cmp	r2, r3
 8008d74:	d116      	bne.n	8008da4 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008d76:	1d01      	adds	r1, r0, #4
 8008d78:	4608      	mov	r0, r1
 8008d7a:	9101      	str	r1, [sp, #4]
 8008d7c:	f7fe fc69 	bl	8007652 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008d80:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008d82:	4a10      	ldr	r2, [pc, #64]	; (8008dc4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008d84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008d86:	6810      	ldr	r0, [r2, #0]
 8008d88:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008d8a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008d8c:	4283      	cmp	r3, r0
 8008d8e:	f04f 0014 	mov.w	r0, #20
 8008d92:	fb00 5003 	mla	r0, r0, r3, r5
 8008d96:	bf88      	it	hi
 8008d98:	6013      	strhi	r3, [r2, #0]
 8008d9a:	f7fe fc37 	bl	800760c <vListInsertEnd>
				xReturn = pdTRUE;
 8008d9e:	2001      	movs	r0, #1
	}
 8008da0:	b002      	add	sp, #8
 8008da2:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008da4:	6833      	ldr	r3, [r6, #0]
 8008da6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008da8:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008daa:	e7f8      	b.n	8008d9e <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008dac:	6813      	ldr	r3, [r2, #0]
 8008dae:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008db0:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008db2:	42a0      	cmp	r0, r4
 8008db4:	bf2c      	ite	cs
 8008db6:	2000      	movcs	r0, #0
 8008db8:	2001      	movcc	r0, #1
 8008dba:	e7f1      	b.n	8008da0 <xTaskPriorityInherit+0x5c>
 8008dbc:	20009cf0 	.word	0x20009cf0
 8008dc0:	20009cfc 	.word	0x20009cfc
 8008dc4:	2000a16c 	.word	0x2000a16c

08008dc8 <xTaskPriorityDisinherit>:
	{
 8008dc8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008dca:	b910      	cbnz	r0, 8008dd2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008dcc:	2000      	movs	r0, #0
	}
 8008dce:	b002      	add	sp, #8
 8008dd0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008dd2:	4b1c      	ldr	r3, [pc, #112]	; (8008e44 <xTaskPriorityDisinherit+0x7c>)
 8008dd4:	681c      	ldr	r4, [r3, #0]
 8008dd6:	4284      	cmp	r4, r0
 8008dd8:	d008      	beq.n	8008dec <xTaskPriorityDisinherit+0x24>
 8008dda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dde:	f383 8811 	msr	BASEPRI, r3
 8008de2:	f3bf 8f6f 	isb	sy
 8008de6:	f3bf 8f4f 	dsb	sy
 8008dea:	e7fe      	b.n	8008dea <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008dec:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008dee:	b943      	cbnz	r3, 8008e02 <xTaskPriorityDisinherit+0x3a>
 8008df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df4:	f383 8811 	msr	BASEPRI, r3
 8008df8:	f3bf 8f6f 	isb	sy
 8008dfc:	f3bf 8f4f 	dsb	sy
 8008e00:	e7fe      	b.n	8008e00 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008e02:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008e04:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008e06:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008e08:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008e0a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008e0c:	d0de      	beq.n	8008dcc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008e0e:	2b00      	cmp	r3, #0
 8008e10:	d1dc      	bne.n	8008dcc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008e12:	1d21      	adds	r1, r4, #4
 8008e14:	4608      	mov	r0, r1
 8008e16:	9101      	str	r1, [sp, #4]
 8008e18:	f7fe fc1b 	bl	8007652 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008e1c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8008e1e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008e20:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e22:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008e26:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008e28:	4a07      	ldr	r2, [pc, #28]	; (8008e48 <xTaskPriorityDisinherit+0x80>)
 8008e2a:	6810      	ldr	r0, [r2, #0]
 8008e2c:	4283      	cmp	r3, r0
 8008e2e:	bf88      	it	hi
 8008e30:	6013      	strhi	r3, [r2, #0]
 8008e32:	4a06      	ldr	r2, [pc, #24]	; (8008e4c <xTaskPriorityDisinherit+0x84>)
 8008e34:	2014      	movs	r0, #20
 8008e36:	fb00 2003 	mla	r0, r0, r3, r2
 8008e3a:	f7fe fbe7 	bl	800760c <vListInsertEnd>
					xReturn = pdTRUE;
 8008e3e:	2001      	movs	r0, #1
		return xReturn;
 8008e40:	e7c5      	b.n	8008dce <xTaskPriorityDisinherit+0x6>
 8008e42:	bf00      	nop
 8008e44:	20009cf0 	.word	0x20009cf0
 8008e48:	2000a16c 	.word	0x2000a16c
 8008e4c:	20009cfc 	.word	0x20009cfc

08008e50 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008e50:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008e52:	4604      	mov	r4, r0
 8008e54:	2800      	cmp	r0, #0
 8008e56:	d044      	beq.n	8008ee2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008e58:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008e5a:	b942      	cbnz	r2, 8008e6e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008e5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e60:	f383 8811 	msr	BASEPRI, r3
 8008e64:	f3bf 8f6f 	isb	sy
 8008e68:	f3bf 8f4f 	dsb	sy
 8008e6c:	e7fe      	b.n	8008e6c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008e6e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008e70:	4299      	cmp	r1, r3
 8008e72:	bf38      	it	cc
 8008e74:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008e76:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008e78:	428b      	cmp	r3, r1
 8008e7a:	d032      	beq.n	8008ee2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008e7c:	2a01      	cmp	r2, #1
 8008e7e:	d130      	bne.n	8008ee2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008e80:	4a19      	ldr	r2, [pc, #100]	; (8008ee8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008e82:	6812      	ldr	r2, [r2, #0]
 8008e84:	4282      	cmp	r2, r0
 8008e86:	d108      	bne.n	8008e9a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008e88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e8c:	f383 8811 	msr	BASEPRI, r3
 8008e90:	f3bf 8f6f 	isb	sy
 8008e94:	f3bf 8f4f 	dsb	sy
 8008e98:	e7fe      	b.n	8008e98 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008e9a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008e9c:	4d13      	ldr	r5, [pc, #76]	; (8008eec <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008e9e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008ea0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008ea2:	f04f 0214 	mov.w	r2, #20
 8008ea6:	fb02 5303 	mla	r3, r2, r3, r5
 8008eaa:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008eac:	bfa4      	itt	ge
 8008eae:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008eb2:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008eb4:	429a      	cmp	r2, r3
 8008eb6:	d114      	bne.n	8008ee2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008eb8:	1d01      	adds	r1, r0, #4
 8008eba:	4608      	mov	r0, r1
 8008ebc:	9101      	str	r1, [sp, #4]
 8008ebe:	f7fe fbc8 	bl	8007652 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008ec2:	4a0b      	ldr	r2, [pc, #44]	; (8008ef0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008ec4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008ec6:	6810      	ldr	r0, [r2, #0]
 8008ec8:	9901      	ldr	r1, [sp, #4]
 8008eca:	4283      	cmp	r3, r0
 8008ecc:	f04f 0014 	mov.w	r0, #20
 8008ed0:	fb00 5003 	mla	r0, r0, r3, r5
 8008ed4:	bf88      	it	hi
 8008ed6:	6013      	strhi	r3, [r2, #0]
	}
 8008ed8:	b003      	add	sp, #12
 8008eda:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8008ede:	f7fe bb95 	b.w	800760c <vListInsertEnd>
	}
 8008ee2:	b003      	add	sp, #12
 8008ee4:	bd30      	pop	{r4, r5, pc}
 8008ee6:	bf00      	nop
 8008ee8:	20009cf0 	.word	0x20009cf0
 8008eec:	20009cfc 	.word	0x20009cfc
 8008ef0:	2000a16c 	.word	0x2000a16c

08008ef4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008ef4:	4b04      	ldr	r3, [pc, #16]	; (8008f08 <pvTaskIncrementMutexHeldCount+0x14>)
 8008ef6:	681a      	ldr	r2, [r3, #0]
 8008ef8:	b11a      	cbz	r2, 8008f02 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008efa:	6819      	ldr	r1, [r3, #0]
 8008efc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008efe:	3201      	adds	r2, #1
 8008f00:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008f02:	6818      	ldr	r0, [r3, #0]
	}
 8008f04:	4770      	bx	lr
 8008f06:	bf00      	nop
 8008f08:	20009cf0 	.word	0x20009cf0

08008f0c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008f0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008f0e:	4c11      	ldr	r4, [pc, #68]	; (8008f54 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008f10:	f7fe fc18 	bl	8007744 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008f14:	6825      	ldr	r5, [r4, #0]
 8008f16:	b9bd      	cbnz	r5, 8008f48 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008f18:	4f0f      	ldr	r7, [pc, #60]	; (8008f58 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008f1a:	4e10      	ldr	r6, [pc, #64]	; (8008f5c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008f1c:	4638      	mov	r0, r7
 8008f1e:	f7fe fb67 	bl	80075f0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008f22:	4630      	mov	r0, r6
 8008f24:	f7fe fb64 	bl	80075f0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008f28:	4b0d      	ldr	r3, [pc, #52]	; (8008f60 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008f2a:	4a0e      	ldr	r2, [pc, #56]	; (8008f64 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008f2c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008f2e:	4b0e      	ldr	r3, [pc, #56]	; (8008f68 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008f30:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008f32:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008f34:	200a      	movs	r0, #10
 8008f36:	4b0d      	ldr	r3, [pc, #52]	; (8008f6c <prvCheckForValidListAndQueue+0x60>)
 8008f38:	9500      	str	r5, [sp, #0]
 8008f3a:	f7fe fe1b 	bl	8007b74 <xQueueGenericCreateStatic>
 8008f3e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008f40:	b110      	cbz	r0, 8008f48 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008f42:	490b      	ldr	r1, [pc, #44]	; (8008f70 <prvCheckForValidListAndQueue+0x64>)
 8008f44:	f7ff f9e8 	bl	8008318 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008f48:	b003      	add	sp, #12
 8008f4a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008f4e:	f7fe bc1b 	b.w	8007788 <vPortExitCritical>
 8008f52:	bf00      	nop
 8008f54:	2000a310 	.word	0x2000a310
 8008f58:	2000a294 	.word	0x2000a294
 8008f5c:	2000a2a8 	.word	0x2000a2a8
 8008f60:	2000a1ec 	.word	0x2000a1ec
 8008f64:	2000a1f4 	.word	0x2000a1f4
 8008f68:	2000a1f0 	.word	0x2000a1f0
 8008f6c:	2000a2c0 	.word	0x2000a2c0
 8008f70:	0801dad6 	.word	0x0801dad6

08008f74 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008f74:	4291      	cmp	r1, r2
{
 8008f76:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008f78:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008f7a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008f7c:	d80a      	bhi.n	8008f94 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008f7e:	1ad2      	subs	r2, r2, r3
 8008f80:	6983      	ldr	r3, [r0, #24]
 8008f82:	429a      	cmp	r2, r3
 8008f84:	d20d      	bcs.n	8008fa2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008f86:	4b08      	ldr	r3, [pc, #32]	; (8008fa8 <prvInsertTimerInActiveList+0x34>)
 8008f88:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008f8a:	6818      	ldr	r0, [r3, #0]
 8008f8c:	f7fe fb4a 	bl	8007624 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008f90:	2000      	movs	r0, #0
}
 8008f92:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008f94:	429a      	cmp	r2, r3
 8008f96:	d201      	bcs.n	8008f9c <prvInsertTimerInActiveList+0x28>
 8008f98:	4299      	cmp	r1, r3
 8008f9a:	d202      	bcs.n	8008fa2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008f9c:	4b03      	ldr	r3, [pc, #12]	; (8008fac <prvInsertTimerInActiveList+0x38>)
 8008f9e:	1d01      	adds	r1, r0, #4
 8008fa0:	e7f3      	b.n	8008f8a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008fa2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008fa4:	e7f5      	b.n	8008f92 <prvInsertTimerInActiveList+0x1e>
 8008fa6:	bf00      	nop
 8008fa8:	2000a1f0 	.word	0x2000a1f0
 8008fac:	2000a1ec 	.word	0x2000a1ec

08008fb0 <xTimerCreateTimerTask>:
{
 8008fb0:	b510      	push	{r4, lr}
 8008fb2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008fb4:	f7ff ffaa 	bl	8008f0c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008fb8:	4b12      	ldr	r3, [pc, #72]	; (8009004 <xTimerCreateTimerTask+0x54>)
 8008fba:	681b      	ldr	r3, [r3, #0]
 8008fbc:	b1b3      	cbz	r3, 8008fec <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008fbe:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008fc0:	aa07      	add	r2, sp, #28
 8008fc2:	a906      	add	r1, sp, #24
 8008fc4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008fc6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008fca:	f7fe fa11 	bl	80073f0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008fce:	9b05      	ldr	r3, [sp, #20]
 8008fd0:	9302      	str	r3, [sp, #8]
 8008fd2:	9b06      	ldr	r3, [sp, #24]
 8008fd4:	9301      	str	r3, [sp, #4]
 8008fd6:	2302      	movs	r3, #2
 8008fd8:	9300      	str	r3, [sp, #0]
 8008fda:	9a07      	ldr	r2, [sp, #28]
 8008fdc:	490a      	ldr	r1, [pc, #40]	; (8009008 <xTimerCreateTimerTask+0x58>)
 8008fde:	480b      	ldr	r0, [pc, #44]	; (800900c <xTimerCreateTimerTask+0x5c>)
 8008fe0:	4623      	mov	r3, r4
 8008fe2:	f7ff fb7d 	bl	80086e0 <xTaskCreateStatic>
 8008fe6:	4b0a      	ldr	r3, [pc, #40]	; (8009010 <xTimerCreateTimerTask+0x60>)
 8008fe8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008fea:	b940      	cbnz	r0, 8008ffe <xTimerCreateTimerTask+0x4e>
 8008fec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ff0:	f383 8811 	msr	BASEPRI, r3
 8008ff4:	f3bf 8f6f 	isb	sy
 8008ff8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8008ffc:	e7fe      	b.n	8008ffc <xTimerCreateTimerTask+0x4c>
}
 8008ffe:	2001      	movs	r0, #1
 8009000:	b008      	add	sp, #32
 8009002:	bd10      	pop	{r4, pc}
 8009004:	2000a310 	.word	0x2000a310
 8009008:	0801dadb 	.word	0x0801dadb
 800900c:	080090e9 	.word	0x080090e9
 8009010:	2000a314 	.word	0x2000a314

08009014 <xTimerGenericCommand>:
{
 8009014:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009016:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009018:	4604      	mov	r4, r0
{
 800901a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800901c:	b940      	cbnz	r0, 8009030 <xTimerGenericCommand+0x1c>
 800901e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009022:	f383 8811 	msr	BASEPRI, r3
 8009026:	f3bf 8f6f 	isb	sy
 800902a:	f3bf 8f4f 	dsb	sy
 800902e:	e7fe      	b.n	800902e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009030:	4d0d      	ldr	r5, [pc, #52]	; (8009068 <xTimerGenericCommand+0x54>)
 8009032:	6828      	ldr	r0, [r5, #0]
 8009034:	b180      	cbz	r0, 8009058 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009036:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009038:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800903c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800903e:	dc0d      	bgt.n	800905c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009040:	f7ff fe70 	bl	8008d24 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009044:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009046:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009048:	bf08      	it	eq
 800904a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800904c:	6828      	ldr	r0, [r5, #0]
 800904e:	bf18      	it	ne
 8009050:	461a      	movne	r2, r3
 8009052:	4669      	mov	r1, sp
 8009054:	f7fe fe44 	bl	8007ce0 <xQueueGenericSend>
}
 8009058:	b004      	add	sp, #16
 800905a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800905c:	2300      	movs	r3, #0
 800905e:	4669      	mov	r1, sp
 8009060:	f7fe fef0 	bl	8007e44 <xQueueGenericSendFromISR>
 8009064:	e7f8      	b.n	8009058 <xTimerGenericCommand+0x44>
 8009066:	bf00      	nop
 8009068:	2000a310 	.word	0x2000a310

0800906c <prvSwitchTimerLists>:
{
 800906c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800906e:	4d1c      	ldr	r5, [pc, #112]	; (80090e0 <prvSwitchTimerLists+0x74>)
{
 8009070:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009072:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009074:	682b      	ldr	r3, [r5, #0]
 8009076:	681a      	ldr	r2, [r3, #0]
 8009078:	b92a      	cbnz	r2, 8009086 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 800907a:	4a1a      	ldr	r2, [pc, #104]	; (80090e4 <prvSwitchTimerLists+0x78>)
 800907c:	6811      	ldr	r1, [r2, #0]
 800907e:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8009080:	6013      	str	r3, [r2, #0]
}
 8009082:	b005      	add	sp, #20
 8009084:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009086:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009088:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800908a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800908c:	1d21      	adds	r1, r4, #4
 800908e:	4608      	mov	r0, r1
 8009090:	9103      	str	r1, [sp, #12]
 8009092:	f7fe fade 	bl	8007652 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009096:	6a23      	ldr	r3, [r4, #32]
 8009098:	4620      	mov	r0, r4
 800909a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800909c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80090a0:	9903      	ldr	r1, [sp, #12]
 80090a2:	f013 0f04 	tst.w	r3, #4
 80090a6:	d0e5      	beq.n	8009074 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80090a8:	69a3      	ldr	r3, [r4, #24]
 80090aa:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 80090ac:	429e      	cmp	r6, r3
 80090ae:	d205      	bcs.n	80090bc <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80090b0:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80090b2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80090b4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80090b6:	f7fe fab5 	bl	8007624 <vListInsert>
 80090ba:	e7db      	b.n	8009074 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80090bc:	2300      	movs	r3, #0
 80090be:	9700      	str	r7, [sp, #0]
 80090c0:	4632      	mov	r2, r6
 80090c2:	4619      	mov	r1, r3
 80090c4:	4620      	mov	r0, r4
 80090c6:	f7ff ffa5 	bl	8009014 <xTimerGenericCommand>
				configASSERT( xResult );
 80090ca:	2800      	cmp	r0, #0
 80090cc:	d1d2      	bne.n	8009074 <prvSwitchTimerLists+0x8>
 80090ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090d2:	f383 8811 	msr	BASEPRI, r3
 80090d6:	f3bf 8f6f 	isb	sy
 80090da:	f3bf 8f4f 	dsb	sy
 80090de:	e7fe      	b.n	80090de <prvSwitchTimerLists+0x72>
 80090e0:	2000a1ec 	.word	0x2000a1ec
 80090e4:	2000a1f0 	.word	0x2000a1f0

080090e8 <prvTimerTask>:
{
 80090e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80090ec:	4f77      	ldr	r7, [pc, #476]	; (80092cc <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 80090ee:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 80092dc <prvTimerTask+0x1f4>
{
 80090f2:	b087      	sub	sp, #28
 80090f4:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80090f6:	683b      	ldr	r3, [r7, #0]
 80090f8:	f8d3 b000 	ldr.w	fp, [r3]
 80090fc:	f1bb 0f00 	cmp.w	fp, #0
 8009100:	d028      	beq.n	8009154 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009102:	68db      	ldr	r3, [r3, #12]
 8009104:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009108:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800910a:	4e71      	ldr	r6, [pc, #452]	; (80092d0 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 800910c:	f7ff fb4e 	bl	80087ac <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8009110:	f7ff fb54 	bl	80087bc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009114:	6833      	ldr	r3, [r6, #0]
 8009116:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8009118:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800911a:	46b0      	mov	r8, r6
 800911c:	d31c      	bcc.n	8009158 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800911e:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009120:	b31c      	cbz	r4, 800916a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009122:	4b6c      	ldr	r3, [pc, #432]	; (80092d4 <prvTimerTask+0x1ec>)
 8009124:	681b      	ldr	r3, [r3, #0]
 8009126:	681c      	ldr	r4, [r3, #0]
 8009128:	fab4 f484 	clz	r4, r4
 800912c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800912e:	4b6a      	ldr	r3, [pc, #424]	; (80092d8 <prvTimerTask+0x1f0>)
 8009130:	4622      	mov	r2, r4
 8009132:	6818      	ldr	r0, [r3, #0]
 8009134:	ebab 0105 	sub.w	r1, fp, r5
 8009138:	f7ff f92d 	bl	8008396 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800913c:	f7ff fbda 	bl	80088f4 <xTaskResumeAll>
 8009140:	b978      	cbnz	r0, 8009162 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 8009142:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009146:	f8ca 3000 	str.w	r3, [sl]
 800914a:	f3bf 8f4f 	dsb	sy
 800914e:	f3bf 8f6f 	isb	sy
 8009152:	e006      	b.n	8009162 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009154:	2401      	movs	r4, #1
 8009156:	e7d8      	b.n	800910a <prvTimerTask+0x22>
		prvSwitchTimerLists();
 8009158:	f7ff ff88 	bl	800906c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800915c:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 800915e:	f7ff fbc9 	bl	80088f4 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009162:	4e5d      	ldr	r6, [pc, #372]	; (80092d8 <prvTimerTask+0x1f0>)
 8009164:	f04f 0b00 	mov.w	fp, #0
 8009168:	e035      	b.n	80091d6 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800916a:	4583      	cmp	fp, r0
 800916c:	d8df      	bhi.n	800912e <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 800916e:	f7ff fbc1 	bl	80088f4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009172:	f8d9 3000 	ldr.w	r3, [r9]
 8009176:	68db      	ldr	r3, [r3, #12]
 8009178:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800917a:	1d30      	adds	r0, r6, #4
 800917c:	f7fe fa69 	bl	8007652 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009180:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 8009184:	0758      	lsls	r0, r3, #29
 8009186:	d518      	bpl.n	80091ba <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009188:	69b1      	ldr	r1, [r6, #24]
 800918a:	465b      	mov	r3, fp
 800918c:	462a      	mov	r2, r5
 800918e:	4459      	add	r1, fp
 8009190:	4630      	mov	r0, r6
 8009192:	f7ff feef 	bl	8008f74 <prvInsertTimerInActiveList>
 8009196:	b1a0      	cbz	r0, 80091c2 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009198:	9400      	str	r4, [sp, #0]
 800919a:	4623      	mov	r3, r4
 800919c:	465a      	mov	r2, fp
 800919e:	4621      	mov	r1, r4
 80091a0:	4630      	mov	r0, r6
 80091a2:	f7ff ff37 	bl	8009014 <xTimerGenericCommand>
			configASSERT( xResult );
 80091a6:	b960      	cbnz	r0, 80091c2 <prvTimerTask+0xda>
 80091a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ac:	f383 8811 	msr	BASEPRI, r3
 80091b0:	f3bf 8f6f 	isb	sy
 80091b4:	f3bf 8f4f 	dsb	sy
 80091b8:	e7fe      	b.n	80091b8 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80091ba:	f023 0301 	bic.w	r3, r3, #1
 80091be:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80091c2:	6a33      	ldr	r3, [r6, #32]
 80091c4:	4630      	mov	r0, r6
 80091c6:	4798      	blx	r3
}
 80091c8:	e7cb      	b.n	8009162 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80091ca:	9b03      	ldr	r3, [sp, #12]
 80091cc:	9905      	ldr	r1, [sp, #20]
 80091ce:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80091d0:	9b02      	ldr	r3, [sp, #8]
 80091d2:	2b00      	cmp	r3, #0
 80091d4:	da0a      	bge.n	80091ec <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80091d6:	6830      	ldr	r0, [r6, #0]
 80091d8:	2200      	movs	r2, #0
 80091da:	a902      	add	r1, sp, #8
 80091dc:	f7fe fee8 	bl	8007fb0 <xQueueReceive>
 80091e0:	2800      	cmp	r0, #0
 80091e2:	d088      	beq.n	80090f6 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80091e4:	9b02      	ldr	r3, [sp, #8]
 80091e6:	9804      	ldr	r0, [sp, #16]
 80091e8:	2b00      	cmp	r3, #0
 80091ea:	dbee      	blt.n	80091ca <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80091ec:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80091ee:	6963      	ldr	r3, [r4, #20]
 80091f0:	b9a3      	cbnz	r3, 800921c <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 80091f2:	f7ff fae3 	bl	80087bc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80091f6:	f8d8 3000 	ldr.w	r3, [r8]
 80091fa:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80091fc:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80091fe:	d201      	bcs.n	8009204 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 8009200:	f7ff ff34 	bl	800906c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8009204:	9b02      	ldr	r3, [sp, #8]
 8009206:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 800920a:	2b09      	cmp	r3, #9
 800920c:	d8e3      	bhi.n	80091d6 <prvTimerTask+0xee>
 800920e:	e8df f003 	tbb	[pc, r3]
 8009212:	0909      	.short	0x0909
 8009214:	543b3409 	.word	0x543b3409
 8009218:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800921c:	1d20      	adds	r0, r4, #4
 800921e:	f7fe fa18 	bl	8007652 <uxListRemove>
 8009222:	e7e6      	b.n	80091f2 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009224:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009228:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800922a:	f043 0301 	orr.w	r3, r3, #1
 800922e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009232:	9b03      	ldr	r3, [sp, #12]
 8009234:	462a      	mov	r2, r5
 8009236:	4419      	add	r1, r3
 8009238:	4620      	mov	r0, r4
 800923a:	f7ff fe9b 	bl	8008f74 <prvInsertTimerInActiveList>
 800923e:	2800      	cmp	r0, #0
 8009240:	d0c9      	beq.n	80091d6 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009242:	6a23      	ldr	r3, [r4, #32]
 8009244:	4620      	mov	r0, r4
 8009246:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009248:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800924c:	0759      	lsls	r1, r3, #29
 800924e:	d5c2      	bpl.n	80091d6 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009250:	69a2      	ldr	r2, [r4, #24]
 8009252:	9903      	ldr	r1, [sp, #12]
 8009254:	f8cd b000 	str.w	fp, [sp]
 8009258:	2300      	movs	r3, #0
 800925a:	440a      	add	r2, r1
 800925c:	4620      	mov	r0, r4
 800925e:	4619      	mov	r1, r3
 8009260:	f7ff fed8 	bl	8009014 <xTimerGenericCommand>
							configASSERT( xResult );
 8009264:	2800      	cmp	r0, #0
 8009266:	d1b6      	bne.n	80091d6 <prvTimerTask+0xee>
 8009268:	f04f 0350 	mov.w	r3, #80	; 0x50
 800926c:	f383 8811 	msr	BASEPRI, r3
 8009270:	f3bf 8f6f 	isb	sy
 8009274:	f3bf 8f4f 	dsb	sy
 8009278:	e7fe      	b.n	8009278 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800927a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800927e:	f023 0301 	bic.w	r3, r3, #1
 8009282:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009286:	e7a6      	b.n	80091d6 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009288:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800928c:	9903      	ldr	r1, [sp, #12]
 800928e:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009290:	f043 0301 	orr.w	r3, r3, #1
 8009294:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009298:	b941      	cbnz	r1, 80092ac <prvTimerTask+0x1c4>
 800929a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800929e:	f383 8811 	msr	BASEPRI, r3
 80092a2:	f3bf 8f6f 	isb	sy
 80092a6:	f3bf 8f4f 	dsb	sy
 80092aa:	e7fe      	b.n	80092aa <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80092ac:	462b      	mov	r3, r5
 80092ae:	462a      	mov	r2, r5
 80092b0:	4429      	add	r1, r5
 80092b2:	4620      	mov	r0, r4
 80092b4:	f7ff fe5e 	bl	8008f74 <prvInsertTimerInActiveList>
					break;
 80092b8:	e78d      	b.n	80091d6 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80092ba:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80092be:	079a      	lsls	r2, r3, #30
 80092c0:	d4dd      	bmi.n	800927e <prvTimerTask+0x196>
							vPortFree( pxTimer );
 80092c2:	4620      	mov	r0, r4
 80092c4:	f7fe f956 	bl	8007574 <vPortFree>
 80092c8:	e785      	b.n	80091d6 <prvTimerTask+0xee>
 80092ca:	bf00      	nop
 80092cc:	2000a1ec 	.word	0x2000a1ec
 80092d0:	2000a2bc 	.word	0x2000a2bc
 80092d4:	2000a1f0 	.word	0x2000a1f0
 80092d8:	2000a310 	.word	0x2000a310
 80092dc:	e000ed04 	.word	0xe000ed04

080092e0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80092e0:	8880      	ldrh	r0, [r0, #4]
 80092e2:	4770      	bx	lr

080092e4 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80092e4:	2300      	movs	r3, #0
 80092e6:	8083      	strh	r3, [r0, #4]
 80092e8:	4770      	bx	lr
	...

080092ec <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80092ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80092ee:	6803      	ldr	r3, [r0, #0]
 80092f0:	4605      	mov	r5, r0
 80092f2:	460e      	mov	r6, r1
 80092f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80092f6:	2100      	movs	r1, #0
 80092f8:	4798      	blx	r3
 80092fa:	682b      	ldr	r3, [r5, #0]
 80092fc:	4604      	mov	r4, r0
 80092fe:	6a1b      	ldr	r3, [r3, #32]
 8009300:	4628      	mov	r0, r5
 8009302:	4798      	blx	r3
 8009304:	88ab      	ldrh	r3, [r5, #4]
 8009306:	1b34      	subs	r4, r6, r4
 8009308:	b2a4      	uxth	r4, r4
 800930a:	fbb4 f4f0 	udiv	r4, r4, r0
 800930e:	42a3      	cmp	r3, r4
 8009310:	d805      	bhi.n	800931e <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8009312:	4b0e      	ldr	r3, [pc, #56]	; (800934c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009314:	4a0e      	ldr	r2, [pc, #56]	; (8009350 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009316:	211e      	movs	r1, #30
 8009318:	480e      	ldr	r0, [pc, #56]	; (8009354 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800931a:	f012 f8c5 	bl	801b4a8 <__assert_func>
 800931e:	682b      	ldr	r3, [r5, #0]
 8009320:	2100      	movs	r1, #0
 8009322:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009324:	4628      	mov	r0, r5
 8009326:	4798      	blx	r3
 8009328:	682b      	ldr	r3, [r5, #0]
 800932a:	4607      	mov	r7, r0
 800932c:	6a1b      	ldr	r3, [r3, #32]
 800932e:	4628      	mov	r0, r5
 8009330:	4798      	blx	r3
 8009332:	1bf3      	subs	r3, r6, r7
 8009334:	b29b      	uxth	r3, r3
 8009336:	fbb3 f2f0 	udiv	r2, r3, r0
 800933a:	fb02 3010 	mls	r0, r2, r0, r3
 800933e:	b118      	cbz	r0, 8009348 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8009340:	4b05      	ldr	r3, [pc, #20]	; (8009358 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8009342:	4a03      	ldr	r2, [pc, #12]	; (8009350 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009344:	211f      	movs	r1, #31
 8009346:	e7e7      	b.n	8009318 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8009348:	4620      	mov	r0, r4
 800934a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800934c:	0801dae3 	.word	0x0801dae3
 8009350:	0801dc4e 	.word	0x0801dc4e
 8009354:	0801daf8 	.word	0x0801daf8
 8009358:	0801db26 	.word	0x0801db26

0800935c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800935c:	b538      	push	{r3, r4, r5, lr}
 800935e:	6803      	ldr	r3, [r0, #0]
 8009360:	6a1b      	ldr	r3, [r3, #32]
 8009362:	460d      	mov	r5, r1
 8009364:	4604      	mov	r4, r0
 8009366:	4798      	blx	r3
 8009368:	4285      	cmp	r5, r0
 800936a:	d905      	bls.n	8009378 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800936c:	4b0c      	ldr	r3, [pc, #48]	; (80093a0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800936e:	4a0d      	ldr	r2, [pc, #52]	; (80093a4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009370:	2130      	movs	r1, #48	; 0x30
 8009372:	480d      	ldr	r0, [pc, #52]	; (80093a8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8009374:	f012 f898 	bl	801b4a8 <__assert_func>
 8009378:	6823      	ldr	r3, [r4, #0]
 800937a:	88a5      	ldrh	r5, [r4, #4]
 800937c:	69db      	ldr	r3, [r3, #28]
 800937e:	4620      	mov	r0, r4
 8009380:	4798      	blx	r3
 8009382:	4285      	cmp	r5, r0
 8009384:	d303      	bcc.n	800938e <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8009386:	4b09      	ldr	r3, [pc, #36]	; (80093ac <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8009388:	4a06      	ldr	r2, [pc, #24]	; (80093a4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800938a:	2131      	movs	r1, #49	; 0x31
 800938c:	e7f1      	b.n	8009372 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800938e:	6823      	ldr	r3, [r4, #0]
 8009390:	88a1      	ldrh	r1, [r4, #4]
 8009392:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009394:	4620      	mov	r0, r4
 8009396:	4798      	blx	r3
 8009398:	88a3      	ldrh	r3, [r4, #4]
 800939a:	3301      	adds	r3, #1
 800939c:	80a3      	strh	r3, [r4, #4]
 800939e:	bd38      	pop	{r3, r4, r5, pc}
 80093a0:	0801dba0 	.word	0x0801dba0
 80093a4:	0801dc91 	.word	0x0801dc91
 80093a8:	0801daf8 	.word	0x0801daf8
 80093ac:	0801dbb7 	.word	0x0801dbb7

080093b0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80093b0:	b570      	push	{r4, r5, r6, lr}
 80093b2:	6803      	ldr	r3, [r0, #0]
 80093b4:	6a1b      	ldr	r3, [r3, #32]
 80093b6:	4616      	mov	r6, r2
 80093b8:	4604      	mov	r4, r0
 80093ba:	460d      	mov	r5, r1
 80093bc:	4798      	blx	r3
 80093be:	4286      	cmp	r6, r0
 80093c0:	d905      	bls.n	80093ce <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80093c2:	4b06      	ldr	r3, [pc, #24]	; (80093dc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80093c4:	4a06      	ldr	r2, [pc, #24]	; (80093e0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80093c6:	4807      	ldr	r0, [pc, #28]	; (80093e4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80093c8:	213a      	movs	r1, #58	; 0x3a
 80093ca:	f012 f86d 	bl	801b4a8 <__assert_func>
 80093ce:	6823      	ldr	r3, [r4, #0]
 80093d0:	4629      	mov	r1, r5
 80093d2:	4620      	mov	r0, r4
 80093d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80093d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80093da:	4718      	bx	r3
 80093dc:	0801dba0 	.word	0x0801dba0
 80093e0:	0801dc04 	.word	0x0801dc04
 80093e4:	0801daf8 	.word	0x0801daf8

080093e8 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80093e8:	4770      	bx	lr
	...

080093ec <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80093ec:	4a02      	ldr	r2, [pc, #8]	; (80093f8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80093ee:	6002      	str	r2, [r0, #0]
 80093f0:	2200      	movs	r2, #0
 80093f2:	8082      	strh	r2, [r0, #4]
 80093f4:	4770      	bx	lr
 80093f6:	bf00      	nop
 80093f8:	0801dbd8 	.word	0x0801dbd8

080093fc <_ZN8touchgfx9Container13getFirstChildEv>:
 80093fc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80093fe:	4770      	bx	lr

08009400 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009400:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009402:	2000      	movs	r0, #0
 8009404:	b12b      	cbz	r3, 8009412 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009406:	b920      	cbnz	r0, 8009412 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009408:	1a5a      	subs	r2, r3, r1
 800940a:	4250      	negs	r0, r2
 800940c:	4150      	adcs	r0, r2
 800940e:	699b      	ldr	r3, [r3, #24]
 8009410:	e7f8      	b.n	8009404 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009412:	4770      	bx	lr

08009414 <_ZN8touchgfx9Container9removeAllEv>:
 8009414:	2200      	movs	r2, #0
 8009416:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009418:	b123      	cbz	r3, 8009424 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800941a:	6999      	ldr	r1, [r3, #24]
 800941c:	6281      	str	r1, [r0, #40]	; 0x28
 800941e:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009422:	e7f8      	b.n	8009416 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009424:	4770      	bx	lr

08009426 <_ZN8touchgfx9Container6unlinkEv>:
 8009426:	2300      	movs	r3, #0
 8009428:	6283      	str	r3, [r0, #40]	; 0x28
 800942a:	4770      	bx	lr

0800942c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800942c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009430:	461f      	mov	r7, r3
 8009432:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009436:	460d      	mov	r5, r1
 8009438:	4616      	mov	r6, r2
 800943a:	b103      	cbz	r3, 800943e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800943c:	6038      	str	r0, [r7, #0]
 800943e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009440:	b314      	cbz	r4, 8009488 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009442:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009446:	b1eb      	cbz	r3, 8009484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009448:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800944c:	428d      	cmp	r5, r1
 800944e:	db19      	blt.n	8009484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009450:	8923      	ldrh	r3, [r4, #8]
 8009452:	b289      	uxth	r1, r1
 8009454:	440b      	add	r3, r1
 8009456:	b21b      	sxth	r3, r3
 8009458:	429d      	cmp	r5, r3
 800945a:	da13      	bge.n	8009484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800945c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009460:	4296      	cmp	r6, r2
 8009462:	db0f      	blt.n	8009484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009464:	8963      	ldrh	r3, [r4, #10]
 8009466:	b292      	uxth	r2, r2
 8009468:	4413      	add	r3, r2
 800946a:	b21b      	sxth	r3, r3
 800946c:	429e      	cmp	r6, r3
 800946e:	da09      	bge.n	8009484 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009470:	6823      	ldr	r3, [r4, #0]
 8009472:	1ab2      	subs	r2, r6, r2
 8009474:	1a69      	subs	r1, r5, r1
 8009476:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800947a:	b212      	sxth	r2, r2
 800947c:	463b      	mov	r3, r7
 800947e:	b209      	sxth	r1, r1
 8009480:	4620      	mov	r0, r4
 8009482:	47c0      	blx	r8
 8009484:	69a4      	ldr	r4, [r4, #24]
 8009486:	e7db      	b.n	8009440 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009488:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800948c <_ZNK8touchgfx9Container12getSolidRectEv>:
 800948c:	2200      	movs	r2, #0
 800948e:	8002      	strh	r2, [r0, #0]
 8009490:	8042      	strh	r2, [r0, #2]
 8009492:	8082      	strh	r2, [r0, #4]
 8009494:	80c2      	strh	r2, [r0, #6]
 8009496:	4770      	bx	lr

08009498 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009498:	b570      	push	{r4, r5, r6, lr}
 800949a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800949c:	460d      	mov	r5, r1
 800949e:	4616      	mov	r6, r2
 80094a0:	b13c      	cbz	r4, 80094b2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80094a2:	6823      	ldr	r3, [r4, #0]
 80094a4:	4620      	mov	r0, r4
 80094a6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80094a8:	4632      	mov	r2, r6
 80094aa:	4629      	mov	r1, r5
 80094ac:	4798      	blx	r3
 80094ae:	69a4      	ldr	r4, [r4, #24]
 80094b0:	e7f6      	b.n	80094a0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80094b2:	bd70      	pop	{r4, r5, r6, pc}

080094b4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80094b4:	b538      	push	{r3, r4, r5, lr}
 80094b6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80094b8:	460d      	mov	r5, r1
 80094ba:	b134      	cbz	r4, 80094ca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80094bc:	682b      	ldr	r3, [r5, #0]
 80094be:	4621      	mov	r1, r4
 80094c0:	689b      	ldr	r3, [r3, #8]
 80094c2:	4628      	mov	r0, r5
 80094c4:	4798      	blx	r3
 80094c6:	69a4      	ldr	r4, [r4, #24]
 80094c8:	e7f7      	b.n	80094ba <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80094ca:	bd38      	pop	{r3, r4, r5, pc}

080094cc <_ZN8touchgfx9ContainerD1Ev>:
 80094cc:	4770      	bx	lr

080094ce <_ZN8touchgfx9ContainerD0Ev>:
 80094ce:	b510      	push	{r4, lr}
 80094d0:	212c      	movs	r1, #44	; 0x2c
 80094d2:	4604      	mov	r4, r0
 80094d4:	f011 ffb9 	bl	801b44a <_ZdlPvj>
 80094d8:	4620      	mov	r0, r4
 80094da:	bd10      	pop	{r4, pc}

080094dc <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80094dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80094de:	b19b      	cbz	r3, 8009508 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80094e0:	428b      	cmp	r3, r1
 80094e2:	d109      	bne.n	80094f8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80094e4:	699a      	ldr	r2, [r3, #24]
 80094e6:	2100      	movs	r1, #0
 80094e8:	6159      	str	r1, [r3, #20]
 80094ea:	6282      	str	r2, [r0, #40]	; 0x28
 80094ec:	b902      	cbnz	r2, 80094f0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80094ee:	4770      	bx	lr
 80094f0:	6199      	str	r1, [r3, #24]
 80094f2:	4770      	bx	lr
 80094f4:	4613      	mov	r3, r2
 80094f6:	b13a      	cbz	r2, 8009508 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80094f8:	699a      	ldr	r2, [r3, #24]
 80094fa:	428a      	cmp	r2, r1
 80094fc:	d1fa      	bne.n	80094f4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80094fe:	698a      	ldr	r2, [r1, #24]
 8009500:	619a      	str	r2, [r3, #24]
 8009502:	2300      	movs	r3, #0
 8009504:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009508:	4770      	bx	lr

0800950a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800950a:	b410      	push	{r4}
 800950c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800950e:	4604      	mov	r4, r0
 8009510:	b92b      	cbnz	r3, 800951e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009512:	6803      	ldr	r3, [r0, #0]
 8009514:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009518:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800951a:	4611      	mov	r1, r2
 800951c:	4718      	bx	r3
 800951e:	b941      	cbnz	r1, 8009532 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009520:	6193      	str	r3, [r2, #24]
 8009522:	6282      	str	r2, [r0, #40]	; 0x28
 8009524:	6154      	str	r4, [r2, #20]
 8009526:	f85d 4b04 	ldr.w	r4, [sp], #4
 800952a:	4770      	bx	lr
 800952c:	4603      	mov	r3, r0
 800952e:	2800      	cmp	r0, #0
 8009530:	d0f9      	beq.n	8009526 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009532:	4299      	cmp	r1, r3
 8009534:	6998      	ldr	r0, [r3, #24]
 8009536:	d1f9      	bne.n	800952c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009538:	6190      	str	r0, [r2, #24]
 800953a:	618a      	str	r2, [r1, #24]
 800953c:	e7f2      	b.n	8009524 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009540 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009540:	4288      	cmp	r0, r1
 8009542:	b508      	push	{r3, lr}
 8009544:	d105      	bne.n	8009552 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8009546:	4b11      	ldr	r3, [pc, #68]	; (800958c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009548:	4a11      	ldr	r2, [pc, #68]	; (8009590 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800954a:	2121      	movs	r1, #33	; 0x21
 800954c:	4811      	ldr	r0, [pc, #68]	; (8009594 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800954e:	f011 ffab 	bl	801b4a8 <__assert_func>
 8009552:	694b      	ldr	r3, [r1, #20]
 8009554:	b11b      	cbz	r3, 800955e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8009556:	4b10      	ldr	r3, [pc, #64]	; (8009598 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009558:	4a0d      	ldr	r2, [pc, #52]	; (8009590 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800955a:	2122      	movs	r1, #34	; 0x22
 800955c:	e7f6      	b.n	800954c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800955e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8009562:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009564:	b913      	cbnz	r3, 800956c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8009566:	6281      	str	r1, [r0, #40]	; 0x28
 8009568:	bd08      	pop	{r3, pc}
 800956a:	4613      	mov	r3, r2
 800956c:	699a      	ldr	r2, [r3, #24]
 800956e:	b12a      	cbz	r2, 800957c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8009570:	428b      	cmp	r3, r1
 8009572:	d1fa      	bne.n	800956a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8009574:	4b09      	ldr	r3, [pc, #36]	; (800959c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009576:	4a06      	ldr	r2, [pc, #24]	; (8009590 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009578:	2133      	movs	r1, #51	; 0x33
 800957a:	e7e7      	b.n	800954c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800957c:	428b      	cmp	r3, r1
 800957e:	d103      	bne.n	8009588 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8009580:	4b06      	ldr	r3, [pc, #24]	; (800959c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009582:	4a03      	ldr	r2, [pc, #12]	; (8009590 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009584:	2136      	movs	r1, #54	; 0x36
 8009586:	e7e1      	b.n	800954c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009588:	6199      	str	r1, [r3, #24]
 800958a:	e7ed      	b.n	8009568 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800958c:	0801dccf 	.word	0x0801dccf
 8009590:	0801de20 	.word	0x0801de20
 8009594:	0801dcfb 	.word	0x0801dcfb
 8009598:	0801dd2e 	.word	0x0801dd2e
 800959c:	0801dd64 	.word	0x0801dd64

080095a0 <_ZN8touchgfx4RectaNERKS0_>:
 80095a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80095a4:	f9b1 7000 	ldrsh.w	r7, [r1]
 80095a8:	888c      	ldrh	r4, [r1, #4]
 80095aa:	f9b0 9000 	ldrsh.w	r9, [r0]
 80095ae:	443c      	add	r4, r7
 80095b0:	b2a4      	uxth	r4, r4
 80095b2:	fa0f f884 	sxth.w	r8, r4
 80095b6:	45c1      	cmp	r9, r8
 80095b8:	da2f      	bge.n	800961a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80095ba:	8882      	ldrh	r2, [r0, #4]
 80095bc:	444a      	add	r2, r9
 80095be:	b292      	uxth	r2, r2
 80095c0:	fa0f fe82 	sxth.w	lr, r2
 80095c4:	4577      	cmp	r7, lr
 80095c6:	da28      	bge.n	800961a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80095c8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80095cc:	88cb      	ldrh	r3, [r1, #6]
 80095ce:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80095d2:	442b      	add	r3, r5
 80095d4:	b21b      	sxth	r3, r3
 80095d6:	429e      	cmp	r6, r3
 80095d8:	da1f      	bge.n	800961a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80095da:	88c3      	ldrh	r3, [r0, #6]
 80095dc:	4433      	add	r3, r6
 80095de:	b29b      	uxth	r3, r3
 80095e0:	fa0f fc83 	sxth.w	ip, r3
 80095e4:	4565      	cmp	r5, ip
 80095e6:	da18      	bge.n	800961a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80095e8:	454f      	cmp	r7, r9
 80095ea:	bfb8      	it	lt
 80095ec:	464f      	movlt	r7, r9
 80095ee:	42b5      	cmp	r5, r6
 80095f0:	bfb8      	it	lt
 80095f2:	4635      	movlt	r5, r6
 80095f4:	45f0      	cmp	r8, lr
 80095f6:	bfd8      	it	le
 80095f8:	4622      	movle	r2, r4
 80095fa:	1bd2      	subs	r2, r2, r7
 80095fc:	8082      	strh	r2, [r0, #4]
 80095fe:	884a      	ldrh	r2, [r1, #2]
 8009600:	88c9      	ldrh	r1, [r1, #6]
 8009602:	8007      	strh	r7, [r0, #0]
 8009604:	440a      	add	r2, r1
 8009606:	b292      	uxth	r2, r2
 8009608:	b211      	sxth	r1, r2
 800960a:	458c      	cmp	ip, r1
 800960c:	bfa8      	it	ge
 800960e:	4613      	movge	r3, r2
 8009610:	1b5b      	subs	r3, r3, r5
 8009612:	80c3      	strh	r3, [r0, #6]
 8009614:	8045      	strh	r5, [r0, #2]
 8009616:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800961a:	2300      	movs	r3, #0
 800961c:	8003      	strh	r3, [r0, #0]
 800961e:	8043      	strh	r3, [r0, #2]
 8009620:	8083      	strh	r3, [r0, #4]
 8009622:	80c3      	strh	r3, [r0, #6]
 8009624:	e7f7      	b.n	8009616 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009626 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009626:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800962a:	2b00      	cmp	r3, #0
 800962c:	dd06      	ble.n	800963c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800962e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009632:	2800      	cmp	r0, #0
 8009634:	bfcc      	ite	gt
 8009636:	2000      	movgt	r0, #0
 8009638:	2001      	movle	r0, #1
 800963a:	4770      	bx	lr
 800963c:	2001      	movs	r0, #1
 800963e:	4770      	bx	lr

08009640 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009644:	2300      	movs	r3, #0
 8009646:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009648:	8003      	strh	r3, [r0, #0]
 800964a:	4604      	mov	r4, r0
 800964c:	8043      	strh	r3, [r0, #2]
 800964e:	8083      	strh	r3, [r0, #4]
 8009650:	80c3      	strh	r3, [r0, #6]
 8009652:	2d00      	cmp	r5, #0
 8009654:	d040      	beq.n	80096d8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009656:	1d28      	adds	r0, r5, #4
 8009658:	f7ff ffe5 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800965c:	b988      	cbnz	r0, 8009682 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800965e:	4620      	mov	r0, r4
 8009660:	f7ff ffe1 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009664:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009668:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800966c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009670:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009674:	b138      	cbz	r0, 8009686 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009676:	8022      	strh	r2, [r4, #0]
 8009678:	8063      	strh	r3, [r4, #2]
 800967a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800967e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009682:	69ad      	ldr	r5, [r5, #24]
 8009684:	e7e5      	b.n	8009652 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009686:	f9b4 0000 	ldrsh.w	r0, [r4]
 800968a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800968e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009692:	4290      	cmp	r0, r2
 8009694:	4607      	mov	r7, r0
 8009696:	bfa8      	it	ge
 8009698:	4617      	movge	r7, r2
 800969a:	4472      	add	r2, lr
 800969c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80096a0:	8027      	strh	r7, [r4, #0]
 80096a2:	4299      	cmp	r1, r3
 80096a4:	460e      	mov	r6, r1
 80096a6:	4440      	add	r0, r8
 80096a8:	bfa8      	it	ge
 80096aa:	461e      	movge	r6, r3
 80096ac:	4471      	add	r1, lr
 80096ae:	4463      	add	r3, ip
 80096b0:	b200      	sxth	r0, r0
 80096b2:	b212      	sxth	r2, r2
 80096b4:	b209      	sxth	r1, r1
 80096b6:	b21b      	sxth	r3, r3
 80096b8:	4290      	cmp	r0, r2
 80096ba:	bfac      	ite	ge
 80096bc:	ebc7 0200 	rsbge	r2, r7, r0
 80096c0:	ebc7 0202 	rsblt	r2, r7, r2
 80096c4:	4299      	cmp	r1, r3
 80096c6:	bfac      	ite	ge
 80096c8:	ebc6 0301 	rsbge	r3, r6, r1
 80096cc:	ebc6 0303 	rsblt	r3, r6, r3
 80096d0:	8066      	strh	r6, [r4, #2]
 80096d2:	80a2      	strh	r2, [r4, #4]
 80096d4:	80e3      	strh	r3, [r4, #6]
 80096d6:	e7d4      	b.n	8009682 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80096d8:	4620      	mov	r0, r4
 80096da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080096de <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80096de:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80096e2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80096e6:	b383      	cbz	r3, 800974a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80096e8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80096ea:	b374      	cbz	r4, 800974a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80096ec:	f9b1 5000 	ldrsh.w	r5, [r1]
 80096f0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80096f4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80096f8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80096fc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009700:	b303      	cbz	r3, 8009744 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009702:	4668      	mov	r0, sp
 8009704:	1d21      	adds	r1, r4, #4
 8009706:	f8ad 5000 	strh.w	r5, [sp]
 800970a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800970e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009712:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009716:	f7ff ff43 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800971a:	4668      	mov	r0, sp
 800971c:	f7ff ff83 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009720:	b980      	cbnz	r0, 8009744 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009722:	f8bd 3000 	ldrh.w	r3, [sp]
 8009726:	88a2      	ldrh	r2, [r4, #4]
 8009728:	1a9b      	subs	r3, r3, r2
 800972a:	f8ad 3000 	strh.w	r3, [sp]
 800972e:	88e2      	ldrh	r2, [r4, #6]
 8009730:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009734:	1a9b      	subs	r3, r3, r2
 8009736:	f8ad 3002 	strh.w	r3, [sp, #2]
 800973a:	6823      	ldr	r3, [r4, #0]
 800973c:	4669      	mov	r1, sp
 800973e:	689b      	ldr	r3, [r3, #8]
 8009740:	4620      	mov	r0, r4
 8009742:	4798      	blx	r3
 8009744:	69a4      	ldr	r4, [r4, #24]
 8009746:	2c00      	cmp	r4, #0
 8009748:	d1d8      	bne.n	80096fc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800974a:	b002      	add	sp, #8
 800974c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009750 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009750:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009752:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009756:	460d      	mov	r5, r1
 8009758:	4616      	mov	r6, r2
 800975a:	b323      	cbz	r3, 80097a6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800975c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800975e:	b314      	cbz	r4, 80097a6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009760:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009764:	b1eb      	cbz	r3, 80097a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009766:	6828      	ldr	r0, [r5, #0]
 8009768:	6869      	ldr	r1, [r5, #4]
 800976a:	466b      	mov	r3, sp
 800976c:	c303      	stmia	r3!, {r0, r1}
 800976e:	4668      	mov	r0, sp
 8009770:	1d21      	adds	r1, r4, #4
 8009772:	f7ff ff15 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8009776:	4668      	mov	r0, sp
 8009778:	f7ff ff55 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800977c:	b988      	cbnz	r0, 80097a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800977e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009782:	88a2      	ldrh	r2, [r4, #4]
 8009784:	1a9b      	subs	r3, r3, r2
 8009786:	f8ad 3000 	strh.w	r3, [sp]
 800978a:	88e2      	ldrh	r2, [r4, #6]
 800978c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009790:	1a9b      	subs	r3, r3, r2
 8009792:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009796:	6823      	ldr	r3, [r4, #0]
 8009798:	4632      	mov	r2, r6
 800979a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800979c:	4669      	mov	r1, sp
 800979e:	4620      	mov	r0, r4
 80097a0:	4798      	blx	r3
 80097a2:	69a4      	ldr	r4, [r4, #24]
 80097a4:	e7db      	b.n	800975e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80097a6:	b002      	add	sp, #8
 80097a8:	bd70      	pop	{r4, r5, r6, pc}

080097aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80097aa:	b513      	push	{r0, r1, r4, lr}
 80097ac:	6803      	ldr	r3, [r0, #0]
 80097ae:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
 80097b2:	2300      	movs	r3, #0
 80097b4:	e9cd 3300 	strd	r3, r3, [sp]
 80097b8:	466b      	mov	r3, sp
 80097ba:	47a0      	blx	r4
 80097bc:	b002      	add	sp, #8
 80097be:	bd10      	pop	{r4, pc}

080097c0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80097c0:	2301      	movs	r3, #1
 80097c2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80097c6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80097ca:	4770      	bx	lr

080097cc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80097cc:	2301      	movs	r3, #1
 80097ce:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80097d2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80097d6:	4770      	bx	lr

080097d8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80097d8:	6843      	ldr	r3, [r0, #4]
 80097da:	2201      	movs	r2, #1
 80097dc:	725a      	strb	r2, [r3, #9]
 80097de:	6840      	ldr	r0, [r0, #4]
 80097e0:	6803      	ldr	r3, [r0, #0]
 80097e2:	691b      	ldr	r3, [r3, #16]
 80097e4:	4718      	bx	r3

080097e6 <_ZN8touchgfx3HAL8flushDMAEv>:
 80097e6:	6840      	ldr	r0, [r0, #4]
 80097e8:	6803      	ldr	r3, [r0, #0]
 80097ea:	689b      	ldr	r3, [r3, #8]
 80097ec:	4718      	bx	r3

080097ee <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 80097ee:	b530      	push	{r4, r5, lr}
 80097f0:	b08b      	sub	sp, #44	; 0x2c
 80097f2:	6804      	ldr	r4, [r0, #0]
 80097f4:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80097f8:	9508      	str	r5, [sp, #32]
 80097fa:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80097fe:	9507      	str	r5, [sp, #28]
 8009800:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8009804:	9506      	str	r5, [sp, #24]
 8009806:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800980a:	9505      	str	r5, [sp, #20]
 800980c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009810:	9504      	str	r5, [sp, #16]
 8009812:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8009816:	9503      	str	r5, [sp, #12]
 8009818:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800981c:	9502      	str	r5, [sp, #8]
 800981e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009822:	e9cd 3500 	strd	r3, r5, [sp]
 8009826:	4613      	mov	r3, r2
 8009828:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800982a:	2200      	movs	r2, #0
 800982c:	47a0      	blx	r4
 800982e:	b00b      	add	sp, #44	; 0x2c
 8009830:	bd30      	pop	{r4, r5, pc}
	...

08009834 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009834:	4b04      	ldr	r3, [pc, #16]	; (8009848 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009836:	781b      	ldrb	r3, [r3, #0]
 8009838:	b123      	cbz	r3, 8009844 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800983a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800983e:	f080 0001 	eor.w	r0, r0, #1
 8009842:	4770      	bx	lr
 8009844:	2001      	movs	r0, #1
 8009846:	4770      	bx	lr
 8009848:	2000a322 	.word	0x2000a322

0800984c <_ZN8touchgfx3HAL8endFrameEv>:
 800984c:	b510      	push	{r4, lr}
 800984e:	4604      	mov	r4, r0
 8009850:	6840      	ldr	r0, [r0, #4]
 8009852:	6803      	ldr	r3, [r0, #0]
 8009854:	689b      	ldr	r3, [r3, #8]
 8009856:	4798      	blx	r3
 8009858:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800985c:	b113      	cbz	r3, 8009864 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800985e:	2301      	movs	r3, #1
 8009860:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009864:	bd10      	pop	{r4, pc}

08009866 <_ZN8touchgfx3HAL10initializeEv>:
 8009866:	b510      	push	{r4, lr}
 8009868:	4604      	mov	r4, r0
 800986a:	f7f7 f9f5 	bl	8000c58 <_ZN8touchgfx10OSWrappers10initializeEv>
 800986e:	6860      	ldr	r0, [r4, #4]
 8009870:	6803      	ldr	r3, [r0, #0]
 8009872:	68db      	ldr	r3, [r3, #12]
 8009874:	4798      	blx	r3
 8009876:	68e0      	ldr	r0, [r4, #12]
 8009878:	6803      	ldr	r3, [r0, #0]
 800987a:	689b      	ldr	r3, [r3, #8]
 800987c:	4798      	blx	r3
 800987e:	6823      	ldr	r3, [r4, #0]
 8009880:	4620      	mov	r0, r4
 8009882:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009888:	4718      	bx	r3
	...

0800988c <_ZN8touchgfx3HAL4tickEv>:
 800988c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800988e:	6803      	ldr	r3, [r0, #0]
 8009890:	4d5c      	ldr	r5, [pc, #368]	; (8009a04 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009892:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8009896:	4604      	mov	r4, r0
 8009898:	4798      	blx	r3
 800989a:	2800      	cmp	r0, #0
 800989c:	f000 8097 	beq.w	80099ce <_ZN8touchgfx3HAL4tickEv+0x142>
 80098a0:	2001      	movs	r0, #1
 80098a2:	f7f6 ff57 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80098a6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80098aa:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80098ae:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80098b2:	2600      	movs	r6, #0
 80098b4:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80098b8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80098bc:	b133      	cbz	r3, 80098cc <_ZN8touchgfx3HAL4tickEv+0x40>
 80098be:	6823      	ldr	r3, [r4, #0]
 80098c0:	4620      	mov	r0, r4
 80098c2:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80098c6:	4798      	blx	r3
 80098c8:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80098cc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80098d0:	6862      	ldr	r2, [r4, #4]
 80098d2:	f083 0301 	eor.w	r3, r3, #1
 80098d6:	7253      	strb	r3, [r2, #9]
 80098d8:	2601      	movs	r6, #1
 80098da:	702e      	strb	r6, [r5, #0]
 80098dc:	f002 fee4 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 80098e0:	6803      	ldr	r3, [r0, #0]
 80098e2:	4631      	mov	r1, r6
 80098e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80098e6:	4798      	blx	r3
 80098e8:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80098ec:	b90b      	cbnz	r3, 80098f2 <_ZN8touchgfx3HAL4tickEv+0x66>
 80098ee:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80098f2:	f002 fed9 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 80098f6:	6803      	ldr	r3, [r0, #0]
 80098f8:	695b      	ldr	r3, [r3, #20]
 80098fa:	4798      	blx	r3
 80098fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80098fe:	6803      	ldr	r3, [r0, #0]
 8009900:	691b      	ldr	r3, [r3, #16]
 8009902:	4798      	blx	r3
 8009904:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009908:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800990c:	3b01      	subs	r3, #1
 800990e:	b2db      	uxtb	r3, r3
 8009910:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009914:	b10a      	cbz	r2, 800991a <_ZN8touchgfx3HAL4tickEv+0x8e>
 8009916:	2b00      	cmp	r3, #0
 8009918:	d1eb      	bne.n	80098f2 <_ZN8touchgfx3HAL4tickEv+0x66>
 800991a:	4a3b      	ldr	r2, [pc, #236]	; (8009a08 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800991c:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009920:	7813      	ldrb	r3, [r2, #0]
 8009922:	3301      	adds	r3, #1
 8009924:	b25b      	sxtb	r3, r3
 8009926:	4299      	cmp	r1, r3
 8009928:	7013      	strb	r3, [r2, #0]
 800992a:	dc10      	bgt.n	800994e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800992c:	68e0      	ldr	r0, [r4, #12]
 800992e:	2300      	movs	r3, #0
 8009930:	7013      	strb	r3, [r2, #0]
 8009932:	6803      	ldr	r3, [r0, #0]
 8009934:	aa03      	add	r2, sp, #12
 8009936:	68db      	ldr	r3, [r3, #12]
 8009938:	a902      	add	r1, sp, #8
 800993a:	4798      	blx	r3
 800993c:	6823      	ldr	r3, [r4, #0]
 800993e:	2800      	cmp	r0, #0
 8009940:	d051      	beq.n	80099e6 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8009942:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009946:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800994a:	4620      	mov	r0, r4
 800994c:	4798      	blx	r3
 800994e:	6960      	ldr	r0, [r4, #20]
 8009950:	2300      	movs	r3, #0
 8009952:	f88d 3007 	strb.w	r3, [sp, #7]
 8009956:	b158      	cbz	r0, 8009970 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009958:	6803      	ldr	r3, [r0, #0]
 800995a:	f10d 0107 	add.w	r1, sp, #7
 800995e:	68db      	ldr	r3, [r3, #12]
 8009960:	4798      	blx	r3
 8009962:	b128      	cbz	r0, 8009970 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009964:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009966:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800996a:	6803      	ldr	r3, [r0, #0]
 800996c:	68db      	ldr	r3, [r3, #12]
 800996e:	4798      	blx	r3
 8009970:	f104 001c 	add.w	r0, r4, #28
 8009974:	f011 fcb0 	bl	801b2d8 <_ZN8touchgfx8Gestures4tickEv>
 8009978:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800997c:	b30b      	cbz	r3, 80099c2 <_ZN8touchgfx3HAL4tickEv+0x136>
 800997e:	6920      	ldr	r0, [r4, #16]
 8009980:	6803      	ldr	r3, [r0, #0]
 8009982:	691b      	ldr	r3, [r3, #16]
 8009984:	4798      	blx	r3
 8009986:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009988:	4606      	mov	r6, r0
 800998a:	b903      	cbnz	r3, 800998e <_ZN8touchgfx3HAL4tickEv+0x102>
 800998c:	6720      	str	r0, [r4, #112]	; 0x70
 800998e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009990:	4a1e      	ldr	r2, [pc, #120]	; (8009a0c <_ZN8touchgfx3HAL4tickEv+0x180>)
 8009992:	1af3      	subs	r3, r6, r3
 8009994:	4293      	cmp	r3, r2
 8009996:	d914      	bls.n	80099c2 <_ZN8touchgfx3HAL4tickEv+0x136>
 8009998:	6920      	ldr	r0, [r4, #16]
 800999a:	6803      	ldr	r3, [r0, #0]
 800999c:	699b      	ldr	r3, [r3, #24]
 800999e:	4798      	blx	r3
 80099a0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80099a2:	2264      	movs	r2, #100	; 0x64
 80099a4:	1af3      	subs	r3, r6, r3
 80099a6:	fbb3 f3f2 	udiv	r3, r3, r2
 80099aa:	fbb0 f0f3 	udiv	r0, r0, r3
 80099ae:	2800      	cmp	r0, #0
 80099b0:	dc1e      	bgt.n	80099f0 <_ZN8touchgfx3HAL4tickEv+0x164>
 80099b2:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80099b6:	6920      	ldr	r0, [r4, #16]
 80099b8:	6803      	ldr	r3, [r0, #0]
 80099ba:	2100      	movs	r1, #0
 80099bc:	69db      	ldr	r3, [r3, #28]
 80099be:	4798      	blx	r3
 80099c0:	6726      	str	r6, [r4, #112]	; 0x70
 80099c2:	f002 fe71 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 80099c6:	6803      	ldr	r3, [r0, #0]
 80099c8:	2100      	movs	r1, #0
 80099ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80099cc:	4798      	blx	r3
 80099ce:	6823      	ldr	r3, [r4, #0]
 80099d0:	4620      	mov	r0, r4
 80099d2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80099d6:	4798      	blx	r3
 80099d8:	2001      	movs	r0, #1
 80099da:	f7f6 fed7 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80099de:	2300      	movs	r3, #0
 80099e0:	702b      	strb	r3, [r5, #0]
 80099e2:	b004      	add	sp, #16
 80099e4:	bd70      	pop	{r4, r5, r6, pc}
 80099e6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80099ea:	4620      	mov	r0, r4
 80099ec:	4798      	blx	r3
 80099ee:	e7ae      	b.n	800994e <_ZN8touchgfx3HAL4tickEv+0xc2>
 80099f0:	2863      	cmp	r0, #99	; 0x63
 80099f2:	bfcb      	itete	gt
 80099f4:	2300      	movgt	r3, #0
 80099f6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80099fa:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80099fe:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009a02:	e7d8      	b.n	80099b6 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8009a04:	2000a328 	.word	0x2000a328
 8009a08:	2000a329 	.word	0x2000a329
 8009a0c:	05f5e100 	.word	0x05f5e100

08009a10 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009a10:	f7f7 b952 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009a14 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009a14:	6581      	str	r1, [r0, #88]	; 0x58
 8009a16:	301c      	adds	r0, #28
 8009a18:	f011 bc5c 	b.w	801b2d4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009a1c <_ZN8touchgfx3HAL5touchEll>:
 8009a1c:	b530      	push	{r4, r5, lr}
 8009a1e:	b087      	sub	sp, #28
 8009a20:	4604      	mov	r4, r0
 8009a22:	a804      	add	r0, sp, #16
 8009a24:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009a28:	f002 fbfe 	bl	800c228 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009a2c:	9b04      	ldr	r3, [sp, #16]
 8009a2e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009a32:	a906      	add	r1, sp, #24
 8009a34:	9b05      	ldr	r3, [sp, #20]
 8009a36:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009a3a:	a803      	add	r0, sp, #12
 8009a3c:	f002 fc32 	bl	800c2a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009a40:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009a44:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009a48:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009a4c:	f104 001c 	add.w	r0, r4, #28
 8009a50:	b189      	cbz	r1, 8009a76 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009a52:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009a56:	9300      	str	r3, [sp, #0]
 8009a58:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009a5c:	4613      	mov	r3, r2
 8009a5e:	462a      	mov	r2, r5
 8009a60:	f011 fc48 	bl	801b2f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009a64:	b128      	cbz	r0, 8009a72 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009a66:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009a6a:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009a6c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009a70:	6623      	str	r3, [r4, #96]	; 0x60
 8009a72:	b007      	add	sp, #28
 8009a74:	bd30      	pop	{r4, r5, pc}
 8009a76:	f011 fc81 	bl	801b37c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009a7a:	2301      	movs	r3, #1
 8009a7c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009a80:	e7f1      	b.n	8009a66 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009a82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009a82:	b570      	push	{r4, r5, r6, lr}
 8009a84:	2b00      	cmp	r3, #0
 8009a86:	d050      	beq.n	8009b2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009a88:	ea81 0002 	eor.w	r0, r1, r2
 8009a8c:	07c6      	lsls	r6, r0, #31
 8009a8e:	d508      	bpl.n	8009aa2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009a90:	3a01      	subs	r2, #1
 8009a92:	18cc      	adds	r4, r1, r3
 8009a94:	42a1      	cmp	r1, r4
 8009a96:	d048      	beq.n	8009b2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009a98:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009a9c:	f801 0b01 	strb.w	r0, [r1], #1
 8009aa0:	e7f8      	b.n	8009a94 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009aa2:	07d5      	lsls	r5, r2, #31
 8009aa4:	bf42      	ittt	mi
 8009aa6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009aaa:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009aae:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009ab2:	2b01      	cmp	r3, #1
 8009ab4:	d915      	bls.n	8009ae2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009ab6:	ea82 0001 	eor.w	r0, r2, r1
 8009aba:	0784      	lsls	r4, r0, #30
 8009abc:	d02d      	beq.n	8009b1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8009abe:	1e94      	subs	r4, r2, #2
 8009ac0:	4608      	mov	r0, r1
 8009ac2:	18ce      	adds	r6, r1, r3
 8009ac4:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8009ac8:	f820 5b02 	strh.w	r5, [r0], #2
 8009acc:	1a35      	subs	r5, r6, r0
 8009ace:	2d01      	cmp	r5, #1
 8009ad0:	d8f8      	bhi.n	8009ac4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 8009ad2:	1e98      	subs	r0, r3, #2
 8009ad4:	f020 0001 	bic.w	r0, r0, #1
 8009ad8:	3002      	adds	r0, #2
 8009ada:	4401      	add	r1, r0
 8009adc:	4402      	add	r2, r0
 8009ade:	f003 0301 	and.w	r3, r3, #1
 8009ae2:	1f14      	subs	r4, r2, #4
 8009ae4:	4608      	mov	r0, r1
 8009ae6:	18ce      	adds	r6, r1, r3
 8009ae8:	1a35      	subs	r5, r6, r0
 8009aea:	2d03      	cmp	r5, #3
 8009aec:	d810      	bhi.n	8009b10 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 8009aee:	089c      	lsrs	r4, r3, #2
 8009af0:	00a0      	lsls	r0, r4, #2
 8009af2:	4401      	add	r1, r0
 8009af4:	3801      	subs	r0, #1
 8009af6:	4402      	add	r2, r0
 8009af8:	f06f 0003 	mvn.w	r0, #3
 8009afc:	fb00 3404 	mla	r4, r0, r4, r3
 8009b00:	440c      	add	r4, r1
 8009b02:	42a1      	cmp	r1, r4
 8009b04:	d011      	beq.n	8009b2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009b06:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8009b0a:	f801 3b01 	strb.w	r3, [r1], #1
 8009b0e:	e7f8      	b.n	8009b02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8009b10:	f854 5f04 	ldr.w	r5, [r4, #4]!
 8009b14:	f840 5b04 	str.w	r5, [r0], #4
 8009b18:	e7e6      	b.n	8009ae8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 8009b1a:	0790      	lsls	r0, r2, #30
 8009b1c:	d0e1      	beq.n	8009ae2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009b1e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009b22:	f821 0b02 	strh.w	r0, [r1], #2
 8009b26:	3b02      	subs	r3, #2
 8009b28:	e7db      	b.n	8009ae2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009b2a:	2001      	movs	r0, #1
 8009b2c:	bd70      	pop	{r4, r5, r6, pc}

08009b2e <_ZN8touchgfx3HAL7noTouchEv>:
 8009b2e:	b510      	push	{r4, lr}
 8009b30:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009b34:	4604      	mov	r4, r0
 8009b36:	b153      	cbz	r3, 8009b4e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009b38:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009b3c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009b40:	2101      	movs	r1, #1
 8009b42:	301c      	adds	r0, #28
 8009b44:	f011 fc1a 	bl	801b37c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009b48:	2300      	movs	r3, #0
 8009b4a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009b4e:	bd10      	pop	{r4, pc}

08009b50 <_ZN8touchgfx3HAL3lcdEv>:
 8009b50:	4b04      	ldr	r3, [pc, #16]	; (8009b64 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8009b52:	681b      	ldr	r3, [r3, #0]
 8009b54:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009b58:	b10a      	cbz	r2, 8009b5e <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009b5a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009b5c:	b900      	cbnz	r0, 8009b60 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009b5e:	6898      	ldr	r0, [r3, #8]
 8009b60:	4770      	bx	lr
 8009b62:	bf00      	nop
 8009b64:	2000a324 	.word	0x2000a324

08009b68 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009b68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b6c:	4604      	mov	r4, r0
 8009b6e:	6980      	ldr	r0, [r0, #24]
 8009b70:	b085      	sub	sp, #20
 8009b72:	460f      	mov	r7, r1
 8009b74:	4690      	mov	r8, r2
 8009b76:	4699      	mov	r9, r3
 8009b78:	b930      	cbnz	r0, 8009b88 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009b7a:	4b1c      	ldr	r3, [pc, #112]	; (8009bec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009b7c:	4a1c      	ldr	r2, [pc, #112]	; (8009bf0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009b7e:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 8009b82:	481c      	ldr	r0, [pc, #112]	; (8009bf4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8009b84:	f011 fc90 	bl	801b4a8 <__assert_func>
 8009b88:	ad04      	add	r5, sp, #16
 8009b8a:	2600      	movs	r6, #0
 8009b8c:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009b90:	6806      	ldr	r6, [r0, #0]
 8009b92:	9501      	str	r5, [sp, #4]
 8009b94:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009b98:	9500      	str	r5, [sp, #0]
 8009b9a:	6835      	ldr	r5, [r6, #0]
 8009b9c:	47a8      	blx	r5
 8009b9e:	4d16      	ldr	r5, [pc, #88]	; (8009bf8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009ba0:	4606      	mov	r6, r0
 8009ba2:	f8a5 9000 	strh.w	r9, [r5]
 8009ba6:	f7ff ffd3 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 8009baa:	6803      	ldr	r3, [r0, #0]
 8009bac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009bae:	4798      	blx	r3
 8009bb0:	2801      	cmp	r0, #1
 8009bb2:	d012      	beq.n	8009bda <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8009bb4:	d306      	bcc.n	8009bc4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8009bb6:	280d      	cmp	r0, #13
 8009bb8:	d80b      	bhi.n	8009bd2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009bba:	4b10      	ldr	r3, [pc, #64]	; (8009bfc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009bbc:	4a0c      	ldr	r2, [pc, #48]	; (8009bf0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009bbe:	f44f 71b4 	mov.w	r1, #360	; 0x168
 8009bc2:	e7de      	b.n	8009b82 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009bc4:	882b      	ldrh	r3, [r5, #0]
 8009bc6:	fb08 7203 	mla	r2, r8, r3, r7
 8009bca:	9b03      	ldr	r3, [sp, #12]
 8009bcc:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009bd0:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009bd2:	4630      	mov	r0, r6
 8009bd4:	b005      	add	sp, #20
 8009bd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009bda:	882a      	ldrh	r2, [r5, #0]
 8009bdc:	9b03      	ldr	r3, [sp, #12]
 8009bde:	fb08 7202 	mla	r2, r8, r2, r7
 8009be2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009be6:	1a9a      	subs	r2, r3, r2
 8009be8:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009bea:	e7f2      	b.n	8009bd2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009bec:	0801dfc8 	.word	0x0801dfc8
 8009bf0:	0801e280 	.word	0x0801e280
 8009bf4:	0801e00d 	.word	0x0801e00d
 8009bf8:	2000a31e 	.word	0x2000a31e
 8009bfc:	0801e033 	.word	0x0801e033

08009c00 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8009c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c02:	b08b      	sub	sp, #44	; 0x2c
 8009c04:	4617      	mov	r7, r2
 8009c06:	4604      	mov	r4, r0
 8009c08:	460e      	mov	r6, r1
 8009c0a:	461d      	mov	r5, r3
 8009c0c:	f7ff ffa0 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 8009c10:	6803      	ldr	r3, [r0, #0]
 8009c12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c14:	4798      	blx	r3
 8009c16:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8009c1a:	4b0e      	ldr	r3, [pc, #56]	; (8009c54 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x54>)
 8009c1c:	6822      	ldr	r2, [r4, #0]
 8009c1e:	881b      	ldrh	r3, [r3, #0]
 8009c20:	9306      	str	r3, [sp, #24]
 8009c22:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009c26:	9305      	str	r3, [sp, #20]
 8009c28:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009c2c:	9304      	str	r3, [sp, #16]
 8009c2e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009c32:	9303      	str	r3, [sp, #12]
 8009c34:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009c38:	9302      	str	r3, [sp, #8]
 8009c3a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009c3e:	e9cd 5300 	strd	r5, r3, [sp]
 8009c42:	4631      	mov	r1, r6
 8009c44:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8009c46:	463b      	mov	r3, r7
 8009c48:	2200      	movs	r2, #0
 8009c4a:	4620      	mov	r0, r4
 8009c4c:	47a8      	blx	r5
 8009c4e:	b00b      	add	sp, #44	; 0x2c
 8009c50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c52:	bf00      	nop
 8009c54:	2000a31e 	.word	0x2000a31e

08009c58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009c58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c5c:	4698      	mov	r8, r3
 8009c5e:	6803      	ldr	r3, [r0, #0]
 8009c60:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 8009c62:	4b13      	ldr	r3, [pc, #76]	; (8009cb0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8009c64:	b08b      	sub	sp, #44	; 0x2c
 8009c66:	4617      	mov	r7, r2
 8009c68:	f8b3 9000 	ldrh.w	r9, [r3]
 8009c6c:	460e      	mov	r6, r1
 8009c6e:	4604      	mov	r4, r0
 8009c70:	f7ff ff6e 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 8009c74:	6803      	ldr	r3, [r0, #0]
 8009c76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c78:	4798      	blx	r3
 8009c7a:	2302      	movs	r3, #2
 8009c7c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009c80:	2301      	movs	r3, #1
 8009c82:	9305      	str	r3, [sp, #20]
 8009c84:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009c88:	9304      	str	r3, [sp, #16]
 8009c8a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009c8e:	9303      	str	r3, [sp, #12]
 8009c90:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009c94:	9302      	str	r3, [sp, #8]
 8009c96:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009c9a:	9008      	str	r0, [sp, #32]
 8009c9c:	e9cd 8300 	strd	r8, r3, [sp]
 8009ca0:	2200      	movs	r2, #0
 8009ca2:	463b      	mov	r3, r7
 8009ca4:	4631      	mov	r1, r6
 8009ca6:	4620      	mov	r0, r4
 8009ca8:	47a8      	blx	r5
 8009caa:	b00b      	add	sp, #44	; 0x2c
 8009cac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009cb0:	2000a31e 	.word	0x2000a31e

08009cb4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 8009cb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009cb8:	4698      	mov	r8, r3
 8009cba:	6803      	ldr	r3, [r0, #0]
 8009cbc:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8009cbe:	4b0f      	ldr	r3, [pc, #60]	; (8009cfc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 8009cc0:	b087      	sub	sp, #28
 8009cc2:	f8b3 9000 	ldrh.w	r9, [r3]
 8009cc6:	460e      	mov	r6, r1
 8009cc8:	4617      	mov	r7, r2
 8009cca:	4604      	mov	r4, r0
 8009ccc:	f7ff ff40 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 8009cd0:	6803      	ldr	r3, [r0, #0]
 8009cd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009cd4:	4798      	blx	r3
 8009cd6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009cda:	9302      	str	r3, [sp, #8]
 8009cdc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009ce0:	9301      	str	r3, [sp, #4]
 8009ce2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009ce6:	9300      	str	r3, [sp, #0]
 8009ce8:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8009cec:	4643      	mov	r3, r8
 8009cee:	463a      	mov	r2, r7
 8009cf0:	4631      	mov	r1, r6
 8009cf2:	4620      	mov	r0, r4
 8009cf4:	47a8      	blx	r5
 8009cf6:	b007      	add	sp, #28
 8009cf8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009cfc:	2000a31e 	.word	0x2000a31e

08009d00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d04:	4604      	mov	r4, r0
 8009d06:	b08f      	sub	sp, #60	; 0x3c
 8009d08:	4610      	mov	r0, r2
 8009d0a:	460d      	mov	r5, r1
 8009d0c:	4691      	mov	r9, r2
 8009d0e:	461e      	mov	r6, r3
 8009d10:	f005 fc42 	bl	800f598 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009d14:	2800      	cmp	r0, #0
 8009d16:	f000 80b3 	beq.w	8009e80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x180>
 8009d1a:	6823      	ldr	r3, [r4, #0]
 8009d1c:	f8df b190 	ldr.w	fp, [pc, #400]	; 8009eb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>
 8009d20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d22:	f8df a190 	ldr.w	sl, [pc, #400]	; 8009eb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009d26:	4f5f      	ldr	r7, [pc, #380]	; (8009ea4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009d28:	4620      	mov	r0, r4
 8009d2a:	4798      	blx	r3
 8009d2c:	6823      	ldr	r3, [r4, #0]
 8009d2e:	4620      	mov	r0, r4
 8009d30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d32:	4798      	blx	r3
 8009d34:	f8bb 3000 	ldrh.w	r3, [fp]
 8009d38:	9300      	str	r3, [sp, #0]
 8009d3a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8009d3e:	f8ba 3000 	ldrh.w	r3, [sl]
 8009d42:	9301      	str	r3, [sp, #4]
 8009d44:	883b      	ldrh	r3, [r7, #0]
 8009d46:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009d4a:	9302      	str	r3, [sp, #8]
 8009d4c:	4b56      	ldr	r3, [pc, #344]	; (8009ea8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009d4e:	9304      	str	r3, [sp, #16]
 8009d50:	881a      	ldrh	r2, [r3, #0]
 8009d52:	9203      	str	r2, [sp, #12]
 8009d54:	4640      	mov	r0, r8
 8009d56:	f005 fcd9 	bl	800f70c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009d5a:	8038      	strh	r0, [r7, #0]
 8009d5c:	4640      	mov	r0, r8
 8009d5e:	f005 fd0f 	bl	800f780 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009d62:	9b04      	ldr	r3, [sp, #16]
 8009d64:	8018      	strh	r0, [r3, #0]
 8009d66:	4b51      	ldr	r3, [pc, #324]	; (8009eac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009d68:	781b      	ldrb	r3, [r3, #0]
 8009d6a:	2b00      	cmp	r3, #0
 8009d6c:	f040 808b 	bne.w	8009e86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x186>
 8009d70:	883b      	ldrh	r3, [r7, #0]
 8009d72:	f8ab 3000 	strh.w	r3, [fp]
 8009d76:	f8aa 0000 	strh.w	r0, [sl]
 8009d7a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009d7c:	9304      	str	r3, [sp, #16]
 8009d7e:	4648      	mov	r0, r9
 8009d80:	6c27      	ldr	r7, [r4, #64]	; 0x40
 8009d82:	f005 fc09 	bl	800f598 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009d86:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009d8a:	2200      	movs	r2, #0
 8009d8c:	4611      	mov	r1, r2
 8009d8e:	4628      	mov	r0, r5
 8009d90:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009d94:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009d98:	f7f8 fbbe 	bl	8002518 <_ZN8touchgfx8Drawable5setXYEss>
 8009d9c:	2301      	movs	r3, #1
 8009d9e:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009da2:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009da6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009daa:	2b00      	cmp	r3, #0
 8009dac:	dd71      	ble.n	8009e92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 8009dae:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009db2:	2b00      	cmp	r3, #0
 8009db4:	dd6d      	ble.n	8009e92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 8009db6:	462a      	mov	r2, r5
 8009db8:	ab0a      	add	r3, sp, #40	; 0x28
 8009dba:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009dbe:	6851      	ldr	r1, [r2, #4]
 8009dc0:	c303      	stmia	r3!, {r0, r1}
 8009dc2:	4631      	mov	r1, r6
 8009dc4:	a80a      	add	r0, sp, #40	; 0x28
 8009dc6:	f7ff fbeb 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8009dca:	4b36      	ldr	r3, [pc, #216]	; (8009ea4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009dcc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009dd0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009dd4:	4b34      	ldr	r3, [pc, #208]	; (8009ea8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009dd6:	aa0a      	add	r2, sp, #40	; 0x28
 8009dd8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009ddc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009de0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009de4:	ab08      	add	r3, sp, #32
 8009de6:	e883 0003 	stmia.w	r3, {r0, r1}
 8009dea:	2600      	movs	r6, #0
 8009dec:	4618      	mov	r0, r3
 8009dee:	a90c      	add	r1, sp, #48	; 0x30
 8009df0:	960c      	str	r6, [sp, #48]	; 0x30
 8009df2:	f7ff fbd5 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8009df6:	a807      	add	r0, sp, #28
 8009df8:	f005 fe1a 	bl	800fa30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009dfc:	4680      	mov	r8, r0
 8009dfe:	f7ff fea7 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 8009e02:	6802      	ldr	r2, [r0, #0]
 8009e04:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009e06:	4790      	blx	r2
 8009e08:	4580      	cmp	r8, r0
 8009e0a:	d049      	beq.n	8009ea0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>
 8009e0c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009e0e:	b150      	cbz	r0, 8009e26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 8009e10:	a807      	add	r0, sp, #28
 8009e12:	f005 fe0d 	bl	800fa30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009e16:	4606      	mov	r6, r0
 8009e18:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009e1a:	6803      	ldr	r3, [r0, #0]
 8009e1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e1e:	4798      	blx	r3
 8009e20:	1a33      	subs	r3, r6, r0
 8009e22:	4258      	negs	r0, r3
 8009e24:	4158      	adcs	r0, r3
 8009e26:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009e2a:	2600      	movs	r6, #0
 8009e2c:	682a      	ldr	r2, [r5, #0]
 8009e2e:	696b      	ldr	r3, [r5, #20]
 8009e30:	616e      	str	r6, [r5, #20]
 8009e32:	9305      	str	r3, [sp, #20]
 8009e34:	6892      	ldr	r2, [r2, #8]
 8009e36:	a908      	add	r1, sp, #32
 8009e38:	4628      	mov	r0, r5
 8009e3a:	4790      	blx	r2
 8009e3c:	9b05      	ldr	r3, [sp, #20]
 8009e3e:	616b      	str	r3, [r5, #20]
 8009e40:	4652      	mov	r2, sl
 8009e42:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009e46:	4649      	mov	r1, r9
 8009e48:	4628      	mov	r0, r5
 8009e4a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8009e4e:	f7f8 fb63 	bl	8002518 <_ZN8touchgfx8Drawable5setXYEss>
 8009e52:	9b04      	ldr	r3, [sp, #16]
 8009e54:	9a00      	ldr	r2, [sp, #0]
 8009e56:	e9c4 370f 	strd	r3, r7, [r4, #60]	; 0x3c
 8009e5a:	4b15      	ldr	r3, [pc, #84]	; (8009eb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009e5c:	801a      	strh	r2, [r3, #0]
 8009e5e:	4b15      	ldr	r3, [pc, #84]	; (8009eb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009e60:	9a01      	ldr	r2, [sp, #4]
 8009e62:	801a      	strh	r2, [r3, #0]
 8009e64:	4b0f      	ldr	r3, [pc, #60]	; (8009ea4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009e66:	9a02      	ldr	r2, [sp, #8]
 8009e68:	801a      	strh	r2, [r3, #0]
 8009e6a:	4b0f      	ldr	r3, [pc, #60]	; (8009ea8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009e6c:	9a03      	ldr	r2, [sp, #12]
 8009e6e:	801a      	strh	r2, [r3, #0]
 8009e70:	6823      	ldr	r3, [r4, #0]
 8009e72:	4620      	mov	r0, r4
 8009e74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e76:	4798      	blx	r3
 8009e78:	6823      	ldr	r3, [r4, #0]
 8009e7a:	4620      	mov	r0, r4
 8009e7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e7e:	4798      	blx	r3
 8009e80:	b00f      	add	sp, #60	; 0x3c
 8009e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e86:	883b      	ldrh	r3, [r7, #0]
 8009e88:	f8ab 0000 	strh.w	r0, [fp]
 8009e8c:	f8aa 3000 	strh.w	r3, [sl]
 8009e90:	e773      	b.n	8009d7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8009e92:	462a      	mov	r2, r5
 8009e94:	ab0a      	add	r3, sp, #40	; 0x28
 8009e96:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009e9a:	6851      	ldr	r1, [r2, #4]
 8009e9c:	c303      	stmia	r3!, {r0, r1}
 8009e9e:	e794      	b.n	8009dca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xca>
 8009ea0:	4630      	mov	r0, r6
 8009ea2:	e7c0      	b.n	8009e26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 8009ea4:	2000a318 	.word	0x2000a318
 8009ea8:	2000a31a 	.word	0x2000a31a
 8009eac:	2000a31c 	.word	0x2000a31c
 8009eb0:	2000a31e 	.word	0x2000a31e
 8009eb4:	2000a320 	.word	0x2000a320

08009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009eb8:	b510      	push	{r4, lr}
 8009eba:	4b07      	ldr	r3, [pc, #28]	; (8009ed8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009ebc:	781b      	ldrb	r3, [r3, #0]
 8009ebe:	4604      	mov	r4, r0
 8009ec0:	b13b      	cbz	r3, 8009ed2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009ec2:	6803      	ldr	r3, [r0, #0]
 8009ec4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ec6:	4798      	blx	r3
 8009ec8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009eca:	4283      	cmp	r3, r0
 8009ecc:	d101      	bne.n	8009ed2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009ece:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009ed0:	bd10      	pop	{r4, pc}
 8009ed2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009ed4:	e7fc      	b.n	8009ed0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009ed6:	bf00      	nop
 8009ed8:	2000a322 	.word	0x2000a322

08009edc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8009edc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ee0:	b088      	sub	sp, #32
 8009ee2:	461c      	mov	r4, r3
 8009ee4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009ee8:	2500      	movs	r5, #0
 8009eea:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 8009eee:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 8009ef2:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 8009ef6:	9503      	str	r5, [sp, #12]
 8009ef8:	e9cd 3100 	strd	r3, r1, [sp]
 8009efc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009f00:	f8ad 8014 	strh.w	r8, [sp, #20]
 8009f04:	4692      	mov	sl, r2
 8009f06:	4606      	mov	r6, r0
 8009f08:	f8ad 7016 	strh.w	r7, [sp, #22]
 8009f0c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009f10:	f88d 501c 	strb.w	r5, [sp, #28]
 8009f14:	f7ff ffd0 	bl	8009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009f18:	fb09 a404 	mla	r4, r9, r4, sl
 8009f1c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8009f20:	9404      	str	r4, [sp, #16]
 8009f22:	f8ad 901a 	strh.w	r9, [sp, #26]
 8009f26:	f88d 501e 	strb.w	r5, [sp, #30]
 8009f2a:	f88d 501d 	strb.w	r5, [sp, #29]
 8009f2e:	f1b8 0f00 	cmp.w	r8, #0
 8009f32:	d000      	beq.n	8009f36 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5a>
 8009f34:	b937      	cbnz	r7, 8009f44 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x68>
 8009f36:	4b0d      	ldr	r3, [pc, #52]	; (8009f6c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x90>)
 8009f38:	4a0d      	ldr	r2, [pc, #52]	; (8009f70 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8009f3a:	f44f 7101 	mov.w	r1, #516	; 0x204
 8009f3e:	480d      	ldr	r0, [pc, #52]	; (8009f74 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009f40:	f011 fab2 	bl	801b4a8 <__assert_func>
 8009f44:	6833      	ldr	r3, [r6, #0]
 8009f46:	9c00      	ldr	r4, [sp, #0]
 8009f48:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009f4a:	4630      	mov	r0, r6
 8009f4c:	4798      	blx	r3
 8009f4e:	4220      	tst	r0, r4
 8009f50:	d104      	bne.n	8009f5c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x80>
 8009f52:	4b09      	ldr	r3, [pc, #36]	; (8009f78 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009f54:	4a06      	ldr	r2, [pc, #24]	; (8009f70 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8009f56:	f240 2105 	movw	r1, #517	; 0x205
 8009f5a:	e7f0      	b.n	8009f3e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8009f5c:	6870      	ldr	r0, [r6, #4]
 8009f5e:	6803      	ldr	r3, [r0, #0]
 8009f60:	4669      	mov	r1, sp
 8009f62:	685b      	ldr	r3, [r3, #4]
 8009f64:	4798      	blx	r3
 8009f66:	b008      	add	sp, #32
 8009f68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009f6c:	0801de5b 	.word	0x0801de5b
 8009f70:	0801e0bb 	.word	0x0801e0bb
 8009f74:	0801e00d 	.word	0x0801e00d
 8009f78:	0801de93 	.word	0x0801de93

08009f7c <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f80:	b089      	sub	sp, #36	; 0x24
 8009f82:	2400      	movs	r4, #0
 8009f84:	461d      	mov	r5, r3
 8009f86:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009f8a:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 8009f8e:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8009f92:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8009f96:	9403      	str	r4, [sp, #12]
 8009f98:	468a      	mov	sl, r1
 8009f9a:	4693      	mov	fp, r2
 8009f9c:	4606      	mov	r6, r0
 8009f9e:	e9cd 3400 	strd	r3, r4, [sp]
 8009fa2:	f7ff ff89 	bl	8009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009fa6:	fb09 b505 	mla	r5, r9, r5, fp
 8009faa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009fae:	9504      	str	r5, [sp, #16]
 8009fb0:	f8ad 8014 	strh.w	r8, [sp, #20]
 8009fb4:	f8ad 7016 	strh.w	r7, [sp, #22]
 8009fb8:	f8ad 4018 	strh.w	r4, [sp, #24]
 8009fbc:	f8ad 901a 	strh.w	r9, [sp, #26]
 8009fc0:	f8cd a00c 	str.w	sl, [sp, #12]
 8009fc4:	f8ad 401c 	strh.w	r4, [sp, #28]
 8009fc8:	f88d 401e 	strb.w	r4, [sp, #30]
 8009fcc:	f1b8 0f00 	cmp.w	r8, #0
 8009fd0:	d000      	beq.n	8009fd4 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x58>
 8009fd2:	b937      	cbnz	r7, 8009fe2 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x66>
 8009fd4:	4b0d      	ldr	r3, [pc, #52]	; (800a00c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x90>)
 8009fd6:	4a0e      	ldr	r2, [pc, #56]	; (800a010 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 8009fd8:	f240 2119 	movw	r1, #537	; 0x219
 8009fdc:	480d      	ldr	r0, [pc, #52]	; (800a014 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8009fde:	f011 fa63 	bl	801b4a8 <__assert_func>
 8009fe2:	6833      	ldr	r3, [r6, #0]
 8009fe4:	9c00      	ldr	r4, [sp, #0]
 8009fe6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009fe8:	4630      	mov	r0, r6
 8009fea:	4798      	blx	r3
 8009fec:	4220      	tst	r0, r4
 8009fee:	d104      	bne.n	8009ffa <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x7e>
 8009ff0:	4b09      	ldr	r3, [pc, #36]	; (800a018 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009ff2:	4a07      	ldr	r2, [pc, #28]	; (800a010 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 8009ff4:	f240 211a 	movw	r1, #538	; 0x21a
 8009ff8:	e7f0      	b.n	8009fdc <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 8009ffa:	6870      	ldr	r0, [r6, #4]
 8009ffc:	6803      	ldr	r3, [r0, #0]
 8009ffe:	4669      	mov	r1, sp
 800a000:	685b      	ldr	r3, [r3, #4]
 800a002:	4798      	blx	r3
 800a004:	b009      	add	sp, #36	; 0x24
 800a006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a00a:	bf00      	nop
 800a00c:	0801ded8 	.word	0x0801ded8
 800a010:	0801e131 	.word	0x0801e131
 800a014:	0801e00d 	.word	0x0801e00d
 800a018:	0801df10 	.word	0x0801df10

0800a01c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a01c:	b510      	push	{r4, lr}
 800a01e:	4b0b      	ldr	r3, [pc, #44]	; (800a04c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800a020:	781b      	ldrb	r3, [r3, #0]
 800a022:	4604      	mov	r4, r0
 800a024:	b95b      	cbnz	r3, 800a03e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a026:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a02a:	2b02      	cmp	r3, #2
 800a02c:	d007      	beq.n	800a03e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a02e:	6840      	ldr	r0, [r0, #4]
 800a030:	f000 fb6c 	bl	800a70c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a034:	b118      	cbz	r0, 800a03e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a036:	6862      	ldr	r2, [r4, #4]
 800a038:	7a53      	ldrb	r3, [r2, #9]
 800a03a:	2b00      	cmp	r3, #0
 800a03c:	d0fc      	beq.n	800a038 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a03e:	f7f6 fe33 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a042:	4620      	mov	r0, r4
 800a044:	f7ff ff38 	bl	8009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a048:	bd10      	pop	{r4, pc}
 800a04a:	bf00      	nop
 800a04c:	2000a322 	.word	0x2000a322

0800a050 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800a050:	b508      	push	{r3, lr}
 800a052:	290d      	cmp	r1, #13
 800a054:	d817      	bhi.n	800a086 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800a056:	e8df f001 	tbb	[pc, r1]
 800a05a:	090b      	.short	0x090b
 800a05c:	0d0d0d07 	.word	0x0d0d0d07
 800a060:	1414140d 	.word	0x1414140d
 800a064:	0d0d1414 	.word	0x0d0d1414
 800a068:	2020      	movs	r0, #32
 800a06a:	bd08      	pop	{r3, pc}
 800a06c:	2018      	movs	r0, #24
 800a06e:	e7fc      	b.n	800a06a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a070:	2010      	movs	r0, #16
 800a072:	e7fa      	b.n	800a06a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a074:	4b05      	ldr	r3, [pc, #20]	; (800a08c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800a076:	4a06      	ldr	r2, [pc, #24]	; (800a090 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800a078:	4806      	ldr	r0, [pc, #24]	; (800a094 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800a07a:	f240 2177 	movw	r1, #631	; 0x277
 800a07e:	f011 fa13 	bl	801b4a8 <__assert_func>
 800a082:	2008      	movs	r0, #8
 800a084:	e7f1      	b.n	800a06a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a086:	2000      	movs	r0, #0
 800a088:	e7ef      	b.n	800a06a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a08a:	bf00      	nop
 800a08c:	0801e089 	.word	0x0801e089
 800a090:	0801e44a 	.word	0x0801e44a
 800a094:	0801e00d 	.word	0x0801e00d

0800a098 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800a098:	b570      	push	{r4, r5, r6, lr}
 800a09a:	460d      	mov	r5, r1
 800a09c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800a0a0:	4616      	mov	r6, r2
 800a0a2:	461c      	mov	r4, r3
 800a0a4:	f7ff ffd4 	bl	800a050 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800a0a8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800a0ac:	10c0      	asrs	r0, r0, #3
 800a0ae:	fb06 5101 	mla	r1, r6, r1, r5
 800a0b2:	fb00 4001 	mla	r0, r0, r1, r4
 800a0b6:	bd70      	pop	{r4, r5, r6, pc}

0800a0b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800a0b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a0bc:	b08a      	sub	sp, #40	; 0x28
 800a0be:	f04f 0c00 	mov.w	ip, #0
 800a0c2:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800a0c6:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800a0ca:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800a0ce:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800a0d2:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 800a0d6:	f8cd c014 	str.w	ip, [sp, #20]
 800a0da:	2d0b      	cmp	r5, #11
 800a0dc:	4604      	mov	r4, r0
 800a0de:	469a      	mov	sl, r3
 800a0e0:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800a0e4:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a0e8:	d129      	bne.n	800a13e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x86>
 800a0ea:	2080      	movs	r0, #128	; 0x80
 800a0ec:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a0f0:	9204      	str	r2, [sp, #16]
 800a0f2:	4620      	mov	r0, r4
 800a0f4:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800a0f8:	f8ad 2020 	strh.w	r2, [sp, #32]
 800a0fc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a100:	f8ad 701c 	strh.w	r7, [sp, #28]
 800a104:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a108:	f7ff fed6 	bl	8009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a10c:	e9cd 9800 	strd	r9, r8, [sp]
 800a110:	4603      	mov	r3, r0
 800a112:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800a116:	4651      	mov	r1, sl
 800a118:	4620      	mov	r0, r4
 800a11a:	f7ff ffbd 	bl	800a098 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a11e:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 800a122:	9006      	str	r0, [sp, #24]
 800a124:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a128:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 800a12c:	b107      	cbz	r7, 800a130 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x78>
 800a12e:	b9d6      	cbnz	r6, 800a166 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xae>
 800a130:	4b17      	ldr	r3, [pc, #92]	; (800a190 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800a132:	4a18      	ldr	r2, [pc, #96]	; (800a194 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800a134:	f240 11cf 	movw	r1, #463	; 0x1cf
 800a138:	4817      	ldr	r0, [pc, #92]	; (800a198 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe0>)
 800a13a:	f011 f9b5 	bl	801b4a8 <__assert_func>
 800a13e:	2d02      	cmp	r5, #2
 800a140:	d108      	bne.n	800a154 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x9c>
 800a142:	2bff      	cmp	r3, #255	; 0xff
 800a144:	d104      	bne.n	800a150 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x98>
 800a146:	2800      	cmp	r0, #0
 800a148:	bf14      	ite	ne
 800a14a:	2040      	movne	r0, #64	; 0x40
 800a14c:	2020      	moveq	r0, #32
 800a14e:	e7cd      	b.n	800a0ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800a150:	2040      	movs	r0, #64	; 0x40
 800a152:	e7cb      	b.n	800a0ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800a154:	2bff      	cmp	r3, #255	; 0xff
 800a156:	d104      	bne.n	800a162 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xaa>
 800a158:	2800      	cmp	r0, #0
 800a15a:	bf14      	ite	ne
 800a15c:	2004      	movne	r0, #4
 800a15e:	2001      	moveq	r0, #1
 800a160:	e7c4      	b.n	800a0ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800a162:	2004      	movs	r0, #4
 800a164:	e7c2      	b.n	800a0ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800a166:	6823      	ldr	r3, [r4, #0]
 800a168:	9d02      	ldr	r5, [sp, #8]
 800a16a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a16c:	4620      	mov	r0, r4
 800a16e:	4798      	blx	r3
 800a170:	4228      	tst	r0, r5
 800a172:	d104      	bne.n	800a17e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc6>
 800a174:	4b09      	ldr	r3, [pc, #36]	; (800a19c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe4>)
 800a176:	4a07      	ldr	r2, [pc, #28]	; (800a194 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800a178:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800a17c:	e7dc      	b.n	800a138 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x80>
 800a17e:	6860      	ldr	r0, [r4, #4]
 800a180:	6803      	ldr	r3, [r0, #0]
 800a182:	a902      	add	r1, sp, #8
 800a184:	685b      	ldr	r3, [r3, #4]
 800a186:	4798      	blx	r3
 800a188:	b00a      	add	sp, #40	; 0x28
 800a18a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a18e:	bf00      	nop
 800a190:	0801de5b 	.word	0x0801de5b
 800a194:	0801e2e4 	.word	0x0801e2e4
 800a198:	0801e00d 	.word	0x0801e00d
 800a19c:	0801de93 	.word	0x0801de93

0800a1a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800a1a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1a4:	b08b      	sub	sp, #44	; 0x2c
 800a1a6:	469b      	mov	fp, r3
 800a1a8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800a1ac:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800a1b0:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800a1b4:	2fff      	cmp	r7, #255	; 0xff
 800a1b6:	bf14      	ite	ne
 800a1b8:	2308      	movne	r3, #8
 800a1ba:	2302      	moveq	r3, #2
 800a1bc:	2600      	movs	r6, #0
 800a1be:	4604      	mov	r4, r0
 800a1c0:	4689      	mov	r9, r1
 800a1c2:	4692      	mov	sl, r2
 800a1c4:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800a1c8:	9605      	str	r6, [sp, #20]
 800a1ca:	f7ff fe75 	bl	8009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a1ce:	e9cd 8500 	strd	r8, r5, [sp]
 800a1d2:	4603      	mov	r3, r0
 800a1d4:	465a      	mov	r2, fp
 800a1d6:	4651      	mov	r1, sl
 800a1d8:	4620      	mov	r0, r4
 800a1da:	f7ff ff5d 	bl	800a098 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a1de:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a1e2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a1e6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a1ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a1ee:	6823      	ldr	r3, [r4, #0]
 800a1f0:	9006      	str	r0, [sp, #24]
 800a1f2:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a1f6:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800a1fa:	f8ad 6020 	strh.w	r6, [sp, #32]
 800a1fe:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 800a202:	f8cd 9014 	str.w	r9, [sp, #20]
 800a206:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800a20a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a20c:	9d02      	ldr	r5, [sp, #8]
 800a20e:	4620      	mov	r0, r4
 800a210:	4798      	blx	r3
 800a212:	4228      	tst	r0, r5
 800a214:	d106      	bne.n	800a224 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800a216:	4b07      	ldr	r3, [pc, #28]	; (800a234 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800a218:	4a07      	ldr	r2, [pc, #28]	; (800a238 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800a21a:	4808      	ldr	r0, [pc, #32]	; (800a23c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800a21c:	f240 212e 	movw	r1, #558	; 0x22e
 800a220:	f011 f942 	bl	801b4a8 <__assert_func>
 800a224:	6860      	ldr	r0, [r4, #4]
 800a226:	6803      	ldr	r3, [r0, #0]
 800a228:	a902      	add	r1, sp, #8
 800a22a:	685b      	ldr	r3, [r3, #4]
 800a22c:	4798      	blx	r3
 800a22e:	b00b      	add	sp, #44	; 0x2c
 800a230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a234:	0801de93 	.word	0x0801de93
 800a238:	0801e3b5 	.word	0x0801e3b5
 800a23c:	0801e00d 	.word	0x0801e00d

0800a240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a240:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a244:	461f      	mov	r7, r3
 800a246:	4b0b      	ldr	r3, [pc, #44]	; (800a274 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a248:	460d      	mov	r5, r1
 800a24a:	f8b3 8000 	ldrh.w	r8, [r3]
 800a24e:	4616      	mov	r6, r2
 800a250:	4604      	mov	r4, r0
 800a252:	f7ff fc7d 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 800a256:	6803      	ldr	r3, [r0, #0]
 800a258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a25a:	4798      	blx	r3
 800a25c:	463b      	mov	r3, r7
 800a25e:	e9cd 8000 	strd	r8, r0, [sp]
 800a262:	4632      	mov	r2, r6
 800a264:	4629      	mov	r1, r5
 800a266:	4620      	mov	r0, r4
 800a268:	f7ff ff16 	bl	800a098 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a26c:	b002      	add	sp, #8
 800a26e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a272:	bf00      	nop
 800a274:	2000a31e 	.word	0x2000a31e

0800a278 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800a278:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a27c:	b088      	sub	sp, #32
 800a27e:	4698      	mov	r8, r3
 800a280:	2300      	movs	r3, #0
 800a282:	9303      	str	r3, [sp, #12]
 800a284:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a288:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800a28c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a290:	f8ad 6014 	strh.w	r6, [sp, #20]
 800a294:	e9cd 3100 	strd	r3, r1, [sp]
 800a298:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a29c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a2a0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800a2a4:	f88d 301c 	strb.w	r3, [sp, #28]
 800a2a8:	4617      	mov	r7, r2
 800a2aa:	4604      	mov	r4, r0
 800a2ac:	f8ad 5016 	strh.w	r5, [sp, #22]
 800a2b0:	f7ff fe02 	bl	8009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a2b4:	4642      	mov	r2, r8
 800a2b6:	4603      	mov	r3, r0
 800a2b8:	4639      	mov	r1, r7
 800a2ba:	4620      	mov	r0, r4
 800a2bc:	f7ff ffc0 	bl	800a240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a2c0:	4b16      	ldr	r3, [pc, #88]	; (800a31c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800a2c2:	9004      	str	r0, [sp, #16]
 800a2c4:	881b      	ldrh	r3, [r3, #0]
 800a2c6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a2ca:	f7ff fc41 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 800a2ce:	6803      	ldr	r3, [r0, #0]
 800a2d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a2d2:	4798      	blx	r3
 800a2d4:	f88d 001e 	strb.w	r0, [sp, #30]
 800a2d8:	f88d 001d 	strb.w	r0, [sp, #29]
 800a2dc:	b106      	cbz	r6, 800a2e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800a2de:	b935      	cbnz	r5, 800a2ee <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800a2e0:	4b0f      	ldr	r3, [pc, #60]	; (800a320 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800a2e2:	4a10      	ldr	r2, [pc, #64]	; (800a324 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a2e4:	f44f 71f6 	mov.w	r1, #492	; 0x1ec
 800a2e8:	480f      	ldr	r0, [pc, #60]	; (800a328 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800a2ea:	f011 f8dd 	bl	801b4a8 <__assert_func>
 800a2ee:	6823      	ldr	r3, [r4, #0]
 800a2f0:	9d00      	ldr	r5, [sp, #0]
 800a2f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a2f4:	4620      	mov	r0, r4
 800a2f6:	4798      	blx	r3
 800a2f8:	4228      	tst	r0, r5
 800a2fa:	d104      	bne.n	800a306 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800a2fc:	4b0b      	ldr	r3, [pc, #44]	; (800a32c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800a2fe:	4a09      	ldr	r2, [pc, #36]	; (800a324 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a300:	f240 11ed 	movw	r1, #493	; 0x1ed
 800a304:	e7f0      	b.n	800a2e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800a306:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a308:	6860      	ldr	r0, [r4, #4]
 800a30a:	9303      	str	r3, [sp, #12]
 800a30c:	6803      	ldr	r3, [r0, #0]
 800a30e:	4669      	mov	r1, sp
 800a310:	685b      	ldr	r3, [r3, #4]
 800a312:	4798      	blx	r3
 800a314:	b008      	add	sp, #32
 800a316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a31a:	bf00      	nop
 800a31c:	2000a31e 	.word	0x2000a31e
 800a320:	0801de5b 	.word	0x0801de5b
 800a324:	0801e196 	.word	0x0801e196
 800a328:	0801e00d 	.word	0x0801e00d
 800a32c:	0801de93 	.word	0x0801de93

0800a330 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a330:	b570      	push	{r4, r5, r6, lr}
 800a332:	b08a      	sub	sp, #40	; 0x28
 800a334:	466b      	mov	r3, sp
 800a336:	e883 0006 	stmia.w	r3, {r1, r2}
 800a33a:	4b20      	ldr	r3, [pc, #128]	; (800a3bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800a33c:	781b      	ldrb	r3, [r3, #0]
 800a33e:	4604      	mov	r4, r0
 800a340:	b933      	cbnz	r3, 800a350 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a342:	4b1f      	ldr	r3, [pc, #124]	; (800a3c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a344:	4a1f      	ldr	r2, [pc, #124]	; (800a3c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a346:	4820      	ldr	r0, [pc, #128]	; (800a3c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a348:	f240 213f 	movw	r1, #575	; 0x23f
 800a34c:	f011 f8ac 	bl	801b4a8 <__assert_func>
 800a350:	2300      	movs	r3, #0
 800a352:	9305      	str	r3, [sp, #20]
 800a354:	2301      	movs	r3, #1
 800a356:	9302      	str	r3, [sp, #8]
 800a358:	6803      	ldr	r3, [r0, #0]
 800a35a:	f8bd 5000 	ldrh.w	r5, [sp]
 800a35e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a360:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800a364:	4798      	blx	r3
 800a366:	4632      	mov	r2, r6
 800a368:	4629      	mov	r1, r5
 800a36a:	4603      	mov	r3, r0
 800a36c:	4620      	mov	r0, r4
 800a36e:	f7ff ff67 	bl	800a240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a372:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a374:	9306      	str	r3, [sp, #24]
 800a376:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a37a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a37e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a382:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a386:	4b11      	ldr	r3, [pc, #68]	; (800a3cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a388:	9003      	str	r0, [sp, #12]
 800a38a:	881b      	ldrh	r3, [r3, #0]
 800a38c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a390:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a394:	f7ff fbdc 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 800a398:	6803      	ldr	r3, [r0, #0]
 800a39a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a39c:	4798      	blx	r3
 800a39e:	23ff      	movs	r3, #255	; 0xff
 800a3a0:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a3a4:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a3a8:	6860      	ldr	r0, [r4, #4]
 800a3aa:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a3ae:	6803      	ldr	r3, [r0, #0]
 800a3b0:	a902      	add	r1, sp, #8
 800a3b2:	685b      	ldr	r3, [r3, #4]
 800a3b4:	4798      	blx	r3
 800a3b6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a3b8:	b00a      	add	sp, #40	; 0x28
 800a3ba:	bd70      	pop	{r4, r5, r6, pc}
 800a3bc:	2000a323 	.word	0x2000a323
 800a3c0:	0801df5a 	.word	0x0801df5a
 800a3c4:	0801e23a 	.word	0x0801e23a
 800a3c8:	0801e00d 	.word	0x0801e00d
 800a3cc:	2000a31e 	.word	0x2000a31e

0800a3d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a3d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a3d2:	b08b      	sub	sp, #44	; 0x2c
 800a3d4:	466d      	mov	r5, sp
 800a3d6:	e885 0006 	stmia.w	r5, {r1, r2}
 800a3da:	461d      	mov	r5, r3
 800a3dc:	2300      	movs	r3, #0
 800a3de:	9305      	str	r3, [sp, #20]
 800a3e0:	2301      	movs	r3, #1
 800a3e2:	9302      	str	r3, [sp, #8]
 800a3e4:	6803      	ldr	r3, [r0, #0]
 800a3e6:	f8bd 6000 	ldrh.w	r6, [sp]
 800a3ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3ec:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a3f0:	4604      	mov	r4, r0
 800a3f2:	4798      	blx	r3
 800a3f4:	463a      	mov	r2, r7
 800a3f6:	4631      	mov	r1, r6
 800a3f8:	4603      	mov	r3, r0
 800a3fa:	4620      	mov	r0, r4
 800a3fc:	f7ff ff20 	bl	800a240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a400:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a404:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a408:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a40c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a410:	4b0e      	ldr	r3, [pc, #56]	; (800a44c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800a412:	9003      	str	r0, [sp, #12]
 800a414:	881b      	ldrh	r3, [r3, #0]
 800a416:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a41a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a41c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a420:	9506      	str	r5, [sp, #24]
 800a422:	f7ff fb95 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 800a426:	6803      	ldr	r3, [r0, #0]
 800a428:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a42a:	4798      	blx	r3
 800a42c:	23ff      	movs	r3, #255	; 0xff
 800a42e:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a432:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a436:	6860      	ldr	r0, [r4, #4]
 800a438:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a43c:	6803      	ldr	r3, [r0, #0]
 800a43e:	a902      	add	r1, sp, #8
 800a440:	685b      	ldr	r3, [r3, #4]
 800a442:	4798      	blx	r3
 800a444:	4628      	mov	r0, r5
 800a446:	b00b      	add	sp, #44	; 0x2c
 800a448:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a44a:	bf00      	nop
 800a44c:	2000a31e 	.word	0x2000a31e

0800a450 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a450:	b570      	push	{r4, r5, r6, lr}
 800a452:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a456:	4604      	mov	r4, r0
 800a458:	b19b      	cbz	r3, 800a482 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a45a:	2002      	movs	r0, #2
 800a45c:	f7f6 f9b2 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a460:	2300      	movs	r3, #0
 800a462:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a466:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a46a:	6823      	ldr	r3, [r4, #0]
 800a46c:	4620      	mov	r0, r4
 800a46e:	f8d3 50ac 	ldr.w	r5, [r3, #172]	; 0xac
 800a472:	f7ff fd21 	bl	8009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a476:	462b      	mov	r3, r5
 800a478:	4601      	mov	r1, r0
 800a47a:	4620      	mov	r0, r4
 800a47c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a480:	4718      	bx	r3
 800a482:	bd70      	pop	{r4, r5, r6, pc}

0800a484 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a484:	b570      	push	{r4, r5, r6, lr}
 800a486:	4605      	mov	r5, r0
 800a488:	460c      	mov	r4, r1
 800a48a:	2003      	movs	r0, #3
 800a48c:	b149      	cbz	r1, 800a4a2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a48e:	f7f6 f961 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a492:	6928      	ldr	r0, [r5, #16]
 800a494:	b168      	cbz	r0, 800a4b2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a496:	6803      	ldr	r3, [r0, #0]
 800a498:	695b      	ldr	r3, [r3, #20]
 800a49a:	2101      	movs	r1, #1
 800a49c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4a0:	4718      	bx	r3
 800a4a2:	f7f6 f973 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a4a6:	6928      	ldr	r0, [r5, #16]
 800a4a8:	b118      	cbz	r0, 800a4b2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a4aa:	6803      	ldr	r3, [r0, #0]
 800a4ac:	4621      	mov	r1, r4
 800a4ae:	695b      	ldr	r3, [r3, #20]
 800a4b0:	e7f4      	b.n	800a49c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a4b2:	bd70      	pop	{r4, r5, r6, pc}

0800a4b4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a4b4:	4770      	bx	lr

0800a4b6 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a4b6:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a4ba:	1a13      	subs	r3, r2, r0
 800a4bc:	4258      	negs	r0, r3
 800a4be:	4158      	adcs	r0, r3
 800a4c0:	4770      	bx	lr

0800a4c2 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a4c2:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a4c6:	1a9b      	subs	r3, r3, r2
 800a4c8:	2b00      	cmp	r3, #0
 800a4ca:	bfdc      	itt	le
 800a4cc:	6882      	ldrle	r2, [r0, #8]
 800a4ce:	189b      	addle	r3, r3, r2
 800a4d0:	2b01      	cmp	r3, #1
 800a4d2:	bfcc      	ite	gt
 800a4d4:	2000      	movgt	r0, #0
 800a4d6:	2001      	movle	r0, #1
 800a4d8:	4770      	bx	lr

0800a4da <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a4da:	6902      	ldr	r2, [r0, #16]
 800a4dc:	6840      	ldr	r0, [r0, #4]
 800a4de:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a4e2:	4770      	bx	lr

0800a4e4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a4e4:	6803      	ldr	r3, [r0, #0]
 800a4e6:	691b      	ldr	r3, [r3, #16]
 800a4e8:	4718      	bx	r3

0800a4ea <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a4ea:	4770      	bx	lr

0800a4ec <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a4ec:	4770      	bx	lr

0800a4ee <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a4ee:	4770      	bx	lr

0800a4f0 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a4f0:	b570      	push	{r4, r5, r6, lr}
 800a4f2:	2301      	movs	r3, #1
 800a4f4:	7203      	strb	r3, [r0, #8]
 800a4f6:	4604      	mov	r4, r0
 800a4f8:	6840      	ldr	r0, [r0, #4]
 800a4fa:	6803      	ldr	r3, [r0, #0]
 800a4fc:	699b      	ldr	r3, [r3, #24]
 800a4fe:	4798      	blx	r3
 800a500:	6803      	ldr	r3, [r0, #0]
 800a502:	2b40      	cmp	r3, #64	; 0x40
 800a504:	4605      	mov	r5, r0
 800a506:	d039      	beq.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a508:	d815      	bhi.n	800a536 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a50a:	2b04      	cmp	r3, #4
 800a50c:	d022      	beq.n	800a554 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a50e:	d808      	bhi.n	800a522 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a510:	2b01      	cmp	r3, #1
 800a512:	d033      	beq.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a514:	2b02      	cmp	r3, #2
 800a516:	d108      	bne.n	800a52a <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800a518:	6823      	ldr	r3, [r4, #0]
 800a51a:	4620      	mov	r0, r4
 800a51c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a51e:	4798      	blx	r3
 800a520:	e025      	b.n	800a56e <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800a522:	2b08      	cmp	r3, #8
 800a524:	d01e      	beq.n	800a564 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800a526:	2b20      	cmp	r3, #32
 800a528:	d028      	beq.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a52a:	4b17      	ldr	r3, [pc, #92]	; (800a588 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800a52c:	4a17      	ldr	r2, [pc, #92]	; (800a58c <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800a52e:	4818      	ldr	r0, [pc, #96]	; (800a590 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800a530:	218b      	movs	r1, #139	; 0x8b
 800a532:	f010 ffb9 	bl	801b4a8 <__assert_func>
 800a536:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a53a:	d01f      	beq.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a53c:	d804      	bhi.n	800a548 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800a53e:	2b80      	cmp	r3, #128	; 0x80
 800a540:	d01c      	beq.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a542:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a546:	e7ef      	b.n	800a528 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800a548:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a54c:	d016      	beq.n	800a57c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a54e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a552:	e7e0      	b.n	800a516 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a554:	6823      	ldr	r3, [r4, #0]
 800a556:	7f01      	ldrb	r1, [r0, #28]
 800a558:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a55a:	4620      	mov	r0, r4
 800a55c:	4798      	blx	r3
 800a55e:	6823      	ldr	r3, [r4, #0]
 800a560:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a562:	e006      	b.n	800a572 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a564:	6823      	ldr	r3, [r4, #0]
 800a566:	7f01      	ldrb	r1, [r0, #28]
 800a568:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a56a:	4620      	mov	r0, r4
 800a56c:	4798      	blx	r3
 800a56e:	6823      	ldr	r3, [r4, #0]
 800a570:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a572:	4629      	mov	r1, r5
 800a574:	4620      	mov	r0, r4
 800a576:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a57a:	4718      	bx	r3
 800a57c:	6823      	ldr	r3, [r4, #0]
 800a57e:	4620      	mov	r0, r4
 800a580:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a582:	4798      	blx	r3
 800a584:	e7eb      	b.n	800a55e <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a586:	bf00      	nop
 800a588:	0801e493 	.word	0x0801e493
 800a58c:	0801e554 	.word	0x0801e554
 800a590:	0801e4b8 	.word	0x0801e4b8

0800a594 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a594:	b570      	push	{r4, r5, r6, lr}
 800a596:	4604      	mov	r4, r0
 800a598:	460e      	mov	r6, r1
 800a59a:	6860      	ldr	r0, [r4, #4]
 800a59c:	6803      	ldr	r3, [r0, #0]
 800a59e:	685b      	ldr	r3, [r3, #4]
 800a5a0:	4798      	blx	r3
 800a5a2:	2800      	cmp	r0, #0
 800a5a4:	d1f9      	bne.n	800a59a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a5a6:	4d0d      	ldr	r5, [pc, #52]	; (800a5dc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a5a8:	6828      	ldr	r0, [r5, #0]
 800a5aa:	6803      	ldr	r3, [r0, #0]
 800a5ac:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a5ae:	4798      	blx	r3
 800a5b0:	f7f6 fb88 	bl	8000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a5b4:	6828      	ldr	r0, [r5, #0]
 800a5b6:	2101      	movs	r1, #1
 800a5b8:	f7ff ff7c 	bl	800a4b4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a5bc:	6860      	ldr	r0, [r4, #4]
 800a5be:	6803      	ldr	r3, [r0, #0]
 800a5c0:	4631      	mov	r1, r6
 800a5c2:	689b      	ldr	r3, [r3, #8]
 800a5c4:	4798      	blx	r3
 800a5c6:	6823      	ldr	r3, [r4, #0]
 800a5c8:	4620      	mov	r0, r4
 800a5ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5cc:	4798      	blx	r3
 800a5ce:	6828      	ldr	r0, [r5, #0]
 800a5d0:	6803      	ldr	r3, [r0, #0]
 800a5d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a5d6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a5d8:	4718      	bx	r3
 800a5da:	bf00      	nop
 800a5dc:	2000a324 	.word	0x2000a324

0800a5e0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a5e0:	b508      	push	{r3, lr}
 800a5e2:	f7f6 fb61 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a5e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a5ea:	f7f6 bb65 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a5ee <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a5ee:	b510      	push	{r4, lr}
 800a5f0:	2114      	movs	r1, #20
 800a5f2:	4604      	mov	r4, r0
 800a5f4:	f010 ff29 	bl	801b44a <_ZdlPvj>
 800a5f8:	4620      	mov	r0, r4
 800a5fa:	bd10      	pop	{r4, pc}

0800a5fc <_ZN8touchgfx13DMA_Interface5startEv>:
 800a5fc:	b510      	push	{r4, lr}
 800a5fe:	4604      	mov	r4, r0
 800a600:	6840      	ldr	r0, [r0, #4]
 800a602:	6803      	ldr	r3, [r0, #0]
 800a604:	681b      	ldr	r3, [r3, #0]
 800a606:	4798      	blx	r3
 800a608:	b948      	cbnz	r0, 800a61e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a60a:	7a63      	ldrb	r3, [r4, #9]
 800a60c:	b13b      	cbz	r3, 800a61e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a60e:	7a23      	ldrb	r3, [r4, #8]
 800a610:	b92b      	cbnz	r3, 800a61e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a612:	6823      	ldr	r3, [r4, #0]
 800a614:	4620      	mov	r0, r4
 800a616:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a61c:	4718      	bx	r3
 800a61e:	bd10      	pop	{r4, pc}

0800a620 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a620:	b510      	push	{r4, lr}
 800a622:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800a626:	1b12      	subs	r2, r2, r4
 800a628:	2a00      	cmp	r2, #0
 800a62a:	bfdc      	itt	le
 800a62c:	6883      	ldrle	r3, [r0, #8]
 800a62e:	18d2      	addle	r2, r2, r3
 800a630:	2a01      	cmp	r2, #1
 800a632:	dd18      	ble.n	800a666 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800a634:	6843      	ldr	r3, [r0, #4]
 800a636:	f101 021c 	add.w	r2, r1, #28
 800a63a:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800a63e:	f851 4b04 	ldr.w	r4, [r1], #4
 800a642:	f843 4b04 	str.w	r4, [r3], #4
 800a646:	4291      	cmp	r1, r2
 800a648:	d1f9      	bne.n	800a63e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800a64a:	880a      	ldrh	r2, [r1, #0]
 800a64c:	801a      	strh	r2, [r3, #0]
 800a64e:	788a      	ldrb	r2, [r1, #2]
 800a650:	709a      	strb	r2, [r3, #2]
 800a652:	68c3      	ldr	r3, [r0, #12]
 800a654:	6882      	ldr	r2, [r0, #8]
 800a656:	f3bf 8f5b 	dmb	ish
 800a65a:	3301      	adds	r3, #1
 800a65c:	429a      	cmp	r2, r3
 800a65e:	bfd8      	it	le
 800a660:	1a9b      	suble	r3, r3, r2
 800a662:	60c3      	str	r3, [r0, #12]
 800a664:	bd10      	pop	{r4, pc}
 800a666:	4b03      	ldr	r3, [pc, #12]	; (800a674 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a668:	4a03      	ldr	r2, [pc, #12]	; (800a678 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a66a:	4804      	ldr	r0, [pc, #16]	; (800a67c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800a66c:	2139      	movs	r1, #57	; 0x39
 800a66e:	f010 ff1b 	bl	801b4a8 <__assert_func>
 800a672:	bf00      	nop
 800a674:	0801e4de 	.word	0x0801e4de
 800a678:	0801e584 	.word	0x0801e584
 800a67c:	0801e4b8 	.word	0x0801e4b8

0800a680 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a680:	b510      	push	{r4, lr}
 800a682:	6803      	ldr	r3, [r0, #0]
 800a684:	681b      	ldr	r3, [r3, #0]
 800a686:	4604      	mov	r4, r0
 800a688:	4798      	blx	r3
 800a68a:	b128      	cbz	r0, 800a698 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a68c:	4b07      	ldr	r3, [pc, #28]	; (800a6ac <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a68e:	4a08      	ldr	r2, [pc, #32]	; (800a6b0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a690:	4808      	ldr	r0, [pc, #32]	; (800a6b4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a692:	213f      	movs	r1, #63	; 0x3f
 800a694:	f010 ff08 	bl	801b4a8 <__assert_func>
 800a698:	6923      	ldr	r3, [r4, #16]
 800a69a:	68a2      	ldr	r2, [r4, #8]
 800a69c:	f3bf 8f5b 	dmb	ish
 800a6a0:	3301      	adds	r3, #1
 800a6a2:	429a      	cmp	r2, r3
 800a6a4:	bfd8      	it	le
 800a6a6:	1a9b      	suble	r3, r3, r2
 800a6a8:	6123      	str	r3, [r4, #16]
 800a6aa:	bd10      	pop	{r4, pc}
 800a6ac:	0801e501 	.word	0x0801e501
 800a6b0:	0801e5d2 	.word	0x0801e5d2
 800a6b4:	0801e4b8 	.word	0x0801e4b8

0800a6b8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a6b8:	b570      	push	{r4, r5, r6, lr}
 800a6ba:	4604      	mov	r4, r0
 800a6bc:	6840      	ldr	r0, [r0, #4]
 800a6be:	6803      	ldr	r3, [r0, #0]
 800a6c0:	681b      	ldr	r3, [r3, #0]
 800a6c2:	4798      	blx	r3
 800a6c4:	4605      	mov	r5, r0
 800a6c6:	b930      	cbnz	r0, 800a6d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a6c8:	7a23      	ldrb	r3, [r4, #8]
 800a6ca:	b123      	cbz	r3, 800a6d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a6cc:	6860      	ldr	r0, [r4, #4]
 800a6ce:	6803      	ldr	r3, [r0, #0]
 800a6d0:	695b      	ldr	r3, [r3, #20]
 800a6d2:	4798      	blx	r3
 800a6d4:	7225      	strb	r5, [r4, #8]
 800a6d6:	6860      	ldr	r0, [r4, #4]
 800a6d8:	6803      	ldr	r3, [r0, #0]
 800a6da:	681b      	ldr	r3, [r3, #0]
 800a6dc:	4798      	blx	r3
 800a6de:	b928      	cbnz	r0, 800a6ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a6e0:	6823      	ldr	r3, [r4, #0]
 800a6e2:	4620      	mov	r0, r4
 800a6e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a6e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6ea:	4718      	bx	r3
 800a6ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6f0:	f7f6 baf0 	b.w	8000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a6f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a6f4:	b510      	push	{r4, lr}
 800a6f6:	4c04      	ldr	r4, [pc, #16]	; (800a708 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a6f8:	6082      	str	r2, [r0, #8]
 800a6fa:	2200      	movs	r2, #0
 800a6fc:	e9c0 4100 	strd	r4, r1, [r0]
 800a700:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a704:	bd10      	pop	{r4, pc}
 800a706:	bf00      	nop
 800a708:	0801e538 	.word	0x0801e538

0800a70c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a70c:	6840      	ldr	r0, [r0, #4]
 800a70e:	6803      	ldr	r3, [r0, #0]
 800a710:	681b      	ldr	r3, [r3, #0]
 800a712:	4718      	bx	r3

0800a714 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800a714:	2200      	movs	r2, #0
 800a716:	8002      	strh	r2, [r0, #0]
 800a718:	8042      	strh	r2, [r0, #2]
 800a71a:	8082      	strh	r2, [r0, #4]
 800a71c:	80c2      	strh	r2, [r0, #6]
 800a71e:	4770      	bx	lr

0800a720 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800a720:	b570      	push	{r4, r5, r6, lr}
 800a722:	6803      	ldr	r3, [r0, #0]
 800a724:	4604      	mov	r4, r0
 800a726:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a728:	4615      	mov	r5, r2
 800a72a:	4798      	blx	r3
 800a72c:	6823      	ldr	r3, [r4, #0]
 800a72e:	4629      	mov	r1, r5
 800a730:	4620      	mov	r0, r4
 800a732:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a734:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a738:	4718      	bx	r3

0800a73a <_ZN8touchgfx8TextAreaD1Ev>:
 800a73a:	4770      	bx	lr

0800a73c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a73c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a73e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a740:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a744:	4299      	cmp	r1, r3
 800a746:	d029      	beq.n	800a79c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800a748:	4b15      	ldr	r3, [pc, #84]	; (800a7a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a74a:	681b      	ldr	r3, [r3, #0]
 800a74c:	b92b      	cbnz	r3, 800a75a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800a74e:	4b15      	ldr	r3, [pc, #84]	; (800a7a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a750:	4a15      	ldr	r2, [pc, #84]	; (800a7a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a752:	21ae      	movs	r1, #174	; 0xae
 800a754:	4815      	ldr	r0, [pc, #84]	; (800a7ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a756:	f010 fea7 	bl	801b4a8 <__assert_func>
 800a75a:	4a15      	ldr	r2, [pc, #84]	; (800a7b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a75c:	8812      	ldrh	r2, [r2, #0]
 800a75e:	428a      	cmp	r2, r1
 800a760:	d803      	bhi.n	800a76a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800a762:	4b14      	ldr	r3, [pc, #80]	; (800a7b4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a764:	4a10      	ldr	r2, [pc, #64]	; (800a7a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a766:	21af      	movs	r1, #175	; 0xaf
 800a768:	e7f4      	b.n	800a754 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800a76a:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a76e:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a772:	4b11      	ldr	r3, [pc, #68]	; (800a7b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a774:	7854      	ldrb	r4, [r2, #1]
 800a776:	681b      	ldr	r3, [r3, #0]
 800a778:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a77c:	682b      	ldr	r3, [r5, #0]
 800a77e:	69de      	ldr	r6, [r3, #28]
 800a780:	4b0e      	ldr	r3, [pc, #56]	; (800a7bc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a782:	6818      	ldr	r0, [r3, #0]
 800a784:	f7f8 fa50 	bl	8002c28 <_ZNK8touchgfx5Texts7getTextEt>
 800a788:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a78c:	2300      	movs	r3, #0
 800a78e:	4602      	mov	r2, r0
 800a790:	9300      	str	r3, [sp, #0]
 800a792:	4621      	mov	r1, r4
 800a794:	4628      	mov	r0, r5
 800a796:	47b0      	blx	r6
 800a798:	b002      	add	sp, #8
 800a79a:	bd70      	pop	{r4, r5, r6, pc}
 800a79c:	2000      	movs	r0, #0
 800a79e:	e7fb      	b.n	800a798 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800a7a0:	2000a374 	.word	0x2000a374
 800a7a4:	0801d178 	.word	0x0801d178
 800a7a8:	0801e67c 	.word	0x0801e67c
 800a7ac:	0801d206 	.word	0x0801d206
 800a7b0:	2000a378 	.word	0x2000a378
 800a7b4:	0801d22f 	.word	0x0801d22f
 800a7b8:	2000a37c 	.word	0x2000a37c
 800a7bc:	2000a380 	.word	0x2000a380

0800a7c0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800a7c0:	b570      	push	{r4, r5, r6, lr}
 800a7c2:	6803      	ldr	r3, [r0, #0]
 800a7c4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a7c6:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800a7c8:	4b11      	ldr	r3, [pc, #68]	; (800a810 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800a7ca:	681b      	ldr	r3, [r3, #0]
 800a7cc:	4604      	mov	r4, r0
 800a7ce:	b28d      	uxth	r5, r1
 800a7d0:	b92b      	cbnz	r3, 800a7de <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800a7d2:	4b10      	ldr	r3, [pc, #64]	; (800a814 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800a7d4:	4a10      	ldr	r2, [pc, #64]	; (800a818 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a7d6:	21ae      	movs	r1, #174	; 0xae
 800a7d8:	4810      	ldr	r0, [pc, #64]	; (800a81c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800a7da:	f010 fe65 	bl	801b4a8 <__assert_func>
 800a7de:	4910      	ldr	r1, [pc, #64]	; (800a820 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800a7e0:	8809      	ldrh	r1, [r1, #0]
 800a7e2:	4291      	cmp	r1, r2
 800a7e4:	d803      	bhi.n	800a7ee <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800a7e6:	4b0f      	ldr	r3, [pc, #60]	; (800a824 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800a7e8:	4a0b      	ldr	r2, [pc, #44]	; (800a818 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a7ea:	21af      	movs	r1, #175	; 0xaf
 800a7ec:	e7f4      	b.n	800a7d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800a7ee:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a7f2:	4b0d      	ldr	r3, [pc, #52]	; (800a828 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800a7f4:	681b      	ldr	r3, [r3, #0]
 800a7f6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a7fa:	6803      	ldr	r3, [r0, #0]
 800a7fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7fe:	4798      	blx	r3
 800a800:	1a29      	subs	r1, r5, r0
 800a802:	4633      	mov	r3, r6
 800a804:	4620      	mov	r0, r4
 800a806:	b209      	sxth	r1, r1
 800a808:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a80c:	4718      	bx	r3
 800a80e:	bf00      	nop
 800a810:	2000a374 	.word	0x2000a374
 800a814:	0801d178 	.word	0x0801d178
 800a818:	0801e67c 	.word	0x0801e67c
 800a81c:	0801d206 	.word	0x0801d206
 800a820:	2000a378 	.word	0x2000a378
 800a824:	0801d22f 	.word	0x0801d22f
 800a828:	2000a37c 	.word	0x2000a37c

0800a82c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800a82c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a830:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a832:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a836:	4293      	cmp	r3, r2
 800a838:	b08c      	sub	sp, #48	; 0x30
 800a83a:	4604      	mov	r4, r0
 800a83c:	4688      	mov	r8, r1
 800a83e:	d05f      	beq.n	800a900 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a840:	4e31      	ldr	r6, [pc, #196]	; (800a908 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800a842:	6832      	ldr	r2, [r6, #0]
 800a844:	b92a      	cbnz	r2, 800a852 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800a846:	4b31      	ldr	r3, [pc, #196]	; (800a90c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800a848:	4a31      	ldr	r2, [pc, #196]	; (800a910 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a84a:	21ae      	movs	r1, #174	; 0xae
 800a84c:	4831      	ldr	r0, [pc, #196]	; (800a914 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800a84e:	f010 fe2b 	bl	801b4a8 <__assert_func>
 800a852:	4d31      	ldr	r5, [pc, #196]	; (800a918 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800a854:	8829      	ldrh	r1, [r5, #0]
 800a856:	4299      	cmp	r1, r3
 800a858:	d803      	bhi.n	800a862 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800a85a:	4b30      	ldr	r3, [pc, #192]	; (800a91c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800a85c:	4a2c      	ldr	r2, [pc, #176]	; (800a910 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a85e:	21af      	movs	r1, #175	; 0xaf
 800a860:	e7f4      	b.n	800a84c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800a862:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a866:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a86a:	4b2d      	ldr	r3, [pc, #180]	; (800a920 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800a86c:	681b      	ldr	r3, [r3, #0]
 800a86e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a872:	2a00      	cmp	r2, #0
 800a874:	d044      	beq.n	800a900 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a876:	784b      	ldrb	r3, [r1, #1]
 800a878:	9207      	str	r2, [sp, #28]
 800a87a:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800a87e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a882:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a886:	4b27      	ldr	r3, [pc, #156]	; (800a924 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800a888:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800a88c:	681b      	ldr	r3, [r3, #0]
 800a88e:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800a892:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a896:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800a89a:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800a89e:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a8a2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a8a4:	f88d a020 	strb.w	sl, [sp, #32]
 800a8a8:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800a8ac:	9009      	str	r0, [sp, #36]	; 0x24
 800a8ae:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800a8b2:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800a8b6:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800a8ba:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a8be:	b10a      	cbz	r2, 800a8c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800a8c0:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800a8c2:	b907      	cbnz	r7, 800a8c6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800a8c4:	689f      	ldr	r7, [r3, #8]
 800a8c6:	f10d 0914 	add.w	r9, sp, #20
 800a8ca:	4621      	mov	r1, r4
 800a8cc:	4648      	mov	r0, r9
 800a8ce:	f002 ff10 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a8d2:	6833      	ldr	r3, [r6, #0]
 800a8d4:	2b00      	cmp	r3, #0
 800a8d6:	d0b6      	beq.n	800a846 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800a8d8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a8da:	882b      	ldrh	r3, [r5, #0]
 800a8dc:	428b      	cmp	r3, r1
 800a8de:	d9bc      	bls.n	800a85a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800a8e0:	4b11      	ldr	r3, [pc, #68]	; (800a928 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800a8e2:	6818      	ldr	r0, [r3, #0]
 800a8e4:	f7f8 f9a0 	bl	8002c28 <_ZNK8touchgfx5Texts7getTextEt>
 800a8e8:	2300      	movs	r3, #0
 800a8ea:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a8ee:	ab07      	add	r3, sp, #28
 800a8f0:	9001      	str	r0, [sp, #4]
 800a8f2:	9300      	str	r3, [sp, #0]
 800a8f4:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a8f8:	4643      	mov	r3, r8
 800a8fa:	4638      	mov	r0, r7
 800a8fc:	f7f8 f946 	bl	8002b8c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a900:	b00c      	add	sp, #48	; 0x30
 800a902:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a906:	bf00      	nop
 800a908:	2000a374 	.word	0x2000a374
 800a90c:	0801d178 	.word	0x0801d178
 800a910:	0801e67c 	.word	0x0801e67c
 800a914:	0801d206 	.word	0x0801d206
 800a918:	2000a378 	.word	0x2000a378
 800a91c:	0801d22f 	.word	0x0801d22f
 800a920:	2000a37c 	.word	0x2000a37c
 800a924:	2000a324 	.word	0x2000a324
 800a928:	2000a380 	.word	0x2000a380

0800a92c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a92c:	b40e      	push	{r1, r2, r3}
 800a92e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a932:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a934:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a938:	4293      	cmp	r3, r2
 800a93a:	b09a      	sub	sp, #104	; 0x68
 800a93c:	4605      	mov	r5, r0
 800a93e:	d067      	beq.n	800aa10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800a940:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800aa24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800a944:	aa24      	add	r2, sp, #144	; 0x90
 800a946:	9202      	str	r2, [sp, #8]
 800a948:	f8da 2000 	ldr.w	r2, [sl]
 800a94c:	b92a      	cbnz	r2, 800a95a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800a94e:	4b31      	ldr	r3, [pc, #196]	; (800aa14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a950:	4a31      	ldr	r2, [pc, #196]	; (800aa18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a952:	21ae      	movs	r1, #174	; 0xae
 800a954:	4831      	ldr	r0, [pc, #196]	; (800aa1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800a956:	f010 fda7 	bl	801b4a8 <__assert_func>
 800a95a:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800aa28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800a95e:	f8b8 1000 	ldrh.w	r1, [r8]
 800a962:	4299      	cmp	r1, r3
 800a964:	d803      	bhi.n	800a96e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800a966:	4b2e      	ldr	r3, [pc, #184]	; (800aa20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800a968:	4a2b      	ldr	r2, [pc, #172]	; (800aa18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a96a:	21af      	movs	r1, #175	; 0xaf
 800a96c:	e7f2      	b.n	800a954 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800a96e:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 800aa2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800a972:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a976:	f8d9 3000 	ldr.w	r3, [r9]
 800a97a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 800a97e:	6823      	ldr	r3, [r4, #0]
 800a980:	4620      	mov	r0, r4
 800a982:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a984:	4798      	blx	r3
 800a986:	4607      	mov	r7, r0
 800a988:	b206      	sxth	r6, r0
 800a98a:	a803      	add	r0, sp, #12
 800a98c:	f003 fac7 	bl	800df1e <_ZN8touchgfx12TextProviderC1Ev>
 800a990:	6823      	ldr	r3, [r4, #0]
 800a992:	4620      	mov	r0, r4
 800a994:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a996:	4798      	blx	r3
 800a998:	6823      	ldr	r3, [r4, #0]
 800a99a:	4683      	mov	fp, r0
 800a99c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a99e:	4620      	mov	r0, r4
 800a9a0:	4798      	blx	r3
 800a9a2:	465b      	mov	r3, fp
 800a9a4:	9000      	str	r0, [sp, #0]
 800a9a6:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800a9a8:	9a02      	ldr	r2, [sp, #8]
 800a9aa:	a803      	add	r0, sp, #12
 800a9ac:	f003 fb04 	bl	800dfb8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a9b0:	f8da 3000 	ldr.w	r3, [sl]
 800a9b4:	f895 1039 	ldrb.w	r1, [r5, #57]	; 0x39
 800a9b8:	2b00      	cmp	r3, #0
 800a9ba:	d0c8      	beq.n	800a94e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800a9bc:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 800a9be:	f8b8 0000 	ldrh.w	r0, [r8]
 800a9c2:	4290      	cmp	r0, r2
 800a9c4:	d9cf      	bls.n	800a966 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800a9c6:	eb03 0442 	add.w	r4, r3, r2, lsl #1
 800a9ca:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a9ce:	7862      	ldrb	r2, [r4, #1]
 800a9d0:	f8d9 3000 	ldr.w	r3, [r9]
 800a9d4:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800a9d8:	9400      	str	r4, [sp, #0]
 800a9da:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a9de:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a9e2:	a803      	add	r0, sp, #12
 800a9e4:	f001 f9be 	bl	800bd64 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a9e8:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800a9ec:	18b1      	adds	r1, r6, r2
 800a9ee:	2900      	cmp	r1, #0
 800a9f0:	b203      	sxth	r3, r0
 800a9f2:	dd0b      	ble.n	800aa0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800a9f4:	3b01      	subs	r3, #1
 800a9f6:	fb13 f302 	smulbb	r3, r3, r2
 800a9fa:	fb17 3300 	smlabb	r3, r7, r0, r3
 800a9fe:	b21e      	sxth	r6, r3
 800aa00:	4630      	mov	r0, r6
 800aa02:	b01a      	add	sp, #104	; 0x68
 800aa04:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa08:	b003      	add	sp, #12
 800aa0a:	4770      	bx	lr
 800aa0c:	2b00      	cmp	r3, #0
 800aa0e:	dcf7      	bgt.n	800aa00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800aa10:	2600      	movs	r6, #0
 800aa12:	e7f5      	b.n	800aa00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800aa14:	0801d178 	.word	0x0801d178
 800aa18:	0801e67c 	.word	0x0801e67c
 800aa1c:	0801d206 	.word	0x0801d206
 800aa20:	0801d22f 	.word	0x0801d22f
 800aa24:	2000a374 	.word	0x2000a374
 800aa28:	2000a378 	.word	0x2000a378
 800aa2c:	2000a37c 	.word	0x2000a37c

0800aa30 <_ZN8touchgfx8TextAreaD0Ev>:
 800aa30:	b510      	push	{r4, lr}
 800aa32:	213c      	movs	r1, #60	; 0x3c
 800aa34:	4604      	mov	r4, r0
 800aa36:	f010 fd08 	bl	801b44a <_ZdlPvj>
 800aa3a:	4620      	mov	r0, r4
 800aa3c:	bd10      	pop	{r4, pc}
	...

0800aa40 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800aa40:	b570      	push	{r4, r5, r6, lr}
 800aa42:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800aa44:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aa48:	4299      	cmp	r1, r3
 800aa4a:	4604      	mov	r4, r0
 800aa4c:	d01e      	beq.n	800aa8c <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800aa4e:	6803      	ldr	r3, [r0, #0]
 800aa50:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800aa52:	4b0f      	ldr	r3, [pc, #60]	; (800aa90 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	b92b      	cbnz	r3, 800aa64 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800aa58:	4b0e      	ldr	r3, [pc, #56]	; (800aa94 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800aa5a:	4a0f      	ldr	r2, [pc, #60]	; (800aa98 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800aa5c:	21ae      	movs	r1, #174	; 0xae
 800aa5e:	480f      	ldr	r0, [pc, #60]	; (800aa9c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800aa60:	f010 fd22 	bl	801b4a8 <__assert_func>
 800aa64:	4b0e      	ldr	r3, [pc, #56]	; (800aaa0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800aa66:	881b      	ldrh	r3, [r3, #0]
 800aa68:	428b      	cmp	r3, r1
 800aa6a:	d803      	bhi.n	800aa74 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800aa6c:	4b0d      	ldr	r3, [pc, #52]	; (800aaa4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800aa6e:	4a0a      	ldr	r2, [pc, #40]	; (800aa98 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800aa70:	21af      	movs	r1, #175	; 0xaf
 800aa72:	e7f4      	b.n	800aa5e <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800aa74:	4b0c      	ldr	r3, [pc, #48]	; (800aaa8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800aa76:	6818      	ldr	r0, [r3, #0]
 800aa78:	f7f8 f8d6 	bl	8002c28 <_ZNK8touchgfx5Texts7getTextEt>
 800aa7c:	2300      	movs	r3, #0
 800aa7e:	4601      	mov	r1, r0
 800aa80:	46ac      	mov	ip, r5
 800aa82:	4620      	mov	r0, r4
 800aa84:	461a      	mov	r2, r3
 800aa86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa8a:	4760      	bx	ip
 800aa8c:	2000      	movs	r0, #0
 800aa8e:	bd70      	pop	{r4, r5, r6, pc}
 800aa90:	2000a374 	.word	0x2000a374
 800aa94:	0801d178 	.word	0x0801d178
 800aa98:	0801e67c 	.word	0x0801e67c
 800aa9c:	0801d206 	.word	0x0801d206
 800aaa0:	2000a378 	.word	0x2000a378
 800aaa4:	0801d22f 	.word	0x0801d22f
 800aaa8:	2000a380 	.word	0x2000a380

0800aaac <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800aaac:	b570      	push	{r4, r5, r6, lr}
 800aaae:	6803      	ldr	r3, [r0, #0]
 800aab0:	4604      	mov	r4, r0
 800aab2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aab4:	4615      	mov	r5, r2
 800aab6:	4798      	blx	r3
 800aab8:	6823      	ldr	r3, [r4, #0]
 800aaba:	4629      	mov	r1, r5
 800aabc:	4620      	mov	r0, r4
 800aabe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aac0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aac4:	4718      	bx	r3

0800aac6 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800aac6:	b538      	push	{r3, r4, r5, lr}
 800aac8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800aaca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aace:	429a      	cmp	r2, r3
 800aad0:	4604      	mov	r4, r0
 800aad2:	d014      	beq.n	800aafe <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800aad4:	6803      	ldr	r3, [r0, #0]
 800aad6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800aad8:	4798      	blx	r3
 800aada:	6823      	ldr	r3, [r4, #0]
 800aadc:	4605      	mov	r5, r0
 800aade:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800aae0:	4620      	mov	r0, r4
 800aae2:	4798      	blx	r3
 800aae4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800aae8:	b22d      	sxth	r5, r5
 800aaea:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800aaee:	4601      	mov	r1, r0
 800aaf0:	bf06      	itte	eq
 800aaf2:	4602      	moveq	r2, r0
 800aaf4:	4629      	moveq	r1, r5
 800aaf6:	462a      	movne	r2, r5
 800aaf8:	4620      	mov	r0, r4
 800aafa:	f7ff ffd7 	bl	800aaac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aafe:	bd38      	pop	{r3, r4, r5, pc}

0800ab00 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ab00:	888a      	ldrh	r2, [r1, #4]
 800ab02:	8582      	strh	r2, [r0, #44]	; 0x2c
 800ab04:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800ab08:	b922      	cbnz	r2, 800ab14 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800ab0a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ab0e:	b90b      	cbnz	r3, 800ab14 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800ab10:	f7ff bfd9 	b.w	800aac6 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800ab14:	4770      	bx	lr

0800ab16 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ab16:	2300      	movs	r3, #0
 800ab18:	8083      	strh	r3, [r0, #4]
 800ab1a:	80c3      	strh	r3, [r0, #6]
 800ab1c:	8003      	strh	r3, [r0, #0]
 800ab1e:	8043      	strh	r3, [r0, #2]
 800ab20:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800ab24:	2bff      	cmp	r3, #255	; 0xff
 800ab26:	bf01      	itttt	eq
 800ab28:	890b      	ldrheq	r3, [r1, #8]
 800ab2a:	8083      	strheq	r3, [r0, #4]
 800ab2c:	894b      	ldrheq	r3, [r1, #10]
 800ab2e:	80c3      	strheq	r3, [r0, #6]
 800ab30:	4770      	bx	lr
	...

0800ab34 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ab34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ab36:	4604      	mov	r4, r0
 800ab38:	6808      	ldr	r0, [r1, #0]
 800ab3a:	6849      	ldr	r1, [r1, #4]
 800ab3c:	466b      	mov	r3, sp
 800ab3e:	c303      	stmia	r3!, {r0, r1}
 800ab40:	6823      	ldr	r3, [r4, #0]
 800ab42:	4669      	mov	r1, sp
 800ab44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ab46:	4620      	mov	r0, r4
 800ab48:	4798      	blx	r3
 800ab4a:	4b08      	ldr	r3, [pc, #32]	; (800ab6c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ab4c:	681b      	ldr	r3, [r3, #0]
 800ab4e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ab52:	b10a      	cbz	r2, 800ab58 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ab54:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ab56:	b900      	cbnz	r0, 800ab5a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ab58:	6898      	ldr	r0, [r3, #8]
 800ab5a:	6803      	ldr	r3, [r0, #0]
 800ab5c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800ab5e:	699d      	ldr	r5, [r3, #24]
 800ab60:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ab64:	4669      	mov	r1, sp
 800ab66:	47a8      	blx	r5
 800ab68:	b003      	add	sp, #12
 800ab6a:	bd30      	pop	{r4, r5, pc}
 800ab6c:	2000a324 	.word	0x2000a324

0800ab70 <_ZN8touchgfx3BoxD1Ev>:
 800ab70:	4770      	bx	lr

0800ab72 <_ZN8touchgfx3BoxD0Ev>:
 800ab72:	b510      	push	{r4, lr}
 800ab74:	212c      	movs	r1, #44	; 0x2c
 800ab76:	4604      	mov	r4, r0
 800ab78:	f010 fc67 	bl	801b44a <_ZdlPvj>
 800ab7c:	4620      	mov	r0, r4
 800ab7e:	bd10      	pop	{r4, pc}

0800ab80 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800ab80:	4770      	bx	lr
	...

0800ab84 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800ab84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ab86:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ab88:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ab8c:	4299      	cmp	r1, r3
 800ab8e:	4606      	mov	r6, r0
 800ab90:	d02a      	beq.n	800abe8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800ab92:	4b16      	ldr	r3, [pc, #88]	; (800abec <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800ab94:	681b      	ldr	r3, [r3, #0]
 800ab96:	b92b      	cbnz	r3, 800aba4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800ab98:	4b15      	ldr	r3, [pc, #84]	; (800abf0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800ab9a:	4a16      	ldr	r2, [pc, #88]	; (800abf4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800ab9c:	21ae      	movs	r1, #174	; 0xae
 800ab9e:	4816      	ldr	r0, [pc, #88]	; (800abf8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800aba0:	f010 fc82 	bl	801b4a8 <__assert_func>
 800aba4:	4a15      	ldr	r2, [pc, #84]	; (800abfc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800aba6:	8812      	ldrh	r2, [r2, #0]
 800aba8:	428a      	cmp	r2, r1
 800abaa:	d803      	bhi.n	800abb4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800abac:	4b14      	ldr	r3, [pc, #80]	; (800ac00 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800abae:	4a11      	ldr	r2, [pc, #68]	; (800abf4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800abb0:	21af      	movs	r1, #175	; 0xaf
 800abb2:	e7f4      	b.n	800ab9e <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800abb4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800abb8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800abbc:	4b11      	ldr	r3, [pc, #68]	; (800ac04 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800abbe:	7854      	ldrb	r4, [r2, #1]
 800abc0:	681b      	ldr	r3, [r3, #0]
 800abc2:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800abc6:	682b      	ldr	r3, [r5, #0]
 800abc8:	69df      	ldr	r7, [r3, #28]
 800abca:	4b0f      	ldr	r3, [pc, #60]	; (800ac08 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800abcc:	6818      	ldr	r0, [r3, #0]
 800abce:	f7f8 f82b 	bl	8002c28 <_ZNK8touchgfx5Texts7getTextEt>
 800abd2:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800abd6:	2300      	movs	r3, #0
 800abd8:	9300      	str	r3, [sp, #0]
 800abda:	4602      	mov	r2, r0
 800abdc:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800abde:	4621      	mov	r1, r4
 800abe0:	4628      	mov	r0, r5
 800abe2:	47b8      	blx	r7
 800abe4:	b003      	add	sp, #12
 800abe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800abe8:	2000      	movs	r0, #0
 800abea:	e7fb      	b.n	800abe4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800abec:	2000a374 	.word	0x2000a374
 800abf0:	0801d178 	.word	0x0801d178
 800abf4:	0801e788 	.word	0x0801e788
 800abf8:	0801d206 	.word	0x0801d206
 800abfc:	2000a378 	.word	0x2000a378
 800ac00:	0801d22f 	.word	0x0801d22f
 800ac04:	2000a37c 	.word	0x2000a37c
 800ac08:	2000a380 	.word	0x2000a380

0800ac0c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800ac0c:	b570      	push	{r4, r5, r6, lr}
 800ac0e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ac10:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ac14:	4299      	cmp	r1, r3
 800ac16:	4604      	mov	r4, r0
 800ac18:	d01e      	beq.n	800ac58 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800ac1a:	6803      	ldr	r3, [r0, #0]
 800ac1c:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800ac1e:	4b0f      	ldr	r3, [pc, #60]	; (800ac5c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800ac20:	681b      	ldr	r3, [r3, #0]
 800ac22:	b92b      	cbnz	r3, 800ac30 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800ac24:	4b0e      	ldr	r3, [pc, #56]	; (800ac60 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800ac26:	4a0f      	ldr	r2, [pc, #60]	; (800ac64 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800ac28:	21ae      	movs	r1, #174	; 0xae
 800ac2a:	480f      	ldr	r0, [pc, #60]	; (800ac68 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800ac2c:	f010 fc3c 	bl	801b4a8 <__assert_func>
 800ac30:	4b0e      	ldr	r3, [pc, #56]	; (800ac6c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800ac32:	881b      	ldrh	r3, [r3, #0]
 800ac34:	428b      	cmp	r3, r1
 800ac36:	d803      	bhi.n	800ac40 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800ac38:	4b0d      	ldr	r3, [pc, #52]	; (800ac70 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800ac3a:	4a0a      	ldr	r2, [pc, #40]	; (800ac64 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800ac3c:	21af      	movs	r1, #175	; 0xaf
 800ac3e:	e7f4      	b.n	800ac2a <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800ac40:	4b0c      	ldr	r3, [pc, #48]	; (800ac74 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800ac42:	6818      	ldr	r0, [r3, #0]
 800ac44:	f7f7 fff0 	bl	8002c28 <_ZNK8touchgfx5Texts7getTextEt>
 800ac48:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800ac4a:	4601      	mov	r1, r0
 800ac4c:	46ac      	mov	ip, r5
 800ac4e:	4620      	mov	r0, r4
 800ac50:	2300      	movs	r3, #0
 800ac52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ac56:	4760      	bx	ip
 800ac58:	2000      	movs	r0, #0
 800ac5a:	bd70      	pop	{r4, r5, r6, pc}
 800ac5c:	2000a374 	.word	0x2000a374
 800ac60:	0801d178 	.word	0x0801d178
 800ac64:	0801e788 	.word	0x0801e788
 800ac68:	0801d206 	.word	0x0801d206
 800ac6c:	2000a378 	.word	0x2000a378
 800ac70:	0801d22f 	.word	0x0801d22f
 800ac74:	2000a380 	.word	0x2000a380

0800ac78 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800ac78:	b510      	push	{r4, lr}
 800ac7a:	2140      	movs	r1, #64	; 0x40
 800ac7c:	4604      	mov	r4, r0
 800ac7e:	f010 fbe4 	bl	801b44a <_ZdlPvj>
 800ac82:	4620      	mov	r0, r4
 800ac84:	bd10      	pop	{r4, pc}
	...

0800ac88 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800ac88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ac8c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ac8e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ac92:	4293      	cmp	r3, r2
 800ac94:	b08c      	sub	sp, #48	; 0x30
 800ac96:	4604      	mov	r4, r0
 800ac98:	460e      	mov	r6, r1
 800ac9a:	d05d      	beq.n	800ad58 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800ac9c:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800ad7c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800aca0:	f8d8 2000 	ldr.w	r2, [r8]
 800aca4:	b92a      	cbnz	r2, 800acb2 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800aca6:	4b2e      	ldr	r3, [pc, #184]	; (800ad60 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800aca8:	4a2e      	ldr	r2, [pc, #184]	; (800ad64 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800acaa:	21ae      	movs	r1, #174	; 0xae
 800acac:	482e      	ldr	r0, [pc, #184]	; (800ad68 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800acae:	f010 fbfb 	bl	801b4a8 <__assert_func>
 800acb2:	4f2e      	ldr	r7, [pc, #184]	; (800ad6c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800acb4:	8839      	ldrh	r1, [r7, #0]
 800acb6:	4299      	cmp	r1, r3
 800acb8:	d803      	bhi.n	800acc2 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800acba:	4b2d      	ldr	r3, [pc, #180]	; (800ad70 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800acbc:	4a29      	ldr	r2, [pc, #164]	; (800ad64 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800acbe:	21af      	movs	r1, #175	; 0xaf
 800acc0:	e7f4      	b.n	800acac <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800acc2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800acc6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800acca:	4b2a      	ldr	r3, [pc, #168]	; (800ad74 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800accc:	681b      	ldr	r3, [r3, #0]
 800acce:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800acd2:	2a00      	cmp	r2, #0
 800acd4:	d040      	beq.n	800ad58 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800acd6:	784b      	ldrb	r3, [r1, #1]
 800acd8:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800acdc:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800ace0:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800ace4:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800ace8:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800acec:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800acee:	9207      	str	r2, [sp, #28]
 800acf0:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800acf4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800acf8:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800acfc:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800ad00:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800ad04:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800ad08:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ad0c:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800ad10:	f88d a020 	strb.w	sl, [sp, #32]
 800ad14:	9009      	str	r0, [sp, #36]	; 0x24
 800ad16:	f7fe ff1b 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 800ad1a:	ad05      	add	r5, sp, #20
 800ad1c:	4681      	mov	r9, r0
 800ad1e:	4621      	mov	r1, r4
 800ad20:	4628      	mov	r0, r5
 800ad22:	f002 fce6 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ad26:	f8d8 3000 	ldr.w	r3, [r8]
 800ad2a:	2b00      	cmp	r3, #0
 800ad2c:	d0bb      	beq.n	800aca6 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800ad2e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ad30:	883b      	ldrh	r3, [r7, #0]
 800ad32:	428b      	cmp	r3, r1
 800ad34:	d9c1      	bls.n	800acba <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800ad36:	4b10      	ldr	r3, [pc, #64]	; (800ad78 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800ad38:	6818      	ldr	r0, [r3, #0]
 800ad3a:	f7f7 ff75 	bl	8002c28 <_ZNK8touchgfx5Texts7getTextEt>
 800ad3e:	2300      	movs	r3, #0
 800ad40:	9303      	str	r3, [sp, #12]
 800ad42:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ad44:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800ad48:	ab07      	add	r3, sp, #28
 800ad4a:	9300      	str	r3, [sp, #0]
 800ad4c:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ad50:	4633      	mov	r3, r6
 800ad52:	4648      	mov	r0, r9
 800ad54:	f7f7 ff1a 	bl	8002b8c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ad58:	b00c      	add	sp, #48	; 0x30
 800ad5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ad5e:	bf00      	nop
 800ad60:	0801d178 	.word	0x0801d178
 800ad64:	0801e788 	.word	0x0801e788
 800ad68:	0801d206 	.word	0x0801d206
 800ad6c:	2000a378 	.word	0x2000a378
 800ad70:	0801d22f 	.word	0x0801d22f
 800ad74:	2000a37c 	.word	0x2000a37c
 800ad78:	2000a380 	.word	0x2000a380
 800ad7c:	2000a374 	.word	0x2000a374

0800ad80 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800ad80:	4b01      	ldr	r3, [pc, #4]	; (800ad88 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800ad82:	6019      	str	r1, [r3, #0]
 800ad84:	4770      	bx	lr
 800ad86:	bf00      	nop
 800ad88:	2000a32c 	.word	0x2000a32c

0800ad8c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ad8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad90:	4696      	mov	lr, r2
 800ad92:	4605      	mov	r5, r0
 800ad94:	4614      	mov	r4, r2
 800ad96:	460e      	mov	r6, r1
 800ad98:	461f      	mov	r7, r3
 800ad9a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ad9e:	b097      	sub	sp, #92	; 0x5c
 800ada0:	f10d 0c1c 	add.w	ip, sp, #28
 800ada4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ada8:	f8de 3000 	ldr.w	r3, [lr]
 800adac:	f8cc 3000 	str.w	r3, [ip]
 800adb0:	f104 0e14 	add.w	lr, r4, #20
 800adb4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800adb8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800adbc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800adc0:	f8de 3000 	ldr.w	r3, [lr]
 800adc4:	f8cc 3000 	str.w	r3, [ip]
 800adc8:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800adcc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800add0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800add4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800add8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800addc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800ade0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800ade4:	f8de 3000 	ldr.w	r3, [lr]
 800ade8:	f8cc 3000 	str.w	r3, [ip]
 800adec:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800adee:	682b      	ldr	r3, [r5, #0]
 800adf0:	9201      	str	r2, [sp, #4]
 800adf2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800adf6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800adf8:	9200      	str	r2, [sp, #0]
 800adfa:	f8cd 8008 	str.w	r8, [sp, #8]
 800adfe:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800ae02:	aa07      	add	r2, sp, #28
 800ae04:	463b      	mov	r3, r7
 800ae06:	4631      	mov	r1, r6
 800ae08:	4628      	mov	r0, r5
 800ae0a:	47d8      	blx	fp
 800ae0c:	46a6      	mov	lr, r4
 800ae0e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ae12:	f10d 0c1c 	add.w	ip, sp, #28
 800ae16:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ae1a:	f8de 3000 	ldr.w	r3, [lr]
 800ae1e:	f8cc 3000 	str.w	r3, [ip]
 800ae22:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ae26:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ae2a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ae2e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ae32:	343c      	adds	r4, #60	; 0x3c
 800ae34:	f8de 3000 	ldr.w	r3, [lr]
 800ae38:	f8cc 3000 	str.w	r3, [ip]
 800ae3c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ae3e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ae42:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ae46:	6823      	ldr	r3, [r4, #0]
 800ae48:	f8cc 3000 	str.w	r3, [ip]
 800ae4c:	682b      	ldr	r3, [r5, #0]
 800ae4e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ae52:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ae54:	9201      	str	r2, [sp, #4]
 800ae56:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ae58:	9200      	str	r2, [sp, #0]
 800ae5a:	f8cd 8008 	str.w	r8, [sp, #8]
 800ae5e:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800ae60:	aa07      	add	r2, sp, #28
 800ae62:	463b      	mov	r3, r7
 800ae64:	4631      	mov	r1, r6
 800ae66:	4628      	mov	r0, r5
 800ae68:	47a0      	blx	r4
 800ae6a:	b017      	add	sp, #92	; 0x5c
 800ae6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ae70 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ae70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae74:	b08d      	sub	sp, #52	; 0x34
 800ae76:	4688      	mov	r8, r1
 800ae78:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ae7a:	f8d3 c000 	ldr.w	ip, [r3]
 800ae7e:	680f      	ldr	r7, [r1, #0]
 800ae80:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800ae84:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800ae88:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800ae8c:	edd3 6a07 	vldr	s13, [r3, #28]
 800ae90:	9918      	ldr	r1, [sp, #96]	; 0x60
 800ae92:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800ae96:	f9b1 9000 	ldrsh.w	r9, [r1]
 800ae9a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800ae9e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800aea2:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800aea6:	eba7 070c 	sub.w	r7, r7, ip
 800aeaa:	42bc      	cmp	r4, r7
 800aeac:	bfa8      	it	ge
 800aeae:	463c      	movge	r4, r7
 800aeb0:	ee07 4a90 	vmov	s15, r4
 800aeb4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800aeb8:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800aebc:	ee25 4a04 	vmul.f32	s8, s10, s8
 800aec0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800aec4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800aec8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800aecc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800aed0:	eb09 0e0c 	add.w	lr, r9, ip
 800aed4:	4571      	cmp	r1, lr
 800aed6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800aeda:	ee32 1a05 	vadd.f32	s2, s4, s10
 800aede:	ee36 0a84 	vadd.f32	s0, s13, s8
 800aee2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800aee6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800aeea:	f340 808d 	ble.w	800b008 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800aeee:	eba1 060e 	sub.w	r6, r1, lr
 800aef2:	fb96 f5f4 	sdiv	r5, r6, r4
 800aef6:	ee07 5a10 	vmov	s14, r5
 800aefa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800aefe:	2d00      	cmp	r5, #0
 800af00:	fb04 6615 	mls	r6, r4, r5, r6
 800af04:	eea7 0a04 	vfma.f32	s0, s14, s8
 800af08:	eee7 0a24 	vfma.f32	s1, s14, s9
 800af0c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800af10:	dd13      	ble.n	800af3a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800af12:	ee70 6a44 	vsub.f32	s13, s0, s8
 800af16:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800af1a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800af1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af22:	bf18      	it	ne
 800af24:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800af28:	ee31 2a45 	vsub.f32	s4, s2, s10
 800af2c:	bf08      	it	eq
 800af2e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800af32:	ee61 1a87 	vmul.f32	s3, s3, s14
 800af36:	ee22 2a07 	vmul.f32	s4, s4, s14
 800af3a:	fb05 f204 	mul.w	r2, r5, r4
 800af3e:	1abf      	subs	r7, r7, r2
 800af40:	4494      	add	ip, r2
 800af42:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800af46:	4411      	add	r1, r2
 800af48:	eb09 020c 	add.w	r2, r9, ip
 800af4c:	443a      	add	r2, r7
 800af4e:	b209      	sxth	r1, r1
 800af50:	428a      	cmp	r2, r1
 800af52:	bfc4      	itt	gt
 800af54:	eba1 0209 	subgt.w	r2, r1, r9
 800af58:	eba2 070c 	subgt.w	r7, r2, ip
 800af5c:	2f00      	cmp	r7, #0
 800af5e:	dd50      	ble.n	800b002 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800af60:	fb97 f1f4 	sdiv	r1, r7, r4
 800af64:	fb04 7211 	mls	r2, r4, r1, r7
 800af68:	b90a      	cbnz	r2, 800af6e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800af6a:	3901      	subs	r1, #1
 800af6c:	4622      	mov	r2, r4
 800af6e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800af72:	6840      	ldr	r0, [r0, #4]
 800af74:	900b      	str	r0, [sp, #44]	; 0x2c
 800af76:	f8d0 a000 	ldr.w	sl, [r0]
 800af7a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800af7c:	9008      	str	r0, [sp, #32]
 800af7e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800af82:	9818      	ldr	r0, [sp, #96]	; 0x60
 800af84:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800af88:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800af8c:	695b      	ldr	r3, [r3, #20]
 800af8e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800af90:	445b      	add	r3, fp
 800af92:	eef0 6a42 	vmov.f32	s13, s4
 800af96:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800af9a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800af9e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800afa2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800afa6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800afaa:	9307      	str	r3, [sp, #28]
 800afac:	ee17 7a90 	vmov	r7, s15
 800afb0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800afb4:	eeb0 7a61 	vmov.f32	s14, s3
 800afb8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800afbc:	ee16 3a90 	vmov	r3, s13
 800afc0:	fb97 f7f4 	sdiv	r7, r7, r4
 800afc4:	ee17 ca90 	vmov	ip, s15
 800afc8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800afcc:	fb9c fcf4 	sdiv	ip, ip, r4
 800afd0:	fb0c 3306 	mla	r3, ip, r6, r3
 800afd4:	9302      	str	r3, [sp, #8]
 800afd6:	ee17 3a10 	vmov	r3, s14
 800afda:	44b6      	add	lr, r6
 800afdc:	fb04 e505 	mla	r5, r4, r5, lr
 800afe0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800afe4:	fb07 3706 	mla	r7, r7, r6, r3
 800afe8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800afec:	e9cd 4700 	strd	r4, r7, [sp]
 800aff0:	2900      	cmp	r1, #0
 800aff2:	bfcc      	ite	gt
 800aff4:	46a1      	movgt	r9, r4
 800aff6:	4691      	movle	r9, r2
 800aff8:	eba9 0306 	sub.w	r3, r9, r6
 800affc:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b000:	47a0      	blx	r4
 800b002:	b00d      	add	sp, #52	; 0x34
 800b004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b008:	2500      	movs	r5, #0
 800b00a:	462e      	mov	r6, r5
 800b00c:	e799      	b.n	800af42 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b010 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b014:	b0db      	sub	sp, #364	; 0x16c
 800b016:	461d      	mov	r5, r3
 800b018:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b01c:	930a      	str	r3, [sp, #40]	; 0x28
 800b01e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b022:	930b      	str	r3, [sp, #44]	; 0x2c
 800b024:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b028:	9310      	str	r3, [sp, #64]	; 0x40
 800b02a:	6803      	ldr	r3, [r0, #0]
 800b02c:	910f      	str	r1, [sp, #60]	; 0x3c
 800b02e:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 800b030:	9009      	str	r0, [sp, #36]	; 0x24
 800b032:	4614      	mov	r4, r2
 800b034:	4629      	mov	r1, r5
 800b036:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b03a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b03e:	47b8      	blx	r7
 800b040:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b042:	6058      	str	r0, [r3, #4]
 800b044:	2800      	cmp	r0, #0
 800b046:	f000 83a1 	beq.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b04a:	682b      	ldr	r3, [r5, #0]
 800b04c:	9314      	str	r3, [sp, #80]	; 0x50
 800b04e:	686b      	ldr	r3, [r5, #4]
 800b050:	9315      	str	r3, [sp, #84]	; 0x54
 800b052:	4bc4      	ldr	r3, [pc, #784]	; (800b364 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b054:	ed94 7a02 	vldr	s14, [r4, #8]
 800b058:	7819      	ldrb	r1, [r3, #0]
 800b05a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b05e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b062:	2900      	cmp	r1, #0
 800b064:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b068:	bf16      	itet	ne
 800b06a:	4619      	movne	r1, r3
 800b06c:	4611      	moveq	r1, r2
 800b06e:	4613      	movne	r3, r2
 800b070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b074:	9116      	str	r1, [sp, #88]	; 0x58
 800b076:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b07a:	f240 8387 	bls.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b07e:	ed94 7a07 	vldr	s14, [r4, #28]
 800b082:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b086:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b08a:	f240 837f 	bls.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b08e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b092:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b096:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b09a:	f240 8377 	bls.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b09e:	6822      	ldr	r2, [r4, #0]
 800b0a0:	4bb1      	ldr	r3, [pc, #708]	; (800b368 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b0a2:	429a      	cmp	r2, r3
 800b0a4:	f2c0 8372 	blt.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b0a8:	49b0      	ldr	r1, [pc, #704]	; (800b36c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b0aa:	6963      	ldr	r3, [r4, #20]
 800b0ac:	428a      	cmp	r2, r1
 800b0ae:	f300 836d 	bgt.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b0b2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b0b6:	48ae      	ldr	r0, [pc, #696]	; (800b370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b0b8:	33ff      	adds	r3, #255	; 0xff
 800b0ba:	4283      	cmp	r3, r0
 800b0bc:	f200 8366 	bhi.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b0c0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b0c2:	4dac      	ldr	r5, [pc, #688]	; (800b374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b0c4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b0c8:	33ff      	adds	r3, #255	; 0xff
 800b0ca:	42ab      	cmp	r3, r5
 800b0cc:	f200 835e 	bhi.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b0d0:	6862      	ldr	r2, [r4, #4]
 800b0d2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b0d6:	33ff      	adds	r3, #255	; 0xff
 800b0d8:	4283      	cmp	r3, r0
 800b0da:	f200 8357 	bhi.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b0de:	69a1      	ldr	r1, [r4, #24]
 800b0e0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b0e4:	33ff      	adds	r3, #255	; 0xff
 800b0e6:	4283      	cmp	r3, r0
 800b0e8:	f200 8350 	bhi.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b0ec:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b0ee:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b0f2:	30ff      	adds	r0, #255	; 0xff
 800b0f4:	42a8      	cmp	r0, r5
 800b0f6:	f200 8349 	bhi.w	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b0fa:	428a      	cmp	r2, r1
 800b0fc:	f280 8110 	bge.w	800b320 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b100:	429a      	cmp	r2, r3
 800b102:	f300 8119 	bgt.w	800b338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b106:	4299      	cmp	r1, r3
 800b108:	f280 811d 	bge.w	800b346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b10c:	2502      	movs	r5, #2
 800b10e:	2701      	movs	r7, #1
 800b110:	46a9      	mov	r9, r5
 800b112:	46b8      	mov	r8, r7
 800b114:	f04f 0a00 	mov.w	sl, #0
 800b118:	4621      	mov	r1, r4
 800b11a:	a849      	add	r0, sp, #292	; 0x124
 800b11c:	f003 fcc2 	bl	800eaa4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b120:	4622      	mov	r2, r4
 800b122:	4653      	mov	r3, sl
 800b124:	a949      	add	r1, sp, #292	; 0x124
 800b126:	f8cd 9000 	str.w	r9, [sp]
 800b12a:	a819      	add	r0, sp, #100	; 0x64
 800b12c:	f003 fdea 	bl	800ed04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b130:	4622      	mov	r2, r4
 800b132:	4653      	mov	r3, sl
 800b134:	a949      	add	r1, sp, #292	; 0x124
 800b136:	f8cd 8000 	str.w	r8, [sp]
 800b13a:	a829      	add	r0, sp, #164	; 0xa4
 800b13c:	f003 fde2 	bl	800ed04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b140:	4643      	mov	r3, r8
 800b142:	4622      	mov	r2, r4
 800b144:	a949      	add	r1, sp, #292	; 0x124
 800b146:	f8cd 9000 	str.w	r9, [sp]
 800b14a:	a839      	add	r0, sp, #228	; 0xe4
 800b14c:	f003 fdda 	bl	800ed04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b150:	42af      	cmp	r7, r5
 800b152:	bfb5      	itete	lt
 800b154:	2300      	movlt	r3, #0
 800b156:	2301      	movge	r3, #1
 800b158:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b15a:	930e      	strge	r3, [sp, #56]	; 0x38
 800b15c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b15e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b162:	af12      	add	r7, sp, #72	; 0x48
 800b164:	bfb9      	ittee	lt
 800b166:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b168:	ac19      	addlt	r4, sp, #100	; 0x64
 800b16a:	ad19      	addge	r5, sp, #100	; 0x64
 800b16c:	ac29      	addge	r4, sp, #164	; 0xa4
 800b16e:	e887 0003 	stmia.w	r7, {r0, r1}
 800b172:	b928      	cbnz	r0, 800b180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b174:	4b80      	ldr	r3, [pc, #512]	; (800b378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b176:	6818      	ldr	r0, [r3, #0]
 800b178:	6803      	ldr	r3, [r0, #0]
 800b17a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b17c:	4798      	blx	r3
 800b17e:	6038      	str	r0, [r7, #0]
 800b180:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b182:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b186:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b18a:	930c      	str	r3, [sp, #48]	; 0x30
 800b18c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b18e:	6963      	ldr	r3, [r4, #20]
 800b190:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b192:	440b      	add	r3, r1
 800b194:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b198:	4408      	add	r0, r1
 800b19a:	b200      	sxth	r0, r0
 800b19c:	4283      	cmp	r3, r0
 800b19e:	900d      	str	r0, [sp, #52]	; 0x34
 800b1a0:	f280 80dd 	bge.w	800b35e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b1a4:	428b      	cmp	r3, r1
 800b1a6:	da08      	bge.n	800b1ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b1a8:	2a00      	cmp	r2, #0
 800b1aa:	dd06      	ble.n	800b1ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b1ac:	1acb      	subs	r3, r1, r3
 800b1ae:	429a      	cmp	r2, r3
 800b1b0:	f2c0 80e4 	blt.w	800b37c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b1b4:	2b00      	cmp	r3, #0
 800b1b6:	f300 80e2 	bgt.w	800b37e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b1ba:	6967      	ldr	r7, [r4, #20]
 800b1bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b1be:	443b      	add	r3, r7
 800b1c0:	461f      	mov	r7, r3
 800b1c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b1c4:	1bdf      	subs	r7, r3, r7
 800b1c6:	4297      	cmp	r7, r2
 800b1c8:	bfa8      	it	ge
 800b1ca:	4617      	movge	r7, r2
 800b1cc:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b1d0:	2f00      	cmp	r7, #0
 800b1d2:	f340 8166 	ble.w	800b4a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b1d6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b1d8:	6829      	ldr	r1, [r5, #0]
 800b1da:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b1de:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b1e2:	6820      	ldr	r0, [r4, #0]
 800b1e4:	4411      	add	r1, r2
 800b1e6:	4299      	cmp	r1, r3
 800b1e8:	dd1a      	ble.n	800b220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b1ea:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b1ee:	440b      	add	r3, r1
 800b1f0:	4402      	add	r2, r0
 800b1f2:	b21b      	sxth	r3, r3
 800b1f4:	429a      	cmp	r2, r3
 800b1f6:	dc13      	bgt.n	800b220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b1f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b1fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b1fc:	681b      	ldr	r3, [r3, #0]
 800b1fe:	9206      	str	r2, [sp, #24]
 800b200:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b202:	9205      	str	r2, [sp, #20]
 800b204:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b206:	9500      	str	r5, [sp, #0]
 800b208:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b20c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b20e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b210:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b214:	a912      	add	r1, sp, #72	; 0x48
 800b216:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800b21a:	aa49      	add	r2, sp, #292	; 0x124
 800b21c:	4623      	mov	r3, r4
 800b21e:	47c8      	blx	r9
 800b220:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b224:	441a      	add	r2, r3
 800b226:	6963      	ldr	r3, [r4, #20]
 800b228:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b22c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b230:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b234:	68a1      	ldr	r1, [r4, #8]
 800b236:	ed94 6a08 	vldr	s12, [r4, #32]
 800b23a:	6022      	str	r2, [r4, #0]
 800b23c:	3301      	adds	r3, #1
 800b23e:	6163      	str	r3, [r4, #20]
 800b240:	69a3      	ldr	r3, [r4, #24]
 800b242:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b246:	3b01      	subs	r3, #1
 800b248:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b24c:	61a3      	str	r3, [r4, #24]
 800b24e:	6923      	ldr	r3, [r4, #16]
 800b250:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b254:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b258:	edd4 6a07 	vldr	s13, [r4, #28]
 800b25c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b260:	440b      	add	r3, r1
 800b262:	68e1      	ldr	r1, [r4, #12]
 800b264:	6123      	str	r3, [r4, #16]
 800b266:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b26a:	428b      	cmp	r3, r1
 800b26c:	edc4 6a07 	vstr	s13, [r4, #28]
 800b270:	db15      	blt.n	800b29e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b272:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b276:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b27a:	3201      	adds	r2, #1
 800b27c:	edc4 6a07 	vstr	s13, [r4, #28]
 800b280:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b284:	6022      	str	r2, [r4, #0]
 800b286:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b28a:	1a5b      	subs	r3, r3, r1
 800b28c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b290:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b294:	6123      	str	r3, [r4, #16]
 800b296:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b29a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b29e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b2a2:	441a      	add	r2, r3
 800b2a4:	696b      	ldr	r3, [r5, #20]
 800b2a6:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b2aa:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b2ae:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b2b2:	68a9      	ldr	r1, [r5, #8]
 800b2b4:	ed95 6a08 	vldr	s12, [r5, #32]
 800b2b8:	602a      	str	r2, [r5, #0]
 800b2ba:	3301      	adds	r3, #1
 800b2bc:	616b      	str	r3, [r5, #20]
 800b2be:	69ab      	ldr	r3, [r5, #24]
 800b2c0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b2c4:	3b01      	subs	r3, #1
 800b2c6:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b2ca:	61ab      	str	r3, [r5, #24]
 800b2cc:	692b      	ldr	r3, [r5, #16]
 800b2ce:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b2d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b2d6:	edd5 6a07 	vldr	s13, [r5, #28]
 800b2da:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b2de:	440b      	add	r3, r1
 800b2e0:	68e9      	ldr	r1, [r5, #12]
 800b2e2:	612b      	str	r3, [r5, #16]
 800b2e4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b2e8:	428b      	cmp	r3, r1
 800b2ea:	edc5 6a07 	vstr	s13, [r5, #28]
 800b2ee:	db15      	blt.n	800b31c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b2f0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b2f4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b2f8:	3201      	adds	r2, #1
 800b2fa:	edc5 6a07 	vstr	s13, [r5, #28]
 800b2fe:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b302:	602a      	str	r2, [r5, #0]
 800b304:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b308:	1a5b      	subs	r3, r3, r1
 800b30a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b30e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b312:	612b      	str	r3, [r5, #16]
 800b314:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b318:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b31c:	3f01      	subs	r7, #1
 800b31e:	e757      	b.n	800b1d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b320:	4299      	cmp	r1, r3
 800b322:	dc13      	bgt.n	800b34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b324:	429a      	cmp	r2, r3
 800b326:	da14      	bge.n	800b352 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b328:	2502      	movs	r5, #2
 800b32a:	2703      	movs	r7, #3
 800b32c:	46a9      	mov	r9, r5
 800b32e:	f04f 0800 	mov.w	r8, #0
 800b332:	f04f 0a01 	mov.w	sl, #1
 800b336:	e6ef      	b.n	800b118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b338:	2501      	movs	r5, #1
 800b33a:	2700      	movs	r7, #0
 800b33c:	46a9      	mov	r9, r5
 800b33e:	46b8      	mov	r8, r7
 800b340:	f04f 0a02 	mov.w	sl, #2
 800b344:	e6e8      	b.n	800b118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b346:	2501      	movs	r5, #1
 800b348:	2702      	movs	r7, #2
 800b34a:	e6e1      	b.n	800b110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b34c:	2500      	movs	r5, #0
 800b34e:	2701      	movs	r7, #1
 800b350:	e7f4      	b.n	800b33c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b352:	2702      	movs	r7, #2
 800b354:	2503      	movs	r5, #3
 800b356:	f04f 0900 	mov.w	r9, #0
 800b35a:	46b8      	mov	r8, r7
 800b35c:	e7e9      	b.n	800b332 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b35e:	4613      	mov	r3, r2
 800b360:	e728      	b.n	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b362:	bf00      	nop
 800b364:	2000a31c 	.word	0x2000a31c
 800b368:	fffd8f01 	.word	0xfffd8f01
 800b36c:	00027100 	.word	0x00027100
 800b370:	0004e1ff 	.word	0x0004e1ff
 800b374:	0004e1fe 	.word	0x0004e1fe
 800b378:	2000a324 	.word	0x2000a324
 800b37c:	4613      	mov	r3, r2
 800b37e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b380:	9111      	str	r1, [sp, #68]	; 0x44
 800b382:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b386:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b38a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b38c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b390:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b394:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b398:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b39c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b3a0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b3a4:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b3a8:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b3ac:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b3b0:	469e      	mov	lr, r3
 800b3b2:	469c      	mov	ip, r3
 800b3b4:	f04f 0900 	mov.w	r9, #0
 800b3b8:	f1bc 0f00 	cmp.w	ip, #0
 800b3bc:	d147      	bne.n	800b44e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b3be:	eb03 0c07 	add.w	ip, r3, r7
 800b3c2:	1ad7      	subs	r7, r2, r3
 800b3c4:	f1b9 0f00 	cmp.w	r9, #0
 800b3c8:	d009      	beq.n	800b3de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b3ca:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b3ce:	9029      	str	r0, [sp, #164]	; 0xa4
 800b3d0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b3d4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b3d8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b3dc:	912d      	str	r1, [sp, #180]	; 0xb4
 800b3de:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b3e0:	9111      	str	r1, [sp, #68]	; 0x44
 800b3e2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b3e6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b3ea:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b3ee:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b3f2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b3f6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b3fa:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b3fe:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b402:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b406:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b40a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b40e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b412:	f04f 0800 	mov.w	r8, #0
 800b416:	f1be 0f00 	cmp.w	lr, #0
 800b41a:	d031      	beq.n	800b480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b41c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b41e:	4431      	add	r1, r6
 800b420:	4549      	cmp	r1, r9
 800b422:	4450      	add	r0, sl
 800b424:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b428:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b42c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b430:	db08      	blt.n	800b444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b432:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b436:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b43a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b43e:	3001      	adds	r0, #1
 800b440:	eba1 0109 	sub.w	r1, r1, r9
 800b444:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b448:	f04f 0801 	mov.w	r8, #1
 800b44c:	e7e3      	b.n	800b416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b44e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b450:	4431      	add	r1, r6
 800b452:	4541      	cmp	r1, r8
 800b454:	4450      	add	r0, sl
 800b456:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b45a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b45e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b462:	db08      	blt.n	800b476 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b464:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b468:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b46c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b470:	3001      	adds	r0, #1
 800b472:	eba1 0108 	sub.w	r1, r1, r8
 800b476:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b47a:	f04f 0901 	mov.w	r9, #1
 800b47e:	e79b      	b.n	800b3b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b480:	449c      	add	ip, r3
 800b482:	1aff      	subs	r7, r7, r3
 800b484:	f1b8 0f00 	cmp.w	r8, #0
 800b488:	d009      	beq.n	800b49e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b48a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b48e:	9019      	str	r0, [sp, #100]	; 0x64
 800b490:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b494:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b498:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b49c:	911d      	str	r1, [sp, #116]	; 0x74
 800b49e:	1ad2      	subs	r2, r2, r3
 800b4a0:	e68b      	b.n	800b1ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b4a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b4a4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800b4a6:	2b00      	cmp	r3, #0
 800b4a8:	f000 80d1 	beq.w	800b64e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b4ac:	ad19      	add	r5, sp, #100	; 0x64
 800b4ae:	ac39      	add	r4, sp, #228	; 0xe4
 800b4b0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b4b2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b4b6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b4ba:	930c      	str	r3, [sp, #48]	; 0x30
 800b4bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b4be:	6963      	ldr	r3, [r4, #20]
 800b4c0:	440b      	add	r3, r1
 800b4c2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b4c6:	4408      	add	r0, r1
 800b4c8:	b200      	sxth	r0, r0
 800b4ca:	4283      	cmp	r3, r0
 800b4cc:	900d      	str	r0, [sp, #52]	; 0x34
 800b4ce:	f280 80c1 	bge.w	800b654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800b4d2:	428b      	cmp	r3, r1
 800b4d4:	da08      	bge.n	800b4e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b4d6:	2a00      	cmp	r2, #0
 800b4d8:	dd06      	ble.n	800b4e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b4da:	1acb      	subs	r3, r1, r3
 800b4dc:	429a      	cmp	r2, r3
 800b4de:	f2c0 80bb 	blt.w	800b658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800b4e2:	2b00      	cmp	r3, #0
 800b4e4:	f300 80b9 	bgt.w	800b65a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800b4e8:	6967      	ldr	r7, [r4, #20]
 800b4ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b4ec:	443b      	add	r3, r7
 800b4ee:	461f      	mov	r7, r3
 800b4f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b4f2:	1bdf      	subs	r7, r3, r7
 800b4f4:	4297      	cmp	r7, r2
 800b4f6:	bfa8      	it	ge
 800b4f8:	4617      	movge	r7, r2
 800b4fa:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b4fe:	2f00      	cmp	r7, #0
 800b500:	f340 813c 	ble.w	800b77c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800b504:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b506:	6829      	ldr	r1, [r5, #0]
 800b508:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b50c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b510:	6820      	ldr	r0, [r4, #0]
 800b512:	4411      	add	r1, r2
 800b514:	4299      	cmp	r1, r3
 800b516:	dd1a      	ble.n	800b54e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b518:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b51c:	440b      	add	r3, r1
 800b51e:	4402      	add	r2, r0
 800b520:	b21b      	sxth	r3, r3
 800b522:	429a      	cmp	r2, r3
 800b524:	dc13      	bgt.n	800b54e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b526:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b528:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b52a:	681b      	ldr	r3, [r3, #0]
 800b52c:	9206      	str	r2, [sp, #24]
 800b52e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b530:	9205      	str	r2, [sp, #20]
 800b532:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b534:	9500      	str	r5, [sp, #0]
 800b536:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b53a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b53c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b53e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b542:	a912      	add	r1, sp, #72	; 0x48
 800b544:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800b548:	aa49      	add	r2, sp, #292	; 0x124
 800b54a:	4623      	mov	r3, r4
 800b54c:	47c8      	blx	r9
 800b54e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b552:	441a      	add	r2, r3
 800b554:	6963      	ldr	r3, [r4, #20]
 800b556:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b55a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b55e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b562:	68a1      	ldr	r1, [r4, #8]
 800b564:	ed94 6a08 	vldr	s12, [r4, #32]
 800b568:	6022      	str	r2, [r4, #0]
 800b56a:	3301      	adds	r3, #1
 800b56c:	6163      	str	r3, [r4, #20]
 800b56e:	69a3      	ldr	r3, [r4, #24]
 800b570:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b574:	3b01      	subs	r3, #1
 800b576:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b57a:	61a3      	str	r3, [r4, #24]
 800b57c:	6923      	ldr	r3, [r4, #16]
 800b57e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b582:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b586:	edd4 6a07 	vldr	s13, [r4, #28]
 800b58a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b58e:	440b      	add	r3, r1
 800b590:	68e1      	ldr	r1, [r4, #12]
 800b592:	6123      	str	r3, [r4, #16]
 800b594:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b598:	428b      	cmp	r3, r1
 800b59a:	edc4 6a07 	vstr	s13, [r4, #28]
 800b59e:	db15      	blt.n	800b5cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800b5a0:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b5a4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b5a8:	3201      	adds	r2, #1
 800b5aa:	edc4 6a07 	vstr	s13, [r4, #28]
 800b5ae:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b5b2:	6022      	str	r2, [r4, #0]
 800b5b4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b5b8:	1a5b      	subs	r3, r3, r1
 800b5ba:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b5be:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b5c2:	6123      	str	r3, [r4, #16]
 800b5c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b5c8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b5cc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b5d0:	441a      	add	r2, r3
 800b5d2:	696b      	ldr	r3, [r5, #20]
 800b5d4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b5d8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b5dc:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b5e0:	68a9      	ldr	r1, [r5, #8]
 800b5e2:	ed95 6a08 	vldr	s12, [r5, #32]
 800b5e6:	602a      	str	r2, [r5, #0]
 800b5e8:	3301      	adds	r3, #1
 800b5ea:	616b      	str	r3, [r5, #20]
 800b5ec:	69ab      	ldr	r3, [r5, #24]
 800b5ee:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b5f2:	3b01      	subs	r3, #1
 800b5f4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b5f8:	61ab      	str	r3, [r5, #24]
 800b5fa:	692b      	ldr	r3, [r5, #16]
 800b5fc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b600:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b604:	edd5 6a07 	vldr	s13, [r5, #28]
 800b608:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b60c:	440b      	add	r3, r1
 800b60e:	68e9      	ldr	r1, [r5, #12]
 800b610:	612b      	str	r3, [r5, #16]
 800b612:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b616:	428b      	cmp	r3, r1
 800b618:	edc5 6a07 	vstr	s13, [r5, #28]
 800b61c:	db15      	blt.n	800b64a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b61e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b622:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b626:	3201      	adds	r2, #1
 800b628:	edc5 6a07 	vstr	s13, [r5, #28]
 800b62c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b630:	602a      	str	r2, [r5, #0]
 800b632:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b636:	1a5b      	subs	r3, r3, r1
 800b638:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b63c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b640:	612b      	str	r3, [r5, #16]
 800b642:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b646:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b64a:	3f01      	subs	r7, #1
 800b64c:	e757      	b.n	800b4fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800b64e:	ad39      	add	r5, sp, #228	; 0xe4
 800b650:	ac19      	add	r4, sp, #100	; 0x64
 800b652:	e72d      	b.n	800b4b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800b654:	4613      	mov	r3, r2
 800b656:	e744      	b.n	800b4e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800b658:	4613      	mov	r3, r2
 800b65a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800b65e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800b660:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800b664:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800b668:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800b66c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800b670:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800b674:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800b678:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800b67c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800b67e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800b682:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800b686:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800b68a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800b68e:	960e      	str	r6, [sp, #56]	; 0x38
 800b690:	469e      	mov	lr, r3
 800b692:	461f      	mov	r7, r3
 800b694:	f04f 0900 	mov.w	r9, #0
 800b698:	2f00      	cmp	r7, #0
 800b69a:	d146      	bne.n	800b72a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800b69c:	449c      	add	ip, r3
 800b69e:	1ad7      	subs	r7, r2, r3
 800b6a0:	f1b9 0f00 	cmp.w	r9, #0
 800b6a4:	d009      	beq.n	800b6ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800b6a6:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800b6aa:	9039      	str	r0, [sp, #228]	; 0xe4
 800b6ac:	913d      	str	r1, [sp, #244]	; 0xf4
 800b6ae:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800b6b2:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800b6b6:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800b6ba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b6bc:	910e      	str	r1, [sp, #56]	; 0x38
 800b6be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b6c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b6c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b6ca:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b6ce:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b6d2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b6d6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b6da:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b6de:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b6e2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b6e6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b6ea:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b6ee:	f04f 0800 	mov.w	r8, #0
 800b6f2:	f1be 0f00 	cmp.w	lr, #0
 800b6f6:	d030      	beq.n	800b75a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800b6f8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b6fa:	4431      	add	r1, r6
 800b6fc:	4549      	cmp	r1, r9
 800b6fe:	4450      	add	r0, sl
 800b700:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b704:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b708:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b70c:	db08      	blt.n	800b720 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800b70e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b712:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b716:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b71a:	3001      	adds	r0, #1
 800b71c:	eba1 0109 	sub.w	r1, r1, r9
 800b720:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b724:	f04f 0801 	mov.w	r8, #1
 800b728:	e7e3      	b.n	800b6f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800b72a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b72c:	4431      	add	r1, r6
 800b72e:	4541      	cmp	r1, r8
 800b730:	4450      	add	r0, sl
 800b732:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b736:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b73a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b73e:	db08      	blt.n	800b752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800b740:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b744:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b748:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b74c:	3001      	adds	r0, #1
 800b74e:	eba1 0108 	sub.w	r1, r1, r8
 800b752:	3f01      	subs	r7, #1
 800b754:	f04f 0901 	mov.w	r9, #1
 800b758:	e79e      	b.n	800b698 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800b75a:	449c      	add	ip, r3
 800b75c:	1aff      	subs	r7, r7, r3
 800b75e:	f1b8 0f00 	cmp.w	r8, #0
 800b762:	d009      	beq.n	800b778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800b764:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b768:	9019      	str	r0, [sp, #100]	; 0x64
 800b76a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b76e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b772:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b776:	911d      	str	r1, [sp, #116]	; 0x74
 800b778:	1ad2      	subs	r2, r2, r3
 800b77a:	e6b5      	b.n	800b4e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b77c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b77e:	681b      	ldr	r3, [r3, #0]
 800b780:	b923      	cbnz	r3, 800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b782:	4b04      	ldr	r3, [pc, #16]	; (800b794 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800b784:	6818      	ldr	r0, [r3, #0]
 800b786:	6803      	ldr	r3, [r0, #0]
 800b788:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b78a:	4798      	blx	r3
 800b78c:	b05b      	add	sp, #364	; 0x16c
 800b78e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b792:	bf00      	nop
 800b794:	2000a324 	.word	0x2000a324

0800b798 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800b798:	b570      	push	{r4, r5, r6, lr}
 800b79a:	4604      	mov	r4, r0
 800b79c:	2500      	movs	r5, #0
 800b79e:	7223      	strb	r3, [r4, #8]
 800b7a0:	9804      	ldr	r0, [sp, #16]
 800b7a2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b7a6:	8025      	strh	r5, [r4, #0]
 800b7a8:	6061      	str	r1, [r4, #4]
 800b7aa:	7263      	strb	r3, [r4, #9]
 800b7ac:	60e0      	str	r0, [r4, #12]
 800b7ae:	8222      	strh	r2, [r4, #16]
 800b7b0:	8265      	strh	r5, [r4, #18]
 800b7b2:	82a5      	strh	r5, [r4, #20]
 800b7b4:	82e5      	strh	r5, [r4, #22]
 800b7b6:	8325      	strh	r5, [r4, #24]
 800b7b8:	8365      	strh	r5, [r4, #26]
 800b7ba:	83a5      	strh	r5, [r4, #28]
 800b7bc:	77a5      	strb	r5, [r4, #30]
 800b7be:	6803      	ldr	r3, [r0, #0]
 800b7c0:	695b      	ldr	r3, [r3, #20]
 800b7c2:	4798      	blx	r3
 800b7c4:	4606      	mov	r6, r0
 800b7c6:	b1f8      	cbz	r0, 800b808 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800b7c8:	68e0      	ldr	r0, [r4, #12]
 800b7ca:	6803      	ldr	r3, [r0, #0]
 800b7cc:	4631      	mov	r1, r6
 800b7ce:	68db      	ldr	r3, [r3, #12]
 800b7d0:	4798      	blx	r3
 800b7d2:	7b43      	ldrb	r3, [r0, #13]
 800b7d4:	7a82      	ldrb	r2, [r0, #10]
 800b7d6:	005b      	lsls	r3, r3, #1
 800b7d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b7dc:	4313      	orrs	r3, r2
 800b7de:	83a3      	strh	r3, [r4, #28]
 800b7e0:	7a63      	ldrb	r3, [r4, #9]
 800b7e2:	2b04      	cmp	r3, #4
 800b7e4:	4605      	mov	r5, r0
 800b7e6:	d10f      	bne.n	800b808 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800b7e8:	68e0      	ldr	r0, [r4, #12]
 800b7ea:	6803      	ldr	r3, [r0, #0]
 800b7ec:	462a      	mov	r2, r5
 800b7ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b7f0:	4631      	mov	r1, r6
 800b7f2:	4798      	blx	r3
 800b7f4:	7b6b      	ldrb	r3, [r5, #13]
 800b7f6:	005b      	lsls	r3, r3, #1
 800b7f8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800b7fc:	7aab      	ldrb	r3, [r5, #10]
 800b7fe:	4313      	orrs	r3, r2
 800b800:	4418      	add	r0, r3
 800b802:	8ba3      	ldrh	r3, [r4, #28]
 800b804:	4418      	add	r0, r3
 800b806:	83a0      	strh	r0, [r4, #28]
 800b808:	4620      	mov	r0, r4
 800b80a:	bd70      	pop	{r4, r5, r6, pc}

0800b80c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800b80c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b810:	2400      	movs	r4, #0
 800b812:	b085      	sub	sp, #20
 800b814:	4681      	mov	r9, r0
 800b816:	4688      	mov	r8, r1
 800b818:	4692      	mov	sl, r2
 800b81a:	469b      	mov	fp, r3
 800b81c:	4627      	mov	r7, r4
 800b81e:	4625      	mov	r5, r4
 800b820:	4626      	mov	r6, r4
 800b822:	4554      	cmp	r4, sl
 800b824:	da2a      	bge.n	800b87c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b826:	2300      	movs	r3, #0
 800b828:	9303      	str	r3, [sp, #12]
 800b82a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b82e:	429d      	cmp	r5, r3
 800b830:	d004      	beq.n	800b83c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800b832:	f242 030b 	movw	r3, #8203	; 0x200b
 800b836:	429d      	cmp	r5, r3
 800b838:	bf18      	it	ne
 800b83a:	462f      	movne	r7, r5
 800b83c:	ab03      	add	r3, sp, #12
 800b83e:	4642      	mov	r2, r8
 800b840:	4659      	mov	r1, fp
 800b842:	4648      	mov	r0, r9
 800b844:	f002 feb4 	bl	800e5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b848:	4605      	mov	r5, r0
 800b84a:	b1b8      	cbz	r0, 800b87c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b84c:	280a      	cmp	r0, #10
 800b84e:	d015      	beq.n	800b87c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b850:	9a03      	ldr	r2, [sp, #12]
 800b852:	b18a      	cbz	r2, 800b878 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800b854:	7b50      	ldrb	r0, [r2, #13]
 800b856:	7a93      	ldrb	r3, [r2, #10]
 800b858:	8895      	ldrh	r5, [r2, #4]
 800b85a:	0040      	lsls	r0, r0, #1
 800b85c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800b860:	4303      	orrs	r3, r0
 800b862:	9301      	str	r3, [sp, #4]
 800b864:	f8d8 3000 	ldr.w	r3, [r8]
 800b868:	4639      	mov	r1, r7
 800b86a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b86c:	4640      	mov	r0, r8
 800b86e:	4798      	blx	r3
 800b870:	9b01      	ldr	r3, [sp, #4]
 800b872:	4418      	add	r0, r3
 800b874:	4406      	add	r6, r0
 800b876:	b2b6      	uxth	r6, r6
 800b878:	3401      	adds	r4, #1
 800b87a:	e7d2      	b.n	800b822 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800b87c:	4630      	mov	r0, r6
 800b87e:	b005      	add	sp, #20
 800b880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b884 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800b884:	2a02      	cmp	r2, #2
 800b886:	b530      	push	{r4, r5, lr}
 800b888:	d011      	beq.n	800b8ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800b88a:	2a03      	cmp	r2, #3
 800b88c:	d01c      	beq.n	800b8c8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800b88e:	2a01      	cmp	r2, #1
 800b890:	d10c      	bne.n	800b8ac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800b892:	888b      	ldrh	r3, [r1, #4]
 800b894:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800b898:	8801      	ldrh	r1, [r0, #0]
 800b89a:	8844      	ldrh	r4, [r0, #2]
 800b89c:	8004      	strh	r4, [r0, #0]
 800b89e:	1a9b      	subs	r3, r3, r2
 800b8a0:	1a5b      	subs	r3, r3, r1
 800b8a2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b8a6:	8043      	strh	r3, [r0, #2]
 800b8a8:	8081      	strh	r1, [r0, #4]
 800b8aa:	80c2      	strh	r2, [r0, #6]
 800b8ac:	bd30      	pop	{r4, r5, pc}
 800b8ae:	88cb      	ldrh	r3, [r1, #6]
 800b8b0:	88c2      	ldrh	r2, [r0, #6]
 800b8b2:	1a9b      	subs	r3, r3, r2
 800b8b4:	8842      	ldrh	r2, [r0, #2]
 800b8b6:	1a9b      	subs	r3, r3, r2
 800b8b8:	888a      	ldrh	r2, [r1, #4]
 800b8ba:	8881      	ldrh	r1, [r0, #4]
 800b8bc:	8043      	strh	r3, [r0, #2]
 800b8be:	1a52      	subs	r2, r2, r1
 800b8c0:	8801      	ldrh	r1, [r0, #0]
 800b8c2:	1a52      	subs	r2, r2, r1
 800b8c4:	8002      	strh	r2, [r0, #0]
 800b8c6:	e7f1      	b.n	800b8ac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800b8c8:	88cb      	ldrh	r3, [r1, #6]
 800b8ca:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800b8ce:	8841      	ldrh	r1, [r0, #2]
 800b8d0:	f9b0 5000 	ldrsh.w	r5, [r0]
 800b8d4:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800b8d8:	8045      	strh	r5, [r0, #2]
 800b8da:	1a9b      	subs	r3, r3, r2
 800b8dc:	1a5b      	subs	r3, r3, r1
 800b8de:	8003      	strh	r3, [r0, #0]
 800b8e0:	8082      	strh	r2, [r0, #4]
 800b8e2:	80c4      	strh	r4, [r0, #6]
 800b8e4:	e7e2      	b.n	800b8ac <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800b8e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800b8e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8ea:	b09f      	sub	sp, #124	; 0x7c
 800b8ec:	9116      	str	r1, [sp, #88]	; 0x58
 800b8ee:	9317      	str	r3, [sp, #92]	; 0x5c
 800b8f0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800b8f2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b8f4:	8809      	ldrh	r1, [r1, #0]
 800b8f6:	889b      	ldrh	r3, [r3, #4]
 800b8f8:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800b8fc:	9212      	str	r2, [sp, #72]	; 0x48
 800b8fe:	440b      	add	r3, r1
 800b900:	b21b      	sxth	r3, r3
 800b902:	9310      	str	r3, [sp, #64]	; 0x40
 800b904:	f8d8 3000 	ldr.w	r3, [r8]
 800b908:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800b90c:	7a59      	ldrb	r1, [r3, #9]
 800b90e:	7a1b      	ldrb	r3, [r3, #8]
 800b910:	9315      	str	r3, [sp, #84]	; 0x54
 800b912:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800b914:	9011      	str	r0, [sp, #68]	; 0x44
 800b916:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800b91a:	9114      	str	r1, [sp, #80]	; 0x50
 800b91c:	f9b3 5000 	ldrsh.w	r5, [r3]
 800b920:	2a00      	cmp	r2, #0
 800b922:	d067      	beq.n	800b9f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800b924:	f898 3010 	ldrb.w	r3, [r8, #16]
 800b928:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800b92a:	2b04      	cmp	r3, #4
 800b92c:	bf14      	ite	ne
 800b92e:	2301      	movne	r3, #1
 800b930:	2302      	moveq	r3, #2
 800b932:	4413      	add	r3, r2
 800b934:	f04f 0900 	mov.w	r9, #0
 800b938:	930f      	str	r3, [sp, #60]	; 0x3c
 800b93a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800b93e:	464c      	mov	r4, r9
 800b940:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800b944:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800b948:	4293      	cmp	r3, r2
 800b94a:	f280 808c 	bge.w	800ba66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800b94e:	2300      	movs	r3, #0
 800b950:	931c      	str	r3, [sp, #112]	; 0x70
 800b952:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b956:	429c      	cmp	r4, r3
 800b958:	d006      	beq.n	800b968 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800b95a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b95c:	f242 020b 	movw	r2, #8203	; 0x200b
 800b960:	4294      	cmp	r4, r2
 800b962:	bf18      	it	ne
 800b964:	4623      	movne	r3, r4
 800b966:	930d      	str	r3, [sp, #52]	; 0x34
 800b968:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b96a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800b96c:	f8d8 2000 	ldr.w	r2, [r8]
 800b970:	428b      	cmp	r3, r1
 800b972:	db41      	blt.n	800b9f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800b974:	6813      	ldr	r3, [r2, #0]
 800b976:	4610      	mov	r0, r2
 800b978:	695b      	ldr	r3, [r3, #20]
 800b97a:	4798      	blx	r3
 800b97c:	4604      	mov	r4, r0
 800b97e:	f8d8 0000 	ldr.w	r0, [r8]
 800b982:	6803      	ldr	r3, [r0, #0]
 800b984:	aa1d      	add	r2, sp, #116	; 0x74
 800b986:	689e      	ldr	r6, [r3, #8]
 800b988:	4621      	mov	r1, r4
 800b98a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b98e:	47b0      	blx	r6
 800b990:	901c      	str	r0, [sp, #112]	; 0x70
 800b992:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b996:	429c      	cmp	r4, r3
 800b998:	f000 80e9 	beq.w	800bb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b99c:	f242 030b 	movw	r3, #8203	; 0x200b
 800b9a0:	429c      	cmp	r4, r3
 800b9a2:	f000 80e4 	beq.w	800bb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b9a6:	2c00      	cmp	r4, #0
 800b9a8:	f000 80f6 	beq.w	800bb98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b9ac:	2c0a      	cmp	r4, #10
 800b9ae:	d060      	beq.n	800ba72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b9b0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800b9b2:	b36a      	cbz	r2, 800ba10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800b9b4:	8894      	ldrh	r4, [r2, #4]
 800b9b6:	f1bb 0f00 	cmp.w	fp, #0
 800b9ba:	d03b      	beq.n	800ba34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800b9bc:	f892 900d 	ldrb.w	r9, [r2, #13]
 800b9c0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800b9c4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800b9c8:	f892 900a 	ldrb.w	r9, [r2, #10]
 800b9cc:	f1bb 0f01 	cmp.w	fp, #1
 800b9d0:	ea49 0903 	orr.w	r9, r9, r3
 800b9d4:	d134      	bne.n	800ba40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800b9d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b9d8:	eba5 0509 	sub.w	r5, r5, r9
 800b9dc:	2b00      	cmp	r3, #0
 800b9de:	d14f      	bne.n	800ba80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800b9e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800b9e2:	eb09 0305 	add.w	r3, r9, r5
 800b9e6:	4413      	add	r3, r2
 800b9e8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800b9ea:	f9b2 2000 	ldrsh.w	r2, [r2]
 800b9ee:	4293      	cmp	r3, r2
 800b9f0:	da51      	bge.n	800ba96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800b9f2:	e038      	b.n	800ba66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800b9f4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b9f6:	e79d      	b.n	800b934 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800b9f8:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b9fc:	9301      	str	r3, [sp, #4]
 800b9fe:	ab1d      	add	r3, sp, #116	; 0x74
 800ba00:	9300      	str	r3, [sp, #0]
 800ba02:	4659      	mov	r1, fp
 800ba04:	ab1c      	add	r3, sp, #112	; 0x70
 800ba06:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800ba08:	f002 fe2a 	bl	800e660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800ba0c:	4604      	mov	r4, r0
 800ba0e:	e7c0      	b.n	800b992 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800ba10:	f8d8 0000 	ldr.w	r0, [r8]
 800ba14:	6803      	ldr	r3, [r0, #0]
 800ba16:	691b      	ldr	r3, [r3, #16]
 800ba18:	4798      	blx	r3
 800ba1a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ba1e:	4298      	cmp	r0, r3
 800ba20:	f000 80a5 	beq.w	800bb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ba24:	f242 030b 	movw	r3, #8203	; 0x200b
 800ba28:	4298      	cmp	r0, r3
 800ba2a:	f000 80a0 	beq.w	800bb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ba2e:	f1bb 0f00 	cmp.w	fp, #0
 800ba32:	d100      	bne.n	800ba36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800ba34:	444d      	add	r5, r9
 800ba36:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ba38:	2a00      	cmp	r2, #0
 800ba3a:	d1bf      	bne.n	800b9bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800ba3c:	4691      	mov	r9, r2
 800ba3e:	e096      	b.n	800bb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ba40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ba42:	2b00      	cmp	r3, #0
 800ba44:	f000 80aa 	beq.w	800bb9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800ba48:	f1bb 0f00 	cmp.w	fp, #0
 800ba4c:	d118      	bne.n	800ba80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800ba4e:	f8d8 0000 	ldr.w	r0, [r8]
 800ba52:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ba54:	6803      	ldr	r3, [r0, #0]
 800ba56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ba58:	4798      	blx	r3
 800ba5a:	4405      	add	r5, r0
 800ba5c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ba5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ba60:	1aeb      	subs	r3, r5, r3
 800ba62:	4293      	cmp	r3, r2
 800ba64:	dd17      	ble.n	800ba96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800ba66:	2c00      	cmp	r4, #0
 800ba68:	f000 8096 	beq.w	800bb98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800ba6c:	2c0a      	cmp	r4, #10
 800ba6e:	f040 8084 	bne.w	800bb7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800ba72:	240a      	movs	r4, #10
 800ba74:	fab4 f084 	clz	r0, r4
 800ba78:	0940      	lsrs	r0, r0, #5
 800ba7a:	b01f      	add	sp, #124	; 0x7c
 800ba7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba80:	f8d8 0000 	ldr.w	r0, [r8]
 800ba84:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ba86:	6803      	ldr	r3, [r0, #0]
 800ba88:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ba8a:	4798      	blx	r3
 800ba8c:	f1bb 0f01 	cmp.w	fp, #1
 800ba90:	eba5 0500 	sub.w	r5, r5, r0
 800ba94:	d0a4      	beq.n	800b9e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800ba96:	981c      	ldr	r0, [sp, #112]	; 0x70
 800ba98:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ba9a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800ba9e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800baa2:	7b43      	ldrb	r3, [r0, #13]
 800baa4:	015b      	lsls	r3, r3, #5
 800baa6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800baaa:	7983      	ldrb	r3, [r0, #6]
 800baac:	4429      	add	r1, r5
 800baae:	4313      	orrs	r3, r2
 800bab0:	440b      	add	r3, r1
 800bab2:	42b3      	cmp	r3, r6
 800bab4:	db5b      	blt.n	800bb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bab6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bab8:	4299      	cmp	r1, r3
 800baba:	da58      	bge.n	800bb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800babc:	f8d8 0000 	ldr.w	r0, [r8]
 800bac0:	6803      	ldr	r3, [r0, #0]
 800bac2:	42ae      	cmp	r6, r5
 800bac4:	bfc8      	it	gt
 800bac6:	1b76      	subgt	r6, r6, r5
 800bac8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800baca:	bfcc      	ite	gt
 800bacc:	b2b6      	uxthgt	r6, r6
 800bace:	2600      	movle	r6, #0
 800bad0:	4798      	blx	r3
 800bad2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800bad4:	7b5a      	ldrb	r2, [r3, #13]
 800bad6:	00d1      	lsls	r1, r2, #3
 800bad8:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800badc:	7a19      	ldrb	r1, [r3, #8]
 800bade:	4339      	orrs	r1, r7
 800bae0:	0657      	lsls	r7, r2, #25
 800bae2:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800bae4:	bf44      	itt	mi
 800bae6:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800baea:	b209      	sxthmi	r1, r1
 800baec:	19c7      	adds	r7, r0, r7
 800baee:	1a7f      	subs	r7, r7, r1
 800baf0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800baf2:	b2bf      	uxth	r7, r7
 800baf4:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800baf8:	fa0f fa87 	sxth.w	sl, r7
 800bafc:	4551      	cmp	r1, sl
 800bafe:	dd3a      	ble.n	800bb76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bb00:	0112      	lsls	r2, r2, #4
 800bb02:	79d8      	ldrb	r0, [r3, #7]
 800bb04:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800bb08:	4302      	orrs	r2, r0
 800bb0a:	4492      	add	sl, r2
 800bb0c:	4551      	cmp	r1, sl
 800bb0e:	dc2e      	bgt.n	800bb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bb10:	1bcf      	subs	r7, r1, r7
 800bb12:	b2bf      	uxth	r7, r7
 800bb14:	468a      	mov	sl, r1
 800bb16:	9319      	str	r3, [sp, #100]	; 0x64
 800bb18:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bb1a:	f8d8 0000 	ldr.w	r0, [r8]
 800bb1e:	681a      	ldr	r2, [r3, #0]
 800bb20:	6801      	ldr	r1, [r0, #0]
 800bb22:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bb24:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800bb26:	9313      	str	r3, [sp, #76]	; 0x4c
 800bb28:	9218      	str	r2, [sp, #96]	; 0x60
 800bb2a:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800bb2c:	4788      	blx	r1
 800bb2e:	f898 1006 	ldrb.w	r1, [r8, #6]
 800bb32:	910b      	str	r1, [sp, #44]	; 0x2c
 800bb34:	f898 100e 	ldrb.w	r1, [r8, #14]
 800bb38:	910a      	str	r1, [sp, #40]	; 0x28
 800bb3a:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800bb3e:	9109      	str	r1, [sp, #36]	; 0x24
 800bb40:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bb42:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800bb46:	9305      	str	r3, [sp, #20]
 800bb48:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bb4a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800bb4c:	9206      	str	r2, [sp, #24]
 800bb4e:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800bb52:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800bb56:	e9cd a601 	strd	sl, r6, [sp, #4]
 800bb5a:	442e      	add	r6, r5
 800bb5c:	b236      	sxth	r6, r6
 800bb5e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bb60:	9600      	str	r6, [sp, #0]
 800bb62:	681a      	ldr	r2, [r3, #0]
 800bb64:	9916      	ldr	r1, [sp, #88]	; 0x58
 800bb66:	685b      	ldr	r3, [r3, #4]
 800bb68:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bb6a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800bb6c:	47b0      	blx	r6
 800bb6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bb70:	3301      	adds	r3, #1
 800bb72:	930e      	str	r3, [sp, #56]	; 0x38
 800bb74:	e6e6      	b.n	800b944 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800bb76:	2700      	movs	r7, #0
 800bb78:	e7cd      	b.n	800bb16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800bb7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800bb7c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bb7e:	3501      	adds	r5, #1
 800bb80:	429d      	cmp	r5, r3
 800bb82:	f6bf af77 	bge.w	800ba74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800bb86:	4659      	mov	r1, fp
 800bb88:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bb8a:	f7f6 ffbb 	bl	8002b04 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800bb8e:	4604      	mov	r4, r0
 800bb90:	b110      	cbz	r0, 800bb98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bb92:	280a      	cmp	r0, #10
 800bb94:	d1f2      	bne.n	800bb7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800bb96:	e76c      	b.n	800ba72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800bb98:	2400      	movs	r4, #0
 800bb9a:	e76b      	b.n	800ba74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800bb9c:	f1bb 0f00 	cmp.w	fp, #0
 800bba0:	f43f af5c 	beq.w	800ba5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800bba4:	e777      	b.n	800ba96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800bba6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800bba6:	b530      	push	{r4, r5, lr}
 800bba8:	8a44      	ldrh	r4, [r0, #18]
 800bbaa:	8ac5      	ldrh	r5, [r0, #22]
 800bbac:	82c3      	strh	r3, [r0, #22]
 800bbae:	442c      	add	r4, r5
 800bbb0:	1ae4      	subs	r4, r4, r3
 800bbb2:	8244      	strh	r4, [r0, #18]
 800bbb4:	8b03      	ldrh	r3, [r0, #24]
 800bbb6:	8a84      	ldrh	r4, [r0, #20]
 800bbb8:	4422      	add	r2, r4
 800bbba:	440c      	add	r4, r1
 800bbbc:	1a59      	subs	r1, r3, r1
 800bbbe:	8342      	strh	r2, [r0, #26]
 800bbc0:	8284      	strh	r4, [r0, #20]
 800bbc2:	8301      	strh	r1, [r0, #24]
 800bbc4:	bd30      	pop	{r4, r5, pc}

0800bbc6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800bbc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbca:	7a43      	ldrb	r3, [r0, #9]
 800bbcc:	1eda      	subs	r2, r3, #3
 800bbce:	b087      	sub	sp, #28
 800bbd0:	4604      	mov	r4, r0
 800bbd2:	b2d2      	uxtb	r2, r2
 800bbd4:	460f      	mov	r7, r1
 800bbd6:	2900      	cmp	r1, #0
 800bbd8:	d036      	beq.n	800bc48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800bbda:	2a01      	cmp	r2, #1
 800bbdc:	d932      	bls.n	800bc44 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800bbde:	1e58      	subs	r0, r3, #1
 800bbe0:	f1d0 0b00 	rsbs	fp, r0, #0
 800bbe4:	eb4b 0b00 	adc.w	fp, fp, r0
 800bbe8:	1e99      	subs	r1, r3, #2
 800bbea:	424b      	negs	r3, r1
 800bbec:	414b      	adcs	r3, r1
 800bbee:	9303      	str	r3, [sp, #12]
 800bbf0:	2300      	movs	r3, #0
 800bbf2:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800bbf6:	2500      	movs	r5, #0
 800bbf8:	8265      	strh	r5, [r4, #18]
 800bbfa:	82a5      	strh	r5, [r4, #20]
 800bbfc:	46a9      	mov	r9, r5
 800bbfe:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800bc02:	2300      	movs	r3, #0
 800bc04:	9305      	str	r3, [sp, #20]
 800bc06:	8823      	ldrh	r3, [r4, #0]
 800bc08:	2b20      	cmp	r3, #32
 800bc0a:	d02b      	beq.n	800bc64 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800bc0c:	eba3 020a 	sub.w	r2, r3, sl
 800bc10:	4256      	negs	r6, r2
 800bc12:	4156      	adcs	r6, r2
 800bc14:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800bc18:	4293      	cmp	r3, r2
 800bc1a:	d004      	beq.n	800bc26 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800bc1c:	4553      	cmp	r3, sl
 800bc1e:	bf16      	itet	ne
 800bc20:	4699      	movne	r9, r3
 800bc22:	2601      	moveq	r6, #1
 800bc24:	2600      	movne	r6, #0
 800bc26:	ab05      	add	r3, sp, #20
 800bc28:	68e2      	ldr	r2, [r4, #12]
 800bc2a:	7a21      	ldrb	r1, [r4, #8]
 800bc2c:	6860      	ldr	r0, [r4, #4]
 800bc2e:	f002 fcbf 	bl	800e5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bc32:	8020      	strh	r0, [r4, #0]
 800bc34:	b9c8      	cbnz	r0, 800bc6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800bc36:	8b22      	ldrh	r2, [r4, #24]
 800bc38:	2300      	movs	r3, #0
 800bc3a:	4611      	mov	r1, r2
 800bc3c:	4620      	mov	r0, r4
 800bc3e:	f7ff ffb2 	bl	800bba6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bc42:	e066      	b.n	800bd12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800bc44:	468b      	mov	fp, r1
 800bc46:	e7cf      	b.n	800bbe8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800bc48:	3b01      	subs	r3, #1
 800bc4a:	2a01      	cmp	r2, #1
 800bc4c:	bf8c      	ite	hi
 800bc4e:	2200      	movhi	r2, #0
 800bc50:	2201      	movls	r2, #1
 800bc52:	2b01      	cmp	r3, #1
 800bc54:	bf8c      	ite	hi
 800bc56:	2300      	movhi	r3, #0
 800bc58:	2301      	movls	r3, #1
 800bc5a:	9202      	str	r2, [sp, #8]
 800bc5c:	9301      	str	r3, [sp, #4]
 800bc5e:	9103      	str	r1, [sp, #12]
 800bc60:	468b      	mov	fp, r1
 800bc62:	e7c8      	b.n	800bbf6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800bc64:	4699      	mov	r9, r3
 800bc66:	2601      	movs	r6, #1
 800bc68:	e7dd      	b.n	800bc26 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800bc6a:	8ae3      	ldrh	r3, [r4, #22]
 800bc6c:	280a      	cmp	r0, #10
 800bc6e:	f103 0301 	add.w	r3, r3, #1
 800bc72:	82e3      	strh	r3, [r4, #22]
 800bc74:	d0df      	beq.n	800bc36 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800bc76:	9a05      	ldr	r2, [sp, #20]
 800bc78:	bb42      	cbnz	r2, 800bccc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800bc7a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bc7e:	4298      	cmp	r0, r3
 800bc80:	d001      	beq.n	800bc86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bc82:	4550      	cmp	r0, sl
 800bc84:	d1bd      	bne.n	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bc86:	8823      	ldrh	r3, [r4, #0]
 800bc88:	8b21      	ldrh	r1, [r4, #24]
 800bc8a:	2b20      	cmp	r3, #32
 800bc8c:	d001      	beq.n	800bc92 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800bc8e:	4553      	cmp	r3, sl
 800bc90:	d131      	bne.n	800bcf6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800bc92:	2e00      	cmp	r6, #0
 800bc94:	bf0a      	itet	eq
 800bc96:	460d      	moveq	r5, r1
 800bc98:	4630      	movne	r0, r6
 800bc9a:	2001      	moveq	r0, #1
 800bc9c:	440a      	add	r2, r1
 800bc9e:	8aa3      	ldrh	r3, [r4, #20]
 800bca0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800bca4:	b292      	uxth	r2, r2
 800bca6:	8322      	strh	r2, [r4, #24]
 800bca8:	4413      	add	r3, r2
 800bcaa:	2f00      	cmp	r7, #0
 800bcac:	d03a      	beq.n	800bd24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800bcae:	f1bb 0f00 	cmp.w	fp, #0
 800bcb2:	d102      	bne.n	800bcba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800bcb4:	9903      	ldr	r1, [sp, #12]
 800bcb6:	b301      	cbz	r1, 800bcfa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800bcb8:	b1f8      	cbz	r0, 800bcfa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800bcba:	8ba1      	ldrh	r1, [r4, #28]
 800bcbc:	4419      	add	r1, r3
 800bcbe:	458c      	cmp	ip, r1
 800bcc0:	da2a      	bge.n	800bd18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800bcc2:	8a61      	ldrh	r1, [r4, #18]
 800bcc4:	b341      	cbz	r1, 800bd18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800bcc6:	4563      	cmp	r3, ip
 800bcc8:	dd9b      	ble.n	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bcca:	e01c      	b.n	800bd06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800bccc:	8893      	ldrh	r3, [r2, #4]
 800bcce:	8023      	strh	r3, [r4, #0]
 800bcd0:	f892 800d 	ldrb.w	r8, [r2, #13]
 800bcd4:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800bcd8:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800bcdc:	f892 800a 	ldrb.w	r8, [r2, #10]
 800bce0:	ea48 0800 	orr.w	r8, r8, r0
 800bce4:	68e0      	ldr	r0, [r4, #12]
 800bce6:	6803      	ldr	r3, [r0, #0]
 800bce8:	4649      	mov	r1, r9
 800bcea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bcec:	4798      	blx	r3
 800bcee:	eb08 0200 	add.w	r2, r8, r0
 800bcf2:	b292      	uxth	r2, r2
 800bcf4:	e7c7      	b.n	800bc86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bcf6:	2000      	movs	r0, #0
 800bcf8:	e7d0      	b.n	800bc9c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800bcfa:	4563      	cmp	r3, ip
 800bcfc:	dd81      	ble.n	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bcfe:	8a63      	ldrh	r3, [r4, #18]
 800bd00:	2b00      	cmp	r3, #0
 800bd02:	f43f af7e 	beq.w	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bd06:	2301      	movs	r3, #1
 800bd08:	77a3      	strb	r3, [r4, #30]
 800bd0a:	8ba2      	ldrh	r2, [r4, #28]
 800bd0c:	8b63      	ldrh	r3, [r4, #26]
 800bd0e:	4413      	add	r3, r2
 800bd10:	8363      	strh	r3, [r4, #26]
 800bd12:	b007      	add	sp, #28
 800bd14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd18:	2300      	movs	r3, #0
 800bd1a:	4611      	mov	r1, r2
 800bd1c:	4620      	mov	r0, r4
 800bd1e:	f7ff ff42 	bl	800bba6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bd22:	e76e      	b.n	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bd24:	4563      	cmp	r3, ip
 800bd26:	dd14      	ble.n	800bd52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800bd28:	9b02      	ldr	r3, [sp, #8]
 800bd2a:	b113      	cbz	r3, 800bd32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800bd2c:	2301      	movs	r3, #1
 800bd2e:	460a      	mov	r2, r1
 800bd30:	e783      	b.n	800bc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800bd32:	9b01      	ldr	r3, [sp, #4]
 800bd34:	2b00      	cmp	r3, #0
 800bd36:	f43f af64 	beq.w	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bd3a:	2800      	cmp	r0, #0
 800bd3c:	f47f af61 	bne.w	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bd40:	b116      	cbz	r6, 800bd48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800bd42:	2301      	movs	r3, #1
 800bd44:	462a      	mov	r2, r5
 800bd46:	e779      	b.n	800bc3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800bd48:	8a63      	ldrh	r3, [r4, #18]
 800bd4a:	2b00      	cmp	r3, #0
 800bd4c:	f43f af59 	beq.w	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bd50:	e7df      	b.n	800bd12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800bd52:	2800      	cmp	r0, #0
 800bd54:	f47f af55 	bne.w	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bd58:	2e00      	cmp	r6, #0
 800bd5a:	f43f af52 	beq.w	800bc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bd5e:	2301      	movs	r3, #1
 800bd60:	462a      	mov	r2, r5
 800bd62:	e7db      	b.n	800bd1c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800bd64 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800bd64:	b530      	push	{r4, r5, lr}
 800bd66:	4605      	mov	r5, r0
 800bd68:	b08b      	sub	sp, #44	; 0x2c
 800bd6a:	b191      	cbz	r1, 800bd92 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800bd6c:	e9cd 3100 	strd	r3, r1, [sp]
 800bd70:	4613      	mov	r3, r2
 800bd72:	4601      	mov	r1, r0
 800bd74:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800bd78:	a802      	add	r0, sp, #8
 800bd7a:	f7ff fd0d 	bl	800b798 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800bd7e:	2401      	movs	r4, #1
 800bd80:	2100      	movs	r1, #0
 800bd82:	a802      	add	r0, sp, #8
 800bd84:	f7ff ff1f 	bl	800bbc6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800bd88:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800bd8c:	b163      	cbz	r3, 800bda8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800bd8e:	3401      	adds	r4, #1
 800bd90:	e7f6      	b.n	800bd80 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800bd92:	f002 fd05 	bl	800e7a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bd96:	2401      	movs	r4, #1
 800bd98:	280a      	cmp	r0, #10
 800bd9a:	4628      	mov	r0, r5
 800bd9c:	bf08      	it	eq
 800bd9e:	3401      	addeq	r4, #1
 800bda0:	f002 fcfe 	bl	800e7a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bda4:	2800      	cmp	r0, #0
 800bda6:	d1f7      	bne.n	800bd98 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800bda8:	b2a0      	uxth	r0, r4
 800bdaa:	b00b      	add	sp, #44	; 0x2c
 800bdac:	bd30      	pop	{r4, r5, pc}

0800bdae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800bdae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdb2:	b0df      	sub	sp, #380	; 0x17c
 800bdb4:	4689      	mov	r9, r1
 800bdb6:	f8dd a1a0 	ldr.w	sl, [sp, #416]	; 0x1a0
 800bdba:	900a      	str	r0, [sp, #40]	; 0x28
 800bdbc:	461c      	mov	r4, r3
 800bdbe:	f1ba 0f00 	cmp.w	sl, #0
 800bdc2:	f000 80b1 	beq.w	800bf28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bdc6:	681b      	ldr	r3, [r3, #0]
 800bdc8:	2b00      	cmp	r3, #0
 800bdca:	f000 80ad 	beq.w	800bf28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bdce:	7ba3      	ldrb	r3, [r4, #14]
 800bdd0:	2b00      	cmp	r3, #0
 800bdd2:	f000 80a9 	beq.w	800bf28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bdd6:	6810      	ldr	r0, [r2, #0]
 800bdd8:	6851      	ldr	r1, [r2, #4]
 800bdda:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800bdde:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800bde2:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800bde6:	4643      	mov	r3, r8
 800bde8:	c303      	stmia	r3!, {r0, r1}
 800bdea:	2500      	movs	r5, #0
 800bdec:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800bdf0:	79a2      	ldrb	r2, [r4, #6]
 800bdf2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800bdf6:	a90f      	add	r1, sp, #60	; 0x3c
 800bdf8:	4640      	mov	r0, r8
 800bdfa:	950f      	str	r5, [sp, #60]	; 0x3c
 800bdfc:	f7ff fd42 	bl	800b884 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800be00:	a90f      	add	r1, sp, #60	; 0x3c
 800be02:	4608      	mov	r0, r1
 800be04:	79a2      	ldrb	r2, [r4, #6]
 800be06:	af19      	add	r7, sp, #100	; 0x64
 800be08:	f7ff fd3c 	bl	800b884 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800be0c:	4638      	mov	r0, r7
 800be0e:	f002 f886 	bl	800df1e <_ZN8touchgfx12TextProviderC1Ev>
 800be12:	6820      	ldr	r0, [r4, #0]
 800be14:	6803      	ldr	r3, [r0, #0]
 800be16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800be18:	4798      	blx	r3
 800be1a:	4606      	mov	r6, r0
 800be1c:	6820      	ldr	r0, [r4, #0]
 800be1e:	6803      	ldr	r3, [r0, #0]
 800be20:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800be22:	4798      	blx	r3
 800be24:	4633      	mov	r3, r6
 800be26:	9000      	str	r0, [sp, #0]
 800be28:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800be2a:	4651      	mov	r1, sl
 800be2c:	4638      	mov	r0, r7
 800be2e:	f002 f8c3 	bl	800dfb8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800be32:	6820      	ldr	r0, [r4, #0]
 800be34:	7923      	ldrb	r3, [r4, #4]
 800be36:	9308      	str	r3, [sp, #32]
 800be38:	6803      	ldr	r3, [r0, #0]
 800be3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be3c:	4798      	blx	r3
 800be3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800be42:	181e      	adds	r6, r3, r0
 800be44:	42ae      	cmp	r6, r5
 800be46:	dd06      	ble.n	800be56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800be48:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800be4c:	4282      	cmp	r2, r0
 800be4e:	bfa4      	itt	ge
 800be50:	189d      	addge	r5, r3, r2
 800be52:	fb95 f5f6 	sdivge	r5, r5, r6
 800be56:	a830      	add	r0, sp, #192	; 0xc0
 800be58:	f002 f861 	bl	800df1e <_ZN8touchgfx12TextProviderC1Ev>
 800be5c:	7c23      	ldrb	r3, [r4, #16]
 800be5e:	b17b      	cbz	r3, 800be80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800be60:	6820      	ldr	r0, [r4, #0]
 800be62:	6803      	ldr	r3, [r0, #0]
 800be64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800be66:	4798      	blx	r3
 800be68:	4683      	mov	fp, r0
 800be6a:	6820      	ldr	r0, [r4, #0]
 800be6c:	6803      	ldr	r3, [r0, #0]
 800be6e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800be70:	4798      	blx	r3
 800be72:	465b      	mov	r3, fp
 800be74:	9000      	str	r0, [sp, #0]
 800be76:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800be78:	4651      	mov	r1, sl
 800be7a:	a830      	add	r0, sp, #192	; 0xc0
 800be7c:	f002 f89c 	bl	800dfb8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800be80:	7c21      	ldrb	r1, [r4, #16]
 800be82:	9101      	str	r1, [sp, #4]
 800be84:	6821      	ldr	r1, [r4, #0]
 800be86:	7963      	ldrb	r3, [r4, #5]
 800be88:	9100      	str	r1, [sp, #0]
 800be8a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800be8e:	a930      	add	r1, sp, #192	; 0xc0
 800be90:	a811      	add	r0, sp, #68	; 0x44
 800be92:	f7ff fc81 	bl	800b798 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800be96:	7c23      	ldrb	r3, [r4, #16]
 800be98:	b9bb      	cbnz	r3, 800beca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x11c>
 800be9a:	fa1f fa86 	uxth.w	sl, r6
 800be9e:	2d00      	cmp	r5, #0
 800bea0:	dd45      	ble.n	800bf2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800bea2:	4638      	mov	r0, r7
 800bea4:	f002 fc7c 	bl	800e7a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bea8:	2800      	cmp	r0, #0
 800beaa:	d03d      	beq.n	800bf28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800beac:	280a      	cmp	r0, #10
 800beae:	d1f6      	bne.n	800be9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800beb0:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800beb4:	4453      	add	r3, sl
 800beb6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800beba:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800bebe:	eba3 030a 	sub.w	r3, r3, sl
 800bec2:	3d01      	subs	r5, #1
 800bec4:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800bec8:	e7e9      	b.n	800be9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800beca:	0073      	lsls	r3, r6, #1
 800becc:	9309      	str	r3, [sp, #36]	; 0x24
 800bece:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800bed2:	fa1f fa86 	uxth.w	sl, r6
 800bed6:	2d00      	cmp	r5, #0
 800bed8:	dd29      	ble.n	800bf2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800beda:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800bede:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bee0:	428b      	cmp	r3, r1
 800bee2:	bfd4      	ite	le
 800bee4:	2100      	movle	r1, #0
 800bee6:	2101      	movgt	r1, #1
 800bee8:	a811      	add	r0, sp, #68	; 0x44
 800beea:	f7ff fe6c 	bl	800bbc6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800beee:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800bef2:	3b01      	subs	r3, #1
 800bef4:	b29b      	uxth	r3, r3
 800bef6:	455b      	cmp	r3, fp
 800bef8:	930b      	str	r3, [sp, #44]	; 0x2c
 800befa:	d005      	beq.n	800bf08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15a>
 800befc:	7961      	ldrb	r1, [r4, #5]
 800befe:	4638      	mov	r0, r7
 800bf00:	f7f6 fe00 	bl	8002b04 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800bf04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bf06:	e7f4      	b.n	800bef2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800bf08:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800bf0c:	4453      	add	r3, sl
 800bf0e:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800bf12:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800bf16:	eba3 030a 	sub.w	r3, r3, sl
 800bf1a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800bf1e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bf22:	3d01      	subs	r5, #1
 800bf24:	2b00      	cmp	r3, #0
 800bf26:	d1d6      	bne.n	800bed6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x128>
 800bf28:	b05f      	add	sp, #380	; 0x17c
 800bf2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf2e:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800bf32:	ad47      	add	r5, sp, #284	; 0x11c
 800bf34:	f04f 0b00 	mov.w	fp, #0
 800bf38:	7c23      	ldrb	r3, [r4, #16]
 800bf3a:	2b00      	cmp	r3, #0
 800bf3c:	d067      	beq.n	800c00e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800bf3e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800bf42:	458a      	cmp	sl, r1
 800bf44:	bfd4      	ite	le
 800bf46:	2100      	movle	r1, #0
 800bf48:	2101      	movgt	r1, #1
 800bf4a:	a811      	add	r0, sp, #68	; 0x44
 800bf4c:	f7ff fe3b 	bl	800bbc6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800bf50:	9b08      	ldr	r3, [sp, #32]
 800bf52:	2b00      	cmp	r3, #0
 800bf54:	d056      	beq.n	800c004 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800bf56:	7c23      	ldrb	r3, [r4, #16]
 800bf58:	9309      	str	r3, [sp, #36]	; 0x24
 800bf5a:	225c      	movs	r2, #92	; 0x5c
 800bf5c:	4639      	mov	r1, r7
 800bf5e:	4628      	mov	r0, r5
 800bf60:	f00f fc1a 	bl	801b798 <memcpy>
 800bf64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bf66:	2b00      	cmp	r3, #0
 800bf68:	d059      	beq.n	800c01e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800bf6a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800bf6e:	7922      	ldrb	r2, [r4, #4]
 800bf70:	2a01      	cmp	r2, #1
 800bf72:	d13d      	bne.n	800bff0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800bf74:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800bf78:	1ac0      	subs	r0, r0, r3
 800bf7a:	2302      	movs	r3, #2
 800bf7c:	fb90 f0f3 	sdiv	r0, r0, r3
 800bf80:	b200      	sxth	r0, r0
 800bf82:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800bf86:	4418      	add	r0, r3
 800bf88:	7c23      	ldrb	r3, [r4, #16]
 800bf8a:	f8ad 011c 	strh.w	r0, [sp, #284]	; 0x11c
 800bf8e:	2b00      	cmp	r3, #0
 800bf90:	d03a      	beq.n	800c008 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800bf92:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800bf96:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800bf9a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800bf9e:	9500      	str	r5, [sp, #0]
 800bfa0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800bfa4:	e9cd b703 	strd	fp, r7, [sp, #12]
 800bfa8:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800bfac:	464a      	mov	r2, r9
 800bfae:	2100      	movs	r1, #0
 800bfb0:	980a      	ldr	r0, [sp, #40]	; 0x28
 800bfb2:	f7ff fc98 	bl	800b8e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800bfb6:	2800      	cmp	r0, #0
 800bfb8:	d1b6      	bne.n	800bf28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bfba:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800bfbe:	b2b2      	uxth	r2, r6
 800bfc0:	4611      	mov	r1, r2
 800bfc2:	4413      	add	r3, r2
 800bfc4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800bfc8:	1a52      	subs	r2, r2, r1
 800bfca:	7c21      	ldrb	r1, [r4, #16]
 800bfcc:	b21b      	sxth	r3, r3
 800bfce:	b212      	sxth	r2, r2
 800bfd0:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800bfd4:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800bfd8:	b109      	cbz	r1, 800bfde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800bfda:	42b2      	cmp	r2, r6
 800bfdc:	dba4      	blt.n	800bf28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bfde:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800bfe2:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800bfe6:	440a      	add	r2, r1
 800bfe8:	b212      	sxth	r2, r2
 800bfea:	4293      	cmp	r3, r2
 800bfec:	dda4      	ble.n	800bf38 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18a>
 800bfee:	e79b      	b.n	800bf28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bff0:	2a02      	cmp	r2, #2
 800bff2:	d105      	bne.n	800c000 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800bff4:	7be2      	ldrb	r2, [r4, #15]
 800bff6:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800bffa:	1a80      	subs	r0, r0, r2
 800bffc:	1ac0      	subs	r0, r0, r3
 800bffe:	e7bf      	b.n	800bf80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 800c000:	2000      	movs	r0, #0
 800c002:	e7be      	b.n	800bf82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800c004:	7be0      	ldrb	r0, [r4, #15]
 800c006:	e7bc      	b.n	800bf82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800c008:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c00c:	e7c3      	b.n	800bf96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800c00e:	9b08      	ldr	r3, [sp, #32]
 800c010:	2b00      	cmp	r3, #0
 800c012:	d0f7      	beq.n	800c004 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c014:	225c      	movs	r2, #92	; 0x5c
 800c016:	4639      	mov	r1, r7
 800c018:	4628      	mov	r0, r5
 800c01a:	f00f fbbd 	bl	801b798 <memcpy>
 800c01e:	2300      	movs	r3, #0
 800c020:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c024:	6821      	ldr	r1, [r4, #0]
 800c026:	4628      	mov	r0, r5
 800c028:	f7ff fbf0 	bl	800b80c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c02c:	b203      	sxth	r3, r0
 800c02e:	e79e      	b.n	800bf6e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c0>

0800c030 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c030:	b510      	push	{r4, lr}
 800c032:	2b02      	cmp	r3, #2
 800c034:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c038:	d00b      	beq.n	800c052 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c03a:	2b03      	cmp	r3, #3
 800c03c:	d00e      	beq.n	800c05c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c03e:	2b01      	cmp	r3, #1
 800c040:	d001      	beq.n	800c046 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c042:	1860      	adds	r0, r4, r1
 800c044:	bd10      	pop	{r4, pc}
 800c046:	8880      	ldrh	r0, [r0, #4]
 800c048:	4420      	add	r0, r4
 800c04a:	b200      	sxth	r0, r0
 800c04c:	1a80      	subs	r0, r0, r2
 800c04e:	3801      	subs	r0, #1
 800c050:	e7f8      	b.n	800c044 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c052:	8880      	ldrh	r0, [r0, #4]
 800c054:	4420      	add	r0, r4
 800c056:	b200      	sxth	r0, r0
 800c058:	1a40      	subs	r0, r0, r1
 800c05a:	e7f8      	b.n	800c04e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c05c:	18a0      	adds	r0, r4, r2
 800c05e:	e7f1      	b.n	800c044 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800c060 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c060:	b510      	push	{r4, lr}
 800c062:	2b02      	cmp	r3, #2
 800c064:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c068:	d006      	beq.n	800c078 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800c06a:	2b03      	cmp	r3, #3
 800c06c:	d00a      	beq.n	800c084 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c06e:	2b01      	cmp	r3, #1
 800c070:	bf14      	ite	ne
 800c072:	18a0      	addne	r0, r4, r2
 800c074:	1860      	addeq	r0, r4, r1
 800c076:	bd10      	pop	{r4, pc}
 800c078:	88c0      	ldrh	r0, [r0, #6]
 800c07a:	4420      	add	r0, r4
 800c07c:	b200      	sxth	r0, r0
 800c07e:	1a80      	subs	r0, r0, r2
 800c080:	3801      	subs	r0, #1
 800c082:	e7f8      	b.n	800c076 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800c084:	88c0      	ldrh	r0, [r0, #6]
 800c086:	4420      	add	r0, r4
 800c088:	b200      	sxth	r0, r0
 800c08a:	1a40      	subs	r0, r0, r1
 800c08c:	e7f8      	b.n	800c080 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800c090 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c090:	4b01      	ldr	r3, [pc, #4]	; (800c098 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c092:	2200      	movs	r2, #0
 800c094:	601a      	str	r2, [r3, #0]
 800c096:	4770      	bx	lr
 800c098:	2000a32c 	.word	0x2000a32c

0800c09c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c09c:	4603      	mov	r3, r0
 800c09e:	b1c8      	cbz	r0, 800c0d4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c0a0:	0c02      	lsrs	r2, r0, #16
 800c0a2:	0412      	lsls	r2, r2, #16
 800c0a4:	b9a2      	cbnz	r2, 800c0d0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c0a6:	0403      	lsls	r3, r0, #16
 800c0a8:	2010      	movs	r0, #16
 800c0aa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c0ae:	bf04      	itt	eq
 800c0b0:	021b      	lsleq	r3, r3, #8
 800c0b2:	3008      	addeq	r0, #8
 800c0b4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c0b8:	bf04      	itt	eq
 800c0ba:	011b      	lsleq	r3, r3, #4
 800c0bc:	3004      	addeq	r0, #4
 800c0be:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c0c2:	bf04      	itt	eq
 800c0c4:	009b      	lsleq	r3, r3, #2
 800c0c6:	3002      	addeq	r0, #2
 800c0c8:	2b00      	cmp	r3, #0
 800c0ca:	db04      	blt.n	800c0d6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c0cc:	3001      	adds	r0, #1
 800c0ce:	4770      	bx	lr
 800c0d0:	2000      	movs	r0, #0
 800c0d2:	e7ea      	b.n	800c0aa <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c0d4:	2020      	movs	r0, #32
 800c0d6:	4770      	bx	lr

0800c0d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c0d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0dc:	b087      	sub	sp, #28
 800c0de:	4681      	mov	r9, r0
 800c0e0:	4698      	mov	r8, r3
 800c0e2:	4610      	mov	r0, r2
 800c0e4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c0e8:	460d      	mov	r5, r1
 800c0ea:	b981      	cbnz	r1, 800c10e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800c0ec:	b14b      	cbz	r3, 800c102 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800c0ee:	460b      	mov	r3, r1
 800c0f0:	e9cd 4700 	strd	r4, r7, [sp]
 800c0f4:	464a      	mov	r2, r9
 800c0f6:	4641      	mov	r1, r8
 800c0f8:	f7ff ffee 	bl	800c0d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c0fc:	b007      	add	sp, #28
 800c0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c102:	f04f 33ff 	mov.w	r3, #4294967295
 800c106:	603b      	str	r3, [r7, #0]
 800c108:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c10c:	e7f6      	b.n	800c0fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c10e:	fa32 fa01 	lsrs.w	sl, r2, r1
 800c112:	d107      	bne.n	800c124 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800c114:	fb09 f602 	mul.w	r6, r9, r2
 800c118:	fbb6 f0f4 	udiv	r0, r6, r4
 800c11c:	fb04 6610 	mls	r6, r4, r0, r6
 800c120:	603e      	str	r6, [r7, #0]
 800c122:	e7eb      	b.n	800c0fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c124:	2601      	movs	r6, #1
 800c126:	408e      	lsls	r6, r1
 800c128:	3e01      	subs	r6, #1
 800c12a:	4016      	ands	r6, r2
 800c12c:	fa09 fb01 	lsl.w	fp, r9, r1
 800c130:	4630      	mov	r0, r6
 800c132:	fbbb f3f4 	udiv	r3, fp, r4
 800c136:	9302      	str	r3, [sp, #8]
 800c138:	fb0a f303 	mul.w	r3, sl, r3
 800c13c:	9303      	str	r3, [sp, #12]
 800c13e:	f7ff ffad 	bl	800c09c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c142:	464a      	mov	r2, r9
 800c144:	460b      	mov	r3, r1
 800c146:	e9cd 4700 	strd	r4, r7, [sp]
 800c14a:	4601      	mov	r1, r0
 800c14c:	4630      	mov	r0, r6
 800c14e:	f7ff ffc3 	bl	800c0d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c152:	9b02      	ldr	r3, [sp, #8]
 800c154:	fb04 bb13 	mls	fp, r4, r3, fp
 800c158:	4606      	mov	r6, r0
 800c15a:	4658      	mov	r0, fp
 800c15c:	eb05 0108 	add.w	r1, r5, r8
 800c160:	f7ff ff9c 	bl	800c09c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c164:	ab05      	add	r3, sp, #20
 800c166:	e9cd 4300 	strd	r4, r3, [sp]
 800c16a:	465a      	mov	r2, fp
 800c16c:	4603      	mov	r3, r0
 800c16e:	4650      	mov	r0, sl
 800c170:	f7ff ffb2 	bl	800c0d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c174:	6839      	ldr	r1, [r7, #0]
 800c176:	9a05      	ldr	r2, [sp, #20]
 800c178:	9b03      	ldr	r3, [sp, #12]
 800c17a:	4411      	add	r1, r2
 800c17c:	fbb1 f2f4 	udiv	r2, r1, r4
 800c180:	18d3      	adds	r3, r2, r3
 800c182:	441e      	add	r6, r3
 800c184:	fb04 1412 	mls	r4, r4, r2, r1
 800c188:	4430      	add	r0, r6
 800c18a:	603c      	str	r4, [r7, #0]
 800c18c:	e7b6      	b.n	800c0fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c18e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c18e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c192:	b085      	sub	sp, #20
 800c194:	f1b0 0900 	subs.w	r9, r0, #0
 800c198:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c19a:	461d      	mov	r5, r3
 800c19c:	bfbf      	itttt	lt
 800c19e:	6823      	ldrlt	r3, [r4, #0]
 800c1a0:	425b      	neglt	r3, r3
 800c1a2:	f1c9 0900 	rsblt	r9, r9, #0
 800c1a6:	6023      	strlt	r3, [r4, #0]
 800c1a8:	bfb4      	ite	lt
 800c1aa:	f04f 36ff 	movlt.w	r6, #4294967295
 800c1ae:	2601      	movge	r6, #1
 800c1b0:	2a00      	cmp	r2, #0
 800c1b2:	4617      	mov	r7, r2
 800c1b4:	da04      	bge.n	800c1c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c1b6:	6823      	ldr	r3, [r4, #0]
 800c1b8:	425b      	negs	r3, r3
 800c1ba:	4257      	negs	r7, r2
 800c1bc:	4276      	negs	r6, r6
 800c1be:	6023      	str	r3, [r4, #0]
 800c1c0:	2d00      	cmp	r5, #0
 800c1c2:	4638      	mov	r0, r7
 800c1c4:	bfba      	itte	lt
 800c1c6:	426d      	neglt	r5, r5
 800c1c8:	f04f 38ff 	movlt.w	r8, #4294967295
 800c1cc:	f04f 0801 	movge.w	r8, #1
 800c1d0:	f7ff ff64 	bl	800c09c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c1d4:	ab03      	add	r3, sp, #12
 800c1d6:	e9cd 5300 	strd	r5, r3, [sp]
 800c1da:	463a      	mov	r2, r7
 800c1dc:	4603      	mov	r3, r0
 800c1de:	4648      	mov	r0, r9
 800c1e0:	f7ff ff7a 	bl	800c0d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c1e4:	6823      	ldr	r3, [r4, #0]
 800c1e6:	9a03      	ldr	r2, [sp, #12]
 800c1e8:	4546      	cmp	r6, r8
 800c1ea:	441a      	add	r2, r3
 800c1ec:	fb92 f3f5 	sdiv	r3, r2, r5
 800c1f0:	4418      	add	r0, r3
 800c1f2:	bf18      	it	ne
 800c1f4:	4240      	negne	r0, r0
 800c1f6:	fb05 2313 	mls	r3, r5, r3, r2
 800c1fa:	1c72      	adds	r2, r6, #1
 800c1fc:	6023      	str	r3, [r4, #0]
 800c1fe:	d105      	bne.n	800c20c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c200:	2b00      	cmp	r3, #0
 800c202:	f1c3 0200 	rsb	r2, r3, #0
 800c206:	db0b      	blt.n	800c220 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c208:	6022      	str	r2, [r4, #0]
 800c20a:	e006      	b.n	800c21a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c20c:	2e01      	cmp	r6, #1
 800c20e:	d104      	bne.n	800c21a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c210:	2b00      	cmp	r3, #0
 800c212:	da02      	bge.n	800c21a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c214:	442b      	add	r3, r5
 800c216:	3801      	subs	r0, #1
 800c218:	6023      	str	r3, [r4, #0]
 800c21a:	b005      	add	sp, #20
 800c21c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c220:	3801      	subs	r0, #1
 800c222:	1b52      	subs	r2, r2, r5
 800c224:	e7f0      	b.n	800c208 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c228 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c228:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c22c:	4c1c      	ldr	r4, [pc, #112]	; (800c2a0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c22e:	6807      	ldr	r7, [r0, #0]
 800c230:	69a3      	ldr	r3, [r4, #24]
 800c232:	4605      	mov	r5, r0
 800c234:	b92b      	cbnz	r3, 800c242 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c236:	6840      	ldr	r0, [r0, #4]
 800c238:	e9c5 7000 	strd	r7, r0, [r5]
 800c23c:	b004      	add	sp, #16
 800c23e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c242:	68a2      	ldr	r2, [r4, #8]
 800c244:	6820      	ldr	r0, [r4, #0]
 800c246:	ae04      	add	r6, sp, #16
 800c248:	f04f 0802 	mov.w	r8, #2
 800c24c:	fb93 f1f8 	sdiv	r1, r3, r8
 800c250:	440a      	add	r2, r1
 800c252:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c256:	69e1      	ldr	r1, [r4, #28]
 800c258:	9600      	str	r6, [sp, #0]
 800c25a:	463a      	mov	r2, r7
 800c25c:	f7ff ff97 	bl	800c18e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c260:	69a3      	ldr	r3, [r4, #24]
 800c262:	686a      	ldr	r2, [r5, #4]
 800c264:	6a21      	ldr	r1, [r4, #32]
 800c266:	9600      	str	r6, [sp, #0]
 800c268:	4607      	mov	r7, r0
 800c26a:	6860      	ldr	r0, [r4, #4]
 800c26c:	f7ff ff8f 	bl	800c18e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c270:	6962      	ldr	r2, [r4, #20]
 800c272:	69a3      	ldr	r3, [r4, #24]
 800c274:	fb93 f8f8 	sdiv	r8, r3, r8
 800c278:	4442      	add	r2, r8
 800c27a:	9203      	str	r2, [sp, #12]
 800c27c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c27e:	682a      	ldr	r2, [r5, #0]
 800c280:	9600      	str	r6, [sp, #0]
 800c282:	4407      	add	r7, r0
 800c284:	68e0      	ldr	r0, [r4, #12]
 800c286:	f7ff ff82 	bl	800c18e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c28a:	9600      	str	r6, [sp, #0]
 800c28c:	4680      	mov	r8, r0
 800c28e:	69a3      	ldr	r3, [r4, #24]
 800c290:	686a      	ldr	r2, [r5, #4]
 800c292:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c294:	6920      	ldr	r0, [r4, #16]
 800c296:	f7ff ff7a 	bl	800c18e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c29a:	4440      	add	r0, r8
 800c29c:	e7cc      	b.n	800c238 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c29e:	bf00      	nop
 800c2a0:	2000a330 	.word	0x2000a330

0800c2a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c2a4:	b510      	push	{r4, lr}
 800c2a6:	4b07      	ldr	r3, [pc, #28]	; (800c2c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c2a8:	781b      	ldrb	r3, [r3, #0]
 800c2aa:	2b01      	cmp	r3, #1
 800c2ac:	d108      	bne.n	800c2c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c2ae:	4b06      	ldr	r3, [pc, #24]	; (800c2c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c2b0:	880c      	ldrh	r4, [r1, #0]
 800c2b2:	881b      	ldrh	r3, [r3, #0]
 800c2b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c2b8:	3b01      	subs	r3, #1
 800c2ba:	1b1b      	subs	r3, r3, r4
 800c2bc:	8003      	strh	r3, [r0, #0]
 800c2be:	800a      	strh	r2, [r1, #0]
 800c2c0:	bd10      	pop	{r4, pc}
 800c2c2:	bf00      	nop
 800c2c4:	2000a31c 	.word	0x2000a31c
 800c2c8:	2000a320 	.word	0x2000a320

0800c2cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c2cc:	b510      	push	{r4, lr}
 800c2ce:	4b0a      	ldr	r3, [pc, #40]	; (800c2f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c2d0:	781b      	ldrb	r3, [r3, #0]
 800c2d2:	2b01      	cmp	r3, #1
 800c2d4:	d10e      	bne.n	800c2f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c2d6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c2da:	8843      	ldrh	r3, [r0, #2]
 800c2dc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c2e0:	8044      	strh	r4, [r0, #2]
 800c2e2:	18ca      	adds	r2, r1, r3
 800c2e4:	4b05      	ldr	r3, [pc, #20]	; (800c2fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c2e6:	881b      	ldrh	r3, [r3, #0]
 800c2e8:	1a9b      	subs	r3, r3, r2
 800c2ea:	8003      	strh	r3, [r0, #0]
 800c2ec:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c2f0:	80c3      	strh	r3, [r0, #6]
 800c2f2:	8081      	strh	r1, [r0, #4]
 800c2f4:	bd10      	pop	{r4, pc}
 800c2f6:	bf00      	nop
 800c2f8:	2000a31c 	.word	0x2000a31c
 800c2fc:	2000a318 	.word	0x2000a318

0800c300 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c300:	b510      	push	{r4, lr}
 800c302:	4b07      	ldr	r3, [pc, #28]	; (800c320 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c304:	781b      	ldrb	r3, [r3, #0]
 800c306:	2b01      	cmp	r3, #1
 800c308:	d108      	bne.n	800c31c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c30a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c30e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c312:	8003      	strh	r3, [r0, #0]
 800c314:	8893      	ldrh	r3, [r2, #4]
 800c316:	3b01      	subs	r3, #1
 800c318:	1b1b      	subs	r3, r3, r4
 800c31a:	800b      	strh	r3, [r1, #0]
 800c31c:	bd10      	pop	{r4, pc}
 800c31e:	bf00      	nop
 800c320:	2000a31c 	.word	0x2000a31c

0800c324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c324:	b513      	push	{r0, r1, r4, lr}
 800c326:	4b08      	ldr	r3, [pc, #32]	; (800c348 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c328:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c32c:	4b07      	ldr	r3, [pc, #28]	; (800c34c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800c32e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c332:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c336:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c33a:	2400      	movs	r4, #0
 800c33c:	466a      	mov	r2, sp
 800c33e:	9400      	str	r4, [sp, #0]
 800c340:	f7ff ffde 	bl	800c300 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c344:	b002      	add	sp, #8
 800c346:	bd10      	pop	{r4, pc}
 800c348:	2000a318 	.word	0x2000a318
 800c34c:	2000a31a 	.word	0x2000a31a

0800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c350:	b510      	push	{r4, lr}
 800c352:	4b0a      	ldr	r3, [pc, #40]	; (800c37c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c354:	781b      	ldrb	r3, [r3, #0]
 800c356:	2b01      	cmp	r3, #1
 800c358:	460a      	mov	r2, r1
 800c35a:	d10d      	bne.n	800c378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c35c:	8881      	ldrh	r1, [r0, #4]
 800c35e:	8803      	ldrh	r3, [r0, #0]
 800c360:	440b      	add	r3, r1
 800c362:	4601      	mov	r1, r0
 800c364:	3b01      	subs	r3, #1
 800c366:	f821 3b02 	strh.w	r3, [r1], #2
 800c36a:	f7ff ffc9 	bl	800c300 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c36e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c372:	88c2      	ldrh	r2, [r0, #6]
 800c374:	8082      	strh	r2, [r0, #4]
 800c376:	80c3      	strh	r3, [r0, #6]
 800c378:	bd10      	pop	{r4, pc}
 800c37a:	bf00      	nop
 800c37c:	2000a31c 	.word	0x2000a31c

0800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c380:	b507      	push	{r0, r1, r2, lr}
 800c382:	4b09      	ldr	r3, [pc, #36]	; (800c3a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c384:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c388:	4b08      	ldr	r3, [pc, #32]	; (800c3ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800c38a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c38e:	2100      	movs	r1, #0
 800c390:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c394:	9100      	str	r1, [sp, #0]
 800c396:	4669      	mov	r1, sp
 800c398:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c39c:	f7ff ffd8 	bl	800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800c3a0:	b003      	add	sp, #12
 800c3a2:	f85d fb04 	ldr.w	pc, [sp], #4
 800c3a6:	bf00      	nop
 800c3a8:	2000a318 	.word	0x2000a318
 800c3ac:	2000a31a 	.word	0x2000a31a

0800c3b0 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c3b0:	4b06      	ldr	r3, [pc, #24]	; (800c3cc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c3b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c3b6:	4b06      	ldr	r3, [pc, #24]	; (800c3d0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c3b8:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800c3bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c3c0:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800c3c4:	2100      	movs	r1, #0
 800c3c6:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800c3ca:	4770      	bx	lr
 800c3cc:	2000a318 	.word	0x2000a318
 800c3d0:	2000a31a 	.word	0x2000a31a

0800c3d4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c3d4:	4b03      	ldr	r3, [pc, #12]	; (800c3e4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c3d6:	6818      	ldr	r0, [r3, #0]
 800c3d8:	b110      	cbz	r0, 800c3e0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c3da:	6803      	ldr	r3, [r0, #0]
 800c3dc:	699b      	ldr	r3, [r3, #24]
 800c3de:	4718      	bx	r3
 800c3e0:	4770      	bx	lr
 800c3e2:	bf00      	nop
 800c3e4:	2000a360 	.word	0x2000a360

0800c3e8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c3e8:	4770      	bx	lr
	...

0800c3ec <_ZN8touchgfx11Application4drawEv>:
 800c3ec:	b507      	push	{r0, r1, r2, lr}
 800c3ee:	4b09      	ldr	r3, [pc, #36]	; (800c414 <_ZN8touchgfx11Application4drawEv+0x28>)
 800c3f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c3f4:	4b08      	ldr	r3, [pc, #32]	; (800c418 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c3f6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c3fa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c3fe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c402:	6803      	ldr	r3, [r0, #0]
 800c404:	2100      	movs	r1, #0
 800c406:	9100      	str	r1, [sp, #0]
 800c408:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c40a:	4669      	mov	r1, sp
 800c40c:	4798      	blx	r3
 800c40e:	b003      	add	sp, #12
 800c410:	f85d fb04 	ldr.w	pc, [sp], #4
 800c414:	2000a318 	.word	0x2000a318
 800c418:	2000a31a 	.word	0x2000a31a

0800c41c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800c41c:	4b03      	ldr	r3, [pc, #12]	; (800c42c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800c41e:	6818      	ldr	r0, [r3, #0]
 800c420:	b110      	cbz	r0, 800c428 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800c422:	6803      	ldr	r3, [r0, #0]
 800c424:	69db      	ldr	r3, [r3, #28]
 800c426:	4718      	bx	r3
 800c428:	4770      	bx	lr
 800c42a:	bf00      	nop
 800c42c:	2000a360 	.word	0x2000a360

0800c430 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800c430:	4b03      	ldr	r3, [pc, #12]	; (800c440 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800c432:	6818      	ldr	r0, [r3, #0]
 800c434:	b110      	cbz	r0, 800c43c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800c436:	6803      	ldr	r3, [r0, #0]
 800c438:	6a1b      	ldr	r3, [r3, #32]
 800c43a:	4718      	bx	r3
 800c43c:	4770      	bx	lr
 800c43e:	bf00      	nop
 800c440:	2000a360 	.word	0x2000a360

0800c444 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800c444:	4b03      	ldr	r3, [pc, #12]	; (800c454 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800c446:	6818      	ldr	r0, [r3, #0]
 800c448:	b110      	cbz	r0, 800c450 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800c44a:	6803      	ldr	r3, [r0, #0]
 800c44c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c44e:	4718      	bx	r3
 800c450:	4770      	bx	lr
 800c452:	bf00      	nop
 800c454:	2000a360 	.word	0x2000a360

0800c458 <_ZN8touchgfx11Application15handleTickEventEv>:
 800c458:	b570      	push	{r4, r5, r6, lr}
 800c45a:	4d34      	ldr	r5, [pc, #208]	; (800c52c <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800c45c:	4604      	mov	r4, r0
 800c45e:	6828      	ldr	r0, [r5, #0]
 800c460:	b140      	cbz	r0, 800c474 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c462:	7a03      	ldrb	r3, [r0, #8]
 800c464:	b933      	cbnz	r3, 800c474 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c466:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c46a:	6803      	ldr	r3, [r0, #0]
 800c46c:	689b      	ldr	r3, [r3, #8]
 800c46e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c472:	4718      	bx	r3
 800c474:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800c478:	b97b      	cbnz	r3, 800c49a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c47a:	b170      	cbz	r0, 800c49a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c47c:	7a03      	ldrb	r3, [r0, #8]
 800c47e:	b163      	cbz	r3, 800c49a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c480:	4b2b      	ldr	r3, [pc, #172]	; (800c530 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800c482:	6818      	ldr	r0, [r3, #0]
 800c484:	b110      	cbz	r0, 800c48c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800c486:	6803      	ldr	r3, [r0, #0]
 800c488:	691b      	ldr	r3, [r3, #16]
 800c48a:	4798      	blx	r3
 800c48c:	6828      	ldr	r0, [r5, #0]
 800c48e:	6803      	ldr	r3, [r0, #0]
 800c490:	68db      	ldr	r3, [r3, #12]
 800c492:	4798      	blx	r3
 800c494:	2301      	movs	r3, #1
 800c496:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c49a:	2500      	movs	r5, #0
 800c49c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800c4a0:	42a8      	cmp	r0, r5
 800c4a2:	dd0c      	ble.n	800c4be <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800c4a4:	1963      	adds	r3, r4, r5
 800c4a6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800c4aa:	b132      	cbz	r2, 800c4ba <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800c4ac:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800c4b0:	4413      	add	r3, r2
 800c4b2:	6858      	ldr	r0, [r3, #4]
 800c4b4:	6803      	ldr	r3, [r0, #0]
 800c4b6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c4b8:	4798      	blx	r3
 800c4ba:	3501      	adds	r5, #1
 800c4bc:	e7ee      	b.n	800c49c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800c4be:	2300      	movs	r3, #0
 800c4c0:	461a      	mov	r2, r3
 800c4c2:	4298      	cmp	r0, r3
 800c4c4:	d114      	bne.n	800c4f0 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800c4c6:	1d25      	adds	r5, r4, #4
 800c4c8:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800c4cc:	1e48      	subs	r0, r1, #1
 800c4ce:	b280      	uxth	r0, r0
 800c4d0:	4291      	cmp	r1, r2
 800c4d2:	dd24      	ble.n	800c51e <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800c4d4:	4288      	cmp	r0, r1
 800c4d6:	d2fb      	bcs.n	800c4d0 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800c4d8:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800c4dc:	3304      	adds	r3, #4
 800c4de:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800c4e2:	428b      	cmp	r3, r1
 800c4e4:	d018      	beq.n	800c518 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800c4e6:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800c4ea:	f843 6c04 	str.w	r6, [r3, #-4]
 800c4ee:	e7f8      	b.n	800c4e2 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800c4f0:	18e1      	adds	r1, r4, r3
 800c4f2:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800c4f6:	b16d      	cbz	r5, 800c514 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800c4f8:	429a      	cmp	r2, r3
 800c4fa:	d00a      	beq.n	800c512 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800c4fc:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800c500:	4431      	add	r1, r6
 800c502:	684e      	ldr	r6, [r1, #4]
 800c504:	b291      	uxth	r1, r2
 800c506:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800c50a:	604e      	str	r6, [r1, #4]
 800c50c:	18a1      	adds	r1, r4, r2
 800c50e:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800c512:	3201      	adds	r2, #1
 800c514:	3301      	adds	r3, #1
 800c516:	e7d4      	b.n	800c4c2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800c518:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800c51c:	e7d4      	b.n	800c4c8 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800c51e:	4b04      	ldr	r3, [pc, #16]	; (800c530 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800c520:	6818      	ldr	r0, [r3, #0]
 800c522:	b110      	cbz	r0, 800c52a <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800c524:	6803      	ldr	r3, [r0, #0]
 800c526:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c528:	e7a1      	b.n	800c46e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800c52a:	bd70      	pop	{r4, r5, r6, pc}
 800c52c:	2000a364 	.word	0x2000a364
 800c530:	2000a360 	.word	0x2000a360

0800c534 <_ZN8touchgfx11ApplicationD1Ev>:
 800c534:	4770      	bx	lr

0800c536 <_ZN8touchgfx11ApplicationD0Ev>:
 800c536:	b510      	push	{r4, lr}
 800c538:	f44f 719c 	mov.w	r1, #312	; 0x138
 800c53c:	4604      	mov	r4, r0
 800c53e:	f00e ff84 	bl	801b44a <_ZdlPvj>
 800c542:	4620      	mov	r0, r4
 800c544:	bd10      	pop	{r4, pc}
	...

0800c548 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800c548:	b570      	push	{r4, r5, r6, lr}
 800c54a:	4606      	mov	r6, r0
 800c54c:	460c      	mov	r4, r1
 800c54e:	b929      	cbnz	r1, 800c55c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800c550:	4b0c      	ldr	r3, [pc, #48]	; (800c584 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800c552:	4a0d      	ldr	r2, [pc, #52]	; (800c588 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800c554:	480d      	ldr	r0, [pc, #52]	; (800c58c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800c556:	2167      	movs	r1, #103	; 0x67
 800c558:	f00e ffa6 	bl	801b4a8 <__assert_func>
 800c55c:	4d0c      	ldr	r5, [pc, #48]	; (800c590 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800c55e:	2300      	movs	r3, #0
 800c560:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c564:	6828      	ldr	r0, [r5, #0]
 800c566:	b110      	cbz	r0, 800c56e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800c568:	6803      	ldr	r3, [r0, #0]
 800c56a:	695b      	ldr	r3, [r3, #20]
 800c56c:	4798      	blx	r3
 800c56e:	602c      	str	r4, [r5, #0]
 800c570:	6823      	ldr	r3, [r4, #0]
 800c572:	4620      	mov	r0, r4
 800c574:	68db      	ldr	r3, [r3, #12]
 800c576:	4798      	blx	r3
 800c578:	6833      	ldr	r3, [r6, #0]
 800c57a:	4630      	mov	r0, r6
 800c57c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c57e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c582:	4718      	bx	r3
 800c584:	0801e7b6 	.word	0x0801e7b6
 800c588:	0801e888 	.word	0x0801e888
 800c58c:	0801e7c0 	.word	0x0801e7c0
 800c590:	2000a360 	.word	0x2000a360

0800c594 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800c594:	b510      	push	{r4, lr}
 800c596:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c59a:	888a      	ldrh	r2, [r1, #4]
 800c59c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c5a0:	4422      	add	r2, r4
 800c5a2:	b212      	sxth	r2, r2
 800c5a4:	4293      	cmp	r3, r2
 800c5a6:	da15      	bge.n	800c5d4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c5a8:	8882      	ldrh	r2, [r0, #4]
 800c5aa:	4413      	add	r3, r2
 800c5ac:	b21b      	sxth	r3, r3
 800c5ae:	429c      	cmp	r4, r3
 800c5b0:	da10      	bge.n	800c5d4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c5b2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c5b6:	88c9      	ldrh	r1, [r1, #6]
 800c5b8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c5bc:	4419      	add	r1, r3
 800c5be:	b209      	sxth	r1, r1
 800c5c0:	428a      	cmp	r2, r1
 800c5c2:	da07      	bge.n	800c5d4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c5c4:	88c0      	ldrh	r0, [r0, #6]
 800c5c6:	4410      	add	r0, r2
 800c5c8:	b200      	sxth	r0, r0
 800c5ca:	4283      	cmp	r3, r0
 800c5cc:	bfac      	ite	ge
 800c5ce:	2000      	movge	r0, #0
 800c5d0:	2001      	movlt	r0, #1
 800c5d2:	bd10      	pop	{r4, pc}
 800c5d4:	2000      	movs	r0, #0
 800c5d6:	e7fc      	b.n	800c5d2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800c5d8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c5d8:	b570      	push	{r4, r5, r6, lr}
 800c5da:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c5de:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c5e2:	42ac      	cmp	r4, r5
 800c5e4:	db18      	blt.n	800c618 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c5e6:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800c5ea:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c5ee:	429a      	cmp	r2, r3
 800c5f0:	db12      	blt.n	800c618 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c5f2:	8886      	ldrh	r6, [r0, #4]
 800c5f4:	4435      	add	r5, r6
 800c5f6:	888e      	ldrh	r6, [r1, #4]
 800c5f8:	4434      	add	r4, r6
 800c5fa:	b22d      	sxth	r5, r5
 800c5fc:	b224      	sxth	r4, r4
 800c5fe:	42a5      	cmp	r5, r4
 800c600:	db0a      	blt.n	800c618 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c602:	88c0      	ldrh	r0, [r0, #6]
 800c604:	4418      	add	r0, r3
 800c606:	88cb      	ldrh	r3, [r1, #6]
 800c608:	441a      	add	r2, r3
 800c60a:	b200      	sxth	r0, r0
 800c60c:	b212      	sxth	r2, r2
 800c60e:	4290      	cmp	r0, r2
 800c610:	bfb4      	ite	lt
 800c612:	2000      	movlt	r0, #0
 800c614:	2001      	movge	r0, #1
 800c616:	bd70      	pop	{r4, r5, r6, pc}
 800c618:	2000      	movs	r0, #0
 800c61a:	e7fc      	b.n	800c616 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800c61c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c61c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c61e:	4604      	mov	r4, r0
 800c620:	4608      	mov	r0, r1
 800c622:	460d      	mov	r5, r1
 800c624:	f7fc ffff 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c628:	b978      	cbnz	r0, 800c64a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c62a:	4620      	mov	r0, r4
 800c62c:	f7fc fffb 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c630:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c634:	b150      	cbz	r0, 800c64c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c636:	8026      	strh	r6, [r4, #0]
 800c638:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c63c:	8063      	strh	r3, [r4, #2]
 800c63e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c642:	80a3      	strh	r3, [r4, #4]
 800c644:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c648:	80e3      	strh	r3, [r4, #6]
 800c64a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c64c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c650:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c654:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c658:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c65c:	88ed      	ldrh	r5, [r5, #6]
 800c65e:	42b1      	cmp	r1, r6
 800c660:	460f      	mov	r7, r1
 800c662:	bfa8      	it	ge
 800c664:	4637      	movge	r7, r6
 800c666:	4293      	cmp	r3, r2
 800c668:	4618      	mov	r0, r3
 800c66a:	4466      	add	r6, ip
 800c66c:	bfa8      	it	ge
 800c66e:	4610      	movge	r0, r2
 800c670:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c674:	8027      	strh	r7, [r4, #0]
 800c676:	442a      	add	r2, r5
 800c678:	88e5      	ldrh	r5, [r4, #6]
 800c67a:	8060      	strh	r0, [r4, #2]
 800c67c:	4461      	add	r1, ip
 800c67e:	442b      	add	r3, r5
 800c680:	b236      	sxth	r6, r6
 800c682:	b209      	sxth	r1, r1
 800c684:	b212      	sxth	r2, r2
 800c686:	b21b      	sxth	r3, r3
 800c688:	428e      	cmp	r6, r1
 800c68a:	bfac      	ite	ge
 800c68c:	ebc7 0106 	rsbge	r1, r7, r6
 800c690:	ebc7 0101 	rsblt	r1, r7, r1
 800c694:	429a      	cmp	r2, r3
 800c696:	bfac      	ite	ge
 800c698:	ebc0 0202 	rsbge	r2, r0, r2
 800c69c:	ebc0 0203 	rsblt	r2, r0, r3
 800c6a0:	80a1      	strh	r1, [r4, #4]
 800c6a2:	80e2      	strh	r2, [r4, #6]
 800c6a4:	e7d1      	b.n	800c64a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800c6a8 <_ZN8touchgfx11Application11getInstanceEv>:
 800c6a8:	4b01      	ldr	r3, [pc, #4]	; (800c6b0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800c6aa:	6818      	ldr	r0, [r3, #0]
 800c6ac:	4770      	bx	lr
 800c6ae:	bf00      	nop
 800c6b0:	2000a370 	.word	0x2000a370

0800c6b4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800c6b4:	2300      	movs	r3, #0
 800c6b6:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c6ba:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800c6be:	30a8      	adds	r0, #168	; 0xa8
 800c6c0:	f802 3b01 	strb.w	r3, [r2], #1
 800c6c4:	4282      	cmp	r2, r0
 800c6c6:	d1fb      	bne.n	800c6c0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800c6c8:	4770      	bx	lr

0800c6ca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800c6ca:	4603      	mov	r3, r0
 800c6cc:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800c6d0:	2200      	movs	r2, #0
 800c6d2:	801a      	strh	r2, [r3, #0]
 800c6d4:	805a      	strh	r2, [r3, #2]
 800c6d6:	809a      	strh	r2, [r3, #4]
 800c6d8:	80da      	strh	r2, [r3, #6]
 800c6da:	3308      	adds	r3, #8
 800c6dc:	428b      	cmp	r3, r1
 800c6de:	d1f8      	bne.n	800c6d2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800c6e0:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c6e4:	4770      	bx	lr
	...

0800c6e8 <_ZN8touchgfx11ApplicationC1Ev>:
 800c6e8:	b570      	push	{r4, r5, r6, lr}
 800c6ea:	4b1a      	ldr	r3, [pc, #104]	; (800c754 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800c6ec:	6003      	str	r3, [r0, #0]
 800c6ee:	2500      	movs	r5, #0
 800c6f0:	4604      	mov	r4, r0
 800c6f2:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800c6f6:	30a8      	adds	r0, #168	; 0xa8
 800c6f8:	f7ff ffe7 	bl	800c6ca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c6fc:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800c700:	f7ff ffe3 	bl	800c6ca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c704:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800c708:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800c70c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800c710:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800c714:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800c718:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800c71c:	490e      	ldr	r1, [pc, #56]	; (800c758 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800c71e:	480f      	ldr	r0, [pc, #60]	; (800c75c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800c720:	4e0f      	ldr	r6, [pc, #60]	; (800c760 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800c722:	f00e fd85 	bl	801b230 <CRC_Lock>
 800c726:	4b0f      	ldr	r3, [pc, #60]	; (800c764 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800c728:	b158      	cbz	r0, 800c742 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800c72a:	801d      	strh	r5, [r3, #0]
 800c72c:	4a0e      	ldr	r2, [pc, #56]	; (800c768 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800c72e:	2300      	movs	r3, #0
 800c730:	6013      	str	r3, [r2, #0]
 800c732:	4a0e      	ldr	r2, [pc, #56]	; (800c76c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800c734:	6033      	str	r3, [r6, #0]
 800c736:	4620      	mov	r0, r4
 800c738:	6013      	str	r3, [r2, #0]
 800c73a:	f7ff ffbb 	bl	800c6b4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800c73e:	4620      	mov	r0, r4
 800c740:	bd70      	pop	{r4, r5, r6, pc}
 800c742:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c746:	2002      	movs	r0, #2
 800c748:	801a      	strh	r2, [r3, #0]
 800c74a:	6030      	str	r0, [r6, #0]
 800c74c:	f001 fa9c 	bl	800dc88 <_ZN8touchgfx6Screen4drawEv>
 800c750:	e7ec      	b.n	800c72c <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800c752:	bf00      	nop
 800c754:	0801e84c 	.word	0x0801e84c
 800c758:	b5e8b5cd 	.word	0xb5e8b5cd
 800c75c:	f407a5c2 	.word	0xf407a5c2
 800c760:	2000a360 	.word	0x2000a360
 800c764:	20000060 	.word	0x20000060
 800c768:	2000a370 	.word	0x2000a370
 800c76c:	2000a364 	.word	0x2000a364

0800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800c770:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800c774:	428b      	cmp	r3, r1
 800c776:	b510      	push	{r4, lr}
 800c778:	d90e      	bls.n	800c798 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800c77a:	3b01      	subs	r3, #1
 800c77c:	b29b      	uxth	r3, r3
 800c77e:	428b      	cmp	r3, r1
 800c780:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800c784:	d908      	bls.n	800c798 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800c786:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800c78a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800c78e:	681a      	ldr	r2, [r3, #0]
 800c790:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800c794:	685a      	ldr	r2, [r3, #4]
 800c796:	6062      	str	r2, [r4, #4]
 800c798:	bd10      	pop	{r4, pc}
	...

0800c79c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800c79c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c79e:	466b      	mov	r3, sp
 800c7a0:	e883 0006 	stmia.w	r3, {r1, r2}
 800c7a4:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800c7a8:	2a07      	cmp	r2, #7
 800c7aa:	4604      	mov	r4, r0
 800c7ac:	d906      	bls.n	800c7bc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800c7ae:	4b09      	ldr	r3, [pc, #36]	; (800c7d4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800c7b0:	4a09      	ldr	r2, [pc, #36]	; (800c7d8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800c7b2:	480a      	ldr	r0, [pc, #40]	; (800c7dc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800c7b4:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800c7b8:	f00e fe76 	bl	801b4a8 <__assert_func>
 800c7bc:	1c51      	adds	r1, r2, #1
 800c7be:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800c7c2:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800c7c6:	cb03      	ldmia	r3!, {r0, r1}
 800c7c8:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800c7cc:	6069      	str	r1, [r5, #4]
 800c7ce:	b003      	add	sp, #12
 800c7d0:	bd30      	pop	{r4, r5, pc}
 800c7d2:	bf00      	nop
 800c7d4:	0801e7ea 	.word	0x0801e7ea
 800c7d8:	0801e8cc 	.word	0x0801e8cc
 800c7dc:	0801e819 	.word	0x0801e819

0800c7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800c7e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7e4:	b08d      	sub	sp, #52	; 0x34
 800c7e6:	ac08      	add	r4, sp, #32
 800c7e8:	4683      	mov	fp, r0
 800c7ea:	4620      	mov	r0, r4
 800c7ec:	e884 0006 	stmia.w	r4, {r1, r2}
 800c7f0:	f7fc ff19 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c7f4:	2800      	cmp	r0, #0
 800c7f6:	d16a      	bne.n	800c8ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800c7f8:	9402      	str	r4, [sp, #8]
 800c7fa:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800c7fe:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800c802:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800c806:	2400      	movs	r4, #0
 800c808:	9301      	str	r3, [sp, #4]
 800c80a:	36a0      	adds	r6, #160	; 0xa0
 800c80c:	42a5      	cmp	r5, r4
 800c80e:	d00d      	beq.n	800c82c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800c810:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800c814:	9802      	ldr	r0, [sp, #8]
 800c816:	f7ff fedf 	bl	800c5d8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800c81a:	b128      	cbz	r0, 800c828 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800c81c:	1e69      	subs	r1, r5, #1
 800c81e:	1b09      	subs	r1, r1, r4
 800c820:	b289      	uxth	r1, r1
 800c822:	9801      	ldr	r0, [sp, #4]
 800c824:	f7ff ffa4 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c828:	3401      	adds	r4, #1
 800c82a:	e7ef      	b.n	800c80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c82c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800c830:	9703      	str	r7, [sp, #12]
 800c832:	1e7b      	subs	r3, r7, #1
 800c834:	9300      	str	r3, [sp, #0]
 800c836:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800c83a:	2400      	movs	r4, #0
 800c83c:	4655      	mov	r5, sl
 800c83e:	9704      	str	r7, [sp, #16]
 800c840:	4626      	mov	r6, r4
 800c842:	9b04      	ldr	r3, [sp, #16]
 800c844:	2b00      	cmp	r3, #0
 800c846:	d078      	beq.n	800c93a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800c848:	9902      	ldr	r1, [sp, #8]
 800c84a:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800c84e:	f7ff fea1 	bl	800c594 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c852:	b360      	cbz	r0, 800c8ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800c854:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800c858:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800c85c:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800c860:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800c864:	45e6      	cmp	lr, ip
 800c866:	db35      	blt.n	800c8d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800c868:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800c86c:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800c870:	4472      	add	r2, lr
 800c872:	4463      	add	r3, ip
 800c874:	b212      	sxth	r2, r2
 800c876:	b21b      	sxth	r3, r3
 800c878:	429a      	cmp	r2, r3
 800c87a:	dc2b      	bgt.n	800c8d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800c87c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800c880:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800c884:	fa1f f288 	uxth.w	r2, r8
 800c888:	4413      	add	r3, r2
 800c88a:	b29b      	uxth	r3, r3
 800c88c:	45c1      	cmp	r9, r8
 800c88e:	fa0f fe83 	sxth.w	lr, r3
 800c892:	fa1f fc89 	uxth.w	ip, r9
 800c896:	db0f      	blt.n	800c8b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800c898:	eba3 030c 	sub.w	r3, r3, ip
 800c89c:	1ac9      	subs	r1, r1, r3
 800c89e:	b209      	sxth	r1, r1
 800c8a0:	2900      	cmp	r1, #0
 800c8a2:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800c8a6:	dd12      	ble.n	800c8ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800c8a8:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800c8ac:	4604      	mov	r4, r0
 800c8ae:	9b04      	ldr	r3, [sp, #16]
 800c8b0:	3b01      	subs	r3, #1
 800c8b2:	9304      	str	r3, [sp, #16]
 800c8b4:	3d08      	subs	r5, #8
 800c8b6:	e7c4      	b.n	800c842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800c8b8:	4461      	add	r1, ip
 800c8ba:	b209      	sxth	r1, r1
 800c8bc:	4571      	cmp	r1, lr
 800c8be:	dc3a      	bgt.n	800c936 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800c8c0:	eba2 020c 	sub.w	r2, r2, ip
 800c8c4:	b212      	sxth	r2, r2
 800c8c6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c8ca:	2a00      	cmp	r2, #0
 800c8cc:	dcee      	bgt.n	800c8ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800c8ce:	b00d      	add	sp, #52	; 0x34
 800c8d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8d4:	45c1      	cmp	r9, r8
 800c8d6:	db2e      	blt.n	800c936 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800c8d8:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800c8dc:	4499      	add	r9, r3
 800c8de:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800c8e2:	4498      	add	r8, r3
 800c8e4:	fa0f f989 	sxth.w	r9, r9
 800c8e8:	fa0f f888 	sxth.w	r8, r8
 800c8ec:	45c1      	cmp	r9, r8
 800c8ee:	dc22      	bgt.n	800c936 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800c8f0:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800c8f4:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800c8f8:	fa1f f28c 	uxth.w	r2, ip
 800c8fc:	4413      	add	r3, r2
 800c8fe:	b29b      	uxth	r3, r3
 800c900:	45e6      	cmp	lr, ip
 800c902:	fa1f f88e 	uxth.w	r8, lr
 800c906:	fa0f f983 	sxth.w	r9, r3
 800c90a:	db0a      	blt.n	800c922 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800c90c:	eba3 0308 	sub.w	r3, r3, r8
 800c910:	1ac9      	subs	r1, r1, r3
 800c912:	b209      	sxth	r1, r1
 800c914:	2900      	cmp	r1, #0
 800c916:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800c91a:	ddd8      	ble.n	800c8ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800c91c:	f8ad 9020 	strh.w	r9, [sp, #32]
 800c920:	e7c4      	b.n	800c8ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800c922:	4441      	add	r1, r8
 800c924:	b209      	sxth	r1, r1
 800c926:	4549      	cmp	r1, r9
 800c928:	dc05      	bgt.n	800c936 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800c92a:	eba2 0208 	sub.w	r2, r2, r8
 800c92e:	b212      	sxth	r2, r2
 800c930:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800c934:	e7c9      	b.n	800c8ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800c936:	4606      	mov	r6, r0
 800c938:	e7b9      	b.n	800c8ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800c93a:	2c00      	cmp	r4, #0
 800c93c:	f47f af7d 	bne.w	800c83a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800c940:	2e00      	cmp	r6, #0
 800c942:	f000 81dd 	beq.w	800cd00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800c946:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800c94a:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800c94e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800c952:	b2b9      	uxth	r1, r7
 800c954:	9104      	str	r1, [sp, #16]
 800c956:	9804      	ldr	r0, [sp, #16]
 800c958:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800c95c:	4401      	add	r1, r0
 800c95e:	b2b3      	uxth	r3, r6
 800c960:	b289      	uxth	r1, r1
 800c962:	441a      	add	r2, r3
 800c964:	9105      	str	r1, [sp, #20]
 800c966:	b292      	uxth	r2, r2
 800c968:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800c96c:	fa0f f882 	sxth.w	r8, r2
 800c970:	4655      	mov	r5, sl
 800c972:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800c976:	9b03      	ldr	r3, [sp, #12]
 800c978:	2b00      	cmp	r3, #0
 800c97a:	d054      	beq.n	800ca26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800c97c:	9902      	ldr	r1, [sp, #8]
 800c97e:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800c982:	f7ff fe07 	bl	800c594 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c986:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c98a:	b1d8      	cbz	r0, 800c9c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800c98c:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800c990:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800c994:	4576      	cmp	r6, lr
 800c996:	dc26      	bgt.n	800c9e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800c998:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800c99c:	44f4      	add	ip, lr
 800c99e:	fa0f fc8c 	sxth.w	ip, ip
 800c9a2:	45e0      	cmp	r8, ip
 800c9a4:	db1f      	blt.n	800c9e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800c9a6:	428f      	cmp	r7, r1
 800c9a8:	fa1f fc81 	uxth.w	ip, r1
 800c9ac:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800c9b0:	dc0f      	bgt.n	800c9d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800c9b2:	9805      	ldr	r0, [sp, #20]
 800c9b4:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800c9b8:	eba0 0c0c 	sub.w	ip, r0, ip
 800c9bc:	eba1 010c 	sub.w	r1, r1, ip
 800c9c0:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800c9c4:	4620      	mov	r0, r4
 800c9c6:	9903      	ldr	r1, [sp, #12]
 800c9c8:	3901      	subs	r1, #1
 800c9ca:	9103      	str	r1, [sp, #12]
 800c9cc:	3d08      	subs	r5, #8
 800c9ce:	4604      	mov	r4, r0
 800c9d0:	e7cf      	b.n	800c972 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800c9d2:	4461      	add	r1, ip
 800c9d4:	b209      	sxth	r1, r1
 800c9d6:	4549      	cmp	r1, r9
 800c9d8:	dcf5      	bgt.n	800c9c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c9da:	9904      	ldr	r1, [sp, #16]
 800c9dc:	eba1 0c0c 	sub.w	ip, r1, ip
 800c9e0:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800c9e4:	e7ee      	b.n	800c9c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800c9e6:	428f      	cmp	r7, r1
 800c9e8:	dced      	bgt.n	800c9c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c9ea:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800c9ee:	4461      	add	r1, ip
 800c9f0:	b209      	sxth	r1, r1
 800c9f2:	4589      	cmp	r9, r1
 800c9f4:	dbe7      	blt.n	800c9c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c9f6:	4576      	cmp	r6, lr
 800c9f8:	fa1f fc8e 	uxth.w	ip, lr
 800c9fc:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800ca00:	dc08      	bgt.n	800ca14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800ca02:	eba2 0c0c 	sub.w	ip, r2, ip
 800ca06:	eba1 010c 	sub.w	r1, r1, ip
 800ca0a:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800ca0e:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800ca12:	e7d7      	b.n	800c9c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800ca14:	4461      	add	r1, ip
 800ca16:	b209      	sxth	r1, r1
 800ca18:	4588      	cmp	r8, r1
 800ca1a:	dbd4      	blt.n	800c9c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800ca1c:	eba3 0c0c 	sub.w	ip, r3, ip
 800ca20:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800ca24:	e7ce      	b.n	800c9c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800ca26:	2c00      	cmp	r4, #0
 800ca28:	f000 816a 	beq.w	800cd00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800ca2c:	9b00      	ldr	r3, [sp, #0]
 800ca2e:	3301      	adds	r3, #1
 800ca30:	f000 8166 	beq.w	800cd00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800ca34:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800ca38:	4621      	mov	r1, r4
 800ca3a:	9802      	ldr	r0, [sp, #8]
 800ca3c:	f7ff fdcc 	bl	800c5d8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800ca40:	b120      	cbz	r0, 800ca4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800ca42:	f8bd 1000 	ldrh.w	r1, [sp]
 800ca46:	9801      	ldr	r0, [sp, #4]
 800ca48:	f7ff fe92 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ca4c:	9902      	ldr	r1, [sp, #8]
 800ca4e:	4620      	mov	r0, r4
 800ca50:	f7ff fda0 	bl	800c594 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ca54:	2800      	cmp	r0, #0
 800ca56:	f000 809b 	beq.w	800cb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800ca5a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800ca5e:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800ca62:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800ca66:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800ca6a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800ca6e:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800ca72:	fa1f f288 	uxth.w	r2, r8
 800ca76:	19d5      	adds	r5, r2, r7
 800ca78:	fa1f f985 	uxth.w	r9, r5
 800ca7c:	fa0f f589 	sxth.w	r5, r9
 800ca80:	b2a1      	uxth	r1, r4
 800ca82:	440b      	add	r3, r1
 800ca84:	9503      	str	r5, [sp, #12]
 800ca86:	45a0      	cmp	r8, r4
 800ca88:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800ca8c:	9507      	str	r5, [sp, #28]
 800ca8e:	b29b      	uxth	r3, r3
 800ca90:	f340 809d 	ble.w	800cbce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800ca94:	1a52      	subs	r2, r2, r1
 800ca96:	b292      	uxth	r2, r2
 800ca98:	4584      	cmp	ip, r0
 800ca9a:	fa0f fe83 	sxth.w	lr, r3
 800ca9e:	b215      	sxth	r5, r2
 800caa0:	dd2f      	ble.n	800cb02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800caa2:	9e00      	ldr	r6, [sp, #0]
 800caa4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800caa8:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800caac:	9e03      	ldr	r6, [sp, #12]
 800caae:	eba6 060e 	sub.w	r6, r6, lr
 800cab2:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800cab6:	fa1f fc8c 	uxth.w	ip, ip
 800caba:	b280      	uxth	r0, r0
 800cabc:	ebac 0300 	sub.w	r3, ip, r0
 800cac0:	448c      	add	ip, r1
 800cac2:	4470      	add	r0, lr
 800cac4:	b29b      	uxth	r3, r3
 800cac6:	fa0f fc8c 	sxth.w	ip, ip
 800caca:	b200      	sxth	r0, r0
 800cacc:	b21c      	sxth	r4, r3
 800cace:	ebac 0000 	sub.w	r0, ip, r0
 800cad2:	4366      	muls	r6, r4
 800cad4:	4368      	muls	r0, r5
 800cad6:	4286      	cmp	r6, r0
 800cad8:	db09      	blt.n	800caee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800cada:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800cade:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800cae2:	4417      	add	r7, r2
 800cae4:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cae8:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800caec:	e685      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800caee:	440b      	add	r3, r1
 800caf0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800caf4:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800caf8:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800cafc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cb00:	e67b      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cb02:	9e03      	ldr	r6, [sp, #12]
 800cb04:	45b6      	cmp	lr, r6
 800cb06:	da28      	bge.n	800cb5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800cb08:	9b00      	ldr	r3, [sp, #0]
 800cb0a:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800cb0e:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800cb12:	eb04 030c 	add.w	r3, r4, ip
 800cb16:	fa1f f883 	uxth.w	r8, r3
 800cb1a:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800cb1e:	4403      	add	r3, r0
 800cb20:	eba3 0308 	sub.w	r3, r3, r8
 800cb24:	b29b      	uxth	r3, r3
 800cb26:	fa0f f988 	sxth.w	r9, r8
 800cb2a:	eba0 000c 	sub.w	r0, r0, ip
 800cb2e:	fa0f f883 	sxth.w	r8, r3
 800cb32:	eba6 060e 	sub.w	r6, r6, lr
 800cb36:	4368      	muls	r0, r5
 800cb38:	fb08 f606 	mul.w	r6, r8, r6
 800cb3c:	42b0      	cmp	r0, r6
 800cb3e:	dc06      	bgt.n	800cb4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800cb40:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800cb44:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800cb48:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800cb4c:	e7c9      	b.n	800cae2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800cb4e:	4423      	add	r3, r4
 800cb50:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800cb54:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cb58:	e64f      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cb5a:	9807      	ldr	r0, [sp, #28]
 800cb5c:	eba3 0309 	sub.w	r3, r3, r9
 800cb60:	b29b      	uxth	r3, r3
 800cb62:	2806      	cmp	r0, #6
 800cb64:	fa0f fc83 	sxth.w	ip, r3
 800cb68:	d818      	bhi.n	800cb9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800cb6a:	4652      	mov	r2, sl
 800cb6c:	ab0a      	add	r3, sp, #40	; 0x28
 800cb6e:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800cb72:	6851      	ldr	r1, [r2, #4]
 800cb74:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800cb78:	c303      	stmia	r3!, {r0, r1}
 800cb7a:	9b03      	ldr	r3, [sp, #12]
 800cb7c:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800cb80:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800cb84:	ab0a      	add	r3, sp, #40	; 0x28
 800cb86:	e893 0006 	ldmia.w	r3, {r1, r2}
 800cb8a:	9801      	ldr	r0, [sp, #4]
 800cb8c:	f7ff fe06 	bl	800c79c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cb90:	9b00      	ldr	r3, [sp, #0]
 800cb92:	3b01      	subs	r3, #1
 800cb94:	9300      	str	r3, [sp, #0]
 800cb96:	f1aa 0a08 	sub.w	sl, sl, #8
 800cb9a:	e747      	b.n	800ca2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800cb9c:	9800      	ldr	r0, [sp, #0]
 800cb9e:	45ac      	cmp	ip, r5
 800cba0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cba4:	db0c      	blt.n	800cbc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800cba6:	4417      	add	r7, r2
 800cba8:	b2bf      	uxth	r7, r7
 800cbaa:	4458      	add	r0, fp
 800cbac:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cbb0:	440f      	add	r7, r1
 800cbb2:	f8ad 4020 	strh.w	r4, [sp, #32]
 800cbb6:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800cbba:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800cbbe:	e61c      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cbc0:	4458      	add	r0, fp
 800cbc2:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800cbc6:	443b      	add	r3, r7
 800cbc8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cbcc:	e615      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cbce:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800cbd2:	fa1f f18c 	uxth.w	r1, ip
 800cbd6:	eb01 0e05 	add.w	lr, r1, r5
 800cbda:	b282      	uxth	r2, r0
 800cbdc:	fa1f fe8e 	uxth.w	lr, lr
 800cbe0:	9204      	str	r2, [sp, #16]
 800cbe2:	fa0f f28e 	sxth.w	r2, lr
 800cbe6:	9205      	str	r2, [sp, #20]
 800cbe8:	9e04      	ldr	r6, [sp, #16]
 800cbea:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800cbee:	4432      	add	r2, r6
 800cbf0:	b292      	uxth	r2, r2
 800cbf2:	4584      	cmp	ip, r0
 800cbf4:	9206      	str	r2, [sp, #24]
 800cbf6:	da26      	bge.n	800cc46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800cbf8:	eba3 0309 	sub.w	r3, r3, r9
 800cbfc:	eba2 020e 	sub.w	r2, r2, lr
 800cc00:	b29b      	uxth	r3, r3
 800cc02:	b292      	uxth	r2, r2
 800cc04:	fa0f fa83 	sxth.w	sl, r3
 800cc08:	b211      	sxth	r1, r2
 800cc0a:	eba0 000c 	sub.w	r0, r0, ip
 800cc0e:	eba4 0408 	sub.w	r4, r4, r8
 800cc12:	fb0a f000 	mul.w	r0, sl, r0
 800cc16:	434c      	muls	r4, r1
 800cc18:	42a0      	cmp	r0, r4
 800cc1a:	9800      	ldr	r0, [sp, #0]
 800cc1c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cc20:	dc06      	bgt.n	800cc30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800cc22:	4458      	add	r0, fp
 800cc24:	9a05      	ldr	r2, [sp, #20]
 800cc26:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800cc2a:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800cc2e:	e7ca      	b.n	800cbc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800cc30:	eb0b 0300 	add.w	r3, fp, r0
 800cc34:	9903      	ldr	r1, [sp, #12]
 800cc36:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800cc3a:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800cc3e:	442a      	add	r2, r5
 800cc40:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cc44:	e5d9      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cc46:	9e04      	ldr	r6, [sp, #16]
 800cc48:	9a03      	ldr	r2, [sp, #12]
 800cc4a:	1b89      	subs	r1, r1, r6
 800cc4c:	b21e      	sxth	r6, r3
 800cc4e:	b289      	uxth	r1, r1
 800cc50:	4296      	cmp	r6, r2
 800cc52:	fa0f fc81 	sxth.w	ip, r1
 800cc56:	dd26      	ble.n	800cca6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800cc58:	eba3 0309 	sub.w	r3, r3, r9
 800cc5c:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800cc60:	9e05      	ldr	r6, [sp, #20]
 800cc62:	b29b      	uxth	r3, r3
 800cc64:	eba6 0902 	sub.w	r9, r6, r2
 800cc68:	b218      	sxth	r0, r3
 800cc6a:	eba4 0408 	sub.w	r4, r4, r8
 800cc6e:	fb0c f404 	mul.w	r4, ip, r4
 800cc72:	fb00 f909 	mul.w	r9, r0, r9
 800cc76:	9a00      	ldr	r2, [sp, #0]
 800cc78:	454c      	cmp	r4, r9
 800cc7a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800cc7e:	db03      	blt.n	800cc88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800cc80:	445a      	add	r2, fp
 800cc82:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800cc86:	e79e      	b.n	800cbc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800cc88:	eb0b 0302 	add.w	r3, fp, r2
 800cc8c:	9a03      	ldr	r2, [sp, #12]
 800cc8e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800cc92:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800cc96:	4429      	add	r1, r5
 800cc98:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800cc9c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cca0:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cca4:	e5a9      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cca6:	9b06      	ldr	r3, [sp, #24]
 800cca8:	9c07      	ldr	r4, [sp, #28]
 800ccaa:	eba3 020e 	sub.w	r2, r3, lr
 800ccae:	b292      	uxth	r2, r2
 800ccb0:	2c06      	cmp	r4, #6
 800ccb2:	b213      	sxth	r3, r2
 800ccb4:	d80d      	bhi.n	800ccd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800ccb6:	4651      	mov	r1, sl
 800ccb8:	aa0a      	add	r2, sp, #40	; 0x28
 800ccba:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800ccbe:	6849      	ldr	r1, [r1, #4]
 800ccc0:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800ccc4:	9b05      	ldr	r3, [sp, #20]
 800ccc6:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800ccca:	c203      	stmia	r2!, {r0, r1}
 800cccc:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800ccd0:	e758      	b.n	800cb84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800ccd2:	9c00      	ldr	r4, [sp, #0]
 800ccd4:	4563      	cmp	r3, ip
 800ccd6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800ccda:	db0d      	blt.n	800ccf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800ccdc:	4429      	add	r1, r5
 800ccde:	9a04      	ldr	r2, [sp, #16]
 800cce0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800cce4:	b289      	uxth	r1, r1
 800cce6:	445c      	add	r4, fp
 800cce8:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800ccec:	4411      	add	r1, r2
 800ccee:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800ccf2:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800ccf6:	e580      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ccf8:	445c      	add	r4, fp
 800ccfa:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800ccfe:	e79e      	b.n	800cc3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800cd00:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800cd04:	2f07      	cmp	r7, #7
 800cd06:	d806      	bhi.n	800cd16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800cd08:	ab08      	add	r3, sp, #32
 800cd0a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800cd0e:	9801      	ldr	r0, [sp, #4]
 800cd10:	f7ff fd44 	bl	800c79c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cd14:	e5db      	b.n	800c8ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cd16:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800cd1a:	f107 39ff 	add.w	r9, r7, #4294967295
 800cd1e:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800cd22:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800cd26:	f04f 35ff 	mov.w	r5, #4294967295
 800cd2a:	2400      	movs	r4, #0
 800cd2c:	9304      	str	r3, [sp, #16]
 800cd2e:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800cd32:	9300      	str	r3, [sp, #0]
 800cd34:	f109 32ff 	add.w	r2, r9, #4294967295
 800cd38:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800cd3c:	9303      	str	r3, [sp, #12]
 800cd3e:	4690      	mov	r8, r2
 800cd40:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800cd44:	f1b8 3fff 	cmp.w	r8, #4294967295
 800cd48:	bf14      	ite	ne
 800cd4a:	9904      	ldrne	r1, [sp, #16]
 800cd4c:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800cd50:	6818      	ldr	r0, [r3, #0]
 800cd52:	9206      	str	r2, [sp, #24]
 800cd54:	bf18      	it	ne
 800cd56:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800cd5a:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800cd5e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800cd62:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800cd66:	9305      	str	r3, [sp, #20]
 800cd68:	fb16 f601 	smulbb	r6, r6, r1
 800cd6c:	6859      	ldr	r1, [r3, #4]
 800cd6e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800cd72:	4671      	mov	r1, lr
 800cd74:	a80a      	add	r0, sp, #40	; 0x28
 800cd76:	f7ff fc51 	bl	800c61c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cd7a:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800cd7e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800cd82:	9b03      	ldr	r3, [sp, #12]
 800cd84:	9a00      	ldr	r2, [sp, #0]
 800cd86:	fb11 f100 	smulbb	r1, r1, r0
 800cd8a:	fb02 6603 	mla	r6, r2, r3, r6
 800cd8e:	1b8e      	subs	r6, r1, r6
 800cd90:	2008      	movs	r0, #8
 800cd92:	fb91 f1f0 	sdiv	r1, r1, r0
 800cd96:	42b1      	cmp	r1, r6
 800cd98:	dc21      	bgt.n	800cdde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800cd9a:	4556      	cmp	r6, sl
 800cd9c:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800cda0:	da03      	bge.n	800cdaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800cda2:	b1e6      	cbz	r6, 800cdde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800cda4:	46b2      	mov	sl, r6
 800cda6:	4645      	mov	r5, r8
 800cda8:	464c      	mov	r4, r9
 800cdaa:	f108 38ff 	add.w	r8, r8, #4294967295
 800cdae:	f118 0f02 	cmn.w	r8, #2
 800cdb2:	d1c7      	bne.n	800cd44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800cdb4:	f1b2 3fff 	cmp.w	r2, #4294967295
 800cdb8:	f1a7 0708 	sub.w	r7, r7, #8
 800cdbc:	4691      	mov	r9, r2
 800cdbe:	d1b6      	bne.n	800cd2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800cdc0:	9b01      	ldr	r3, [sp, #4]
 800cdc2:	b2a6      	uxth	r6, r4
 800cdc4:	00e4      	lsls	r4, r4, #3
 800cdc6:	1918      	adds	r0, r3, r4
 800cdc8:	1c6b      	adds	r3, r5, #1
 800cdca:	d10b      	bne.n	800cde4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800cdcc:	4601      	mov	r1, r0
 800cdce:	9802      	ldr	r0, [sp, #8]
 800cdd0:	f7ff fc24 	bl	800c61c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cdd4:	4631      	mov	r1, r6
 800cdd6:	9801      	ldr	r0, [sp, #4]
 800cdd8:	f7ff fcca 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cddc:	e50d      	b.n	800c7fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cdde:	4645      	mov	r5, r8
 800cde0:	464c      	mov	r4, r9
 800cde2:	e7ed      	b.n	800cdc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800cde4:	9b01      	ldr	r3, [sp, #4]
 800cde6:	00ed      	lsls	r5, r5, #3
 800cde8:	1959      	adds	r1, r3, r5
 800cdea:	f7ff fc17 	bl	800c61c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cdee:	9b02      	ldr	r3, [sp, #8]
 800cdf0:	cb03      	ldmia	r3!, {r0, r1}
 800cdf2:	445d      	add	r5, fp
 800cdf4:	445c      	add	r4, fp
 800cdf6:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800cdfa:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800cdfe:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800ce02:	9b02      	ldr	r3, [sp, #8]
 800ce04:	6861      	ldr	r1, [r4, #4]
 800ce06:	c303      	stmia	r3!, {r0, r1}
 800ce08:	e7e4      	b.n	800cdd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800ce0c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ce0c:	b530      	push	{r4, r5, lr}
 800ce0e:	4b1d      	ldr	r3, [pc, #116]	; (800ce84 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800ce10:	b085      	sub	sp, #20
 800ce12:	460c      	mov	r4, r1
 800ce14:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce18:	4b1b      	ldr	r3, [pc, #108]	; (800ce88 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800ce1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ce1e:	2100      	movs	r1, #0
 800ce20:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ce24:	9100      	str	r1, [sp, #0]
 800ce26:	4605      	mov	r5, r0
 800ce28:	6861      	ldr	r1, [r4, #4]
 800ce2a:	6820      	ldr	r0, [r4, #0]
 800ce2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ce30:	ab02      	add	r3, sp, #8
 800ce32:	c303      	stmia	r3!, {r0, r1}
 800ce34:	4669      	mov	r1, sp
 800ce36:	a802      	add	r0, sp, #8
 800ce38:	f7fc fbb2 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800ce3c:	ab02      	add	r3, sp, #8
 800ce3e:	cb03      	ldmia	r3!, {r0, r1}
 800ce40:	4b12      	ldr	r3, [pc, #72]	; (800ce8c <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800ce42:	6020      	str	r0, [r4, #0]
 800ce44:	6818      	ldr	r0, [r3, #0]
 800ce46:	6061      	str	r1, [r4, #4]
 800ce48:	b138      	cbz	r0, 800ce5a <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800ce4a:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800ce4e:	b133      	cbz	r3, 800ce5e <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800ce50:	6821      	ldr	r1, [r4, #0]
 800ce52:	6862      	ldr	r2, [r4, #4]
 800ce54:	4628      	mov	r0, r5
 800ce56:	f7ff fcc3 	bl	800c7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800ce5a:	b005      	add	sp, #20
 800ce5c:	bd30      	pop	{r4, r5, pc}
 800ce5e:	6803      	ldr	r3, [r0, #0]
 800ce60:	4621      	mov	r1, r4
 800ce62:	689b      	ldr	r3, [r3, #8]
 800ce64:	4798      	blx	r3
 800ce66:	4b0a      	ldr	r3, [pc, #40]	; (800ce90 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800ce68:	6818      	ldr	r0, [r3, #0]
 800ce6a:	b118      	cbz	r0, 800ce74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800ce6c:	6803      	ldr	r3, [r0, #0]
 800ce6e:	4621      	mov	r1, r4
 800ce70:	689b      	ldr	r3, [r3, #8]
 800ce72:	4798      	blx	r3
 800ce74:	4b07      	ldr	r3, [pc, #28]	; (800ce94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800ce76:	6818      	ldr	r0, [r3, #0]
 800ce78:	6803      	ldr	r3, [r0, #0]
 800ce7a:	4621      	mov	r1, r4
 800ce7c:	699b      	ldr	r3, [r3, #24]
 800ce7e:	4798      	blx	r3
 800ce80:	e7eb      	b.n	800ce5a <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800ce82:	bf00      	nop
 800ce84:	2000a318 	.word	0x2000a318
 800ce88:	2000a31a 	.word	0x2000a31a
 800ce8c:	2000a360 	.word	0x2000a360
 800ce90:	2000a35c 	.word	0x2000a35c
 800ce94:	2000a324 	.word	0x2000a324

0800ce98 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800ce98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce9c:	4604      	mov	r4, r0
 800ce9e:	b09b      	sub	sp, #108	; 0x6c
 800cea0:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800cea4:	b129      	cbz	r1, 800ceb2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800cea6:	2300      	movs	r3, #0
 800cea8:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800ceac:	b01b      	add	sp, #108	; 0x6c
 800ceae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ceb2:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800ceb6:	4630      	mov	r0, r6
 800ceb8:	f7fc fbb5 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cebc:	4605      	mov	r5, r0
 800cebe:	b940      	cbnz	r0, 800ced2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800cec0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800cec4:	4620      	mov	r0, r4
 800cec6:	f7ff fc8b 	bl	800c7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800ceca:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800cece:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800ced2:	4ba7      	ldr	r3, [pc, #668]	; (800d170 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800ced4:	681b      	ldr	r3, [r3, #0]
 800ced6:	b33b      	cbz	r3, 800cf28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800ced8:	4da6      	ldr	r5, [pc, #664]	; (800d174 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800ceda:	4628      	mov	r0, r5
 800cedc:	f7fc fba3 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cee0:	4606      	mov	r6, r0
 800cee2:	bb08      	cbnz	r0, 800cf28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800cee4:	4628      	mov	r0, r5
 800cee6:	f7ff f9f1 	bl	800c2cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ceea:	6829      	ldr	r1, [r5, #0]
 800ceec:	686a      	ldr	r2, [r5, #4]
 800ceee:	4620      	mov	r0, r4
 800cef0:	f7ff fc76 	bl	800c7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800cef4:	802e      	strh	r6, [r5, #0]
 800cef6:	806e      	strh	r6, [r5, #2]
 800cef8:	80ae      	strh	r6, [r5, #4]
 800cefa:	80ee      	strh	r6, [r5, #6]
 800cefc:	4f9e      	ldr	r7, [pc, #632]	; (800d178 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800cefe:	a809      	add	r0, sp, #36	; 0x24
 800cf00:	f7ff fbe3 	bl	800c6ca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800cf04:	883d      	ldrh	r5, [r7, #0]
 800cf06:	462e      	mov	r6, r5
 800cf08:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800cf0c:	42b3      	cmp	r3, r6
 800cf0e:	d910      	bls.n	800cf32 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800cf10:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800cf14:	a809      	add	r0, sp, #36	; 0x24
 800cf16:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800cf1a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800cf1e:	3601      	adds	r6, #1
 800cf20:	f7ff fc3c 	bl	800c79c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cf24:	b2b6      	uxth	r6, r6
 800cf26:	e7ef      	b.n	800cf08 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800cf28:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800cf2c:	2b00      	cmp	r3, #0
 800cf2e:	d1e5      	bne.n	800cefc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800cf30:	e7bc      	b.n	800ceac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800cf32:	462e      	mov	r6, r5
 800cf34:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800cf38:	42b3      	cmp	r3, r6
 800cf3a:	d90b      	bls.n	800cf54 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800cf3c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800cf40:	4620      	mov	r0, r4
 800cf42:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800cf46:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800cf4a:	3601      	adds	r6, #1
 800cf4c:	f7ff fc48 	bl	800c7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800cf50:	b2b6      	uxth	r6, r6
 800cf52:	e7ef      	b.n	800cf34 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800cf54:	4a89      	ldr	r2, [pc, #548]	; (800d17c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800cf56:	6813      	ldr	r3, [r2, #0]
 800cf58:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800cf5c:	2b01      	cmp	r3, #1
 800cf5e:	4690      	mov	r8, r2
 800cf60:	f040 8094 	bne.w	800d08c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800cf64:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800cf68:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800cf6c:	33aa      	adds	r3, #170	; 0xaa
 800cf6e:	f04f 0900 	mov.w	r9, #0
 800cf72:	42a8      	cmp	r0, r5
 800cf74:	f103 0308 	add.w	r3, r3, #8
 800cf78:	dd0a      	ble.n	800cf90 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800cf7a:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800cf7e:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800cf82:	440a      	add	r2, r1
 800cf84:	b212      	sxth	r2, r2
 800cf86:	4591      	cmp	r9, r2
 800cf88:	bfb8      	it	lt
 800cf8a:	4691      	movlt	r9, r2
 800cf8c:	3501      	adds	r5, #1
 800cf8e:	e7f0      	b.n	800cf72 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800cf90:	4b7b      	ldr	r3, [pc, #492]	; (800d180 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800cf92:	4e7c      	ldr	r6, [pc, #496]	; (800d184 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800cf94:	881d      	ldrh	r5, [r3, #0]
 800cf96:	2300      	movs	r3, #0
 800cf98:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800cf9c:	2d0f      	cmp	r5, #15
 800cf9e:	bf8c      	ite	hi
 800cfa0:	08ed      	lsrhi	r5, r5, #3
 800cfa2:	2501      	movls	r5, #1
 800cfa4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800cfa8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800cfac:	f8d8 0000 	ldr.w	r0, [r8]
 800cfb0:	440b      	add	r3, r1
 800cfb2:	b21b      	sxth	r3, r3
 800cfb4:	4599      	cmp	r9, r3
 800cfb6:	6802      	ldr	r2, [r0, #0]
 800cfb8:	dd4b      	ble.n	800d052 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800cfba:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800cfbe:	4798      	blx	r3
 800cfc0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800cfc4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800cfc8:	4413      	add	r3, r2
 800cfca:	b21b      	sxth	r3, r3
 800cfcc:	195a      	adds	r2, r3, r5
 800cfce:	4290      	cmp	r0, r2
 800cfd0:	da07      	bge.n	800cfe2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800cfd2:	4581      	cmp	r9, r0
 800cfd4:	dd05      	ble.n	800cfe2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800cfd6:	4298      	cmp	r0, r3
 800cfd8:	da33      	bge.n	800d042 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800cfda:	2b00      	cmp	r3, #0
 800cfdc:	dd31      	ble.n	800d042 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800cfde:	4648      	mov	r0, r9
 800cfe0:	e004      	b.n	800cfec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800cfe2:	4298      	cmp	r0, r3
 800cfe4:	dbfb      	blt.n	800cfde <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800cfe6:	4548      	cmp	r0, r9
 800cfe8:	bfa8      	it	ge
 800cfea:	4648      	movge	r0, r9
 800cfec:	f9b6 2000 	ldrsh.w	r2, [r6]
 800cff0:	f8b7 a000 	ldrh.w	sl, [r7]
 800cff4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cff8:	2100      	movs	r1, #0
 800cffa:	1ac0      	subs	r0, r0, r3
 800cffc:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d000:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d004:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d008:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d00c:	4553      	cmp	r3, sl
 800d00e:	d9c9      	bls.n	800cfa4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d010:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d014:	ab07      	add	r3, sp, #28
 800d016:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d01a:	6851      	ldr	r1, [r2, #4]
 800d01c:	c303      	stmia	r3!, {r0, r1}
 800d01e:	a807      	add	r0, sp, #28
 800d020:	a905      	add	r1, sp, #20
 800d022:	f7fc fabd 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800d026:	a807      	add	r0, sp, #28
 800d028:	f7fc fafd 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d02c:	b920      	cbnz	r0, 800d038 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800d02e:	6823      	ldr	r3, [r4, #0]
 800d030:	a907      	add	r1, sp, #28
 800d032:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d034:	4620      	mov	r0, r4
 800d036:	4798      	blx	r3
 800d038:	f10a 0a01 	add.w	sl, sl, #1
 800d03c:	fa1f fa8a 	uxth.w	sl, sl
 800d040:	e7e2      	b.n	800d008 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800d042:	f8d8 0000 	ldr.w	r0, [r8]
 800d046:	6803      	ldr	r3, [r0, #0]
 800d048:	2101      	movs	r1, #1
 800d04a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d04e:	4798      	blx	r3
 800d050:	e7a8      	b.n	800cfa4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d052:	6a13      	ldr	r3, [r2, #32]
 800d054:	4798      	blx	r3
 800d056:	4b4c      	ldr	r3, [pc, #304]	; (800d188 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800d058:	781b      	ldrb	r3, [r3, #0]
 800d05a:	2b00      	cmp	r3, #0
 800d05c:	f43f af26 	beq.w	800ceac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d060:	2300      	movs	r3, #0
 800d062:	883d      	ldrh	r5, [r7, #0]
 800d064:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d068:	34ea      	adds	r4, #234	; 0xea
 800d06a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d06e:	42ab      	cmp	r3, r5
 800d070:	f67f af1c 	bls.w	800ceac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d074:	ab1a      	add	r3, sp, #104	; 0x68
 800d076:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d07a:	3b44      	subs	r3, #68	; 0x44
 800d07c:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d080:	4620      	mov	r0, r4
 800d082:	3501      	adds	r5, #1
 800d084:	f7ff fb8a 	bl	800c79c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d088:	b2ad      	uxth	r5, r5
 800d08a:	e7ee      	b.n	800d06a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800d08c:	2b02      	cmp	r3, #2
 800d08e:	f040 813e 	bne.w	800d30e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d092:	4b3e      	ldr	r3, [pc, #248]	; (800d18c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 800d094:	781b      	ldrb	r3, [r3, #0]
 800d096:	2b01      	cmp	r3, #1
 800d098:	d02c      	beq.n	800d0f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 800d09a:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800d09e:	883a      	ldrh	r2, [r7, #0]
 800d0a0:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800d0a4:	3201      	adds	r2, #1
 800d0a6:	b292      	uxth	r2, r2
 800d0a8:	2900      	cmp	r1, #0
 800d0aa:	d0d4      	beq.n	800d056 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d0ac:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800d0b0:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800d0b4:	441d      	add	r5, r3
 800d0b6:	b22d      	sxth	r5, r5
 800d0b8:	4610      	mov	r0, r2
 800d0ba:	f04f 0a00 	mov.w	sl, #0
 800d0be:	b283      	uxth	r3, r0
 800d0c0:	4299      	cmp	r1, r3
 800d0c2:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800d0c6:	f240 80c5 	bls.w	800d254 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 800d0ca:	4426      	add	r6, r4
 800d0cc:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800d0d0:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800d0d4:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800d0d8:	4573      	cmp	r3, lr
 800d0da:	4684      	mov	ip, r0
 800d0dc:	f340 80a7 	ble.w	800d22e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 800d0e0:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800d0e4:	4475      	add	r5, lr
 800d0e6:	b22d      	sxth	r5, r5
 800d0e8:	429d      	cmp	r5, r3
 800d0ea:	bfa8      	it	ge
 800d0ec:	461d      	movge	r5, r3
 800d0ee:	3001      	adds	r0, #1
 800d0f0:	46e2      	mov	sl, ip
 800d0f2:	e7e4      	b.n	800d0be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 800d0f4:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800d0f8:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800d0fc:	f1bb 0f00 	cmp.w	fp, #0
 800d100:	d0a9      	beq.n	800d056 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d102:	883b      	ldrh	r3, [r7, #0]
 800d104:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800d108:	3301      	adds	r3, #1
 800d10a:	b29b      	uxth	r3, r3
 800d10c:	2600      	movs	r6, #0
 800d10e:	b299      	uxth	r1, r3
 800d110:	458b      	cmp	fp, r1
 800d112:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800d116:	d93b      	bls.n	800d190 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 800d118:	4425      	add	r5, r4
 800d11a:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d11e:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800d122:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800d126:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800d12a:	4408      	add	r0, r1
 800d12c:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800d130:	4471      	add	r1, lr
 800d132:	b200      	sxth	r0, r0
 800d134:	b209      	sxth	r1, r1
 800d136:	4288      	cmp	r0, r1
 800d138:	469c      	mov	ip, r3
 800d13a:	da06      	bge.n	800d14a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 800d13c:	4586      	cmp	lr, r0
 800d13e:	4672      	mov	r2, lr
 800d140:	bfb8      	it	lt
 800d142:	4602      	movlt	r2, r0
 800d144:	3301      	adds	r3, #1
 800d146:	4666      	mov	r6, ip
 800d148:	e7e1      	b.n	800d10e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800d14a:	d10b      	bne.n	800d164 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 800d14c:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800d150:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800d154:	458c      	cmp	ip, r1
 800d156:	bfb4      	ite	lt
 800d158:	469c      	movlt	ip, r3
 800d15a:	46b4      	movge	ip, r6
 800d15c:	4572      	cmp	r2, lr
 800d15e:	bfb8      	it	lt
 800d160:	4672      	movlt	r2, lr
 800d162:	e7ef      	b.n	800d144 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d164:	428a      	cmp	r2, r1
 800d166:	bfb8      	it	lt
 800d168:	460a      	movlt	r2, r1
 800d16a:	46b4      	mov	ip, r6
 800d16c:	e7ea      	b.n	800d144 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d16e:	bf00      	nop
 800d170:	2000a35c 	.word	0x2000a35c
 800d174:	2000a368 	.word	0x2000a368
 800d178:	20000060 	.word	0x20000060
 800d17c:	2000a324 	.word	0x2000a324
 800d180:	2000a31a 	.word	0x2000a31a
 800d184:	2000a318 	.word	0x2000a318
 800d188:	2000a322 	.word	0x2000a322
 800d18c:	2000a31c 	.word	0x2000a31c
 800d190:	1961      	adds	r1, r4, r5
 800d192:	ab07      	add	r3, sp, #28
 800d194:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800d198:	6849      	ldr	r1, [r1, #4]
 800d19a:	c303      	stmia	r3!, {r0, r1}
 800d19c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d1a0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d1a4:	2b13      	cmp	r3, #19
 800d1a6:	bfd8      	it	le
 800d1a8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d1ac:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d1b0:	440b      	add	r3, r1
 800d1b2:	1a9b      	subs	r3, r3, r2
 800d1b4:	a807      	add	r0, sp, #28
 800d1b6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d1ba:	f7ff f8e1 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d1be:	a807      	add	r0, sp, #28
 800d1c0:	f7fc fa31 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d1c4:	2800      	cmp	r0, #0
 800d1c6:	d197      	bne.n	800d0f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d1c8:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d1cc:	f8d8 0000 	ldr.w	r0, [r8]
 800d1d0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d1d4:	f8d0 e000 	ldr.w	lr, [r0]
 800d1d8:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d1dc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d1e0:	f1bc 0f14 	cmp.w	ip, #20
 800d1e4:	bfa8      	it	ge
 800d1e6:	f04f 0c14 	movge.w	ip, #20
 800d1ea:	fa1f fc8c 	uxth.w	ip, ip
 800d1ee:	f8cd c000 	str.w	ip, [sp]
 800d1f2:	f8de a084 	ldr.w	sl, [lr, #132]	; 0x84
 800d1f6:	47d0      	blx	sl
 800d1f8:	4682      	mov	sl, r0
 800d1fa:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d1fe:	a807      	add	r0, sp, #28
 800d200:	f7ff f864 	bl	800c2cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d204:	6823      	ldr	r3, [r4, #0]
 800d206:	4425      	add	r5, r4
 800d208:	4620      	mov	r0, r4
 800d20a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d20c:	a907      	add	r1, sp, #28
 800d20e:	4798      	blx	r3
 800d210:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d214:	eba0 000a 	sub.w	r0, r0, sl
 800d218:	b200      	sxth	r0, r0
 800d21a:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800d21e:	2800      	cmp	r0, #0
 800d220:	f47f af6a 	bne.w	800d0f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d224:	b2b1      	uxth	r1, r6
 800d226:	4648      	mov	r0, r9
 800d228:	f7ff faa2 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d22c:	e764      	b.n	800d0f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d22e:	d10c      	bne.n	800d24a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 800d230:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800d234:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800d238:	45b4      	cmp	ip, r6
 800d23a:	bfb4      	ite	lt
 800d23c:	4684      	movlt	ip, r0
 800d23e:	46d4      	movge	ip, sl
 800d240:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800d244:	4433      	add	r3, r6
 800d246:	b21b      	sxth	r3, r3
 800d248:	e74e      	b.n	800d0e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 800d24a:	4575      	cmp	r5, lr
 800d24c:	bfa8      	it	ge
 800d24e:	4675      	movge	r5, lr
 800d250:	46d4      	mov	ip, sl
 800d252:	e74c      	b.n	800d0ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 800d254:	eb0b 0006 	add.w	r0, fp, r6
 800d258:	4426      	add	r6, r4
 800d25a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800d25e:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800d262:	f1b9 0f13 	cmp.w	r9, #19
 800d266:	bfde      	ittt	le
 800d268:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800d26c:	444d      	addle	r5, r9
 800d26e:	b22d      	sxthle	r5, r5
 800d270:	f7fc f9d9 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d274:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d278:	2800      	cmp	r0, #0
 800d27a:	f47f af15 	bne.w	800d0a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 800d27e:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800d282:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d286:	eba5 050c 	sub.w	r5, r5, ip
 800d28a:	fa1f f28c 	uxth.w	r2, ip
 800d28e:	fa1f f989 	uxth.w	r9, r9
 800d292:	eb02 0009 	add.w	r0, r2, r9
 800d296:	2d14      	cmp	r5, #20
 800d298:	bfa8      	it	ge
 800d29a:	2514      	movge	r5, #20
 800d29c:	b200      	sxth	r0, r0
 800d29e:	fa1f fe85 	uxth.w	lr, r5
 800d2a2:	eba0 000c 	sub.w	r0, r0, ip
 800d2a6:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800d2aa:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800d2ae:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d2b2:	4586      	cmp	lr, r0
 800d2b4:	f8d8 0000 	ldr.w	r0, [r8]
 800d2b8:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d2bc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d2c0:	bfb8      	it	lt
 800d2c2:	46f1      	movlt	r9, lr
 800d2c4:	6805      	ldr	r5, [r0, #0]
 800d2c6:	f8cd 9000 	str.w	r9, [sp]
 800d2ca:	b29b      	uxth	r3, r3
 800d2cc:	b289      	uxth	r1, r1
 800d2ce:	f8d5 5084 	ldr.w	r5, [r5, #132]	; 0x84
 800d2d2:	47a8      	blx	r5
 800d2d4:	6823      	ldr	r3, [r4, #0]
 800d2d6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d2da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d2dc:	a907      	add	r1, sp, #28
 800d2de:	4620      	mov	r0, r4
 800d2e0:	4798      	blx	r3
 800d2e2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d2e6:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800d2ea:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800d2ee:	1a5b      	subs	r3, r3, r1
 800d2f0:	440a      	add	r2, r1
 800d2f2:	b21b      	sxth	r3, r3
 800d2f4:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800d2f8:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800d2fc:	2b00      	cmp	r3, #0
 800d2fe:	f47f aece 	bne.w	800d09e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d302:	fa1f f18a 	uxth.w	r1, sl
 800d306:	4658      	mov	r0, fp
 800d308:	f7ff fa32 	bl	800c770 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d30c:	e6c7      	b.n	800d09e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d30e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d312:	42ab      	cmp	r3, r5
 800d314:	f67f ae9f 	bls.w	800d056 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d318:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d31c:	ab07      	add	r3, sp, #28
 800d31e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d322:	6851      	ldr	r1, [r2, #4]
 800d324:	c303      	stmia	r3!, {r0, r1}
 800d326:	a807      	add	r0, sp, #28
 800d328:	f7fc f97d 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d32c:	b920      	cbnz	r0, 800d338 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 800d32e:	6823      	ldr	r3, [r4, #0]
 800d330:	a907      	add	r1, sp, #28
 800d332:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d334:	4620      	mov	r0, r4
 800d336:	4798      	blx	r3
 800d338:	3501      	adds	r5, #1
 800d33a:	b2ad      	uxth	r5, r5
 800d33c:	e7e7      	b.n	800d30e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d33e:	bf00      	nop

0800d340 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d340:	4b03      	ldr	r3, [pc, #12]	; (800d350 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d342:	2200      	movs	r2, #0
 800d344:	801a      	strh	r2, [r3, #0]
 800d346:	805a      	strh	r2, [r3, #2]
 800d348:	809a      	strh	r2, [r3, #4]
 800d34a:	80da      	strh	r2, [r3, #6]
 800d34c:	4770      	bx	lr
 800d34e:	bf00      	nop
 800d350:	2000a368 	.word	0x2000a368

0800d354 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d358:	4606      	mov	r6, r0
 800d35a:	b09b      	sub	sp, #108	; 0x6c
 800d35c:	a803      	add	r0, sp, #12
 800d35e:	4614      	mov	r4, r2
 800d360:	468a      	mov	sl, r1
 800d362:	461d      	mov	r5, r3
 800d364:	f000 fddb 	bl	800df1e <_ZN8touchgfx12TextProviderC1Ev>
 800d368:	6833      	ldr	r3, [r6, #0]
 800d36a:	4630      	mov	r0, r6
 800d36c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d36e:	4798      	blx	r3
 800d370:	6833      	ldr	r3, [r6, #0]
 800d372:	4607      	mov	r7, r0
 800d374:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d376:	4630      	mov	r0, r6
 800d378:	4798      	blx	r3
 800d37a:	462a      	mov	r2, r5
 800d37c:	9000      	str	r0, [sp, #0]
 800d37e:	4621      	mov	r1, r4
 800d380:	463b      	mov	r3, r7
 800d382:	a803      	add	r0, sp, #12
 800d384:	f000 fe18 	bl	800dfb8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d388:	2500      	movs	r5, #0
 800d38a:	462c      	mov	r4, r5
 800d38c:	46a9      	mov	r9, r5
 800d38e:	46a8      	mov	r8, r5
 800d390:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800d394:	2300      	movs	r3, #0
 800d396:	9302      	str	r3, [sp, #8]
 800d398:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d39c:	429c      	cmp	r4, r3
 800d39e:	d002      	beq.n	800d3a6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800d3a0:	455c      	cmp	r4, fp
 800d3a2:	bf18      	it	ne
 800d3a4:	4625      	movne	r5, r4
 800d3a6:	ab02      	add	r3, sp, #8
 800d3a8:	4632      	mov	r2, r6
 800d3aa:	4651      	mov	r1, sl
 800d3ac:	a803      	add	r0, sp, #12
 800d3ae:	f001 f8ff 	bl	800e5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d3b2:	4604      	mov	r4, r0
 800d3b4:	b108      	cbz	r0, 800d3ba <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800d3b6:	280a      	cmp	r0, #10
 800d3b8:	d10a      	bne.n	800d3d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800d3ba:	45c1      	cmp	r9, r8
 800d3bc:	bf38      	it	cc
 800d3be:	46c1      	movcc	r9, r8
 800d3c0:	f04f 0800 	mov.w	r8, #0
 800d3c4:	2c00      	cmp	r4, #0
 800d3c6:	d1e5      	bne.n	800d394 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d3c8:	4648      	mov	r0, r9
 800d3ca:	b01b      	add	sp, #108	; 0x6c
 800d3cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3d0:	9a02      	ldr	r2, [sp, #8]
 800d3d2:	2a00      	cmp	r2, #0
 800d3d4:	d0de      	beq.n	800d394 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d3d6:	7b57      	ldrb	r7, [r2, #13]
 800d3d8:	6833      	ldr	r3, [r6, #0]
 800d3da:	8894      	ldrh	r4, [r2, #4]
 800d3dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3de:	007f      	lsls	r7, r7, #1
 800d3e0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d3e4:	7a97      	ldrb	r7, [r2, #10]
 800d3e6:	4629      	mov	r1, r5
 800d3e8:	4307      	orrs	r7, r0
 800d3ea:	4630      	mov	r0, r6
 800d3ec:	4798      	blx	r3
 800d3ee:	4438      	add	r0, r7
 800d3f0:	4480      	add	r8, r0
 800d3f2:	fa1f f888 	uxth.w	r8, r8
 800d3f6:	e7e5      	b.n	800d3c4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800d3f8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d3f8:	b508      	push	{r3, lr}
 800d3fa:	6803      	ldr	r3, [r0, #0]
 800d3fc:	68db      	ldr	r3, [r3, #12]
 800d3fe:	4798      	blx	r3
 800d400:	b128      	cbz	r0, 800d40e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d402:	7b43      	ldrb	r3, [r0, #13]
 800d404:	7a80      	ldrb	r0, [r0, #10]
 800d406:	005b      	lsls	r3, r3, #1
 800d408:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d40c:	4318      	orrs	r0, r3
 800d40e:	bd08      	pop	{r3, pc}

0800d410 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d410:	b40e      	push	{r1, r2, r3}
 800d412:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d414:	b09c      	sub	sp, #112	; 0x70
 800d416:	ab21      	add	r3, sp, #132	; 0x84
 800d418:	4605      	mov	r5, r0
 800d41a:	f853 4b04 	ldr.w	r4, [r3], #4
 800d41e:	9303      	str	r3, [sp, #12]
 800d420:	a805      	add	r0, sp, #20
 800d422:	f000 fd7c 	bl	800df1e <_ZN8touchgfx12TextProviderC1Ev>
 800d426:	682b      	ldr	r3, [r5, #0]
 800d428:	4628      	mov	r0, r5
 800d42a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d42c:	4798      	blx	r3
 800d42e:	682b      	ldr	r3, [r5, #0]
 800d430:	4606      	mov	r6, r0
 800d432:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d434:	4628      	mov	r0, r5
 800d436:	4798      	blx	r3
 800d438:	4633      	mov	r3, r6
 800d43a:	ae1c      	add	r6, sp, #112	; 0x70
 800d43c:	4621      	mov	r1, r4
 800d43e:	9000      	str	r0, [sp, #0]
 800d440:	9a03      	ldr	r2, [sp, #12]
 800d442:	2400      	movs	r4, #0
 800d444:	a805      	add	r0, sp, #20
 800d446:	f000 fdb7 	bl	800dfb8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d44a:	f846 4d60 	str.w	r4, [r6, #-96]!
 800d44e:	462a      	mov	r2, r5
 800d450:	4633      	mov	r3, r6
 800d452:	4621      	mov	r1, r4
 800d454:	a805      	add	r0, sp, #20
 800d456:	f001 f8ab 	bl	800e5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d45a:	b1f0      	cbz	r0, 800d49a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800d45c:	280a      	cmp	r0, #10
 800d45e:	d018      	beq.n	800d492 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d460:	9f04      	ldr	r7, [sp, #16]
 800d462:	b1b7      	cbz	r7, 800d492 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d464:	7b78      	ldrb	r0, [r7, #13]
 800d466:	7a3b      	ldrb	r3, [r7, #8]
 800d468:	88aa      	ldrh	r2, [r5, #4]
 800d46a:	00c1      	lsls	r1, r0, #3
 800d46c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d470:	4319      	orrs	r1, r3
 800d472:	0643      	lsls	r3, r0, #25
 800d474:	bf44      	itt	mi
 800d476:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800d47a:	b219      	sxthmi	r1, r3
 800d47c:	0100      	lsls	r0, r0, #4
 800d47e:	79fb      	ldrb	r3, [r7, #7]
 800d480:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d484:	4303      	orrs	r3, r0
 800d486:	4413      	add	r3, r2
 800d488:	1a5b      	subs	r3, r3, r1
 800d48a:	b29b      	uxth	r3, r3
 800d48c:	42a3      	cmp	r3, r4
 800d48e:	bfc8      	it	gt
 800d490:	b21c      	sxthgt	r4, r3
 800d492:	4633      	mov	r3, r6
 800d494:	462a      	mov	r2, r5
 800d496:	2100      	movs	r1, #0
 800d498:	e7dc      	b.n	800d454 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800d49a:	b2a0      	uxth	r0, r4
 800d49c:	b01c      	add	sp, #112	; 0x70
 800d49e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d4a2:	b003      	add	sp, #12
 800d4a4:	4770      	bx	lr

0800d4a6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d4a6:	b40e      	push	{r1, r2, r3}
 800d4a8:	b570      	push	{r4, r5, r6, lr}
 800d4aa:	b09b      	sub	sp, #108	; 0x6c
 800d4ac:	ab1f      	add	r3, sp, #124	; 0x7c
 800d4ae:	4604      	mov	r4, r0
 800d4b0:	f853 5b04 	ldr.w	r5, [r3], #4
 800d4b4:	9302      	str	r3, [sp, #8]
 800d4b6:	a803      	add	r0, sp, #12
 800d4b8:	f000 fd31 	bl	800df1e <_ZN8touchgfx12TextProviderC1Ev>
 800d4bc:	6823      	ldr	r3, [r4, #0]
 800d4be:	4620      	mov	r0, r4
 800d4c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d4c2:	4798      	blx	r3
 800d4c4:	6823      	ldr	r3, [r4, #0]
 800d4c6:	4606      	mov	r6, r0
 800d4c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d4ca:	4620      	mov	r0, r4
 800d4cc:	4798      	blx	r3
 800d4ce:	4633      	mov	r3, r6
 800d4d0:	9000      	str	r0, [sp, #0]
 800d4d2:	9a02      	ldr	r2, [sp, #8]
 800d4d4:	4629      	mov	r1, r5
 800d4d6:	a803      	add	r0, sp, #12
 800d4d8:	f000 fd6e 	bl	800dfb8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d4dc:	a803      	add	r0, sp, #12
 800d4de:	f001 f95f 	bl	800e7a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d4e2:	2401      	movs	r4, #1
 800d4e4:	b2a3      	uxth	r3, r4
 800d4e6:	b140      	cbz	r0, 800d4fa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800d4e8:	280a      	cmp	r0, #10
 800d4ea:	bf08      	it	eq
 800d4ec:	3301      	addeq	r3, #1
 800d4ee:	a803      	add	r0, sp, #12
 800d4f0:	bf08      	it	eq
 800d4f2:	b21c      	sxtheq	r4, r3
 800d4f4:	f001 f954 	bl	800e7a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d4f8:	e7f4      	b.n	800d4e4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800d4fa:	4618      	mov	r0, r3
 800d4fc:	b01b      	add	sp, #108	; 0x6c
 800d4fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d502:	b003      	add	sp, #12
 800d504:	4770      	bx	lr

0800d506 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d506:	b40e      	push	{r1, r2, r3}
 800d508:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d50a:	b09c      	sub	sp, #112	; 0x70
 800d50c:	ab21      	add	r3, sp, #132	; 0x84
 800d50e:	4604      	mov	r4, r0
 800d510:	f853 5b04 	ldr.w	r5, [r3], #4
 800d514:	9303      	str	r3, [sp, #12]
 800d516:	a805      	add	r0, sp, #20
 800d518:	f000 fd01 	bl	800df1e <_ZN8touchgfx12TextProviderC1Ev>
 800d51c:	6823      	ldr	r3, [r4, #0]
 800d51e:	4620      	mov	r0, r4
 800d520:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d522:	4798      	blx	r3
 800d524:	6823      	ldr	r3, [r4, #0]
 800d526:	4606      	mov	r6, r0
 800d528:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d52a:	4620      	mov	r0, r4
 800d52c:	4798      	blx	r3
 800d52e:	4633      	mov	r3, r6
 800d530:	4629      	mov	r1, r5
 800d532:	9000      	str	r0, [sp, #0]
 800d534:	9a03      	ldr	r2, [sp, #12]
 800d536:	a805      	add	r0, sp, #20
 800d538:	ad1c      	add	r5, sp, #112	; 0x70
 800d53a:	f000 fd3d 	bl	800dfb8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d53e:	2100      	movs	r1, #0
 800d540:	f845 1d60 	str.w	r1, [r5, #-96]!
 800d544:	4622      	mov	r2, r4
 800d546:	462b      	mov	r3, r5
 800d548:	a805      	add	r0, sp, #20
 800d54a:	f001 f831 	bl	800e5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d54e:	26ff      	movs	r6, #255	; 0xff
 800d550:	b1d8      	cbz	r0, 800d58a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800d552:	280a      	cmp	r0, #10
 800d554:	d012      	beq.n	800d57c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d556:	9804      	ldr	r0, [sp, #16]
 800d558:	b180      	cbz	r0, 800d57c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d55a:	7b47      	ldrb	r7, [r0, #13]
 800d55c:	7922      	ldrb	r2, [r4, #4]
 800d55e:	00fb      	lsls	r3, r7, #3
 800d560:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d564:	7a03      	ldrb	r3, [r0, #8]
 800d566:	430b      	orrs	r3, r1
 800d568:	0679      	lsls	r1, r7, #25
 800d56a:	bf44      	itt	mi
 800d56c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d570:	b21b      	sxthmi	r3, r3
 800d572:	1ad3      	subs	r3, r2, r3
 800d574:	b2db      	uxtb	r3, r3
 800d576:	429e      	cmp	r6, r3
 800d578:	bf28      	it	cs
 800d57a:	461e      	movcs	r6, r3
 800d57c:	462b      	mov	r3, r5
 800d57e:	4622      	mov	r2, r4
 800d580:	2100      	movs	r1, #0
 800d582:	a805      	add	r0, sp, #20
 800d584:	f001 f814 	bl	800e5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d588:	e7e2      	b.n	800d550 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800d58a:	4630      	mov	r0, r6
 800d58c:	b01c      	add	sp, #112	; 0x70
 800d58e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d592:	b003      	add	sp, #12
 800d594:	4770      	bx	lr

0800d596 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d596:	b513      	push	{r0, r1, r4, lr}
 800d598:	1d01      	adds	r1, r0, #4
 800d59a:	4603      	mov	r3, r0
 800d59c:	c903      	ldmia	r1, {r0, r1}
 800d59e:	466a      	mov	r2, sp
 800d5a0:	e882 0003 	stmia.w	r2, {r0, r1}
 800d5a4:	2100      	movs	r1, #0
 800d5a6:	9100      	str	r1, [sp, #0]
 800d5a8:	6819      	ldr	r1, [r3, #0]
 800d5aa:	4618      	mov	r0, r3
 800d5ac:	690c      	ldr	r4, [r1, #16]
 800d5ae:	4611      	mov	r1, r2
 800d5b0:	47a0      	blx	r4
 800d5b2:	b002      	add	sp, #8
 800d5b4:	bd10      	pop	{r4, pc}

0800d5b6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d5b6:	b538      	push	{r3, r4, r5, lr}
 800d5b8:	680b      	ldr	r3, [r1, #0]
 800d5ba:	460c      	mov	r4, r1
 800d5bc:	68db      	ldr	r3, [r3, #12]
 800d5be:	4605      	mov	r5, r0
 800d5c0:	4798      	blx	r3
 800d5c2:	6823      	ldr	r3, [r4, #0]
 800d5c4:	4620      	mov	r0, r4
 800d5c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d5c8:	4629      	mov	r1, r5
 800d5ca:	4798      	blx	r3
 800d5cc:	4628      	mov	r0, r5
 800d5ce:	bd38      	pop	{r3, r4, r5, pc}

0800d5d0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d5d0:	b410      	push	{r4}
 800d5d2:	880a      	ldrh	r2, [r1, #0]
 800d5d4:	8884      	ldrh	r4, [r0, #4]
 800d5d6:	4422      	add	r2, r4
 800d5d8:	800a      	strh	r2, [r1, #0]
 800d5da:	88c4      	ldrh	r4, [r0, #6]
 800d5dc:	884a      	ldrh	r2, [r1, #2]
 800d5de:	4422      	add	r2, r4
 800d5e0:	804a      	strh	r2, [r1, #2]
 800d5e2:	6940      	ldr	r0, [r0, #20]
 800d5e4:	b120      	cbz	r0, 800d5f0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d5e6:	6803      	ldr	r3, [r0, #0]
 800d5e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d5ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d5ee:	4718      	bx	r3
 800d5f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d5f4:	4770      	bx	lr

0800d5f6 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d5f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5f8:	460b      	mov	r3, r1
 800d5fa:	b085      	sub	sp, #20
 800d5fc:	4604      	mov	r4, r0
 800d5fe:	b901      	cbnz	r1, 800d602 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d600:	b322      	cbz	r2, 800d64c <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800d602:	1d27      	adds	r7, r4, #4
 800d604:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d608:	466e      	mov	r6, sp
 800d60a:	e886 0003 	stmia.w	r6, {r0, r1}
 800d60e:	88a1      	ldrh	r1, [r4, #4]
 800d610:	88e5      	ldrh	r5, [r4, #6]
 800d612:	4419      	add	r1, r3
 800d614:	6823      	ldr	r3, [r4, #0]
 800d616:	442a      	add	r2, r5
 800d618:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d61a:	b209      	sxth	r1, r1
 800d61c:	4620      	mov	r0, r4
 800d61e:	b215      	sxth	r5, r2
 800d620:	4798      	blx	r3
 800d622:	6823      	ldr	r3, [r4, #0]
 800d624:	4629      	mov	r1, r5
 800d626:	4620      	mov	r0, r4
 800d628:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d62a:	4798      	blx	r3
 800d62c:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d630:	ad02      	add	r5, sp, #8
 800d632:	e885 0003 	stmia.w	r5, {r0, r1}
 800d636:	6960      	ldr	r0, [r4, #20]
 800d638:	b150      	cbz	r0, 800d650 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800d63a:	6803      	ldr	r3, [r0, #0]
 800d63c:	4631      	mov	r1, r6
 800d63e:	691b      	ldr	r3, [r3, #16]
 800d640:	4798      	blx	r3
 800d642:	6960      	ldr	r0, [r4, #20]
 800d644:	6803      	ldr	r3, [r0, #0]
 800d646:	691b      	ldr	r3, [r3, #16]
 800d648:	4629      	mov	r1, r5
 800d64a:	4798      	blx	r3
 800d64c:	b005      	add	sp, #20
 800d64e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d650:	f7ff f82a 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 800d654:	6803      	ldr	r3, [r0, #0]
 800d656:	4631      	mov	r1, r6
 800d658:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d65a:	4798      	blx	r3
 800d65c:	f7ff f824 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 800d660:	6803      	ldr	r3, [r0, #0]
 800d662:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d664:	e7f0      	b.n	800d648 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800d666 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d666:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d668:	8882      	ldrh	r2, [r0, #4]
 800d66a:	880b      	ldrh	r3, [r1, #0]
 800d66c:	4413      	add	r3, r2
 800d66e:	800b      	strh	r3, [r1, #0]
 800d670:	88c2      	ldrh	r2, [r0, #6]
 800d672:	884b      	ldrh	r3, [r1, #2]
 800d674:	4413      	add	r3, r2
 800d676:	4602      	mov	r2, r0
 800d678:	804b      	strh	r3, [r1, #2]
 800d67a:	4605      	mov	r5, r0
 800d67c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d680:	460c      	mov	r4, r1
 800d682:	6851      	ldr	r1, [r2, #4]
 800d684:	466b      	mov	r3, sp
 800d686:	c303      	stmia	r3!, {r0, r1}
 800d688:	4621      	mov	r1, r4
 800d68a:	4668      	mov	r0, sp
 800d68c:	f7fb ff88 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800d690:	466b      	mov	r3, sp
 800d692:	cb03      	ldmia	r3!, {r0, r1}
 800d694:	6020      	str	r0, [r4, #0]
 800d696:	6061      	str	r1, [r4, #4]
 800d698:	6968      	ldr	r0, [r5, #20]
 800d69a:	b128      	cbz	r0, 800d6a8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800d69c:	6803      	ldr	r3, [r0, #0]
 800d69e:	691b      	ldr	r3, [r3, #16]
 800d6a0:	4621      	mov	r1, r4
 800d6a2:	4798      	blx	r3
 800d6a4:	b003      	add	sp, #12
 800d6a6:	bd30      	pop	{r4, r5, pc}
 800d6a8:	f7fe fffe 	bl	800c6a8 <_ZN8touchgfx11Application11getInstanceEv>
 800d6ac:	6803      	ldr	r3, [r0, #0]
 800d6ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d6b0:	e7f6      	b.n	800d6a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800d6b2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d6b2:	b570      	push	{r4, r5, r6, lr}
 800d6b4:	8882      	ldrh	r2, [r0, #4]
 800d6b6:	880b      	ldrh	r3, [r1, #0]
 800d6b8:	4413      	add	r3, r2
 800d6ba:	800b      	strh	r3, [r1, #0]
 800d6bc:	88c2      	ldrh	r2, [r0, #6]
 800d6be:	884b      	ldrh	r3, [r1, #2]
 800d6c0:	460c      	mov	r4, r1
 800d6c2:	4413      	add	r3, r2
 800d6c4:	804b      	strh	r3, [r1, #2]
 800d6c6:	4605      	mov	r5, r0
 800d6c8:	1d01      	adds	r1, r0, #4
 800d6ca:	4620      	mov	r0, r4
 800d6cc:	f7fb ff68 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800d6d0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d6d4:	2b00      	cmp	r3, #0
 800d6d6:	dd0b      	ble.n	800d6f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d6d8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d6dc:	2b00      	cmp	r3, #0
 800d6de:	dd07      	ble.n	800d6f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d6e0:	6968      	ldr	r0, [r5, #20]
 800d6e2:	b128      	cbz	r0, 800d6f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d6e4:	6803      	ldr	r3, [r0, #0]
 800d6e6:	4621      	mov	r1, r4
 800d6e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d6ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d6ee:	4718      	bx	r3
 800d6f0:	bd70      	pop	{r4, r5, r6, pc}

0800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800d6f2:	b510      	push	{r4, lr}
 800d6f4:	4604      	mov	r4, r0
 800d6f6:	4608      	mov	r0, r1
 800d6f8:	2300      	movs	r3, #0
 800d6fa:	8023      	strh	r3, [r4, #0]
 800d6fc:	8063      	strh	r3, [r4, #2]
 800d6fe:	6803      	ldr	r3, [r0, #0]
 800d700:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d704:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800d708:	80a1      	strh	r1, [r4, #4]
 800d70a:	80e2      	strh	r2, [r4, #6]
 800d70c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d70e:	4621      	mov	r1, r4
 800d710:	4798      	blx	r3
 800d712:	4620      	mov	r0, r4
 800d714:	bd10      	pop	{r4, pc}
	...

0800d718 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800d718:	b530      	push	{r4, r5, lr}
 800d71a:	8083      	strh	r3, [r0, #4]
 800d71c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800d720:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800d724:	7183      	strb	r3, [r0, #6]
 800d726:	79c3      	ldrb	r3, [r0, #7]
 800d728:	6101      	str	r1, [r0, #16]
 800d72a:	f365 0306 	bfi	r3, r5, #0, #7
 800d72e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800d732:	8282      	strh	r2, [r0, #20]
 800d734:	f365 13c7 	bfi	r3, r5, #7, #1
 800d738:	71c3      	strb	r3, [r0, #7]
 800d73a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800d73e:	7203      	strb	r3, [r0, #8]
 800d740:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800d744:	7243      	strb	r3, [r0, #9]
 800d746:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d74a:	8143      	strh	r3, [r0, #10]
 800d74c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800d750:	8183      	strh	r3, [r0, #12]
 800d752:	4b01      	ldr	r3, [pc, #4]	; (800d758 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800d754:	6003      	str	r3, [r0, #0]
 800d756:	bd30      	pop	{r4, r5, pc}
 800d758:	0801e9a0 	.word	0x0801e9a0

0800d75c <_ZNK8touchgfx9ConstFont4findEt>:
 800d75c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d75e:	6904      	ldr	r4, [r0, #16]
 800d760:	b3bc      	cbz	r4, 800d7d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d762:	88a3      	ldrh	r3, [r4, #4]
 800d764:	8a82      	ldrh	r2, [r0, #20]
 800d766:	1acb      	subs	r3, r1, r3
 800d768:	f102 32ff 	add.w	r2, r2, #4294967295
 800d76c:	d431      	bmi.n	800d7d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d76e:	4293      	cmp	r3, r2
 800d770:	dd0c      	ble.n	800d78c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800d772:	230e      	movs	r3, #14
 800d774:	fb03 4302 	mla	r3, r3, r2, r4
 800d778:	889b      	ldrh	r3, [r3, #4]
 800d77a:	1a5b      	subs	r3, r3, r1
 800d77c:	1ad3      	subs	r3, r2, r3
 800d77e:	429a      	cmp	r2, r3
 800d780:	db27      	blt.n	800d7d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d782:	2b00      	cmp	r3, #0
 800d784:	bfbc      	itt	lt
 800d786:	2302      	movlt	r3, #2
 800d788:	fb92 f3f3 	sdivlt	r3, r2, r3
 800d78c:	2500      	movs	r5, #0
 800d78e:	260e      	movs	r6, #14
 800d790:	4295      	cmp	r5, r2
 800d792:	dc1e      	bgt.n	800d7d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d794:	fb06 4003 	mla	r0, r6, r3, r4
 800d798:	8887      	ldrh	r7, [r0, #4]
 800d79a:	42b9      	cmp	r1, r7
 800d79c:	d01a      	beq.n	800d7d4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800d79e:	d20d      	bcs.n	800d7bc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800d7a0:	1e5a      	subs	r2, r3, #1
 800d7a2:	4295      	cmp	r5, r2
 800d7a4:	dc15      	bgt.n	800d7d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d7a6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800d7aa:	1a5b      	subs	r3, r3, r1
 800d7ac:	1ad3      	subs	r3, r2, r3
 800d7ae:	429a      	cmp	r2, r3
 800d7b0:	db0f      	blt.n	800d7d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d7b2:	429d      	cmp	r5, r3
 800d7b4:	ddec      	ble.n	800d790 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d7b6:	1953      	adds	r3, r2, r5
 800d7b8:	105b      	asrs	r3, r3, #1
 800d7ba:	e7e9      	b.n	800d790 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d7bc:	1c5d      	adds	r5, r3, #1
 800d7be:	42aa      	cmp	r2, r5
 800d7c0:	db07      	blt.n	800d7d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d7c2:	8a43      	ldrh	r3, [r0, #18]
 800d7c4:	1acb      	subs	r3, r1, r3
 800d7c6:	442b      	add	r3, r5
 800d7c8:	429d      	cmp	r5, r3
 800d7ca:	dc02      	bgt.n	800d7d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d7cc:	429a      	cmp	r2, r3
 800d7ce:	dadf      	bge.n	800d790 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d7d0:	e7f1      	b.n	800d7b6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800d7d2:	2000      	movs	r0, #0
 800d7d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d7d6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800d7d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d7d8:	4604      	mov	r4, r0
 800d7da:	4617      	mov	r7, r2
 800d7dc:	461e      	mov	r6, r3
 800d7de:	b911      	cbnz	r1, 800d7e6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800d7e0:	2500      	movs	r5, #0
 800d7e2:	4628      	mov	r0, r5
 800d7e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d7e6:	290a      	cmp	r1, #10
 800d7e8:	d0fa      	beq.n	800d7e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d7ea:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d7ee:	4291      	cmp	r1, r2
 800d7f0:	d0f6      	beq.n	800d7e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d7f2:	f242 020b 	movw	r2, #8203	; 0x200b
 800d7f6:	4291      	cmp	r1, r2
 800d7f8:	d0f2      	beq.n	800d7e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d7fa:	f7ff ffaf 	bl	800d75c <_ZNK8touchgfx9ConstFont4findEt>
 800d7fe:	4605      	mov	r5, r0
 800d800:	b950      	cbnz	r0, 800d818 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800d802:	6823      	ldr	r3, [r4, #0]
 800d804:	4620      	mov	r0, r4
 800d806:	691b      	ldr	r3, [r3, #16]
 800d808:	4798      	blx	r3
 800d80a:	4601      	mov	r1, r0
 800d80c:	4620      	mov	r0, r4
 800d80e:	f7ff ffa5 	bl	800d75c <_ZNK8touchgfx9ConstFont4findEt>
 800d812:	4605      	mov	r5, r0
 800d814:	2800      	cmp	r0, #0
 800d816:	d0e3      	beq.n	800d7e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d818:	6823      	ldr	r3, [r4, #0]
 800d81a:	4629      	mov	r1, r5
 800d81c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d81e:	4620      	mov	r0, r4
 800d820:	4798      	blx	r3
 800d822:	6038      	str	r0, [r7, #0]
 800d824:	6823      	ldr	r3, [r4, #0]
 800d826:	4620      	mov	r0, r4
 800d828:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d82a:	4798      	blx	r3
 800d82c:	7030      	strb	r0, [r6, #0]
 800d82e:	e7d8      	b.n	800d7e2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800d830 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800d830:	2000      	movs	r0, #0
 800d832:	4770      	bx	lr

0800d834 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800d834:	2001      	movs	r0, #1
 800d836:	4770      	bx	lr

0800d838 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800d838:	2002      	movs	r0, #2
 800d83a:	4770      	bx	lr

0800d83c <_ZN8touchgfx6ScreenD1Ev>:
 800d83c:	4770      	bx	lr

0800d83e <_ZN8touchgfx12GestureEventD1Ev>:
 800d83e:	4770      	bx	lr

0800d840 <_ZN8touchgfx9DragEventD1Ev>:
 800d840:	4770      	bx	lr

0800d842 <_ZN8touchgfx10ClickEventD1Ev>:
 800d842:	4770      	bx	lr

0800d844 <_ZN8touchgfx10ClickEventD0Ev>:
 800d844:	b510      	push	{r4, lr}
 800d846:	210c      	movs	r1, #12
 800d848:	4604      	mov	r4, r0
 800d84a:	f00d fdfe 	bl	801b44a <_ZdlPvj>
 800d84e:	4620      	mov	r0, r4
 800d850:	bd10      	pop	{r4, pc}

0800d852 <_ZN8touchgfx9DragEventD0Ev>:
 800d852:	b510      	push	{r4, lr}
 800d854:	2110      	movs	r1, #16
 800d856:	4604      	mov	r4, r0
 800d858:	f00d fdf7 	bl	801b44a <_ZdlPvj>
 800d85c:	4620      	mov	r0, r4
 800d85e:	bd10      	pop	{r4, pc}

0800d860 <_ZN8touchgfx12GestureEventD0Ev>:
 800d860:	b510      	push	{r4, lr}
 800d862:	210c      	movs	r1, #12
 800d864:	4604      	mov	r4, r0
 800d866:	f00d fdf0 	bl	801b44a <_ZdlPvj>
 800d86a:	4620      	mov	r0, r4
 800d86c:	bd10      	pop	{r4, pc}

0800d86e <_ZN8touchgfx6ScreenD0Ev>:
 800d86e:	b510      	push	{r4, lr}
 800d870:	213c      	movs	r1, #60	; 0x3c
 800d872:	4604      	mov	r4, r0
 800d874:	f00d fde9 	bl	801b44a <_ZdlPvj>
 800d878:	4620      	mov	r0, r4
 800d87a:	bd10      	pop	{r4, pc}

0800d87c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800d87c:	b530      	push	{r4, r5, lr}
 800d87e:	460d      	mov	r5, r1
 800d880:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800d882:	b087      	sub	sp, #28
 800d884:	4604      	mov	r4, r0
 800d886:	b301      	cbz	r1, 800d8ca <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800d888:	a801      	add	r0, sp, #4
 800d88a:	f7ff ff32 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d88e:	892a      	ldrh	r2, [r5, #8]
 800d890:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d894:	7928      	ldrb	r0, [r5, #4]
 800d896:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800d89a:	f88d 0010 	strb.w	r0, [sp, #16]
 800d89e:	1ad2      	subs	r2, r2, r3
 800d8a0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d8a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d8a4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d8a8:	441a      	add	r2, r3
 800d8aa:	896b      	ldrh	r3, [r5, #10]
 800d8ac:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800d8b0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d8b4:	1b5b      	subs	r3, r3, r5
 800d8b6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800d8b8:	442b      	add	r3, r5
 800d8ba:	4d05      	ldr	r5, [pc, #20]	; (800d8d0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800d8bc:	9503      	str	r5, [sp, #12]
 800d8be:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d8c2:	6803      	ldr	r3, [r0, #0]
 800d8c4:	a903      	add	r1, sp, #12
 800d8c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d8c8:	4798      	blx	r3
 800d8ca:	b007      	add	sp, #28
 800d8cc:	bd30      	pop	{r4, r5, pc}
 800d8ce:	bf00      	nop
 800d8d0:	0801ea20 	.word	0x0801ea20

0800d8d4 <_ZNK8touchgfx4Rect9intersectEss>:
 800d8d4:	b510      	push	{r4, lr}
 800d8d6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800d8da:	428b      	cmp	r3, r1
 800d8dc:	dc10      	bgt.n	800d900 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800d8de:	8884      	ldrh	r4, [r0, #4]
 800d8e0:	4423      	add	r3, r4
 800d8e2:	b21b      	sxth	r3, r3
 800d8e4:	4299      	cmp	r1, r3
 800d8e6:	da0b      	bge.n	800d900 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800d8e8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800d8ec:	4293      	cmp	r3, r2
 800d8ee:	dc07      	bgt.n	800d900 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800d8f0:	88c0      	ldrh	r0, [r0, #6]
 800d8f2:	4418      	add	r0, r3
 800d8f4:	b200      	sxth	r0, r0
 800d8f6:	4282      	cmp	r2, r0
 800d8f8:	bfac      	ite	ge
 800d8fa:	2000      	movge	r0, #0
 800d8fc:	2001      	movlt	r0, #1
 800d8fe:	bd10      	pop	{r4, pc}
 800d900:	2000      	movs	r0, #0
 800d902:	e7fc      	b.n	800d8fe <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800d904 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800d904:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d906:	460c      	mov	r4, r1
 800d908:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800d90a:	b089      	sub	sp, #36	; 0x24
 800d90c:	4605      	mov	r5, r0
 800d90e:	2900      	cmp	r1, #0
 800d910:	d054      	beq.n	800d9bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800d912:	4668      	mov	r0, sp
 800d914:	f7ff feed 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d918:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800d91a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800d91c:	8922      	ldrh	r2, [r4, #8]
 800d91e:	88e1      	ldrh	r1, [r4, #6]
 800d920:	443a      	add	r2, r7
 800d922:	4431      	add	r1, r6
 800d924:	b212      	sxth	r2, r2
 800d926:	b209      	sxth	r1, r1
 800d928:	4668      	mov	r0, sp
 800d92a:	f7ff ffd3 	bl	800d8d4 <_ZNK8touchgfx4Rect9intersectEss>
 800d92e:	b1d0      	cbz	r0, 800d966 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800d930:	89a2      	ldrh	r2, [r4, #12]
 800d932:	8961      	ldrh	r1, [r4, #10]
 800d934:	443a      	add	r2, r7
 800d936:	4431      	add	r1, r6
 800d938:	b212      	sxth	r2, r2
 800d93a:	b209      	sxth	r1, r1
 800d93c:	4668      	mov	r0, sp
 800d93e:	f7ff ffc9 	bl	800d8d4 <_ZNK8touchgfx4Rect9intersectEss>
 800d942:	4603      	mov	r3, r0
 800d944:	b978      	cbnz	r0, 800d966 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800d946:	4a1e      	ldr	r2, [pc, #120]	; (800d9c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800d948:	9204      	str	r2, [sp, #16]
 800d94a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800d94c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d950:	2202      	movs	r2, #2
 800d952:	f88d 2014 	strb.w	r2, [sp, #20]
 800d956:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d95a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d95e:	6803      	ldr	r3, [r0, #0]
 800d960:	a904      	add	r1, sp, #16
 800d962:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d964:	4798      	blx	r3
 800d966:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800d968:	a802      	add	r0, sp, #8
 800d96a:	f7ff fec2 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d96e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800d972:	88e0      	ldrh	r0, [r4, #6]
 800d974:	8961      	ldrh	r1, [r4, #10]
 800d976:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800d97a:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800d97e:	8923      	ldrh	r3, [r4, #8]
 800d980:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800d982:	7927      	ldrb	r7, [r4, #4]
 800d984:	f88d 7014 	strb.w	r7, [sp, #20]
 800d988:	1a80      	subs	r0, r0, r2
 800d98a:	1a89      	subs	r1, r1, r2
 800d98c:	89a2      	ldrh	r2, [r4, #12]
 800d98e:	4c0d      	ldr	r4, [pc, #52]	; (800d9c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800d990:	9404      	str	r4, [sp, #16]
 800d992:	4460      	add	r0, ip
 800d994:	eba3 030e 	sub.w	r3, r3, lr
 800d998:	eba2 020e 	sub.w	r2, r2, lr
 800d99c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d9a0:	4433      	add	r3, r6
 800d9a2:	4461      	add	r1, ip
 800d9a4:	4432      	add	r2, r6
 800d9a6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800d9a8:	f8ad 101a 	strh.w	r1, [sp, #26]
 800d9ac:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d9b0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d9b4:	6803      	ldr	r3, [r0, #0]
 800d9b6:	a904      	add	r1, sp, #16
 800d9b8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d9ba:	4798      	blx	r3
 800d9bc:	b009      	add	sp, #36	; 0x24
 800d9be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d9c0:	0801e9f8 	.word	0x0801e9f8
 800d9c4:	0801ea0c 	.word	0x0801ea0c

0800d9c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800d9c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9cc:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800d9d0:	790b      	ldrb	r3, [r1, #4]
 800d9d2:	b0a1      	sub	sp, #132	; 0x84
 800d9d4:	4604      	mov	r4, r0
 800d9d6:	460d      	mov	r5, r1
 800d9d8:	f1b9 0f00 	cmp.w	r9, #0
 800d9dc:	d00f      	beq.n	800d9fe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800d9de:	2b00      	cmp	r3, #0
 800d9e0:	f040 80a0 	bne.w	800db24 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800d9e4:	b021      	add	sp, #132	; 0x84
 800d9e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9ea:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800d9ee:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800d9f2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800d9f6:	1d20      	adds	r0, r4, #4
 800d9f8:	f7fb fd18 	bl	800942c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d9fc:	e092      	b.n	800db24 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800d9fe:	2b00      	cmp	r3, #0
 800da00:	d1f0      	bne.n	800d9e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800da02:	4b5e      	ldr	r3, [pc, #376]	; (800db7c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800da04:	681b      	ldr	r3, [r3, #0]
 800da06:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800da0a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800da0e:	f1ba 0f03 	cmp.w	sl, #3
 800da12:	ddea      	ble.n	800d9ea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800da14:	f1ba 0f0c 	cmp.w	sl, #12
 800da18:	f04f 0303 	mov.w	r3, #3
 800da1c:	bfdc      	itt	le
 800da1e:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800da22:	fb92 f3f3 	sdivle	r3, r2, r3
 800da26:	9301      	str	r3, [sp, #4]
 800da28:	4b55      	ldr	r3, [pc, #340]	; (800db80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800da2a:	4956      	ldr	r1, [pc, #344]	; (800db84 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800da2c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800da30:	4b55      	ldr	r3, [pc, #340]	; (800db88 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800da32:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800da36:	f9b3 3000 	ldrsh.w	r3, [r3]
 800da3a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800da3e:	ab0e      	add	r3, sp, #56	; 0x38
 800da40:	2248      	movs	r2, #72	; 0x48
 800da42:	2600      	movs	r6, #0
 800da44:	4618      	mov	r0, r3
 800da46:	960a      	str	r6, [sp, #40]	; 0x28
 800da48:	f00d fea6 	bl	801b798 <memcpy>
 800da4c:	f04f 32ff 	mov.w	r2, #4294967295
 800da50:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800da54:	f8cd a008 	str.w	sl, [sp, #8]
 800da58:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800da5c:	fb93 f3f2 	sdiv	r3, r3, r2
 800da60:	b29b      	uxth	r3, r3
 800da62:	46b3      	mov	fp, r6
 800da64:	9303      	str	r3, [sp, #12]
 800da66:	2300      	movs	r3, #0
 800da68:	9309      	str	r3, [sp, #36]	; 0x24
 800da6a:	9b07      	ldr	r3, [sp, #28]
 800da6c:	9a03      	ldr	r2, [sp, #12]
 800da6e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800da72:	88ef      	ldrh	r7, [r5, #6]
 800da74:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800da78:	fb13 f302 	smulbb	r3, r3, r2
 800da7c:	b29b      	uxth	r3, r3
 800da7e:	9304      	str	r3, [sp, #16]
 800da80:	9b07      	ldr	r3, [sp, #28]
 800da82:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800da86:	a80a      	add	r0, sp, #40	; 0x28
 800da88:	685b      	ldr	r3, [r3, #4]
 800da8a:	fb13 f302 	smulbb	r3, r3, r2
 800da8e:	b29b      	uxth	r3, r3
 800da90:	9305      	str	r3, [sp, #20]
 800da92:	9b04      	ldr	r3, [sp, #16]
 800da94:	441f      	add	r7, r3
 800da96:	9b05      	ldr	r3, [sp, #20]
 800da98:	4498      	add	r8, r3
 800da9a:	b23f      	sxth	r7, r7
 800da9c:	fa0f f888 	sxth.w	r8, r8
 800daa0:	4642      	mov	r2, r8
 800daa2:	4639      	mov	r1, r7
 800daa4:	f7ff ff16 	bl	800d8d4 <_ZNK8touchgfx4Rect9intersectEss>
 800daa8:	b380      	cbz	r0, 800db0c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800daaa:	4639      	mov	r1, r7
 800daac:	ab09      	add	r3, sp, #36	; 0x24
 800daae:	4642      	mov	r2, r8
 800dab0:	1d20      	adds	r0, r4, #4
 800dab2:	f7fb fcbb 	bl	800942c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dab6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800dab8:	b341      	cbz	r1, 800db0c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800daba:	4549      	cmp	r1, r9
 800dabc:	d026      	beq.n	800db0c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dabe:	a80c      	add	r0, sp, #48	; 0x30
 800dac0:	f7ff fe17 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dac4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800dac8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dacc:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800dad0:	2002      	movs	r0, #2
 800dad2:	fb92 f2f0 	sdiv	r2, r2, r0
 800dad6:	440a      	add	r2, r1
 800dad8:	1a99      	subs	r1, r3, r2
 800dada:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800dade:	fb93 f3f0 	sdiv	r3, r3, r0
 800dae2:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800dae6:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800daea:	4403      	add	r3, r0
 800daec:	1ad3      	subs	r3, r2, r3
 800daee:	435b      	muls	r3, r3
 800daf0:	9a06      	ldr	r2, [sp, #24]
 800daf2:	fb01 3301 	mla	r3, r1, r1, r3
 800daf6:	4293      	cmp	r3, r2
 800daf8:	d208      	bcs.n	800db0c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dafa:	9a04      	ldr	r2, [sp, #16]
 800dafc:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800db00:	86a2      	strh	r2, [r4, #52]	; 0x34
 800db02:	9a05      	ldr	r2, [sp, #20]
 800db04:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800db08:	86e2      	strh	r2, [r4, #54]	; 0x36
 800db0a:	9306      	str	r3, [sp, #24]
 800db0c:	f10b 0b02 	add.w	fp, fp, #2
 800db10:	f1bb 0f08 	cmp.w	fp, #8
 800db14:	dda7      	ble.n	800da66 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800db16:	9b02      	ldr	r3, [sp, #8]
 800db18:	4453      	add	r3, sl
 800db1a:	9302      	str	r3, [sp, #8]
 800db1c:	9b01      	ldr	r3, [sp, #4]
 800db1e:	3601      	adds	r6, #1
 800db20:	42b3      	cmp	r3, r6
 800db22:	d199      	bne.n	800da58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800db24:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800db26:	2900      	cmp	r1, #0
 800db28:	f43f af5c 	beq.w	800d9e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800db2c:	a80c      	add	r0, sp, #48	; 0x30
 800db2e:	f7ff fde0 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db32:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800db36:	88ea      	ldrh	r2, [r5, #6]
 800db38:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800db3c:	7929      	ldrb	r1, [r5, #4]
 800db3e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800db42:	1ad2      	subs	r2, r2, r3
 800db44:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800db46:	441a      	add	r2, r3
 800db48:	892b      	ldrh	r3, [r5, #8]
 800db4a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800db4e:	1a1b      	subs	r3, r3, r0
 800db50:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800db52:	4403      	add	r3, r0
 800db54:	480d      	ldr	r0, [pc, #52]	; (800db8c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800db56:	900e      	str	r0, [sp, #56]	; 0x38
 800db58:	2600      	movs	r6, #0
 800db5a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800db5c:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800db60:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800db64:	6803      	ldr	r3, [r0, #0]
 800db66:	a90e      	add	r1, sp, #56	; 0x38
 800db68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800db6a:	4798      	blx	r3
 800db6c:	792b      	ldrb	r3, [r5, #4]
 800db6e:	2b00      	cmp	r3, #0
 800db70:	f43f af38 	beq.w	800d9e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800db74:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800db78:	e734      	b.n	800d9e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800db7a:	bf00      	nop
 800db7c:	2000a324 	.word	0x2000a324
 800db80:	2000a318 	.word	0x2000a318
 800db84:	0801c688 	.word	0x0801c688
 800db88:	2000a31a 	.word	0x2000a31a
 800db8c:	0801e9f8 	.word	0x0801e9f8

0800db90 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800db90:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800db92:	4604      	mov	r4, r0
 800db94:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800db98:	3201      	adds	r2, #1
 800db9a:	d112      	bne.n	800dbc2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800db9c:	6803      	ldr	r3, [r0, #0]
 800db9e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dba2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dba6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dbaa:	2500      	movs	r5, #0
 800dbac:	9500      	str	r5, [sp, #0]
 800dbae:	466d      	mov	r5, sp
 800dbb0:	4629      	mov	r1, r5
 800dbb2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800dbb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dbb8:	4798      	blx	r3
 800dbba:	e895 0003 	ldmia.w	r5, {r0, r1}
 800dbbe:	e884 0003 	stmia.w	r4, {r0, r1}
 800dbc2:	4620      	mov	r0, r4
 800dbc4:	b003      	add	sp, #12
 800dbc6:	bd30      	pop	{r4, r5, pc}

0800dbc8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800dbc8:	b513      	push	{r0, r1, r4, lr}
 800dbca:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800dbce:	3301      	adds	r3, #1
 800dbd0:	4604      	mov	r4, r0
 800dbd2:	d109      	bne.n	800dbe8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800dbd4:	4601      	mov	r1, r0
 800dbd6:	4668      	mov	r0, sp
 800dbd8:	f7ff fd8b 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dbdc:	f8bd 3000 	ldrh.w	r3, [sp]
 800dbe0:	8423      	strh	r3, [r4, #32]
 800dbe2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800dbe6:	8463      	strh	r3, [r4, #34]	; 0x22
 800dbe8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800dbec:	b002      	add	sp, #8
 800dbee:	bd10      	pop	{r4, pc}

0800dbf0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800dbf0:	b513      	push	{r0, r1, r4, lr}
 800dbf2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800dbf6:	3301      	adds	r3, #1
 800dbf8:	4604      	mov	r4, r0
 800dbfa:	d109      	bne.n	800dc10 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800dbfc:	4601      	mov	r1, r0
 800dbfe:	4668      	mov	r0, sp
 800dc00:	f7ff fd77 	bl	800d6f2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc04:	f8bd 3000 	ldrh.w	r3, [sp]
 800dc08:	8423      	strh	r3, [r4, #32]
 800dc0a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800dc0e:	8463      	strh	r3, [r4, #34]	; 0x22
 800dc10:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800dc14:	b002      	add	sp, #8
 800dc16:	bd10      	pop	{r4, pc}

0800dc18 <_ZN8touchgfx6ScreenC1Ev>:
 800dc18:	b570      	push	{r4, r5, r6, lr}
 800dc1a:	4605      	mov	r5, r0
 800dc1c:	4b16      	ldr	r3, [pc, #88]	; (800dc78 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800dc1e:	f845 3b04 	str.w	r3, [r5], #4
 800dc22:	2300      	movs	r3, #0
 800dc24:	8103      	strh	r3, [r0, #8]
 800dc26:	8143      	strh	r3, [r0, #10]
 800dc28:	8183      	strh	r3, [r0, #12]
 800dc2a:	81c3      	strh	r3, [r0, #14]
 800dc2c:	8203      	strh	r3, [r0, #16]
 800dc2e:	8243      	strh	r3, [r0, #18]
 800dc30:	8283      	strh	r3, [r0, #20]
 800dc32:	82c3      	strh	r3, [r0, #22]
 800dc34:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800dc38:	6203      	str	r3, [r0, #32]
 800dc3a:	8483      	strh	r3, [r0, #36]	; 0x24
 800dc3c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800dc3e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800dc42:	4a0e      	ldr	r2, [pc, #56]	; (800dc7c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800dc44:	6343      	str	r3, [r0, #52]	; 0x34
 800dc46:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800dc4a:	4b0d      	ldr	r3, [pc, #52]	; (800dc80 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800dc4c:	6042      	str	r2, [r0, #4]
 800dc4e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800dc52:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800dc54:	4a0b      	ldr	r2, [pc, #44]	; (800dc84 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800dc56:	4604      	mov	r4, r0
 800dc58:	2101      	movs	r1, #1
 800dc5a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800dc5e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800dc62:	f9b2 1000 	ldrsh.w	r1, [r2]
 800dc66:	4628      	mov	r0, r5
 800dc68:	4798      	blx	r3
 800dc6a:	6863      	ldr	r3, [r4, #4]
 800dc6c:	4628      	mov	r0, r5
 800dc6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dc70:	4631      	mov	r1, r6
 800dc72:	4798      	blx	r3
 800dc74:	4620      	mov	r0, r4
 800dc76:	bd70      	pop	{r4, r5, r6, pc}
 800dc78:	0801ea34 	.word	0x0801ea34
 800dc7c:	0801dda0 	.word	0x0801dda0
 800dc80:	2000a31a 	.word	0x2000a31a
 800dc84:	2000a318 	.word	0x2000a318

0800dc88 <_ZN8touchgfx6Screen4drawEv>:
 800dc88:	b507      	push	{r0, r1, r2, lr}
 800dc8a:	4b09      	ldr	r3, [pc, #36]	; (800dcb0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800dc8c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dc90:	4b08      	ldr	r3, [pc, #32]	; (800dcb4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800dc92:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dc96:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dc9a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dc9e:	6803      	ldr	r3, [r0, #0]
 800dca0:	2100      	movs	r1, #0
 800dca2:	9100      	str	r1, [sp, #0]
 800dca4:	689b      	ldr	r3, [r3, #8]
 800dca6:	4669      	mov	r1, sp
 800dca8:	4798      	blx	r3
 800dcaa:	b003      	add	sp, #12
 800dcac:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcb0:	2000a318 	.word	0x2000a318
 800dcb4:	2000a31a 	.word	0x2000a31a

0800dcb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800dcb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcbc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800dcc0:	2b00      	cmp	r3, #0
 800dcc2:	b089      	sub	sp, #36	; 0x24
 800dcc4:	4680      	mov	r8, r0
 800dcc6:	460c      	mov	r4, r1
 800dcc8:	4615      	mov	r5, r2
 800dcca:	dd0e      	ble.n	800dcea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dccc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800dcd0:	2b00      	cmp	r3, #0
 800dcd2:	dd0a      	ble.n	800dcea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dcd4:	4628      	mov	r0, r5
 800dcd6:	f7ff ff5b 	bl	800db90 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dcda:	4621      	mov	r1, r4
 800dcdc:	f7fe fc5a 	bl	800c594 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dce0:	69eb      	ldr	r3, [r5, #28]
 800dce2:	b928      	cbnz	r0, 800dcf0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800dce4:	461d      	mov	r5, r3
 800dce6:	2b00      	cmp	r3, #0
 800dce8:	d1f4      	bne.n	800dcd4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800dcea:	b009      	add	sp, #36	; 0x24
 800dcec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dcf0:	ae04      	add	r6, sp, #16
 800dcf2:	2b00      	cmp	r3, #0
 800dcf4:	f000 80b5 	beq.w	800de62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800dcf8:	682b      	ldr	r3, [r5, #0]
 800dcfa:	4629      	mov	r1, r5
 800dcfc:	68db      	ldr	r3, [r3, #12]
 800dcfe:	a802      	add	r0, sp, #8
 800dd00:	4798      	blx	r3
 800dd02:	4628      	mov	r0, r5
 800dd04:	f7ff ff60 	bl	800dbc8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800dd08:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800dd0c:	4407      	add	r7, r0
 800dd0e:	4628      	mov	r0, r5
 800dd10:	f7ff ff6e 	bl	800dbf0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800dd14:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dd18:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800dd1c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dd20:	4418      	add	r0, r3
 800dd22:	4621      	mov	r1, r4
 800dd24:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800dd28:	f8ad 0012 	strh.w	r0, [sp, #18]
 800dd2c:	b23f      	sxth	r7, r7
 800dd2e:	4630      	mov	r0, r6
 800dd30:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dd34:	f8ad 7010 	strh.w	r7, [sp, #16]
 800dd38:	f7fb fc32 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800dd3c:	4628      	mov	r0, r5
 800dd3e:	f7ff ff27 	bl	800db90 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dd42:	4602      	mov	r2, r0
 800dd44:	e896 0003 	ldmia.w	r6, {r0, r1}
 800dd48:	ab06      	add	r3, sp, #24
 800dd4a:	e883 0003 	stmia.w	r3, {r0, r1}
 800dd4e:	4611      	mov	r1, r2
 800dd50:	4618      	mov	r0, r3
 800dd52:	f7fb fc25 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800dd56:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800dd5a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800dd5e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800dd62:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800dd66:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800dd6a:	4299      	cmp	r1, r3
 800dd6c:	d10b      	bne.n	800dd86 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dd6e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dd72:	4552      	cmp	r2, sl
 800dd74:	d107      	bne.n	800dd86 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dd76:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800dd7a:	455a      	cmp	r2, fp
 800dd7c:	d103      	bne.n	800dd86 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dd7e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800dd82:	454a      	cmp	r2, r9
 800dd84:	d06d      	beq.n	800de62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800dd86:	f1bb 0f00 	cmp.w	fp, #0
 800dd8a:	dd65      	ble.n	800de58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800dd8c:	f1b9 0f00 	cmp.w	r9, #0
 800dd90:	dd62      	ble.n	800de58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800dd92:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dd96:	fa1f f08a 	uxth.w	r0, sl
 800dd9a:	4552      	cmp	r2, sl
 800dd9c:	9000      	str	r0, [sp, #0]
 800dd9e:	da12      	bge.n	800ddc6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800dda0:	9301      	str	r3, [sp, #4]
 800dda2:	9b00      	ldr	r3, [sp, #0]
 800dda4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800dda8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ddac:	1a9a      	subs	r2, r3, r2
 800ddae:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ddb2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ddb6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800ddba:	69ea      	ldr	r2, [r5, #28]
 800ddbc:	4631      	mov	r1, r6
 800ddbe:	4640      	mov	r0, r8
 800ddc0:	f7ff ff7a 	bl	800dcb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ddc4:	9b01      	ldr	r3, [sp, #4]
 800ddc6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800ddca:	429a      	cmp	r2, r3
 800ddcc:	b29f      	uxth	r7, r3
 800ddce:	da0d      	bge.n	800ddec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800ddd0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ddd4:	1aba      	subs	r2, r7, r2
 800ddd6:	f8ad a012 	strh.w	sl, [sp, #18]
 800ddda:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ddde:	f8ad 9016 	strh.w	r9, [sp, #22]
 800dde2:	69ea      	ldr	r2, [r5, #28]
 800dde4:	4631      	mov	r1, r6
 800dde6:	4640      	mov	r0, r8
 800dde8:	f7ff ff66 	bl	800dcb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ddec:	8822      	ldrh	r2, [r4, #0]
 800ddee:	88a3      	ldrh	r3, [r4, #4]
 800ddf0:	445f      	add	r7, fp
 800ddf2:	4413      	add	r3, r2
 800ddf4:	b29b      	uxth	r3, r3
 800ddf6:	b2bf      	uxth	r7, r7
 800ddf8:	b23a      	sxth	r2, r7
 800ddfa:	b219      	sxth	r1, r3
 800ddfc:	4291      	cmp	r1, r2
 800ddfe:	dd0d      	ble.n	800de1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800de00:	1bdb      	subs	r3, r3, r7
 800de02:	f8ad 2010 	strh.w	r2, [sp, #16]
 800de06:	f8ad a012 	strh.w	sl, [sp, #18]
 800de0a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800de0e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800de12:	69ea      	ldr	r2, [r5, #28]
 800de14:	4631      	mov	r1, r6
 800de16:	4640      	mov	r0, r8
 800de18:	f7ff ff4e 	bl	800dcb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800de1c:	88e2      	ldrh	r2, [r4, #6]
 800de1e:	8863      	ldrh	r3, [r4, #2]
 800de20:	4413      	add	r3, r2
 800de22:	9a00      	ldr	r2, [sp, #0]
 800de24:	444a      	add	r2, r9
 800de26:	b29b      	uxth	r3, r3
 800de28:	fa1f f982 	uxth.w	r9, r2
 800de2c:	fa0f f289 	sxth.w	r2, r9
 800de30:	b219      	sxth	r1, r3
 800de32:	428a      	cmp	r2, r1
 800de34:	da15      	bge.n	800de62 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800de36:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800de3a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800de3e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800de42:	eba3 0309 	sub.w	r3, r3, r9
 800de46:	f8ad 0010 	strh.w	r0, [sp, #16]
 800de4a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800de4e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800de52:	69ea      	ldr	r2, [r5, #28]
 800de54:	4631      	mov	r1, r6
 800de56:	e001      	b.n	800de5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800de58:	69ea      	ldr	r2, [r5, #28]
 800de5a:	4621      	mov	r1, r4
 800de5c:	4640      	mov	r0, r8
 800de5e:	f7ff ff2b 	bl	800dcb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800de62:	4628      	mov	r0, r5
 800de64:	f7ff fe94 	bl	800db90 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800de68:	6861      	ldr	r1, [r4, #4]
 800de6a:	4602      	mov	r2, r0
 800de6c:	6820      	ldr	r0, [r4, #0]
 800de6e:	4633      	mov	r3, r6
 800de70:	c303      	stmia	r3!, {r0, r1}
 800de72:	4611      	mov	r1, r2
 800de74:	4630      	mov	r0, r6
 800de76:	f7fb fb93 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800de7a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800de7e:	2b00      	cmp	r3, #0
 800de80:	f77f af33 	ble.w	800dcea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800de84:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800de88:	2b00      	cmp	r3, #0
 800de8a:	f77f af2e 	ble.w	800dcea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800de8e:	4628      	mov	r0, r5
 800de90:	f7ff fe9a 	bl	800dbc8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800de94:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800de98:	1a18      	subs	r0, r3, r0
 800de9a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800de9e:	4628      	mov	r0, r5
 800dea0:	f7ff fea6 	bl	800dbf0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800dea4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800dea8:	1a18      	subs	r0, r3, r0
 800deaa:	f8ad 0012 	strh.w	r0, [sp, #18]
 800deae:	682b      	ldr	r3, [r5, #0]
 800deb0:	4631      	mov	r1, r6
 800deb2:	689b      	ldr	r3, [r3, #8]
 800deb4:	4628      	mov	r0, r5
 800deb6:	4798      	blx	r3
 800deb8:	e717      	b.n	800dcea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800deba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800deba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800debc:	aa02      	add	r2, sp, #8
 800debe:	2300      	movs	r3, #0
 800dec0:	f842 3d04 	str.w	r3, [r2, #-4]!
 800dec4:	4604      	mov	r4, r0
 800dec6:	3004      	adds	r0, #4
 800dec8:	460d      	mov	r5, r1
 800deca:	f7fb fc41 	bl	8009750 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800dece:	9a01      	ldr	r2, [sp, #4]
 800ded0:	b11a      	cbz	r2, 800deda <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800ded2:	4629      	mov	r1, r5
 800ded4:	4620      	mov	r0, r4
 800ded6:	f7ff feef 	bl	800dcb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800deda:	b003      	add	sp, #12
 800dedc:	bd30      	pop	{r4, r5, pc}

0800dede <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800dede:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dee0:	4602      	mov	r2, r0
 800dee2:	4604      	mov	r4, r0
 800dee4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800dee8:	460d      	mov	r5, r1
 800deea:	6851      	ldr	r1, [r2, #4]
 800deec:	466b      	mov	r3, sp
 800deee:	c303      	stmia	r3!, {r0, r1}
 800def0:	4629      	mov	r1, r5
 800def2:	4668      	mov	r0, sp
 800def4:	f7fb fb54 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800def8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800defc:	4669      	mov	r1, sp
 800defe:	b123      	cbz	r3, 800df0a <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800df00:	4620      	mov	r0, r4
 800df02:	f7ff ffda 	bl	800deba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800df06:	b003      	add	sp, #12
 800df08:	bd30      	pop	{r4, r5, pc}
 800df0a:	1d20      	adds	r0, r4, #4
 800df0c:	f7fb fbe7 	bl	80096de <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800df10:	e7f9      	b.n	800df06 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800df12 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800df12:	680a      	ldr	r2, [r1, #0]
 800df14:	460b      	mov	r3, r1
 800df16:	6992      	ldr	r2, [r2, #24]
 800df18:	1d01      	adds	r1, r0, #4
 800df1a:	4618      	mov	r0, r3
 800df1c:	4710      	bx	r2

0800df1e <_ZN8touchgfx12TextProviderC1Ev>:
 800df1e:	b538      	push	{r3, r4, r5, lr}
 800df20:	2500      	movs	r5, #0
 800df22:	4604      	mov	r4, r0
 800df24:	e9c0 5500 	strd	r5, r5, [r0]
 800df28:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800df2c:	7405      	strb	r5, [r0, #16]
 800df2e:	82c5      	strh	r5, [r0, #22]
 800df30:	8305      	strh	r5, [r0, #24]
 800df32:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800df34:	8605      	strh	r5, [r0, #48]	; 0x30
 800df36:	86c5      	strh	r5, [r0, #54]	; 0x36
 800df38:	8705      	strh	r5, [r0, #56]	; 0x38
 800df3a:	e9c0 550f 	strd	r5, r5, [r0, #60]	; 0x3c
 800df3e:	220e      	movs	r2, #14
 800df40:	4629      	mov	r1, r5
 800df42:	3044      	adds	r0, #68	; 0x44
 800df44:	f00d fc36 	bl	801b7b4 <memset>
 800df48:	2301      	movs	r3, #1
 800df4a:	4620      	mov	r0, r4
 800df4c:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 800df50:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800df54:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 800df58:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800df5c:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 800df60:	f7f4 fe12 	bl	8002b88 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800df64:	4620      	mov	r0, r4
 800df66:	bd38      	pop	{r3, r4, r5, pc}

0800df68 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800df68:	b530      	push	{r4, r5, lr}
 800df6a:	2500      	movs	r5, #0
 800df6c:	2401      	movs	r4, #1
 800df6e:	6843      	ldr	r3, [r0, #4]
 800df70:	b913      	cbnz	r3, 800df78 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800df72:	6803      	ldr	r3, [r0, #0]
 800df74:	b1f3      	cbz	r3, 800dfb4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800df76:	6043      	str	r3, [r0, #4]
 800df78:	7c03      	ldrb	r3, [r0, #16]
 800df7a:	b143      	cbz	r3, 800df8e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800df7c:	68c3      	ldr	r3, [r0, #12]
 800df7e:	b12b      	cbz	r3, 800df8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800df80:	881a      	ldrh	r2, [r3, #0]
 800df82:	b11a      	cbz	r2, 800df8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800df84:	1c9a      	adds	r2, r3, #2
 800df86:	60c2      	str	r2, [r0, #12]
 800df88:	8818      	ldrh	r0, [r3, #0]
 800df8a:	bd30      	pop	{r4, r5, pc}
 800df8c:	7405      	strb	r5, [r0, #16]
 800df8e:	6843      	ldr	r3, [r0, #4]
 800df90:	8819      	ldrh	r1, [r3, #0]
 800df92:	b179      	cbz	r1, 800dfb4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800df94:	1c9a      	adds	r2, r3, #2
 800df96:	2902      	cmp	r1, #2
 800df98:	6042      	str	r2, [r0, #4]
 800df9a:	d1f5      	bne.n	800df88 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800df9c:	6883      	ldr	r3, [r0, #8]
 800df9e:	1d1a      	adds	r2, r3, #4
 800dfa0:	6082      	str	r2, [r0, #8]
 800dfa2:	681b      	ldr	r3, [r3, #0]
 800dfa4:	60c3      	str	r3, [r0, #12]
 800dfa6:	2b00      	cmp	r3, #0
 800dfa8:	d0e1      	beq.n	800df6e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800dfaa:	881b      	ldrh	r3, [r3, #0]
 800dfac:	2b00      	cmp	r3, #0
 800dfae:	d0de      	beq.n	800df6e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800dfb0:	7404      	strb	r4, [r0, #16]
 800dfb2:	e7dc      	b.n	800df6e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800dfb4:	2000      	movs	r0, #0
 800dfb6:	e7e8      	b.n	800df8a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800dfb8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800dfb8:	b410      	push	{r4}
 800dfba:	63c3      	str	r3, [r0, #60]	; 0x3c
 800dfbc:	9b01      	ldr	r3, [sp, #4]
 800dfbe:	6403      	str	r3, [r0, #64]	; 0x40
 800dfc0:	2300      	movs	r3, #0
 800dfc2:	6082      	str	r2, [r0, #8]
 800dfc4:	6001      	str	r1, [r0, #0]
 800dfc6:	6043      	str	r3, [r0, #4]
 800dfc8:	60c3      	str	r3, [r0, #12]
 800dfca:	7403      	strb	r3, [r0, #16]
 800dfcc:	8603      	strh	r3, [r0, #48]	; 0x30
 800dfce:	8303      	strh	r3, [r0, #24]
 800dfd0:	8703      	strh	r3, [r0, #56]	; 0x38
 800dfd2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dfd6:	f7f4 bdd7 	b.w	8002b88 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800dfda <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800dfda:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfdc:	4605      	mov	r5, r0
 800dfde:	4608      	mov	r0, r1
 800dfe0:	b1e9      	cbz	r1, 800e01e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800dfe2:	f105 0444 	add.w	r4, r5, #68	; 0x44
 800dfe6:	460b      	mov	r3, r1
 800dfe8:	f101 0708 	add.w	r7, r1, #8
 800dfec:	4622      	mov	r2, r4
 800dfee:	6818      	ldr	r0, [r3, #0]
 800dff0:	6859      	ldr	r1, [r3, #4]
 800dff2:	4626      	mov	r6, r4
 800dff4:	c603      	stmia	r6!, {r0, r1}
 800dff6:	3308      	adds	r3, #8
 800dff8:	42bb      	cmp	r3, r7
 800dffa:	4634      	mov	r4, r6
 800dffc:	d1f7      	bne.n	800dfee <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800dffe:	6818      	ldr	r0, [r3, #0]
 800e000:	6030      	str	r0, [r6, #0]
 800e002:	889b      	ldrh	r3, [r3, #4]
 800e004:	80b3      	strh	r3, [r6, #4]
 800e006:	f895 3051 	ldrb.w	r3, [r5, #81]	; 0x51
 800e00a:	015b      	lsls	r3, r3, #5
 800e00c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e010:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 800e014:	430b      	orrs	r3, r1
 800e016:	425b      	negs	r3, r3
 800e018:	f885 304d 	strb.w	r3, [r5, #77]	; 0x4d
 800e01c:	4610      	mov	r0, r2
 800e01e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e020 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e020:	b538      	push	{r3, r4, r5, lr}
 800e022:	460c      	mov	r4, r1
 800e024:	6811      	ldr	r1, [r2, #0]
 800e026:	4610      	mov	r0, r2
 800e028:	68cd      	ldr	r5, [r1, #12]
 800e02a:	4619      	mov	r1, r3
 800e02c:	47a8      	blx	r5
 800e02e:	2800      	cmp	r0, #0
 800e030:	bf08      	it	eq
 800e032:	4620      	moveq	r0, r4
 800e034:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e038 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e038:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e03a:	4604      	mov	r4, r0
 800e03c:	4615      	mov	r5, r2
 800e03e:	4608      	mov	r0, r1
 800e040:	b93a      	cbnz	r2, 800e052 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e042:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e046:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 800e04a:	f8a4 2056 	strh.w	r2, [r4, #86]	; 0x56
 800e04e:	4628      	mov	r0, r5
 800e050:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e052:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e056:	8893      	ldrh	r3, [r2, #4]
 800e058:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e05c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e060:	79ee      	ldrb	r6, [r5, #7]
 800e062:	4316      	orrs	r6, r2
 800e064:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e068:	189a      	adds	r2, r3, r2
 800e06a:	b291      	uxth	r1, r2
 800e06c:	291d      	cmp	r1, #29
 800e06e:	b2b7      	uxth	r7, r6
 800e070:	f200 8083 	bhi.w	800e17a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e074:	2201      	movs	r2, #1
 800e076:	408a      	lsls	r2, r1
 800e078:	4978      	ldr	r1, [pc, #480]	; (800e25c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e07a:	420a      	tst	r2, r1
 800e07c:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e080:	d12d      	bne.n	800e0de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e082:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e086:	d078      	beq.n	800e17a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e088:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800e08c:	462b      	mov	r3, r5
 800e08e:	f105 0e08 	add.w	lr, r5, #8
 800e092:	4615      	mov	r5, r2
 800e094:	6818      	ldr	r0, [r3, #0]
 800e096:	6859      	ldr	r1, [r3, #4]
 800e098:	4694      	mov	ip, r2
 800e09a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e09e:	3308      	adds	r3, #8
 800e0a0:	4573      	cmp	r3, lr
 800e0a2:	4662      	mov	r2, ip
 800e0a4:	d1f6      	bne.n	800e094 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800e0a6:	6818      	ldr	r0, [r3, #0]
 800e0a8:	f8cc 0000 	str.w	r0, [ip]
 800e0ac:	889b      	ldrh	r3, [r3, #4]
 800e0ae:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e0b2:	f8b4 1054 	ldrh.w	r1, [r4, #84]	; 0x54
 800e0b6:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 800e0ba:	b2b3      	uxth	r3, r6
 800e0bc:	1aca      	subs	r2, r1, r3
 800e0be:	b292      	uxth	r2, r2
 800e0c0:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 800e0c4:	10d2      	asrs	r2, r2, #3
 800e0c6:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e0ca:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e0ce:	4302      	orrs	r2, r0
 800e0d0:	1bcf      	subs	r7, r1, r7
 800e0d2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 800e0d6:	1afb      	subs	r3, r7, r3
 800e0d8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 800e0dc:	e7b7      	b.n	800e04e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e0de:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e0e0:	b92b      	cbnz	r3, 800e0ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800e0e2:	4b5f      	ldr	r3, [pc, #380]	; (800e260 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800e0e4:	4a5f      	ldr	r2, [pc, #380]	; (800e264 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800e0e6:	4860      	ldr	r0, [pc, #384]	; (800e268 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800e0e8:	21bf      	movs	r1, #191	; 0xbf
 800e0ea:	f00d f9dd 	bl	801b4a8 <__assert_func>
 800e0ee:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800e0f0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e0f4:	8b59      	ldrh	r1, [r3, #26]
 800e0f6:	f640 6333 	movw	r3, #3635	; 0xe33
 800e0fa:	4299      	cmp	r1, r3
 800e0fc:	d110      	bne.n	800e120 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800e0fe:	6803      	ldr	r3, [r0, #0]
 800e100:	68db      	ldr	r3, [r3, #12]
 800e102:	4798      	blx	r3
 800e104:	7b41      	ldrb	r1, [r0, #13]
 800e106:	00cb      	lsls	r3, r1, #3
 800e108:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e10c:	7a03      	ldrb	r3, [r0, #8]
 800e10e:	0648      	lsls	r0, r1, #25
 800e110:	ea43 0302 	orr.w	r3, r3, r2
 800e114:	bf44      	itt	mi
 800e116:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e11a:	b21b      	sxthmi	r3, r3
 800e11c:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e120:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800e124:	443b      	add	r3, r7
 800e126:	4433      	add	r3, r6
 800e128:	b29b      	uxth	r3, r3
 800e12a:	f104 0644 	add.w	r6, r4, #68	; 0x44
 800e12e:	462a      	mov	r2, r5
 800e130:	f105 0c08 	add.w	ip, r5, #8
 800e134:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e138:	4635      	mov	r5, r6
 800e13a:	6810      	ldr	r0, [r2, #0]
 800e13c:	6851      	ldr	r1, [r2, #4]
 800e13e:	4637      	mov	r7, r6
 800e140:	c703      	stmia	r7!, {r0, r1}
 800e142:	3208      	adds	r2, #8
 800e144:	4562      	cmp	r2, ip
 800e146:	463e      	mov	r6, r7
 800e148:	d1f7      	bne.n	800e13a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800e14a:	6810      	ldr	r0, [r2, #0]
 800e14c:	6038      	str	r0, [r7, #0]
 800e14e:	8892      	ldrh	r2, [r2, #4]
 800e150:	80ba      	strh	r2, [r7, #4]
 800e152:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800e156:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e15a:	10db      	asrs	r3, r3, #3
 800e15c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e160:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e164:	4313      	orrs	r3, r2
 800e166:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800e16a:	f894 2056 	ldrb.w	r2, [r4, #86]	; 0x56
 800e16e:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
 800e172:	1a9b      	subs	r3, r3, r2
 800e174:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800e178:	e769      	b.n	800e04e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e17a:	f023 0204 	bic.w	r2, r3, #4
 800e17e:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e182:	428a      	cmp	r2, r1
 800e184:	d003      	beq.n	800e18e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800e186:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e18a:	4293      	cmp	r3, r2
 800e18c:	d120      	bne.n	800e1d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800e18e:	3b01      	subs	r3, #1
 800e190:	4602      	mov	r2, r0
 800e192:	b29b      	uxth	r3, r3
 800e194:	4629      	mov	r1, r5
 800e196:	4620      	mov	r0, r4
 800e198:	f7ff ff42 	bl	800e020 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e19c:	7b41      	ldrb	r1, [r0, #13]
 800e19e:	00cb      	lsls	r3, r1, #3
 800e1a0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e1a4:	7a03      	ldrb	r3, [r0, #8]
 800e1a6:	0649      	lsls	r1, r1, #25
 800e1a8:	ea43 0302 	orr.w	r3, r3, r2
 800e1ac:	bf44      	itt	mi
 800e1ae:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e1b2:	b21b      	sxthmi	r3, r3
 800e1b4:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e1b8:	7b6b      	ldrb	r3, [r5, #13]
 800e1ba:	7aaa      	ldrb	r2, [r5, #10]
 800e1bc:	005b      	lsls	r3, r3, #1
 800e1be:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e1c2:	4313      	orrs	r3, r2
 800e1c4:	115a      	asrs	r2, r3, #5
 800e1c6:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e1ca:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800e1ce:	e036      	b.n	800e23e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800e1d0:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e1d4:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e1d8:	7a2a      	ldrb	r2, [r5, #8]
 800e1da:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e1de:	ea42 0201 	orr.w	r2, r2, r1
 800e1e2:	bf1c      	itt	ne
 800e1e4:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e1e8:	b212      	sxthne	r2, r2
 800e1ea:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e1ee:	f640 6109 	movw	r1, #3593	; 0xe09
 800e1f2:	f023 0210 	bic.w	r2, r3, #16
 800e1f6:	428a      	cmp	r2, r1
 800e1f8:	d003      	beq.n	800e202 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800e1fa:	f640 6213 	movw	r2, #3603	; 0xe13
 800e1fe:	4293      	cmp	r3, r2
 800e200:	d12a      	bne.n	800e258 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800e202:	7b6e      	ldrb	r6, [r5, #13]
 800e204:	0076      	lsls	r6, r6, #1
 800e206:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e20a:	7aae      	ldrb	r6, [r5, #10]
 800e20c:	4316      	orrs	r6, r2
 800e20e:	f640 6213 	movw	r2, #3603	; 0xe13
 800e212:	4293      	cmp	r3, r2
 800e214:	bf18      	it	ne
 800e216:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e21a:	4602      	mov	r2, r0
 800e21c:	bf14      	ite	ne
 800e21e:	b29b      	uxthne	r3, r3
 800e220:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e224:	4629      	mov	r1, r5
 800e226:	4620      	mov	r0, r4
 800e228:	f7ff fefa 	bl	800e020 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e22c:	7b43      	ldrb	r3, [r0, #13]
 800e22e:	7a82      	ldrb	r2, [r0, #10]
 800e230:	005b      	lsls	r3, r3, #1
 800e232:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e236:	4313      	orrs	r3, r2
 800e238:	1af6      	subs	r6, r6, r3
 800e23a:	f8a4 6056 	strh.w	r6, [r4, #86]	; 0x56
 800e23e:	7b69      	ldrb	r1, [r5, #13]
 800e240:	00cb      	lsls	r3, r1, #3
 800e242:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e246:	7a2b      	ldrb	r3, [r5, #8]
 800e248:	4313      	orrs	r3, r2
 800e24a:	064a      	lsls	r2, r1, #25
 800e24c:	bf44      	itt	mi
 800e24e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e252:	b21b      	sxthmi	r3, r3
 800e254:	1bdb      	subs	r3, r3, r7
 800e256:	e73f      	b.n	800e0d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800e258:	2300      	movs	r3, #0
 800e25a:	e7b6      	b.n	800e1ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800e25c:	3fc00079 	.word	0x3fc00079
 800e260:	0801d698 	.word	0x0801d698
 800e264:	0801ec8f 	.word	0x0801ec8f
 800e268:	0801d76a 	.word	0x0801d76a

0800e26c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e26c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e270:	4604      	mov	r4, r0
 800e272:	b942      	cbnz	r2, 800e286 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e274:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e278:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800e27c:	f8a0 3054 	strh.w	r3, [r0, #84]	; 0x54
 800e280:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800e284:	e046      	b.n	800e314 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e286:	7b51      	ldrb	r1, [r2, #13]
 800e288:	8893      	ldrh	r3, [r2, #4]
 800e28a:	010f      	lsls	r7, r1, #4
 800e28c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800e290:	79d7      	ldrb	r7, [r2, #7]
 800e292:	4307      	orrs	r7, r0
 800e294:	2f04      	cmp	r7, #4
 800e296:	b2bd      	uxth	r5, r7
 800e298:	bfcc      	ite	gt
 800e29a:	08bf      	lsrgt	r7, r7, #2
 800e29c:	2701      	movle	r7, #1
 800e29e:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800e2a2:	f200 80ab 	bhi.w	800e3fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800e2a6:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800e2aa:	4283      	cmp	r3, r0
 800e2ac:	d216      	bcs.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e2ae:	f240 605b 	movw	r0, #1627	; 0x65b
 800e2b2:	4283      	cmp	r3, r0
 800e2b4:	d859      	bhi.n	800e36a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800e2b6:	f240 6057 	movw	r0, #1623	; 0x657
 800e2ba:	4283      	cmp	r3, r0
 800e2bc:	d20e      	bcs.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e2be:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e2c2:	d24a      	bcs.n	800e35a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800e2c4:	f240 604e 	movw	r0, #1614	; 0x64e
 800e2c8:	4283      	cmp	r3, r0
 800e2ca:	d207      	bcs.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e2cc:	f240 601a 	movw	r0, #1562	; 0x61a
 800e2d0:	4283      	cmp	r3, r0
 800e2d2:	d02a      	beq.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e2d4:	d821      	bhi.n	800e31a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800e2d6:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800e2da:	d35b      	bcc.n	800e394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e2dc:	f9b4 3052 	ldrsh.w	r3, [r4, #82]	; 0x52
 800e2e0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e2e4:	f040 80d0 	bne.w	800e488 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e2e8:	f9b4 0054 	ldrsh.w	r0, [r4, #84]	; 0x54
 800e2ec:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e2f0:	f040 80ca 	bne.w	800e488 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e2f4:	00cb      	lsls	r3, r1, #3
 800e2f6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e2fa:	7a13      	ldrb	r3, [r2, #8]
 800e2fc:	0649      	lsls	r1, r1, #25
 800e2fe:	ea43 0300 	orr.w	r3, r3, r0
 800e302:	bf44      	itt	mi
 800e304:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e308:	b21b      	sxthmi	r3, r3
 800e30a:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e30e:	1b5d      	subs	r5, r3, r5
 800e310:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800e314:	4610      	mov	r0, r2
 800e316:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e31a:	f240 604b 	movw	r0, #1611	; 0x64b
 800e31e:	4283      	cmp	r3, r0
 800e320:	d338      	bcc.n	800e394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e322:	f240 604c 	movw	r0, #1612	; 0x64c
 800e326:	4283      	cmp	r3, r0
 800e328:	d9d8      	bls.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e32a:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800e32e:	f9b4 3054 	ldrsh.w	r3, [r4, #84]	; 0x54
 800e332:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e336:	f040 80f1 	bne.w	800e51c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e33a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e33e:	f040 80ed 	bne.w	800e51c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e342:	00cb      	lsls	r3, r1, #3
 800e344:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e348:	7a13      	ldrb	r3, [r2, #8]
 800e34a:	064e      	lsls	r6, r1, #25
 800e34c:	ea43 0300 	orr.w	r3, r3, r0
 800e350:	bf44      	itt	mi
 800e352:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e356:	b21b      	sxthmi	r3, r3
 800e358:	e7d9      	b.n	800e30e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800e35a:	f240 6054 	movw	r0, #1620	; 0x654
 800e35e:	4283      	cmp	r3, r0
 800e360:	d8e3      	bhi.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e362:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e366:	d9e0      	bls.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e368:	e7b8      	b.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e36a:	f240 6074 	movw	r0, #1652	; 0x674
 800e36e:	4283      	cmp	r3, r0
 800e370:	d0b4      	beq.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e372:	d82d      	bhi.n	800e3d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800e374:	f240 605e 	movw	r0, #1630	; 0x65e
 800e378:	4283      	cmp	r3, r0
 800e37a:	d804      	bhi.n	800e386 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800e37c:	f240 605d 	movw	r0, #1629	; 0x65d
 800e380:	4283      	cmp	r3, r0
 800e382:	d3d2      	bcc.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e384:	e7aa      	b.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e386:	f240 605f 	movw	r0, #1631	; 0x65f
 800e38a:	4283      	cmp	r3, r0
 800e38c:	d0cd      	beq.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e38e:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800e392:	d0a3      	beq.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e394:	00cb      	lsls	r3, r1, #3
 800e396:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e39a:	7a13      	ldrb	r3, [r2, #8]
 800e39c:	0649      	lsls	r1, r1, #25
 800e39e:	ea43 0300 	orr.w	r3, r3, r0
 800e3a2:	bf44      	itt	mi
 800e3a4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e3a8:	b21b      	sxthmi	r3, r3
 800e3aa:	1b5d      	subs	r5, r3, r5
 800e3ac:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e3b0:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800e3b4:	7b53      	ldrb	r3, [r2, #13]
 800e3b6:	015b      	lsls	r3, r3, #5
 800e3b8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e3bc:	7993      	ldrb	r3, [r2, #6]
 800e3be:	430b      	orrs	r3, r1
 800e3c0:	005b      	lsls	r3, r3, #1
 800e3c2:	2105      	movs	r1, #5
 800e3c4:	fb93 f3f1 	sdiv	r3, r3, r1
 800e3c8:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800e3cc:	440b      	add	r3, r1
 800e3ce:	e757      	b.n	800e280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800e3d0:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800e3d4:	4283      	cmp	r3, r0
 800e3d6:	d809      	bhi.n	800e3ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800e3d8:	f240 60df 	movw	r0, #1759	; 0x6df
 800e3dc:	4283      	cmp	r3, r0
 800e3de:	f4bf af7d 	bcs.w	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e3e2:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800e3e6:	2b05      	cmp	r3, #5
 800e3e8:	d8d4      	bhi.n	800e394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e3ea:	e777      	b.n	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e3ec:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800e3f0:	4283      	cmp	r3, r0
 800e3f2:	d09a      	beq.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e3f4:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800e3f8:	4283      	cmp	r3, r0
 800e3fa:	e7ca      	b.n	800e392 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800e3fc:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800e400:	d22b      	bcs.n	800e45a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800e402:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800e406:	4283      	cmp	r3, r0
 800e408:	d28f      	bcs.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e40a:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800e40e:	4283      	cmp	r3, r0
 800e410:	d816      	bhi.n	800e440 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800e412:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800e416:	4283      	cmp	r3, r0
 800e418:	f4bf af60 	bcs.w	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e41c:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800e420:	4283      	cmp	r3, r0
 800e422:	d80a      	bhi.n	800e43a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800e424:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800e428:	4283      	cmp	r3, r0
 800e42a:	f4bf af57 	bcs.w	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e42e:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800e432:	4283      	cmp	r3, r0
 800e434:	f43f af79 	beq.w	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e438:	e7ac      	b.n	800e394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e43a:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800e43e:	e7f8      	b.n	800e432 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800e440:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800e444:	4283      	cmp	r3, r0
 800e446:	d802      	bhi.n	800e44e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800e448:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800e44c:	e798      	b.n	800e380 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800e44e:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800e452:	4283      	cmp	r3, r0
 800e454:	f47f af42 	bne.w	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e458:	e767      	b.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e45a:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800e45e:	4283      	cmp	r3, r0
 800e460:	f43f af63 	beq.w	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e464:	d802      	bhi.n	800e46c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800e466:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800e46a:	e7f2      	b.n	800e452 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800e46c:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800e470:	4283      	cmp	r3, r0
 800e472:	d805      	bhi.n	800e480 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800e474:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800e478:	4283      	cmp	r3, r0
 800e47a:	f4ff af2f 	bcc.w	800e2dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e47e:	e754      	b.n	800e32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e480:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800e484:	4283      	cmp	r3, r0
 800e486:	e7af      	b.n	800e3e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800e488:	f104 0c44 	add.w	ip, r4, #68	; 0x44
 800e48c:	4617      	mov	r7, r2
 800e48e:	f102 0808 	add.w	r8, r2, #8
 800e492:	4666      	mov	r6, ip
 800e494:	6838      	ldr	r0, [r7, #0]
 800e496:	6879      	ldr	r1, [r7, #4]
 800e498:	46e6      	mov	lr, ip
 800e49a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800e49e:	3708      	adds	r7, #8
 800e4a0:	4547      	cmp	r7, r8
 800e4a2:	46f4      	mov	ip, lr
 800e4a4:	d1f6      	bne.n	800e494 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800e4a6:	6838      	ldr	r0, [r7, #0]
 800e4a8:	f8ce 0000 	str.w	r0, [lr]
 800e4ac:	88b9      	ldrh	r1, [r7, #4]
 800e4ae:	f8ae 1004 	strh.w	r1, [lr, #4]
 800e4b2:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800e4b6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e4ba:	d009      	beq.n	800e4d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800e4bc:	7b51      	ldrb	r1, [r2, #13]
 800e4be:	7992      	ldrb	r2, [r2, #6]
 800e4c0:	0149      	lsls	r1, r1, #5
 800e4c2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e4c6:	4311      	orrs	r1, r2
 800e4c8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e4cc:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800e4d0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e4d4:	d00d      	beq.n	800e4f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800e4d6:	442b      	add	r3, r5
 800e4d8:	b29b      	uxth	r3, r3
 800e4da:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800e4de:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e4e2:	10db      	asrs	r3, r3, #3
 800e4e4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e4e8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e4ec:	4313      	orrs	r3, r2
 800e4ee:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800e4f2:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800e4f6:	00cb      	lsls	r3, r1, #3
 800e4f8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e4fc:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800e500:	064f      	lsls	r7, r1, #25
 800e502:	ea43 0302 	orr.w	r3, r3, r2
 800e506:	bf44      	itt	mi
 800e508:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e50c:	b21b      	sxthmi	r3, r3
 800e50e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e512:	1b5d      	subs	r5, r3, r5
 800e514:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800e518:	4632      	mov	r2, r6
 800e51a:	e6fb      	b.n	800e314 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e51c:	f104 0e44 	add.w	lr, r4, #68	; 0x44
 800e520:	4694      	mov	ip, r2
 800e522:	f102 0908 	add.w	r9, r2, #8
 800e526:	4676      	mov	r6, lr
 800e528:	f8dc 0000 	ldr.w	r0, [ip]
 800e52c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e530:	46f0      	mov	r8, lr
 800e532:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800e536:	f10c 0c08 	add.w	ip, ip, #8
 800e53a:	45cc      	cmp	ip, r9
 800e53c:	46c6      	mov	lr, r8
 800e53e:	d1f3      	bne.n	800e528 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800e540:	f8dc 0000 	ldr.w	r0, [ip]
 800e544:	f8c8 0000 	str.w	r0, [r8]
 800e548:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800e54c:	f8a8 1004 	strh.w	r1, [r8, #4]
 800e550:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800e554:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e558:	d009      	beq.n	800e56e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800e55a:	7b51      	ldrb	r1, [r2, #13]
 800e55c:	7992      	ldrb	r2, [r2, #6]
 800e55e:	0149      	lsls	r1, r1, #5
 800e560:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e564:	4311      	orrs	r1, r2
 800e566:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e56a:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800e56e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e572:	d00d      	beq.n	800e590 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800e574:	1bdb      	subs	r3, r3, r7
 800e576:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800e57a:	b29b      	uxth	r3, r3
 800e57c:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e580:	10db      	asrs	r3, r3, #3
 800e582:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e586:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e58a:	4313      	orrs	r3, r2
 800e58c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800e590:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800e594:	00cb      	lsls	r3, r1, #3
 800e596:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e59a:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800e59e:	0648      	lsls	r0, r1, #25
 800e5a0:	ea43 0302 	orr.w	r3, r3, r2
 800e5a4:	bf44      	itt	mi
 800e5a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e5aa:	b21b      	sxthmi	r3, r3
 800e5ac:	e7b1      	b.n	800e512 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800e5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e5b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5b4:	461e      	mov	r6, r3
 800e5b6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e5b8:	4604      	mov	r4, r0
 800e5ba:	4617      	mov	r7, r2
 800e5bc:	b92b      	cbnz	r3, 800e5ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800e5be:	4b25      	ldr	r3, [pc, #148]	; (800e654 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800e5c0:	4a25      	ldr	r2, [pc, #148]	; (800e658 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800e5c2:	4826      	ldr	r0, [pc, #152]	; (800e65c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800e5c4:	21bf      	movs	r1, #191	; 0xbf
 800e5c6:	f00c ff6f 	bl	801b4a8 <__assert_func>
 800e5ca:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e5cc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e5d0:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800e5d4:	f7f4 fa96 	bl	8002b04 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e5d8:	4605      	mov	r5, r0
 800e5da:	b918      	cbnz	r0, 800e5e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800e5dc:	6030      	str	r0, [r6, #0]
 800e5de:	4628      	mov	r0, r5
 800e5e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5e4:	683b      	ldr	r3, [r7, #0]
 800e5e6:	4601      	mov	r1, r0
 800e5e8:	68db      	ldr	r3, [r3, #12]
 800e5ea:	4638      	mov	r0, r7
 800e5ec:	4798      	blx	r3
 800e5ee:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e5f2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e5f6:	4602      	mov	r2, r0
 800e5f8:	6030      	str	r0, [r6, #0]
 800e5fa:	d213      	bcs.n	800e624 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800e5fc:	4643      	mov	r3, r8
 800e5fe:	4639      	mov	r1, r7
 800e600:	4620      	mov	r0, r4
 800e602:	f7ff fe33 	bl	800e26c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e606:	6030      	str	r0, [r6, #0]
 800e608:	6833      	ldr	r3, [r6, #0]
 800e60a:	b143      	cbz	r3, 800e61e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800e60c:	7b5a      	ldrb	r2, [r3, #13]
 800e60e:	7a9b      	ldrb	r3, [r3, #10]
 800e610:	0052      	lsls	r2, r2, #1
 800e612:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e616:	4313      	orrs	r3, r2
 800e618:	bf0c      	ite	eq
 800e61a:	2301      	moveq	r3, #1
 800e61c:	2300      	movne	r3, #0
 800e61e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e622:	e7dc      	b.n	800e5de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800e624:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e628:	b29b      	uxth	r3, r3
 800e62a:	2b7f      	cmp	r3, #127	; 0x7f
 800e62c:	d804      	bhi.n	800e638 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800e62e:	4639      	mov	r1, r7
 800e630:	4620      	mov	r0, r4
 800e632:	f7ff fd01 	bl	800e038 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e636:	e7e6      	b.n	800e606 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e638:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800e63c:	2b00      	cmp	r3, #0
 800e63e:	d0e3      	beq.n	800e608 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e640:	f640 1302 	movw	r3, #2306	; 0x902
 800e644:	429d      	cmp	r5, r3
 800e646:	d1df      	bne.n	800e608 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e648:	4601      	mov	r1, r0
 800e64a:	4620      	mov	r0, r4
 800e64c:	f7ff fcc5 	bl	800dfda <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e650:	e7d9      	b.n	800e606 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e652:	bf00      	nop
 800e654:	0801d698 	.word	0x0801d698
 800e658:	0801ec8f 	.word	0x0801ec8f
 800e65c:	0801d76a 	.word	0x0801d76a

0800e660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e660:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e664:	461e      	mov	r6, r3
 800e666:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e668:	4604      	mov	r4, r0
 800e66a:	4617      	mov	r7, r2
 800e66c:	b92b      	cbnz	r3, 800e67a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800e66e:	4b26      	ldr	r3, [pc, #152]	; (800e708 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800e670:	4a26      	ldr	r2, [pc, #152]	; (800e70c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800e672:	4827      	ldr	r0, [pc, #156]	; (800e710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800e674:	21bf      	movs	r1, #191	; 0xbf
 800e676:	f00c ff17 	bl	801b4a8 <__assert_func>
 800e67a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e67c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e680:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800e684:	f7f4 fa3e 	bl	8002b04 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e688:	4605      	mov	r5, r0
 800e68a:	b918      	cbnz	r0, 800e694 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800e68c:	6030      	str	r0, [r6, #0]
 800e68e:	4628      	mov	r0, r5
 800e690:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e694:	683b      	ldr	r3, [r7, #0]
 800e696:	4601      	mov	r1, r0
 800e698:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e69c:	4638      	mov	r0, r7
 800e69e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e6a2:	47c8      	blx	r9
 800e6a4:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e6a8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e6ac:	4602      	mov	r2, r0
 800e6ae:	6030      	str	r0, [r6, #0]
 800e6b0:	d213      	bcs.n	800e6da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800e6b2:	4643      	mov	r3, r8
 800e6b4:	4639      	mov	r1, r7
 800e6b6:	4620      	mov	r0, r4
 800e6b8:	f7ff fdd8 	bl	800e26c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e6bc:	6030      	str	r0, [r6, #0]
 800e6be:	6833      	ldr	r3, [r6, #0]
 800e6c0:	b143      	cbz	r3, 800e6d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800e6c2:	7b5a      	ldrb	r2, [r3, #13]
 800e6c4:	7a9b      	ldrb	r3, [r3, #10]
 800e6c6:	0052      	lsls	r2, r2, #1
 800e6c8:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e6cc:	4313      	orrs	r3, r2
 800e6ce:	bf0c      	ite	eq
 800e6d0:	2301      	moveq	r3, #1
 800e6d2:	2300      	movne	r3, #0
 800e6d4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e6d8:	e7d9      	b.n	800e68e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800e6da:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e6de:	b29b      	uxth	r3, r3
 800e6e0:	2b7f      	cmp	r3, #127	; 0x7f
 800e6e2:	d804      	bhi.n	800e6ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800e6e4:	4639      	mov	r1, r7
 800e6e6:	4620      	mov	r0, r4
 800e6e8:	f7ff fca6 	bl	800e038 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e6ec:	e7e6      	b.n	800e6bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e6ee:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800e6f2:	2b00      	cmp	r3, #0
 800e6f4:	d0e3      	beq.n	800e6be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e6f6:	f640 1302 	movw	r3, #2306	; 0x902
 800e6fa:	429d      	cmp	r5, r3
 800e6fc:	d1df      	bne.n	800e6be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e6fe:	4601      	mov	r1, r0
 800e700:	4620      	mov	r0, r4
 800e702:	f7ff fc6a 	bl	800dfda <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e706:	e7d9      	b.n	800e6bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e708:	0801d698 	.word	0x0801d698
 800e70c:	0801ec8f 	.word	0x0801ec8f
 800e710:	0801d76a 	.word	0x0801d76a

0800e714 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e714:	b510      	push	{r4, lr}
 800e716:	4604      	mov	r4, r0
 800e718:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e71a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e71c:	b9d9      	cbnz	r1, 800e756 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800e71e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e720:	2b0a      	cmp	r3, #10
 800e722:	d036      	beq.n	800e792 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800e724:	4620      	mov	r0, r4
 800e726:	f7ff fc1f 	bl	800df68 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e72a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e72c:	2b09      	cmp	r3, #9
 800e72e:	d906      	bls.n	800e73e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800e730:	4b18      	ldr	r3, [pc, #96]	; (800e794 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800e732:	4a19      	ldr	r2, [pc, #100]	; (800e798 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800e734:	4819      	ldr	r0, [pc, #100]	; (800e79c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800e736:	f240 1103 	movw	r1, #259	; 0x103
 800e73a:	f00c feb5 	bl	801b4a8 <__assert_func>
 800e73e:	1c5a      	adds	r2, r3, #1
 800e740:	8622      	strh	r2, [r4, #48]	; 0x30
 800e742:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800e744:	4413      	add	r3, r2
 800e746:	b29b      	uxth	r3, r3
 800e748:	2b09      	cmp	r3, #9
 800e74a:	bf88      	it	hi
 800e74c:	3b0a      	subhi	r3, #10
 800e74e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e752:	8358      	strh	r0, [r3, #26]
 800e754:	e7e3      	b.n	800e71e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800e756:	2b0a      	cmp	r3, #10
 800e758:	d01b      	beq.n	800e792 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800e75a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e75c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800e760:	3901      	subs	r1, #1
 800e762:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800e764:	8721      	strh	r1, [r4, #56]	; 0x38
 800e766:	1c51      	adds	r1, r2, #1
 800e768:	b289      	uxth	r1, r1
 800e76a:	2901      	cmp	r1, #1
 800e76c:	bf8a      	itet	hi
 800e76e:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800e772:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800e774:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800e776:	2b09      	cmp	r3, #9
 800e778:	d8da      	bhi.n	800e730 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800e77a:	1c5a      	adds	r2, r3, #1
 800e77c:	8622      	strh	r2, [r4, #48]	; 0x30
 800e77e:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800e780:	4413      	add	r3, r2
 800e782:	b29b      	uxth	r3, r3
 800e784:	2b09      	cmp	r3, #9
 800e786:	bf88      	it	hi
 800e788:	3b0a      	subhi	r3, #10
 800e78a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e78e:	8358      	strh	r0, [r3, #26]
 800e790:	e7c2      	b.n	800e718 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800e792:	bd10      	pop	{r4, pc}
 800e794:	0801ea60 	.word	0x0801ea60
 800e798:	0801ede5 	.word	0x0801ede5
 800e79c:	0801d76a 	.word	0x0801d76a

0800e7a0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800e7a0:	b538      	push	{r3, r4, r5, lr}
 800e7a2:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800e7a4:	4604      	mov	r4, r0
 800e7a6:	b92a      	cbnz	r2, 800e7b4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800e7a8:	4b13      	ldr	r3, [pc, #76]	; (800e7f8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800e7aa:	4a14      	ldr	r2, [pc, #80]	; (800e7fc <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800e7ac:	4814      	ldr	r0, [pc, #80]	; (800e800 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800e7ae:	21d4      	movs	r1, #212	; 0xd4
 800e7b0:	f00c fe7a 	bl	801b4a8 <__assert_func>
 800e7b4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e7b6:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800e7ba:	3a01      	subs	r2, #1
 800e7bc:	8b4d      	ldrh	r5, [r1, #26]
 800e7be:	8602      	strh	r2, [r0, #48]	; 0x30
 800e7c0:	1c5a      	adds	r2, r3, #1
 800e7c2:	b292      	uxth	r2, r2
 800e7c4:	2a09      	cmp	r2, #9
 800e7c6:	bf86      	itte	hi
 800e7c8:	3b09      	subhi	r3, #9
 800e7ca:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800e7cc:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800e7ce:	f7ff ffa1 	bl	800e714 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e7d2:	8b23      	ldrh	r3, [r4, #24]
 800e7d4:	2b01      	cmp	r3, #1
 800e7d6:	bf9c      	itt	ls
 800e7d8:	3301      	addls	r3, #1
 800e7da:	8323      	strhls	r3, [r4, #24]
 800e7dc:	8ae3      	ldrh	r3, [r4, #22]
 800e7de:	b90b      	cbnz	r3, 800e7e4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800e7e0:	2302      	movs	r3, #2
 800e7e2:	82e3      	strh	r3, [r4, #22]
 800e7e4:	8ae3      	ldrh	r3, [r4, #22]
 800e7e6:	3b01      	subs	r3, #1
 800e7e8:	b29b      	uxth	r3, r3
 800e7ea:	82e3      	strh	r3, [r4, #22]
 800e7ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e7f0:	4628      	mov	r0, r5
 800e7f2:	8265      	strh	r5, [r4, #18]
 800e7f4:	bd38      	pop	{r3, r4, r5, pc}
 800e7f6:	bf00      	nop
 800e7f8:	0801d698 	.word	0x0801d698
 800e7fc:	0801ed3a 	.word	0x0801ed3a
 800e800:	0801d76a 	.word	0x0801d76a

0800e804 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800e804:	b538      	push	{r3, r4, r5, lr}
 800e806:	428a      	cmp	r2, r1
 800e808:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800e80a:	d90c      	bls.n	800e826 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800e80c:	b92c      	cbnz	r4, 800e81a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800e80e:	4b1c      	ldr	r3, [pc, #112]	; (800e880 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800e810:	4a1c      	ldr	r2, [pc, #112]	; (800e884 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800e812:	21e0      	movs	r1, #224	; 0xe0
 800e814:	481c      	ldr	r0, [pc, #112]	; (800e888 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800e816:	f00c fe47 	bl	801b4a8 <__assert_func>
 800e81a:	3c01      	subs	r4, #1
 800e81c:	8604      	strh	r4, [r0, #48]	; 0x30
 800e81e:	4b1b      	ldr	r3, [pc, #108]	; (800e88c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800e820:	4a1b      	ldr	r2, [pc, #108]	; (800e890 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800e822:	21c4      	movs	r1, #196	; 0xc4
 800e824:	e7f6      	b.n	800e814 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e826:	428c      	cmp	r4, r1
 800e828:	d203      	bcs.n	800e832 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800e82a:	4b1a      	ldr	r3, [pc, #104]	; (800e894 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800e82c:	4a1a      	ldr	r2, [pc, #104]	; (800e898 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800e82e:	21ca      	movs	r1, #202	; 0xca
 800e830:	e7f0      	b.n	800e814 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e832:	1a64      	subs	r4, r4, r1
 800e834:	8604      	strh	r4, [r0, #48]	; 0x30
 800e836:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800e838:	4421      	add	r1, r4
 800e83a:	b289      	uxth	r1, r1
 800e83c:	2909      	cmp	r1, #9
 800e83e:	bf88      	it	hi
 800e840:	390a      	subhi	r1, #10
 800e842:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e844:	250a      	movs	r5, #10
 800e846:	b1ba      	cbz	r2, 800e878 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800e848:	3a01      	subs	r2, #1
 800e84a:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800e84c:	b292      	uxth	r2, r2
 800e84e:	2909      	cmp	r1, #9
 800e850:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800e854:	d903      	bls.n	800e85e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800e856:	4b11      	ldr	r3, [pc, #68]	; (800e89c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800e858:	4a11      	ldr	r2, [pc, #68]	; (800e8a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800e85a:	21e5      	movs	r1, #229	; 0xe5
 800e85c:	e7da      	b.n	800e814 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e85e:	3101      	adds	r1, #1
 800e860:	8601      	strh	r1, [r0, #48]	; 0x30
 800e862:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800e864:	b901      	cbnz	r1, 800e868 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800e866:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800e868:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800e86a:	3901      	subs	r1, #1
 800e86c:	b289      	uxth	r1, r1
 800e86e:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e870:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800e874:	834c      	strh	r4, [r1, #26]
 800e876:	e7e6      	b.n	800e846 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800e878:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e87c:	f7ff bf4a 	b.w	800e714 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e880:	0801d698 	.word	0x0801d698
 800e884:	0801eb13 	.word	0x0801eb13
 800e888:	0801d76a 	.word	0x0801d76a
 800e88c:	0801d796 	.word	0x0801d796
 800e890:	0801ebbd 	.word	0x0801ebbd
 800e894:	0801ea6c 	.word	0x0801ea6c
 800e898:	0801ee94 	.word	0x0801ee94
 800e89c:	0801ea78 	.word	0x0801ea78
 800e8a0:	0801ea8b 	.word	0x0801ea8b

0800e8a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800e8a4:	3a01      	subs	r2, #1
 800e8a6:	b570      	push	{r4, r5, r6, lr}
 800e8a8:	b292      	uxth	r2, r2
 800e8aa:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800e8ae:	42b2      	cmp	r2, r6
 800e8b0:	d019      	beq.n	800e8e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800e8b2:	8b04      	ldrh	r4, [r0, #24]
 800e8b4:	f831 5b02 	ldrh.w	r5, [r1], #2
 800e8b8:	4294      	cmp	r4, r2
 800e8ba:	d805      	bhi.n	800e8c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800e8bc:	4b19      	ldr	r3, [pc, #100]	; (800e924 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800e8be:	4a1a      	ldr	r2, [pc, #104]	; (800e928 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800e8c0:	481a      	ldr	r0, [pc, #104]	; (800e92c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800e8c2:	21c4      	movs	r1, #196	; 0xc4
 800e8c4:	f00c fdf0 	bl	801b4a8 <__assert_func>
 800e8c8:	8ac4      	ldrh	r4, [r0, #22]
 800e8ca:	4414      	add	r4, r2
 800e8cc:	b2a4      	uxth	r4, r4
 800e8ce:	2c01      	cmp	r4, #1
 800e8d0:	bf88      	it	hi
 800e8d2:	3c02      	subhi	r4, #2
 800e8d4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800e8d8:	3a01      	subs	r2, #1
 800e8da:	8a64      	ldrh	r4, [r4, #18]
 800e8dc:	42ac      	cmp	r4, r5
 800e8de:	b292      	uxth	r2, r2
 800e8e0:	d0e5      	beq.n	800e8ae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800e8e2:	2000      	movs	r0, #0
 800e8e4:	bd70      	pop	{r4, r5, r6, pc}
 800e8e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800e8ea:	2400      	movs	r4, #0
 800e8ec:	4413      	add	r3, r2
 800e8ee:	b2a2      	uxth	r2, r4
 800e8f0:	429a      	cmp	r2, r3
 800e8f2:	da14      	bge.n	800e91e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800e8f4:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800e8f6:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800e8fa:	4296      	cmp	r6, r2
 800e8fc:	d802      	bhi.n	800e904 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800e8fe:	4b09      	ldr	r3, [pc, #36]	; (800e924 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800e900:	4a0b      	ldr	r2, [pc, #44]	; (800e930 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800e902:	e7dd      	b.n	800e8c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800e904:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800e906:	4432      	add	r2, r6
 800e908:	b292      	uxth	r2, r2
 800e90a:	2a09      	cmp	r2, #9
 800e90c:	bf88      	it	hi
 800e90e:	3a0a      	subhi	r2, #10
 800e910:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800e914:	3401      	adds	r4, #1
 800e916:	8b52      	ldrh	r2, [r2, #26]
 800e918:	42aa      	cmp	r2, r5
 800e91a:	d0e8      	beq.n	800e8ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800e91c:	e7e1      	b.n	800e8e2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800e91e:	2001      	movs	r0, #1
 800e920:	e7e0      	b.n	800e8e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800e922:	bf00      	nop
 800e924:	0801d796 	.word	0x0801d796
 800e928:	0801ef18 	.word	0x0801ef18
 800e92c:	0801d76a 	.word	0x0801d76a
 800e930:	0801ebbd 	.word	0x0801ebbd

0800e934 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800e934:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e938:	4605      	mov	r5, r0
 800e93a:	4616      	mov	r6, r2
 800e93c:	1c8c      	adds	r4, r1, #2
 800e93e:	8809      	ldrh	r1, [r1, #0]
 800e940:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800e944:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800e948:	42b3      	cmp	r3, r6
 800e94a:	d124      	bne.n	800e996 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800e94c:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800e950:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800e954:	f001 070f 	and.w	r7, r1, #15
 800e958:	f8cd 8000 	str.w	r8, [sp]
 800e95c:	464b      	mov	r3, r9
 800e95e:	4652      	mov	r2, sl
 800e960:	4621      	mov	r1, r4
 800e962:	4628      	mov	r0, r5
 800e964:	f7ff ff9e 	bl	800e8a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800e968:	4683      	mov	fp, r0
 800e96a:	b168      	cbz	r0, 800e988 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800e96c:	eb0a 0109 	add.w	r1, sl, r9
 800e970:	4441      	add	r1, r8
 800e972:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800e976:	463a      	mov	r2, r7
 800e978:	4649      	mov	r1, r9
 800e97a:	4628      	mov	r0, r5
 800e97c:	f7ff ff42 	bl	800e804 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800e980:	4658      	mov	r0, fp
 800e982:	b003      	add	sp, #12
 800e984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e988:	eb07 010a 	add.w	r1, r7, sl
 800e98c:	4449      	add	r1, r9
 800e98e:	4441      	add	r1, r8
 800e990:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800e994:	e7d2      	b.n	800e93c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800e996:	f04f 0b00 	mov.w	fp, #0
 800e99a:	e7f1      	b.n	800e980 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800e99c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800e99c:	b570      	push	{r4, r5, r6, lr}
 800e99e:	8810      	ldrh	r0, [r2, #0]
 800e9a0:	4298      	cmp	r0, r3
 800e9a2:	d817      	bhi.n	800e9d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e9a4:	1e48      	subs	r0, r1, #1
 800e9a6:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800e9aa:	4298      	cmp	r0, r3
 800e9ac:	d312      	bcc.n	800e9d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e9ae:	2400      	movs	r4, #0
 800e9b0:	428c      	cmp	r4, r1
 800e9b2:	d20f      	bcs.n	800e9d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e9b4:	1860      	adds	r0, r4, r1
 800e9b6:	1040      	asrs	r0, r0, #1
 800e9b8:	0085      	lsls	r5, r0, #2
 800e9ba:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800e9be:	42b3      	cmp	r3, r6
 800e9c0:	d902      	bls.n	800e9c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800e9c2:	3001      	adds	r0, #1
 800e9c4:	b284      	uxth	r4, r0
 800e9c6:	e7f3      	b.n	800e9b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e9c8:	d201      	bcs.n	800e9ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800e9ca:	b281      	uxth	r1, r0
 800e9cc:	e7f0      	b.n	800e9b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e9ce:	442a      	add	r2, r5
 800e9d0:	8850      	ldrh	r0, [r2, #2]
 800e9d2:	bd70      	pop	{r4, r5, r6, pc}
 800e9d4:	2000      	movs	r0, #0
 800e9d6:	e7fc      	b.n	800e9d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800e9d8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800e9d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9dc:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800e9de:	886f      	ldrh	r7, [r5, #2]
 800e9e0:	4604      	mov	r4, r0
 800e9e2:	087f      	lsrs	r7, r7, #1
 800e9e4:	260b      	movs	r6, #11
 800e9e6:	3e01      	subs	r6, #1
 800e9e8:	d01b      	beq.n	800ea22 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800e9ea:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e9ec:	b92b      	cbnz	r3, 800e9fa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800e9ee:	4b0e      	ldr	r3, [pc, #56]	; (800ea28 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800e9f0:	4a0e      	ldr	r2, [pc, #56]	; (800ea2c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800e9f2:	480f      	ldr	r0, [pc, #60]	; (800ea30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800e9f4:	21bf      	movs	r1, #191	; 0xbf
 800e9f6:	f00c fd57 	bl	801b4a8 <__assert_func>
 800e9fa:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800e9fc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ea00:	462a      	mov	r2, r5
 800ea02:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800ea06:	4639      	mov	r1, r7
 800ea08:	4643      	mov	r3, r8
 800ea0a:	4620      	mov	r0, r4
 800ea0c:	f7ff ffc6 	bl	800e99c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800ea10:	b138      	cbz	r0, 800ea22 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ea12:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800ea16:	4642      	mov	r2, r8
 800ea18:	4620      	mov	r0, r4
 800ea1a:	f7ff ff8b 	bl	800e934 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800ea1e:	2800      	cmp	r0, #0
 800ea20:	d1e1      	bne.n	800e9e6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800ea22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea26:	bf00      	nop
 800ea28:	0801d698 	.word	0x0801d698
 800ea2c:	0801ec8f 	.word	0x0801ec8f
 800ea30:	0801d76a 	.word	0x0801d76a

0800ea34 <_ZN8touchgfx8ceil28_4El>:
 800ea34:	f110 030f 	adds.w	r3, r0, #15
 800ea38:	d401      	bmi.n	800ea3e <_ZN8touchgfx8ceil28_4El+0xa>
 800ea3a:	1118      	asrs	r0, r3, #4
 800ea3c:	4770      	bx	lr
 800ea3e:	f1c0 0001 	rsb	r0, r0, #1
 800ea42:	f010 000f 	ands.w	r0, r0, #15
 800ea46:	bf18      	it	ne
 800ea48:	2001      	movne	r0, #1
 800ea4a:	2210      	movs	r2, #16
 800ea4c:	fb93 f3f2 	sdiv	r3, r3, r2
 800ea50:	1a18      	subs	r0, r3, r0
 800ea52:	4770      	bx	lr

0800ea54 <_ZN8touchgfx11floorDivModEllRlS0_>:
 800ea54:	2900      	cmp	r1, #0
 800ea56:	b538      	push	{r3, r4, r5, lr}
 800ea58:	dc05      	bgt.n	800ea66 <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800ea5a:	4b0f      	ldr	r3, [pc, #60]	; (800ea98 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800ea5c:	4a0f      	ldr	r2, [pc, #60]	; (800ea9c <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800ea5e:	4810      	ldr	r0, [pc, #64]	; (800eaa0 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800ea60:	21f7      	movs	r1, #247	; 0xf7
 800ea62:	f00c fd21 	bl	801b4a8 <__assert_func>
 800ea66:	2800      	cmp	r0, #0
 800ea68:	db06      	blt.n	800ea78 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800ea6a:	fb90 f4f1 	sdiv	r4, r0, r1
 800ea6e:	6014      	str	r4, [r2, #0]
 800ea70:	fb01 0114 	mls	r1, r1, r4, r0
 800ea74:	6019      	str	r1, [r3, #0]
 800ea76:	bd38      	pop	{r3, r4, r5, pc}
 800ea78:	4240      	negs	r0, r0
 800ea7a:	fb90 f4f1 	sdiv	r4, r0, r1
 800ea7e:	4265      	negs	r5, r4
 800ea80:	fb01 0014 	mls	r0, r1, r4, r0
 800ea84:	6015      	str	r5, [r2, #0]
 800ea86:	6018      	str	r0, [r3, #0]
 800ea88:	2800      	cmp	r0, #0
 800ea8a:	d0f4      	beq.n	800ea76 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800ea8c:	6810      	ldr	r0, [r2, #0]
 800ea8e:	3801      	subs	r0, #1
 800ea90:	6010      	str	r0, [r2, #0]
 800ea92:	6818      	ldr	r0, [r3, #0]
 800ea94:	1a09      	subs	r1, r1, r0
 800ea96:	e7ed      	b.n	800ea74 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800ea98:	0801efe9 	.word	0x0801efe9
 800ea9c:	0801f028 	.word	0x0801f028
 800eaa0:	0801eff9 	.word	0x0801eff9

0800eaa4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800eaa4:	b570      	push	{r4, r5, r6, lr}
 800eaa6:	694a      	ldr	r2, [r1, #20]
 800eaa8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800eaaa:	684b      	ldr	r3, [r1, #4]
 800eaac:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800eaae:	1b54      	subs	r4, r2, r5
 800eab0:	f000 8106 	beq.w	800ecc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800eab4:	1b9b      	subs	r3, r3, r6
 800eab6:	d003      	beq.n	800eac0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800eab8:	4363      	muls	r3, r4
 800eaba:	2210      	movs	r2, #16
 800eabc:	fb93 f3f2 	sdiv	r3, r3, r2
 800eac0:	680c      	ldr	r4, [r1, #0]
 800eac2:	698a      	ldr	r2, [r1, #24]
 800eac4:	1b65      	subs	r5, r4, r5
 800eac6:	f000 80fd 	beq.w	800ecc4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800eaca:	1b92      	subs	r2, r2, r6
 800eacc:	d003      	beq.n	800ead6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800eace:	436a      	muls	r2, r5
 800ead0:	2410      	movs	r4, #16
 800ead2:	fb92 f2f4 	sdiv	r2, r2, r4
 800ead6:	1a9b      	subs	r3, r3, r2
 800ead8:	ee07 3a90 	vmov	s15, r3
 800eadc:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800ed00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800eae0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800eae4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800eae8:	ee67 7a84 	vmul.f32	s15, s15, s8
 800eaec:	460a      	mov	r2, r1
 800eaee:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800eaf2:	4603      	mov	r3, r0
 800eaf4:	f100 040c 	add.w	r4, r0, #12
 800eaf8:	eeb1 6a43 	vneg.f32	s12, s6
 800eafc:	edd2 7a02 	vldr	s15, [r2, #8]
 800eb00:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800eb04:	3214      	adds	r2, #20
 800eb06:	ece3 6a01 	vstmia	r3!, {s13}
 800eb0a:	ed52 7a02 	vldr	s15, [r2, #-8]
 800eb0e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800eb12:	429c      	cmp	r4, r3
 800eb14:	edc3 7a02 	vstr	s15, [r3, #8]
 800eb18:	ed52 7a01 	vldr	s15, [r2, #-4]
 800eb1c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800eb20:	edc3 7a05 	vstr	s15, [r3, #20]
 800eb24:	d1ea      	bne.n	800eafc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800eb26:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800eb28:	698b      	ldr	r3, [r1, #24]
 800eb2a:	edd0 4a02 	vldr	s9, [r0, #8]
 800eb2e:	edd0 3a00 	vldr	s7, [r0]
 800eb32:	edd0 6a01 	vldr	s13, [r0, #4]
 800eb36:	ed90 5a05 	vldr	s10, [r0, #20]
 800eb3a:	ed90 2a03 	vldr	s4, [r0, #12]
 800eb3e:	edd0 5a04 	vldr	s11, [r0, #16]
 800eb42:	ed90 1a07 	vldr	s2, [r0, #28]
 800eb46:	edd0 2a06 	vldr	s5, [r0, #24]
 800eb4a:	1a9b      	subs	r3, r3, r2
 800eb4c:	ee07 3a90 	vmov	s15, r3
 800eb50:	684b      	ldr	r3, [r1, #4]
 800eb52:	1a9b      	subs	r3, r3, r2
 800eb54:	ee07 3a10 	vmov	s14, r3
 800eb58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800eb5c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800eb60:	ee67 7a84 	vmul.f32	s15, s15, s8
 800eb64:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800eb68:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eb6c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800eb70:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eb74:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800eb78:	eee6 7a87 	vfma.f32	s15, s13, s14
 800eb7c:	ee32 5a45 	vsub.f32	s10, s4, s10
 800eb80:	ee67 7a83 	vmul.f32	s15, s15, s6
 800eb84:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800eb88:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800eb8a:	694a      	ldr	r2, [r1, #20]
 800eb8c:	1b13      	subs	r3, r2, r4
 800eb8e:	ee07 3a10 	vmov	s14, r3
 800eb92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eb96:	680b      	ldr	r3, [r1, #0]
 800eb98:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eb9c:	1b1b      	subs	r3, r3, r4
 800eb9e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800eba2:	ee07 3a10 	vmov	s14, r3
 800eba6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ebaa:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ebae:	eee6 4a87 	vfma.f32	s9, s13, s14
 800ebb2:	ee64 4a86 	vmul.f32	s9, s9, s12
 800ebb6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800ebba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ebbc:	698b      	ldr	r3, [r1, #24]
 800ebbe:	1a9b      	subs	r3, r3, r2
 800ebc0:	ee06 3a90 	vmov	s13, r3
 800ebc4:	684b      	ldr	r3, [r1, #4]
 800ebc6:	1a9b      	subs	r3, r3, r2
 800ebc8:	ee07 3a10 	vmov	s14, r3
 800ebcc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800ebd0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ebd4:	ee66 6a84 	vmul.f32	s13, s13, s8
 800ebd8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ebdc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800ebe0:	eee5 6a87 	vfma.f32	s13, s11, s14
 800ebe4:	ee66 6a83 	vmul.f32	s13, s13, s6
 800ebe8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800ebec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ebee:	694a      	ldr	r2, [r1, #20]
 800ebf0:	1b13      	subs	r3, r2, r4
 800ebf2:	ee07 3a10 	vmov	s14, r3
 800ebf6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ebfa:	680b      	ldr	r3, [r1, #0]
 800ebfc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ec00:	1b1b      	subs	r3, r3, r4
 800ec02:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800ec06:	ee07 3a10 	vmov	s14, r3
 800ec0a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ec0e:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ec12:	eea5 5a87 	vfma.f32	s10, s11, s14
 800ec16:	edd0 5a08 	vldr	s11, [r0, #32]
 800ec1a:	ee25 5a06 	vmul.f32	s10, s10, s12
 800ec1e:	ee31 1a65 	vsub.f32	s2, s2, s11
 800ec22:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800ec26:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ec28:	698b      	ldr	r3, [r1, #24]
 800ec2a:	1a9b      	subs	r3, r3, r2
 800ec2c:	ee07 3a10 	vmov	s14, r3
 800ec30:	684b      	ldr	r3, [r1, #4]
 800ec32:	1a9b      	subs	r3, r3, r2
 800ec34:	ee01 3a90 	vmov	s3, r3
 800ec38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ec3c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800ec40:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ec44:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800ec48:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800ec4c:	ee61 1a84 	vmul.f32	s3, s3, s8
 800ec50:	eea1 7a21 	vfma.f32	s14, s2, s3
 800ec54:	ee27 7a03 	vmul.f32	s14, s14, s6
 800ec58:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800ec5c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ec5e:	694a      	ldr	r2, [r1, #20]
 800ec60:	1b13      	subs	r3, r2, r4
 800ec62:	ee03 3a10 	vmov	s6, r3
 800ec66:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800ec6a:	680b      	ldr	r3, [r1, #0]
 800ec6c:	ee23 3a04 	vmul.f32	s6, s6, s8
 800ec70:	1b1b      	subs	r3, r3, r4
 800ec72:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800ec76:	ee03 3a10 	vmov	s6, r3
 800ec7a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800ec7e:	ee23 4a04 	vmul.f32	s8, s6, s8
 800ec82:	eee1 5a04 	vfma.f32	s11, s2, s8
 800ec86:	ee25 6a86 	vmul.f32	s12, s11, s12
 800ec8a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800ec8e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800ec92:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800ec96:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800ec9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec9e:	dd13      	ble.n	800ecc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800eca0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800eca4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800eca8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ecaa:	eee3 7a87 	vfma.f32	s15, s7, s14
 800ecae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ecb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ecb6:	dd15      	ble.n	800ece4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800ecb8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ecbc:	6403      	str	r3, [r0, #64]	; 0x40
 800ecbe:	bd70      	pop	{r4, r5, r6, pc}
 800ecc0:	4623      	mov	r3, r4
 800ecc2:	e6fd      	b.n	800eac0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ecc4:	462a      	mov	r2, r5
 800ecc6:	e706      	b.n	800ead6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ecc8:	d502      	bpl.n	800ecd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800ecca:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ecce:	e7e9      	b.n	800eca4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800ecd0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800ecd4:	eea3 2a85 	vfma.f32	s4, s7, s10
 800ecd8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800ecdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ece0:	dade      	bge.n	800eca0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800ece2:	e7f2      	b.n	800ecca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800ece4:	d502      	bpl.n	800ecec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800ece6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ecea:	e7e7      	b.n	800ecbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800ecec:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800ecf0:	eee3 4a86 	vfma.f32	s9, s7, s12
 800ecf4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800ecf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ecfc:	dadc      	bge.n	800ecb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800ecfe:	e7f2      	b.n	800ece6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800ed00:	3d800000 	.word	0x3d800000

0800ed04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800ed04:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed08:	f04f 0814 	mov.w	r8, #20
 800ed0c:	fb08 f903 	mul.w	r9, r8, r3
 800ed10:	eb02 0a09 	add.w	sl, r2, r9
 800ed14:	4604      	mov	r4, r0
 800ed16:	f8da 0004 	ldr.w	r0, [sl, #4]
 800ed1a:	4617      	mov	r7, r2
 800ed1c:	460d      	mov	r5, r1
 800ed1e:	461e      	mov	r6, r3
 800ed20:	f7ff fe88 	bl	800ea34 <_ZN8touchgfx8ceil28_4El>
 800ed24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ed26:	6160      	str	r0, [r4, #20]
 800ed28:	fb08 f803 	mul.w	r8, r8, r3
 800ed2c:	eb07 0b08 	add.w	fp, r7, r8
 800ed30:	9001      	str	r0, [sp, #4]
 800ed32:	f8db 0004 	ldr.w	r0, [fp, #4]
 800ed36:	f7ff fe7d 	bl	800ea34 <_ZN8touchgfx8ceil28_4El>
 800ed3a:	9a01      	ldr	r2, [sp, #4]
 800ed3c:	1a80      	subs	r0, r0, r2
 800ed3e:	61a0      	str	r0, [r4, #24]
 800ed40:	2800      	cmp	r0, #0
 800ed42:	f000 8088 	beq.w	800ee56 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800ed46:	f857 3009 	ldr.w	r3, [r7, r9]
 800ed4a:	f857 c008 	ldr.w	ip, [r7, r8]
 800ed4e:	f8da 1004 	ldr.w	r1, [sl, #4]
 800ed52:	f8db 0004 	ldr.w	r0, [fp, #4]
 800ed56:	ebac 0c03 	sub.w	ip, ip, r3
 800ed5a:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800ed5e:	fb0b f202 	mul.w	r2, fp, r2
 800ed62:	fb0c 2211 	mls	r2, ip, r1, r2
 800ed66:	1a40      	subs	r0, r0, r1
 800ed68:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800ed6c:	fb00 2003 	mla	r0, r0, r3, r2
 800ed70:	3801      	subs	r0, #1
 800ed72:	f104 0310 	add.w	r3, r4, #16
 800ed76:	4622      	mov	r2, r4
 800ed78:	4641      	mov	r1, r8
 800ed7a:	4440      	add	r0, r8
 800ed7c:	f7ff fe6a 	bl	800ea54 <_ZN8touchgfx11floorDivModEllRlS0_>
 800ed80:	f104 0308 	add.w	r3, r4, #8
 800ed84:	1d22      	adds	r2, r4, #4
 800ed86:	4641      	mov	r1, r8
 800ed88:	4658      	mov	r0, fp
 800ed8a:	f7ff fe63 	bl	800ea54 <_ZN8touchgfx11floorDivModEllRlS0_>
 800ed8e:	f8c4 800c 	str.w	r8, [r4, #12]
 800ed92:	f8da 3004 	ldr.w	r3, [sl, #4]
 800ed96:	6962      	ldr	r2, [r4, #20]
 800ed98:	eddf 6a31 	vldr	s13, [pc, #196]	; 800ee60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800ed9c:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800eda0:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800eda4:	ee07 3a10 	vmov	s14, r3
 800eda8:	6822      	ldr	r2, [r4, #0]
 800edaa:	f857 3009 	ldr.w	r3, [r7, r9]
 800edae:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800edb2:	ee07 3a90 	vmov	s15, r3
 800edb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800edba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800edbe:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800edc2:	ee27 7a26 	vmul.f32	s14, s14, s13
 800edc6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800edca:	edd3 6a00 	vldr	s13, [r3]
 800edce:	eee6 6a07 	vfma.f32	s13, s12, s14
 800edd2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800edd6:	eee6 6a27 	vfma.f32	s13, s12, s15
 800edda:	edc4 6a07 	vstr	s13, [r4, #28]
 800edde:	edd4 6a01 	vldr	s13, [r4, #4]
 800ede2:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800ede6:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800edea:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800edee:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800edf2:	ed84 6a08 	vstr	s12, [r4, #32]
 800edf6:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800edf8:	6262      	str	r2, [r4, #36]	; 0x24
 800edfa:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800edfe:	ed93 6a03 	vldr	s12, [r3, #12]
 800ee02:	eea5 6a87 	vfma.f32	s12, s11, s14
 800ee06:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800ee0a:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800ee0e:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800ee12:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800ee16:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800ee1a:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800ee1e:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800ee22:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800ee24:	6322      	str	r2, [r4, #48]	; 0x30
 800ee26:	ed93 6a06 	vldr	s12, [r3, #24]
 800ee2a:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800ee2e:	eea5 6a87 	vfma.f32	s12, s11, s14
 800ee32:	eeb0 7a46 	vmov.f32	s14, s12
 800ee36:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800ee3a:	eea6 7a27 	vfma.f32	s14, s12, s15
 800ee3e:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800ee42:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800ee46:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800ee4a:	eee6 7a87 	vfma.f32	s15, s13, s14
 800ee4e:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800ee52:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800ee54:	63e3      	str	r3, [r4, #60]	; 0x3c
 800ee56:	4620      	mov	r0, r4
 800ee58:	b003      	add	sp, #12
 800ee5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ee5e:	bf00      	nop
 800ee60:	3d800000 	.word	0x3d800000

0800ee64 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800ee64:	4602      	mov	r2, r0
 800ee66:	b148      	cbz	r0, 800ee7c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800ee68:	2300      	movs	r3, #0
 800ee6a:	b298      	uxth	r0, r3
 800ee6c:	3301      	adds	r3, #1
 800ee6e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ee72:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800ee76:	2900      	cmp	r1, #0
 800ee78:	d1f7      	bne.n	800ee6a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800ee7a:	4770      	bx	lr
 800ee7c:	4770      	bx	lr

0800ee7e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800ee7e:	b530      	push	{r4, r5, lr}
 800ee80:	4604      	mov	r4, r0
 800ee82:	b159      	cbz	r1, 800ee9c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800ee84:	b148      	cbz	r0, 800ee9a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800ee86:	2300      	movs	r3, #0
 800ee88:	b298      	uxth	r0, r3
 800ee8a:	4282      	cmp	r2, r0
 800ee8c:	d905      	bls.n	800ee9a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800ee8e:	5ccd      	ldrb	r5, [r1, r3]
 800ee90:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800ee94:	3301      	adds	r3, #1
 800ee96:	2d00      	cmp	r5, #0
 800ee98:	d1f6      	bne.n	800ee88 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800ee9a:	bd30      	pop	{r4, r5, pc}
 800ee9c:	4608      	mov	r0, r1
 800ee9e:	e7fc      	b.n	800ee9a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800eea0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800eea0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eea2:	b08b      	sub	sp, #44	; 0x2c
 800eea4:	468c      	mov	ip, r1
 800eea6:	2100      	movs	r1, #0
 800eea8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800eeac:	ae01      	add	r6, sp, #4
 800eeae:	211f      	movs	r1, #31
 800eeb0:	fbb0 f7f3 	udiv	r7, r0, r3
 800eeb4:	fb03 0517 	mls	r5, r3, r7, r0
 800eeb8:	b2ec      	uxtb	r4, r5
 800eeba:	2d09      	cmp	r5, #9
 800eebc:	bfd4      	ite	le
 800eebe:	3430      	addle	r4, #48	; 0x30
 800eec0:	3457      	addgt	r4, #87	; 0x57
 800eec2:	b2e4      	uxtb	r4, r4
 800eec4:	558c      	strb	r4, [r1, r6]
 800eec6:	4638      	mov	r0, r7
 800eec8:	1e4c      	subs	r4, r1, #1
 800eeca:	b92f      	cbnz	r7, 800eed8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800eecc:	4431      	add	r1, r6
 800eece:	4660      	mov	r0, ip
 800eed0:	f7ff ffd5 	bl	800ee7e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800eed4:	b00b      	add	sp, #44	; 0x2c
 800eed6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eed8:	4621      	mov	r1, r4
 800eeda:	e7e9      	b.n	800eeb0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800eedc <_ZN8touchgfx7Unicode4itoaElPtti>:
 800eedc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eede:	4607      	mov	r7, r0
 800eee0:	b08b      	sub	sp, #44	; 0x2c
 800eee2:	4608      	mov	r0, r1
 800eee4:	b341      	cbz	r1, 800ef38 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800eee6:	1e99      	subs	r1, r3, #2
 800eee8:	2922      	cmp	r1, #34	; 0x22
 800eeea:	d825      	bhi.n	800ef38 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800eeec:	2100      	movs	r1, #0
 800eeee:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800eef2:	463c      	mov	r4, r7
 800eef4:	261f      	movs	r6, #31
 800eef6:	f10d 0c04 	add.w	ip, sp, #4
 800eefa:	fb94 fef3 	sdiv	lr, r4, r3
 800eefe:	fb03 441e 	mls	r4, r3, lr, r4
 800ef02:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800ef06:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800ef0a:	b2ec      	uxtb	r4, r5
 800ef0c:	2d09      	cmp	r5, #9
 800ef0e:	bfd4      	ite	le
 800ef10:	3430      	addle	r4, #48	; 0x30
 800ef12:	3457      	addgt	r4, #87	; 0x57
 800ef14:	b2e4      	uxtb	r4, r4
 800ef16:	f80c 4006 	strb.w	r4, [ip, r6]
 800ef1a:	4674      	mov	r4, lr
 800ef1c:	1e71      	subs	r1, r6, #1
 800ef1e:	b96c      	cbnz	r4, 800ef3c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800ef20:	2f00      	cmp	r7, #0
 800ef22:	da05      	bge.n	800ef30 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800ef24:	ab0a      	add	r3, sp, #40	; 0x28
 800ef26:	4419      	add	r1, r3
 800ef28:	232d      	movs	r3, #45	; 0x2d
 800ef2a:	f801 3c24 	strb.w	r3, [r1, #-36]
 800ef2e:	1eb1      	subs	r1, r6, #2
 800ef30:	3101      	adds	r1, #1
 800ef32:	4461      	add	r1, ip
 800ef34:	f7ff ffa3 	bl	800ee7e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800ef38:	b00b      	add	sp, #44	; 0x2c
 800ef3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ef3c:	460e      	mov	r6, r1
 800ef3e:	e7dc      	b.n	800eefa <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800ef40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800ef40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef44:	4691      	mov	r9, r2
 800ef46:	b085      	sub	sp, #20
 800ef48:	6802      	ldr	r2, [r0, #0]
 800ef4a:	9201      	str	r2, [sp, #4]
 800ef4c:	4688      	mov	r8, r1
 800ef4e:	4683      	mov	fp, r0
 800ef50:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800ef54:	9103      	str	r1, [sp, #12]
 800ef56:	4610      	mov	r0, r2
 800ef58:	461c      	mov	r4, r3
 800ef5a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800ef5e:	9302      	str	r3, [sp, #8]
 800ef60:	f7ff ff80 	bl	800ee64 <_ZN8touchgfx7Unicode6strlenEPKt>
 800ef64:	f1b8 0f00 	cmp.w	r8, #0
 800ef68:	bf0c      	ite	eq
 800ef6a:	4684      	moveq	ip, r0
 800ef6c:	f100 0c01 	addne.w	ip, r0, #1
 800ef70:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800ef74:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800ef78:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800ef7a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ef7c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800ef80:	9903      	ldr	r1, [sp, #12]
 800ef82:	fa1f fc8c 	uxth.w	ip, ip
 800ef86:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800ef8a:	d041      	beq.n	800f010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800ef8c:	d834      	bhi.n	800eff8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800ef8e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800ef92:	d059      	beq.n	800f048 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800ef94:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800ef98:	d03a      	beq.n	800f010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800ef9a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800ef9e:	d034      	beq.n	800f00a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800efa0:	2400      	movs	r4, #0
 800efa2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800efa6:	3a01      	subs	r2, #1
 800efa8:	b169      	cbz	r1, 800efc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800efaa:	9911      	ldr	r1, [sp, #68]	; 0x44
 800efac:	458c      	cmp	ip, r1
 800efae:	da09      	bge.n	800efc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800efb0:	eba1 010c 	sub.w	r1, r1, ip
 800efb4:	b289      	uxth	r1, r1
 800efb6:	b933      	cbnz	r3, 800efc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800efb8:	2e00      	cmp	r6, #0
 800efba:	d051      	beq.n	800f060 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800efbc:	2800      	cmp	r0, #0
 800efbe:	d04f      	beq.n	800f060 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800efc0:	440c      	add	r4, r1
 800efc2:	b2a4      	uxth	r4, r4
 800efc4:	2100      	movs	r1, #0
 800efc6:	682b      	ldr	r3, [r5, #0]
 800efc8:	4293      	cmp	r3, r2
 800efca:	da07      	bge.n	800efdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800efcc:	f1b8 0f00 	cmp.w	r8, #0
 800efd0:	d004      	beq.n	800efdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800efd2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800efd6:	682b      	ldr	r3, [r5, #0]
 800efd8:	3301      	adds	r3, #1
 800efda:	602b      	str	r3, [r5, #0]
 800efdc:	2730      	movs	r7, #48	; 0x30
 800efde:	2c00      	cmp	r4, #0
 800efe0:	d04e      	beq.n	800f080 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800efe2:	682e      	ldr	r6, [r5, #0]
 800efe4:	3c01      	subs	r4, #1
 800efe6:	42b2      	cmp	r2, r6
 800efe8:	b2a4      	uxth	r4, r4
 800efea:	dd49      	ble.n	800f080 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800efec:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800eff0:	682b      	ldr	r3, [r5, #0]
 800eff2:	3301      	adds	r3, #1
 800eff4:	602b      	str	r3, [r5, #0]
 800eff6:	e7f2      	b.n	800efde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800eff8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800effc:	d01d      	beq.n	800f03a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800effe:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f002:	d002      	beq.n	800f00a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f004:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f008:	e7c9      	b.n	800ef9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f00a:	4684      	mov	ip, r0
 800f00c:	f04f 0800 	mov.w	r8, #0
 800f010:	2c00      	cmp	r4, #0
 800f012:	d0c6      	beq.n	800efa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f014:	b947      	cbnz	r7, 800f028 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f016:	2801      	cmp	r0, #1
 800f018:	d106      	bne.n	800f028 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f01a:	8814      	ldrh	r4, [r2, #0]
 800f01c:	2c30      	cmp	r4, #48	; 0x30
 800f01e:	bf02      	ittt	eq
 800f020:	3202      	addeq	r2, #2
 800f022:	f8cb 2000 	streq.w	r2, [fp]
 800f026:	4638      	moveq	r0, r7
 800f028:	45bc      	cmp	ip, r7
 800f02a:	da14      	bge.n	800f056 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f02c:	b2bf      	uxth	r7, r7
 800f02e:	eba7 040c 	sub.w	r4, r7, ip
 800f032:	b2a4      	uxth	r4, r4
 800f034:	46bc      	mov	ip, r7
 800f036:	2600      	movs	r6, #0
 800f038:	e7b3      	b.n	800efa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f03a:	4684      	mov	ip, r0
 800f03c:	b16c      	cbz	r4, 800f05a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f03e:	42b8      	cmp	r0, r7
 800f040:	dd00      	ble.n	800f044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f042:	b2b8      	uxth	r0, r7
 800f044:	2400      	movs	r4, #0
 800f046:	e003      	b.n	800f050 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f048:	f04f 0c01 	mov.w	ip, #1
 800f04c:	2400      	movs	r4, #0
 800f04e:	4660      	mov	r0, ip
 800f050:	4626      	mov	r6, r4
 800f052:	46a0      	mov	r8, r4
 800f054:	e7a5      	b.n	800efa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f056:	2400      	movs	r4, #0
 800f058:	e7ed      	b.n	800f036 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f05a:	4626      	mov	r6, r4
 800f05c:	46a0      	mov	r8, r4
 800f05e:	e7a0      	b.n	800efa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f060:	2900      	cmp	r1, #0
 800f062:	d0b0      	beq.n	800efc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f064:	2720      	movs	r7, #32
 800f066:	682e      	ldr	r6, [r5, #0]
 800f068:	2900      	cmp	r1, #0
 800f06a:	d0ac      	beq.n	800efc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f06c:	3901      	subs	r1, #1
 800f06e:	4296      	cmp	r6, r2
 800f070:	b289      	uxth	r1, r1
 800f072:	daa7      	bge.n	800efc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f074:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f078:	682b      	ldr	r3, [r5, #0]
 800f07a:	3301      	adds	r3, #1
 800f07c:	602b      	str	r3, [r5, #0]
 800f07e:	e7f2      	b.n	800f066 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f080:	b188      	cbz	r0, 800f0a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f082:	682b      	ldr	r3, [r5, #0]
 800f084:	3801      	subs	r0, #1
 800f086:	429a      	cmp	r2, r3
 800f088:	b280      	uxth	r0, r0
 800f08a:	dd0c      	ble.n	800f0a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f08c:	f8db 3000 	ldr.w	r3, [fp]
 800f090:	1c9c      	adds	r4, r3, #2
 800f092:	f8cb 4000 	str.w	r4, [fp]
 800f096:	881c      	ldrh	r4, [r3, #0]
 800f098:	682b      	ldr	r3, [r5, #0]
 800f09a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f09e:	682b      	ldr	r3, [r5, #0]
 800f0a0:	3301      	adds	r3, #1
 800f0a2:	602b      	str	r3, [r5, #0]
 800f0a4:	e7ec      	b.n	800f080 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f0a6:	2620      	movs	r6, #32
 800f0a8:	b151      	cbz	r1, 800f0c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f0aa:	6828      	ldr	r0, [r5, #0]
 800f0ac:	3901      	subs	r1, #1
 800f0ae:	4282      	cmp	r2, r0
 800f0b0:	b289      	uxth	r1, r1
 800f0b2:	dd05      	ble.n	800f0c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f0b4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f0b8:	682b      	ldr	r3, [r5, #0]
 800f0ba:	3301      	adds	r3, #1
 800f0bc:	602b      	str	r3, [r5, #0]
 800f0be:	e7f3      	b.n	800f0a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f0c0:	b005      	add	sp, #20
 800f0c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f0c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f0c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f0ca:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f0ce:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f0d2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f0d6:	2400      	movs	r4, #0
 800f0d8:	8014      	strh	r4, [r2, #0]
 800f0da:	701c      	strb	r4, [r3, #0]
 800f0dc:	f888 4000 	strb.w	r4, [r8]
 800f0e0:	f88c 4000 	strb.w	r4, [ip]
 800f0e4:	f88e 4000 	strb.w	r4, [lr]
 800f0e8:	703c      	strb	r4, [r7, #0]
 800f0ea:	6804      	ldr	r4, [r0, #0]
 800f0ec:	b1a4      	cbz	r4, 800f118 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f0ee:	8824      	ldrh	r4, [r4, #0]
 800f0f0:	f04f 0901 	mov.w	r9, #1
 800f0f4:	b314      	cbz	r4, 800f13c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f0f6:	2c2b      	cmp	r4, #43	; 0x2b
 800f0f8:	d001      	beq.n	800f0fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f0fa:	2c20      	cmp	r4, #32
 800f0fc:	d110      	bne.n	800f120 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f0fe:	8014      	strh	r4, [r2, #0]
 800f100:	6804      	ldr	r4, [r0, #0]
 800f102:	b10c      	cbz	r4, 800f108 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f104:	3402      	adds	r4, #2
 800f106:	6004      	str	r4, [r0, #0]
 800f108:	680c      	ldr	r4, [r1, #0]
 800f10a:	b10c      	cbz	r4, 800f110 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f10c:	3401      	adds	r4, #1
 800f10e:	600c      	str	r4, [r1, #0]
 800f110:	6804      	ldr	r4, [r0, #0]
 800f112:	b17c      	cbz	r4, 800f134 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f114:	8824      	ldrh	r4, [r4, #0]
 800f116:	e7ed      	b.n	800f0f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f118:	680c      	ldr	r4, [r1, #0]
 800f11a:	b17c      	cbz	r4, 800f13c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f11c:	7824      	ldrb	r4, [r4, #0]
 800f11e:	e7e7      	b.n	800f0f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f120:	2c2d      	cmp	r4, #45	; 0x2d
 800f122:	d102      	bne.n	800f12a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f124:	f883 9000 	strb.w	r9, [r3]
 800f128:	e7ea      	b.n	800f100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f12a:	2c23      	cmp	r4, #35	; 0x23
 800f12c:	d107      	bne.n	800f13e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f12e:	f888 9000 	strb.w	r9, [r8]
 800f132:	e7e5      	b.n	800f100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f134:	680c      	ldr	r4, [r1, #0]
 800f136:	b10c      	cbz	r4, 800f13c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f138:	7824      	ldrb	r4, [r4, #0]
 800f13a:	e7db      	b.n	800f0f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f13c:	2400      	movs	r4, #0
 800f13e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f142:	2b09      	cmp	r3, #9
 800f144:	d901      	bls.n	800f14a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f146:	2c2a      	cmp	r4, #42	; 0x2a
 800f148:	d122      	bne.n	800f190 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f14a:	2301      	movs	r3, #1
 800f14c:	2c30      	cmp	r4, #48	; 0x30
 800f14e:	f88e 3000 	strb.w	r3, [lr]
 800f152:	d10d      	bne.n	800f170 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f154:	f88c 3000 	strb.w	r3, [ip]
 800f158:	6803      	ldr	r3, [r0, #0]
 800f15a:	b10b      	cbz	r3, 800f160 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f15c:	3302      	adds	r3, #2
 800f15e:	6003      	str	r3, [r0, #0]
 800f160:	680b      	ldr	r3, [r1, #0]
 800f162:	b10b      	cbz	r3, 800f168 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f164:	3301      	adds	r3, #1
 800f166:	600b      	str	r3, [r1, #0]
 800f168:	6803      	ldr	r3, [r0, #0]
 800f16a:	2b00      	cmp	r3, #0
 800f16c:	d02f      	beq.n	800f1ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f16e:	881c      	ldrh	r4, [r3, #0]
 800f170:	2c2a      	cmp	r4, #42	; 0x2a
 800f172:	d135      	bne.n	800f1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f174:	f04f 33ff 	mov.w	r3, #4294967295
 800f178:	6033      	str	r3, [r6, #0]
 800f17a:	6803      	ldr	r3, [r0, #0]
 800f17c:	b10b      	cbz	r3, 800f182 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f17e:	3302      	adds	r3, #2
 800f180:	6003      	str	r3, [r0, #0]
 800f182:	680b      	ldr	r3, [r1, #0]
 800f184:	b10b      	cbz	r3, 800f18a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f186:	3301      	adds	r3, #1
 800f188:	600b      	str	r3, [r1, #0]
 800f18a:	6803      	ldr	r3, [r0, #0]
 800f18c:	b31b      	cbz	r3, 800f1d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f18e:	881c      	ldrh	r4, [r3, #0]
 800f190:	2c2e      	cmp	r4, #46	; 0x2e
 800f192:	d11a      	bne.n	800f1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f194:	2301      	movs	r3, #1
 800f196:	703b      	strb	r3, [r7, #0]
 800f198:	6803      	ldr	r3, [r0, #0]
 800f19a:	b10b      	cbz	r3, 800f1a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f19c:	3302      	adds	r3, #2
 800f19e:	6003      	str	r3, [r0, #0]
 800f1a0:	680b      	ldr	r3, [r1, #0]
 800f1a2:	b10b      	cbz	r3, 800f1a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f1a4:	3301      	adds	r3, #1
 800f1a6:	600b      	str	r3, [r1, #0]
 800f1a8:	6803      	ldr	r3, [r0, #0]
 800f1aa:	2b00      	cmp	r3, #0
 800f1ac:	d036      	beq.n	800f21c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f1ae:	881b      	ldrh	r3, [r3, #0]
 800f1b0:	2b2a      	cmp	r3, #42	; 0x2a
 800f1b2:	d137      	bne.n	800f224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f1b4:	f04f 33ff 	mov.w	r3, #4294967295
 800f1b8:	602b      	str	r3, [r5, #0]
 800f1ba:	6803      	ldr	r3, [r0, #0]
 800f1bc:	b10b      	cbz	r3, 800f1c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f1be:	3302      	adds	r3, #2
 800f1c0:	6003      	str	r3, [r0, #0]
 800f1c2:	680b      	ldr	r3, [r1, #0]
 800f1c4:	b10b      	cbz	r3, 800f1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f1c6:	3301      	adds	r3, #1
 800f1c8:	600b      	str	r3, [r1, #0]
 800f1ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f1ce:	680c      	ldr	r4, [r1, #0]
 800f1d0:	b134      	cbz	r4, 800f1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f1d2:	7824      	ldrb	r4, [r4, #0]
 800f1d4:	e7cc      	b.n	800f170 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f1d6:	680b      	ldr	r3, [r1, #0]
 800f1d8:	2b00      	cmp	r3, #0
 800f1da:	d0f6      	beq.n	800f1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f1dc:	781c      	ldrb	r4, [r3, #0]
 800f1de:	e7d7      	b.n	800f190 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f1e0:	2300      	movs	r3, #0
 800f1e2:	6033      	str	r3, [r6, #0]
 800f1e4:	220a      	movs	r2, #10
 800f1e6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f1ea:	fa1f f38c 	uxth.w	r3, ip
 800f1ee:	2b09      	cmp	r3, #9
 800f1f0:	d8ce      	bhi.n	800f190 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f1f2:	6833      	ldr	r3, [r6, #0]
 800f1f4:	fb02 c303 	mla	r3, r2, r3, ip
 800f1f8:	6033      	str	r3, [r6, #0]
 800f1fa:	6803      	ldr	r3, [r0, #0]
 800f1fc:	b10b      	cbz	r3, 800f202 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f1fe:	3302      	adds	r3, #2
 800f200:	6003      	str	r3, [r0, #0]
 800f202:	680b      	ldr	r3, [r1, #0]
 800f204:	b10b      	cbz	r3, 800f20a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f206:	3301      	adds	r3, #1
 800f208:	600b      	str	r3, [r1, #0]
 800f20a:	6803      	ldr	r3, [r0, #0]
 800f20c:	b10b      	cbz	r3, 800f212 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f20e:	881c      	ldrh	r4, [r3, #0]
 800f210:	e7e9      	b.n	800f1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f212:	680c      	ldr	r4, [r1, #0]
 800f214:	2c00      	cmp	r4, #0
 800f216:	d0e6      	beq.n	800f1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f218:	7824      	ldrb	r4, [r4, #0]
 800f21a:	e7e4      	b.n	800f1e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f21c:	680b      	ldr	r3, [r1, #0]
 800f21e:	b10b      	cbz	r3, 800f224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f220:	781b      	ldrb	r3, [r3, #0]
 800f222:	e7c5      	b.n	800f1b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f224:	2200      	movs	r2, #0
 800f226:	602a      	str	r2, [r5, #0]
 800f228:	240a      	movs	r4, #10
 800f22a:	3b30      	subs	r3, #48	; 0x30
 800f22c:	b29e      	uxth	r6, r3
 800f22e:	2e09      	cmp	r6, #9
 800f230:	682a      	ldr	r2, [r5, #0]
 800f232:	d813      	bhi.n	800f25c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f234:	fb04 3302 	mla	r3, r4, r2, r3
 800f238:	602b      	str	r3, [r5, #0]
 800f23a:	6803      	ldr	r3, [r0, #0]
 800f23c:	b10b      	cbz	r3, 800f242 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f23e:	3302      	adds	r3, #2
 800f240:	6003      	str	r3, [r0, #0]
 800f242:	680b      	ldr	r3, [r1, #0]
 800f244:	b10b      	cbz	r3, 800f24a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f246:	3301      	adds	r3, #1
 800f248:	600b      	str	r3, [r1, #0]
 800f24a:	6803      	ldr	r3, [r0, #0]
 800f24c:	b10b      	cbz	r3, 800f252 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f24e:	881b      	ldrh	r3, [r3, #0]
 800f250:	e7eb      	b.n	800f22a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f252:	680b      	ldr	r3, [r1, #0]
 800f254:	2b00      	cmp	r3, #0
 800f256:	d0e8      	beq.n	800f22a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f258:	781b      	ldrb	r3, [r3, #0]
 800f25a:	e7e6      	b.n	800f22a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f25c:	2a06      	cmp	r2, #6
 800f25e:	bfa8      	it	ge
 800f260:	2206      	movge	r2, #6
 800f262:	602a      	str	r2, [r5, #0]
 800f264:	e7b1      	b.n	800f1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f266 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f26a:	b0a3      	sub	sp, #140	; 0x8c
 800f26c:	2600      	movs	r6, #0
 800f26e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800f272:	4607      	mov	r7, r0
 800f274:	4688      	mov	r8, r1
 800f276:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f27a:	4631      	mov	r1, r6
 800f27c:	2242      	movs	r2, #66	; 0x42
 800f27e:	4648      	mov	r0, r9
 800f280:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800f282:	960d      	str	r6, [sp, #52]	; 0x34
 800f284:	f00c fa96 	bl	801b7b4 <memset>
 800f288:	b15f      	cbz	r7, 800f2a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f28a:	f108 3aff 	add.w	sl, r8, #4294967295
 800f28e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f290:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f292:	b152      	cbz	r2, 800f2aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f294:	8812      	ldrh	r2, [r2, #0]
 800f296:	b10a      	cbz	r2, 800f29c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f298:	459a      	cmp	sl, r3
 800f29a:	dc2e      	bgt.n	800f2fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f29c:	2200      	movs	r2, #0
 800f29e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f2a2:	4638      	mov	r0, r7
 800f2a4:	b023      	add	sp, #140	; 0x8c
 800f2a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2aa:	9a08      	ldr	r2, [sp, #32]
 800f2ac:	2a00      	cmp	r2, #0
 800f2ae:	d0f5      	beq.n	800f29c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f2b0:	7812      	ldrb	r2, [r2, #0]
 800f2b2:	e7f0      	b.n	800f296 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f2b4:	2d00      	cmp	r5, #0
 800f2b6:	d0ea      	beq.n	800f28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f2b8:	782a      	ldrb	r2, [r5, #0]
 800f2ba:	b142      	cbz	r2, 800f2ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f2bc:	2a25      	cmp	r2, #37	; 0x25
 800f2be:	d001      	beq.n	800f2c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f2c0:	459a      	cmp	sl, r3
 800f2c2:	dc08      	bgt.n	800f2d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f2c4:	f1bb 0f00 	cmp.w	fp, #0
 800f2c8:	d121      	bne.n	800f30e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f2ca:	2d00      	cmp	r5, #0
 800f2cc:	d0df      	beq.n	800f28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f2ce:	782a      	ldrb	r2, [r5, #0]
 800f2d0:	f04f 0b00 	mov.w	fp, #0
 800f2d4:	e01d      	b.n	800f312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f2d6:	f1bb 0f00 	cmp.w	fp, #0
 800f2da:	d078      	beq.n	800f3ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f2dc:	f8bb 2000 	ldrh.w	r2, [fp]
 800f2e0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f2e4:	f1bb 0f00 	cmp.w	fp, #0
 800f2e8:	d002      	beq.n	800f2f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800f2ea:	f10b 0202 	add.w	r2, fp, #2
 800f2ee:	9209      	str	r2, [sp, #36]	; 0x24
 800f2f0:	b10d      	cbz	r5, 800f2f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800f2f2:	3501      	adds	r5, #1
 800f2f4:	9508      	str	r5, [sp, #32]
 800f2f6:	3301      	adds	r3, #1
 800f2f8:	930d      	str	r3, [sp, #52]	; 0x34
 800f2fa:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800f2fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f300:	f1bb 0f00 	cmp.w	fp, #0
 800f304:	d0d6      	beq.n	800f2b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800f306:	f8bb 2000 	ldrh.w	r2, [fp]
 800f30a:	2a00      	cmp	r2, #0
 800f30c:	d1d6      	bne.n	800f2bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800f30e:	f8bb 2000 	ldrh.w	r2, [fp]
 800f312:	2a00      	cmp	r2, #0
 800f314:	d0bb      	beq.n	800f28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f316:	459a      	cmp	sl, r3
 800f318:	ddb9      	ble.n	800f28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f31a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800f31e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800f322:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f326:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800f32a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800f32e:	960e      	str	r6, [sp, #56]	; 0x38
 800f330:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800f334:	960f      	str	r6, [sp, #60]	; 0x3c
 800f336:	f1bb 0f00 	cmp.w	fp, #0
 800f33a:	d002      	beq.n	800f342 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800f33c:	f10b 0302 	add.w	r3, fp, #2
 800f340:	9309      	str	r3, [sp, #36]	; 0x24
 800f342:	b10d      	cbz	r5, 800f348 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800f344:	1c6b      	adds	r3, r5, #1
 800f346:	9308      	str	r3, [sp, #32]
 800f348:	ab0f      	add	r3, sp, #60	; 0x3c
 800f34a:	9305      	str	r3, [sp, #20]
 800f34c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800f350:	9304      	str	r3, [sp, #16]
 800f352:	ab0e      	add	r3, sp, #56	; 0x38
 800f354:	9303      	str	r3, [sp, #12]
 800f356:	ab0c      	add	r3, sp, #48	; 0x30
 800f358:	9302      	str	r3, [sp, #8]
 800f35a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800f35e:	9301      	str	r3, [sp, #4]
 800f360:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f364:	9300      	str	r3, [sp, #0]
 800f366:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800f36a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800f36e:	a908      	add	r1, sp, #32
 800f370:	a809      	add	r0, sp, #36	; 0x24
 800f372:	f7ff fea8 	bl	800f0c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800f376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f378:	2b00      	cmp	r3, #0
 800f37a:	bfbe      	ittt	lt
 800f37c:	6823      	ldrlt	r3, [r4, #0]
 800f37e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f382:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f384:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f386:	bfb8      	it	lt
 800f388:	3404      	addlt	r4, #4
 800f38a:	2b00      	cmp	r3, #0
 800f38c:	bfb8      	it	lt
 800f38e:	6823      	ldrlt	r3, [r4, #0]
 800f390:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800f394:	bfbe      	ittt	lt
 800f396:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f39a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800f39c:	3404      	addlt	r4, #4
 800f39e:	b1d9      	cbz	r1, 800f3d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800f3a0:	880b      	ldrh	r3, [r1, #0]
 800f3a2:	2b69      	cmp	r3, #105	; 0x69
 800f3a4:	d01f      	beq.n	800f3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f3a6:	d82f      	bhi.n	800f408 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800f3a8:	2b58      	cmp	r3, #88	; 0x58
 800f3aa:	d01c      	beq.n	800f3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f3ac:	d818      	bhi.n	800f3e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800f3ae:	2b25      	cmp	r3, #37	; 0x25
 800f3b0:	d034      	beq.n	800f41c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800f3b2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800f3b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f3b8:	f1bb 0f00 	cmp.w	fp, #0
 800f3bc:	f000 80b8 	beq.w	800f530 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800f3c0:	f8bb 5000 	ldrh.w	r5, [fp]
 800f3c4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800f3c8:	3301      	adds	r3, #1
 800f3ca:	930d      	str	r3, [sp, #52]	; 0x34
 800f3cc:	e029      	b.n	800f422 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f3ce:	b10d      	cbz	r5, 800f3d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800f3d0:	782a      	ldrb	r2, [r5, #0]
 800f3d2:	e785      	b.n	800f2e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f3d4:	462a      	mov	r2, r5
 800f3d6:	e783      	b.n	800f2e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f3d8:	2a00      	cmp	r2, #0
 800f3da:	d0ea      	beq.n	800f3b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f3dc:	7813      	ldrb	r3, [r2, #0]
 800f3de:	e7e0      	b.n	800f3a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800f3e0:	3b63      	subs	r3, #99	; 0x63
 800f3e2:	2b01      	cmp	r3, #1
 800f3e4:	d8e5      	bhi.n	800f3b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f3e6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800f3ea:	b329      	cbz	r1, 800f438 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800f3ec:	880b      	ldrh	r3, [r1, #0]
 800f3ee:	2b69      	cmp	r3, #105	; 0x69
 800f3f0:	d063      	beq.n	800f4ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f3f2:	d825      	bhi.n	800f440 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800f3f4:	2b63      	cmp	r3, #99	; 0x63
 800f3f6:	d038      	beq.n	800f46a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800f3f8:	2b64      	cmp	r3, #100	; 0x64
 800f3fa:	d05e      	beq.n	800f4ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f3fc:	2b58      	cmp	r3, #88	; 0x58
 800f3fe:	d07b      	beq.n	800f4f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800f400:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800f404:	4625      	mov	r5, r4
 800f406:	e036      	b.n	800f476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f408:	2b73      	cmp	r3, #115	; 0x73
 800f40a:	d0ec      	beq.n	800f3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f40c:	d802      	bhi.n	800f414 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800f40e:	2b6f      	cmp	r3, #111	; 0x6f
 800f410:	d1cf      	bne.n	800f3b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f412:	e7e8      	b.n	800f3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f414:	2b75      	cmp	r3, #117	; 0x75
 800f416:	d0e6      	beq.n	800f3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f418:	2b78      	cmp	r3, #120	; 0x78
 800f41a:	e7f9      	b.n	800f410 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800f41c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f41e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800f422:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f424:	b10b      	cbz	r3, 800f42a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800f426:	3302      	adds	r3, #2
 800f428:	9309      	str	r3, [sp, #36]	; 0x24
 800f42a:	9b08      	ldr	r3, [sp, #32]
 800f42c:	2b00      	cmp	r3, #0
 800f42e:	f43f af2e 	beq.w	800f28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f432:	3301      	adds	r3, #1
 800f434:	9308      	str	r3, [sp, #32]
 800f436:	e72a      	b.n	800f28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f438:	2a00      	cmp	r2, #0
 800f43a:	d0e1      	beq.n	800f400 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f43c:	7813      	ldrb	r3, [r2, #0]
 800f43e:	e7d6      	b.n	800f3ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800f440:	2b73      	cmp	r3, #115	; 0x73
 800f442:	d036      	beq.n	800f4b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800f444:	d807      	bhi.n	800f456 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800f446:	2b6f      	cmp	r3, #111	; 0x6f
 800f448:	d1da      	bne.n	800f400 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f44a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f44c:	1d25      	adds	r5, r4, #4
 800f44e:	eba8 0202 	sub.w	r2, r8, r2
 800f452:	2308      	movs	r3, #8
 800f454:	e04a      	b.n	800f4ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f456:	2b75      	cmp	r3, #117	; 0x75
 800f458:	d043      	beq.n	800f4e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800f45a:	2b78      	cmp	r3, #120	; 0x78
 800f45c:	d1d0      	bne.n	800f400 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f45e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f460:	1d25      	adds	r5, r4, #4
 800f462:	eba8 0202 	sub.w	r2, r8, r2
 800f466:	2310      	movs	r3, #16
 800f468:	e040      	b.n	800f4ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f46a:	7823      	ldrb	r3, [r4, #0]
 800f46c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800f470:	1d25      	adds	r5, r4, #4
 800f472:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800f476:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f478:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800f47c:	2b00      	cmp	r3, #0
 800f47e:	d052      	beq.n	800f526 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800f480:	881a      	ldrh	r2, [r3, #0]
 800f482:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800f486:	a80d      	add	r0, sp, #52	; 0x34
 800f488:	9005      	str	r0, [sp, #20]
 800f48a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800f48e:	9004      	str	r0, [sp, #16]
 800f490:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f492:	9003      	str	r0, [sp, #12]
 800f494:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800f498:	9002      	str	r0, [sp, #8]
 800f49a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f49c:	9001      	str	r0, [sp, #4]
 800f49e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800f4a2:	9000      	str	r0, [sp, #0]
 800f4a4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800f4a8:	a810      	add	r0, sp, #64	; 0x40
 800f4aa:	f7ff fd49 	bl	800ef40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800f4ae:	462c      	mov	r4, r5
 800f4b0:	e7b7      	b.n	800f422 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f4b2:	6823      	ldr	r3, [r4, #0]
 800f4b4:	1d25      	adds	r5, r4, #4
 800f4b6:	9310      	str	r3, [sp, #64]	; 0x40
 800f4b8:	e7dd      	b.n	800f476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f4ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f4bc:	6820      	ldr	r0, [r4, #0]
 800f4be:	eba8 0202 	sub.w	r2, r8, r2
 800f4c2:	230a      	movs	r3, #10
 800f4c4:	b292      	uxth	r2, r2
 800f4c6:	4649      	mov	r1, r9
 800f4c8:	f7ff fd08 	bl	800eedc <_ZN8touchgfx7Unicode4itoaElPtti>
 800f4cc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f4d0:	2b2d      	cmp	r3, #45	; 0x2d
 800f4d2:	f104 0504 	add.w	r5, r4, #4
 800f4d6:	d1ce      	bne.n	800f476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f4d8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f4dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4de:	3302      	adds	r3, #2
 800f4e0:	e7e9      	b.n	800f4b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800f4e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f4e4:	1d25      	adds	r5, r4, #4
 800f4e6:	eba8 0202 	sub.w	r2, r8, r2
 800f4ea:	230a      	movs	r3, #10
 800f4ec:	b292      	uxth	r2, r2
 800f4ee:	4649      	mov	r1, r9
 800f4f0:	6820      	ldr	r0, [r4, #0]
 800f4f2:	f7ff fcd5 	bl	800eea0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f4f6:	e7be      	b.n	800f476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f4f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f4fa:	6820      	ldr	r0, [r4, #0]
 800f4fc:	eba8 0202 	sub.w	r2, r8, r2
 800f500:	b292      	uxth	r2, r2
 800f502:	2310      	movs	r3, #16
 800f504:	4649      	mov	r1, r9
 800f506:	f7ff fccb 	bl	800eea0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f50a:	1d25      	adds	r5, r4, #4
 800f50c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800f510:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f514:	2b00      	cmp	r3, #0
 800f516:	d0ae      	beq.n	800f476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f518:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800f51c:	2919      	cmp	r1, #25
 800f51e:	d8f7      	bhi.n	800f510 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f520:	3b20      	subs	r3, #32
 800f522:	8013      	strh	r3, [r2, #0]
 800f524:	e7f4      	b.n	800f510 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f526:	9a08      	ldr	r2, [sp, #32]
 800f528:	2a00      	cmp	r2, #0
 800f52a:	d0aa      	beq.n	800f482 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f52c:	7812      	ldrb	r2, [r2, #0]
 800f52e:	e7a8      	b.n	800f482 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f530:	2d00      	cmp	r5, #0
 800f532:	f43f af47 	beq.w	800f3c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800f536:	782d      	ldrb	r5, [r5, #0]
 800f538:	e744      	b.n	800f3c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800f53a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800f53a:	b507      	push	{r0, r1, r2, lr}
 800f53c:	9300      	str	r3, [sp, #0]
 800f53e:	4613      	mov	r3, r2
 800f540:	2200      	movs	r2, #0
 800f542:	f7ff fe90 	bl	800f266 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800f546:	b003      	add	sp, #12
 800f548:	f85d fb04 	ldr.w	pc, [sp], #4

0800f54c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800f54c:	b40c      	push	{r2, r3}
 800f54e:	b507      	push	{r0, r1, r2, lr}
 800f550:	ab04      	add	r3, sp, #16
 800f552:	f853 2b04 	ldr.w	r2, [r3], #4
 800f556:	9301      	str	r3, [sp, #4]
 800f558:	f7ff ffef 	bl	800f53a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800f55c:	b003      	add	sp, #12
 800f55e:	f85d eb04 	ldr.w	lr, [sp], #4
 800f562:	b002      	add	sp, #8
 800f564:	4770      	bx	lr
	...

0800f568 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f568:	4b01      	ldr	r3, [pc, #4]	; (800f570 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f56a:	6018      	str	r0, [r3, #0]
 800f56c:	4770      	bx	lr
 800f56e:	bf00      	nop
 800f570:	2000a384 	.word	0x2000a384

0800f574 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f574:	4b06      	ldr	r3, [pc, #24]	; (800f590 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f576:	881a      	ldrh	r2, [r3, #0]
 800f578:	4282      	cmp	r2, r0
 800f57a:	d807      	bhi.n	800f58c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f57c:	4b05      	ldr	r3, [pc, #20]	; (800f594 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f57e:	881b      	ldrh	r3, [r3, #0]
 800f580:	4413      	add	r3, r2
 800f582:	4298      	cmp	r0, r3
 800f584:	bfac      	ite	ge
 800f586:	2000      	movge	r0, #0
 800f588:	2001      	movlt	r0, #1
 800f58a:	4770      	bx	lr
 800f58c:	2000      	movs	r0, #0
 800f58e:	4770      	bx	lr
 800f590:	2000a3a4 	.word	0x2000a3a4
 800f594:	2000a3a8 	.word	0x2000a3a8

0800f598 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f598:	b508      	push	{r3, lr}
 800f59a:	4601      	mov	r1, r0
 800f59c:	f7ff ffea 	bl	800f574 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f5a0:	b118      	cbz	r0, 800f5aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f5a2:	4b02      	ldr	r3, [pc, #8]	; (800f5ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f5a4:	681b      	ldr	r3, [r3, #0]
 800f5a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f5aa:	bd08      	pop	{r3, pc}
 800f5ac:	2000a388 	.word	0x2000a388

0800f5b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f5b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f5b4:	4d28      	ldr	r5, [pc, #160]	; (800f658 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f5b6:	682b      	ldr	r3, [r5, #0]
 800f5b8:	2b00      	cmp	r3, #0
 800f5ba:	d04a      	beq.n	800f652 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f5bc:	4a27      	ldr	r2, [pc, #156]	; (800f65c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f5be:	4e28      	ldr	r6, [pc, #160]	; (800f660 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f5c0:	8810      	ldrh	r0, [r2, #0]
 800f5c2:	f8b6 8000 	ldrh.w	r8, [r6]
 800f5c6:	4c27      	ldr	r4, [pc, #156]	; (800f664 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f5c8:	4f27      	ldr	r7, [pc, #156]	; (800f668 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f5ca:	4440      	add	r0, r8
 800f5cc:	1c41      	adds	r1, r0, #1
 800f5ce:	f021 0101 	bic.w	r1, r1, #1
 800f5d2:	0409      	lsls	r1, r1, #16
 800f5d4:	0c09      	lsrs	r1, r1, #16
 800f5d6:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800f5da:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800f5de:	eb03 020e 	add.w	r2, r3, lr
 800f5e2:	eb0e 010c 	add.w	r1, lr, ip
 800f5e6:	6022      	str	r2, [r4, #0]
 800f5e8:	185a      	adds	r2, r3, r1
 800f5ea:	603a      	str	r2, [r7, #0]
 800f5ec:	220e      	movs	r2, #14
 800f5ee:	fb02 f208 	mul.w	r2, r2, r8
 800f5f2:	3203      	adds	r2, #3
 800f5f4:	f022 0203 	bic.w	r2, r2, #3
 800f5f8:	4411      	add	r1, r2
 800f5fa:	440b      	add	r3, r1
 800f5fc:	491b      	ldr	r1, [pc, #108]	; (800f66c <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f5fe:	600b      	str	r3, [r1, #0]
 800f600:	491b      	ldr	r1, [pc, #108]	; (800f670 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f602:	2300      	movs	r3, #0
 800f604:	800b      	strh	r3, [r1, #0]
 800f606:	491b      	ldr	r1, [pc, #108]	; (800f674 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f608:	6809      	ldr	r1, [r1, #0]
 800f60a:	eba1 010e 	sub.w	r1, r1, lr
 800f60e:	eba1 010c 	sub.w	r1, r1, ip
 800f612:	1a8a      	subs	r2, r1, r2
 800f614:	4918      	ldr	r1, [pc, #96]	; (800f678 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800f616:	600a      	str	r2, [r1, #0]
 800f618:	4a18      	ldr	r2, [pc, #96]	; (800f67c <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800f61a:	469c      	mov	ip, r3
 800f61c:	8013      	strh	r3, [r2, #0]
 800f61e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f622:	4283      	cmp	r3, r0
 800f624:	d10d      	bne.n	800f642 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800f626:	8835      	ldrh	r5, [r6, #0]
 800f628:	6838      	ldr	r0, [r7, #0]
 800f62a:	2300      	movs	r3, #0
 800f62c:	240e      	movs	r4, #14
 800f62e:	429d      	cmp	r5, r3
 800f630:	d90f      	bls.n	800f652 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f632:	fb04 0203 	mla	r2, r4, r3, r0
 800f636:	3301      	adds	r3, #1
 800f638:	7b11      	ldrb	r1, [r2, #12]
 800f63a:	f36f 1145 	bfc	r1, #5, #1
 800f63e:	7311      	strb	r1, [r2, #12]
 800f640:	e7f5      	b.n	800f62e <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800f642:	682a      	ldr	r2, [r5, #0]
 800f644:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f648:	6822      	ldr	r2, [r4, #0]
 800f64a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f64e:	3301      	adds	r3, #1
 800f650:	e7e7      	b.n	800f622 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800f652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f656:	bf00      	nop
 800f658:	2000a388 	.word	0x2000a388
 800f65c:	2000a3a4 	.word	0x2000a3a4
 800f660:	2000a3a8 	.word	0x2000a3a8
 800f664:	2000a39c 	.word	0x2000a39c
 800f668:	2000a38c 	.word	0x2000a38c
 800f66c:	2000a394 	.word	0x2000a394
 800f670:	2000a3a6 	.word	0x2000a3a6
 800f674:	2000a390 	.word	0x2000a390
 800f678:	2000a3a0 	.word	0x2000a3a0
 800f67c:	2000a398 	.word	0x2000a398

0800f680 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f680:	b510      	push	{r4, lr}
 800f682:	4b10      	ldr	r3, [pc, #64]	; (800f6c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f684:	681b      	ldr	r3, [r3, #0]
 800f686:	b9db      	cbnz	r3, 800f6c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f688:	b1d1      	cbz	r1, 800f6c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f68a:	4b0f      	ldr	r3, [pc, #60]	; (800f6c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f68c:	801a      	strh	r2, [r3, #0]
 800f68e:	4b0f      	ldr	r3, [pc, #60]	; (800f6cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f690:	881b      	ldrh	r3, [r3, #0]
 800f692:	b292      	uxth	r2, r2
 800f694:	240e      	movs	r4, #14
 800f696:	4413      	add	r3, r2
 800f698:	4362      	muls	r2, r4
 800f69a:	2406      	movs	r4, #6
 800f69c:	fb04 2203 	mla	r2, r4, r3, r2
 800f6a0:	428a      	cmp	r2, r1
 800f6a2:	d305      	bcc.n	800f6b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f6a4:	4b0a      	ldr	r3, [pc, #40]	; (800f6d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f6a6:	4a0b      	ldr	r2, [pc, #44]	; (800f6d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f6a8:	480b      	ldr	r0, [pc, #44]	; (800f6d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f6aa:	2135      	movs	r1, #53	; 0x35
 800f6ac:	f00b fefc 	bl	801b4a8 <__assert_func>
 800f6b0:	4b0a      	ldr	r3, [pc, #40]	; (800f6dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f6b2:	6019      	str	r1, [r3, #0]
 800f6b4:	4b0a      	ldr	r3, [pc, #40]	; (800f6e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f6b6:	6018      	str	r0, [r3, #0]
 800f6b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6bc:	f7ff bf78 	b.w	800f5b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f6c0:	bd10      	pop	{r4, pc}
 800f6c2:	bf00      	nop
 800f6c4:	2000a394 	.word	0x2000a394
 800f6c8:	2000a3a8 	.word	0x2000a3a8
 800f6cc:	2000a3a4 	.word	0x2000a3a4
 800f6d0:	0801f0c6 	.word	0x0801f0c6
 800f6d4:	0801f15b 	.word	0x0801f15b
 800f6d8:	0801f0a1 	.word	0x0801f0a1
 800f6dc:	2000a390 	.word	0x2000a390
 800f6e0:	2000a388 	.word	0x2000a388

0800f6e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f6e4:	b470      	push	{r4, r5, r6}
 800f6e6:	4c07      	ldr	r4, [pc, #28]	; (800f704 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f6e8:	6826      	ldr	r6, [r4, #0]
 800f6ea:	4605      	mov	r5, r0
 800f6ec:	4610      	mov	r0, r2
 800f6ee:	9a03      	ldr	r2, [sp, #12]
 800f6f0:	b936      	cbnz	r6, 800f700 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f6f2:	6025      	str	r5, [r4, #0]
 800f6f4:	4c04      	ldr	r4, [pc, #16]	; (800f708 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f6f6:	8021      	strh	r1, [r4, #0]
 800f6f8:	bc70      	pop	{r4, r5, r6}
 800f6fa:	4619      	mov	r1, r3
 800f6fc:	f7ff bfc0 	b.w	800f680 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f700:	bc70      	pop	{r4, r5, r6}
 800f702:	4770      	bx	lr
 800f704:	2000a3ac 	.word	0x2000a3ac
 800f708:	2000a3a4 	.word	0x2000a3a4

0800f70c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f70c:	b508      	push	{r3, lr}
 800f70e:	4b14      	ldr	r3, [pc, #80]	; (800f760 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f710:	6819      	ldr	r1, [r3, #0]
 800f712:	b931      	cbnz	r1, 800f722 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f714:	4b13      	ldr	r3, [pc, #76]	; (800f764 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f716:	4a14      	ldr	r2, [pc, #80]	; (800f768 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f718:	4814      	ldr	r0, [pc, #80]	; (800f76c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f71a:	f240 4186 	movw	r1, #1158	; 0x486
 800f71e:	f00b fec3 	bl	801b4a8 <__assert_func>
 800f722:	4a13      	ldr	r2, [pc, #76]	; (800f770 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f724:	8803      	ldrh	r3, [r0, #0]
 800f726:	8812      	ldrh	r2, [r2, #0]
 800f728:	4293      	cmp	r3, r2
 800f72a:	d204      	bcs.n	800f736 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f72c:	2214      	movs	r2, #20
 800f72e:	fb02 1303 	mla	r3, r2, r3, r1
 800f732:	8918      	ldrh	r0, [r3, #8]
 800f734:	bd08      	pop	{r3, pc}
 800f736:	490f      	ldr	r1, [pc, #60]	; (800f774 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f738:	8809      	ldrh	r1, [r1, #0]
 800f73a:	4411      	add	r1, r2
 800f73c:	428b      	cmp	r3, r1
 800f73e:	da06      	bge.n	800f74e <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f740:	1a9b      	subs	r3, r3, r2
 800f742:	4a0d      	ldr	r2, [pc, #52]	; (800f778 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f744:	6812      	ldr	r2, [r2, #0]
 800f746:	210e      	movs	r1, #14
 800f748:	fb01 2303 	mla	r3, r1, r3, r2
 800f74c:	e7f1      	b.n	800f732 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f74e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f752:	4293      	cmp	r3, r2
 800f754:	bf0a      	itet	eq
 800f756:	4b09      	ldreq	r3, [pc, #36]	; (800f77c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f758:	2000      	movne	r0, #0
 800f75a:	8818      	ldrheq	r0, [r3, #0]
 800f75c:	e7ea      	b.n	800f734 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f75e:	bf00      	nop
 800f760:	2000a3ac 	.word	0x2000a3ac
 800f764:	0801f11f 	.word	0x0801f11f
 800f768:	0801f208 	.word	0x0801f208
 800f76c:	0801f0a1 	.word	0x0801f0a1
 800f770:	2000a3a4 	.word	0x2000a3a4
 800f774:	2000a3a8 	.word	0x2000a3a8
 800f778:	2000a38c 	.word	0x2000a38c
 800f77c:	2000a318 	.word	0x2000a318

0800f780 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f780:	b508      	push	{r3, lr}
 800f782:	4b14      	ldr	r3, [pc, #80]	; (800f7d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f784:	6819      	ldr	r1, [r3, #0]
 800f786:	b931      	cbnz	r1, 800f796 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f788:	4b13      	ldr	r3, [pc, #76]	; (800f7d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f78a:	4a14      	ldr	r2, [pc, #80]	; (800f7dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f78c:	4814      	ldr	r0, [pc, #80]	; (800f7e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f78e:	f240 419a 	movw	r1, #1178	; 0x49a
 800f792:	f00b fe89 	bl	801b4a8 <__assert_func>
 800f796:	4a13      	ldr	r2, [pc, #76]	; (800f7e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f798:	8803      	ldrh	r3, [r0, #0]
 800f79a:	8812      	ldrh	r2, [r2, #0]
 800f79c:	4293      	cmp	r3, r2
 800f79e:	d204      	bcs.n	800f7aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f7a0:	2214      	movs	r2, #20
 800f7a2:	fb02 1303 	mla	r3, r2, r3, r1
 800f7a6:	8958      	ldrh	r0, [r3, #10]
 800f7a8:	bd08      	pop	{r3, pc}
 800f7aa:	490f      	ldr	r1, [pc, #60]	; (800f7e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f7ac:	8809      	ldrh	r1, [r1, #0]
 800f7ae:	4411      	add	r1, r2
 800f7b0:	428b      	cmp	r3, r1
 800f7b2:	da06      	bge.n	800f7c2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f7b4:	1a9b      	subs	r3, r3, r2
 800f7b6:	4a0d      	ldr	r2, [pc, #52]	; (800f7ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f7b8:	6812      	ldr	r2, [r2, #0]
 800f7ba:	210e      	movs	r1, #14
 800f7bc:	fb01 2303 	mla	r3, r1, r3, r2
 800f7c0:	e7f1      	b.n	800f7a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f7c2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f7c6:	4293      	cmp	r3, r2
 800f7c8:	bf0a      	itet	eq
 800f7ca:	4b09      	ldreq	r3, [pc, #36]	; (800f7f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800f7cc:	2000      	movne	r0, #0
 800f7ce:	8818      	ldrheq	r0, [r3, #0]
 800f7d0:	e7ea      	b.n	800f7a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800f7d2:	bf00      	nop
 800f7d4:	2000a3ac 	.word	0x2000a3ac
 800f7d8:	0801f11f 	.word	0x0801f11f
 800f7dc:	0801f234 	.word	0x0801f234
 800f7e0:	0801f0a1 	.word	0x0801f0a1
 800f7e4:	2000a3a4 	.word	0x2000a3a4
 800f7e8:	2000a3a8 	.word	0x2000a3a8
 800f7ec:	2000a38c 	.word	0x2000a38c
 800f7f0:	2000a31a 	.word	0x2000a31a

0800f7f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f7f4:	b510      	push	{r4, lr}
 800f7f6:	4b23      	ldr	r3, [pc, #140]	; (800f884 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f7f8:	681c      	ldr	r4, [r3, #0]
 800f7fa:	b934      	cbnz	r4, 800f80a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800f7fc:	4b22      	ldr	r3, [pc, #136]	; (800f888 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f7fe:	4a23      	ldr	r2, [pc, #140]	; (800f88c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f800:	4823      	ldr	r0, [pc, #140]	; (800f890 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f802:	f240 41ae 	movw	r1, #1198	; 0x4ae
 800f806:	f00b fe4f 	bl	801b4a8 <__assert_func>
 800f80a:	4a22      	ldr	r2, [pc, #136]	; (800f894 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800f80c:	880b      	ldrh	r3, [r1, #0]
 800f80e:	8812      	ldrh	r2, [r2, #0]
 800f810:	4293      	cmp	r3, r2
 800f812:	d211      	bcs.n	800f838 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800f814:	2214      	movs	r2, #20
 800f816:	fb02 4303 	mla	r3, r2, r3, r4
 800f81a:	8a1a      	ldrh	r2, [r3, #16]
 800f81c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800f820:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800f824:	8a5b      	ldrh	r3, [r3, #18]
 800f826:	8004      	strh	r4, [r0, #0]
 800f828:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f82c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800f830:	8041      	strh	r1, [r0, #2]
 800f832:	8082      	strh	r2, [r0, #4]
 800f834:	80c3      	strh	r3, [r0, #6]
 800f836:	e00e      	b.n	800f856 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f838:	4917      	ldr	r1, [pc, #92]	; (800f898 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800f83a:	8809      	ldrh	r1, [r1, #0]
 800f83c:	4411      	add	r1, r2
 800f83e:	428b      	cmp	r3, r1
 800f840:	da0a      	bge.n	800f858 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800f842:	1a9b      	subs	r3, r3, r2
 800f844:	4a15      	ldr	r2, [pc, #84]	; (800f89c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800f846:	6812      	ldr	r2, [r2, #0]
 800f848:	210e      	movs	r1, #14
 800f84a:	fb01 2303 	mla	r3, r1, r3, r2
 800f84e:	681a      	ldr	r2, [r3, #0]
 800f850:	6002      	str	r2, [r0, #0]
 800f852:	685a      	ldr	r2, [r3, #4]
 800f854:	6042      	str	r2, [r0, #4]
 800f856:	bd10      	pop	{r4, pc}
 800f858:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f85c:	4293      	cmp	r3, r2
 800f85e:	d10b      	bne.n	800f878 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800f860:	4b0f      	ldr	r3, [pc, #60]	; (800f8a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800f862:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f866:	4b0f      	ldr	r3, [pc, #60]	; (800f8a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800f868:	8081      	strh	r1, [r0, #4]
 800f86a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f86e:	80c2      	strh	r2, [r0, #6]
 800f870:	2300      	movs	r3, #0
 800f872:	8003      	strh	r3, [r0, #0]
 800f874:	8043      	strh	r3, [r0, #2]
 800f876:	e7ee      	b.n	800f856 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f878:	2300      	movs	r3, #0
 800f87a:	8003      	strh	r3, [r0, #0]
 800f87c:	8043      	strh	r3, [r0, #2]
 800f87e:	8083      	strh	r3, [r0, #4]
 800f880:	e7d8      	b.n	800f834 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800f882:	bf00      	nop
 800f884:	2000a3ac 	.word	0x2000a3ac
 800f888:	0801f11f 	.word	0x0801f11f
 800f88c:	0801f1a1 	.word	0x0801f1a1
 800f890:	0801f0a1 	.word	0x0801f0a1
 800f894:	2000a3a4 	.word	0x2000a3a4
 800f898:	2000a3a8 	.word	0x2000a3a8
 800f89c:	2000a38c 	.word	0x2000a38c
 800f8a0:	2000a318 	.word	0x2000a318
 800f8a4:	2000a31a 	.word	0x2000a31a

0800f8a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800f8a8:	4b18      	ldr	r3, [pc, #96]	; (800f90c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800f8aa:	681b      	ldr	r3, [r3, #0]
 800f8ac:	b34b      	cbz	r3, 800f902 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f8ae:	4a18      	ldr	r2, [pc, #96]	; (800f910 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800f8b0:	8800      	ldrh	r0, [r0, #0]
 800f8b2:	8812      	ldrh	r2, [r2, #0]
 800f8b4:	4290      	cmp	r0, r2
 800f8b6:	d211      	bcs.n	800f8dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800f8b8:	2214      	movs	r2, #20
 800f8ba:	fb02 3300 	mla	r3, r2, r0, r3
 800f8be:	8a1a      	ldrh	r2, [r3, #16]
 800f8c0:	8919      	ldrh	r1, [r3, #8]
 800f8c2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f8c6:	428a      	cmp	r2, r1
 800f8c8:	db1d      	blt.n	800f906 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f8ca:	8a58      	ldrh	r0, [r3, #18]
 800f8cc:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f8d0:	895b      	ldrh	r3, [r3, #10]
 800f8d2:	4298      	cmp	r0, r3
 800f8d4:	bfac      	ite	ge
 800f8d6:	2000      	movge	r0, #0
 800f8d8:	2001      	movlt	r0, #1
 800f8da:	4770      	bx	lr
 800f8dc:	4b0d      	ldr	r3, [pc, #52]	; (800f914 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800f8de:	881b      	ldrh	r3, [r3, #0]
 800f8e0:	4413      	add	r3, r2
 800f8e2:	4298      	cmp	r0, r3
 800f8e4:	da0d      	bge.n	800f902 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f8e6:	4b0c      	ldr	r3, [pc, #48]	; (800f918 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800f8e8:	681b      	ldr	r3, [r3, #0]
 800f8ea:	1a80      	subs	r0, r0, r2
 800f8ec:	220e      	movs	r2, #14
 800f8ee:	fb02 3300 	mla	r3, r2, r0, r3
 800f8f2:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800f8f6:	891a      	ldrh	r2, [r3, #8]
 800f8f8:	4291      	cmp	r1, r2
 800f8fa:	db04      	blt.n	800f906 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f8fc:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800f900:	e7e6      	b.n	800f8d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800f902:	2000      	movs	r0, #0
 800f904:	4770      	bx	lr
 800f906:	2001      	movs	r0, #1
 800f908:	4770      	bx	lr
 800f90a:	bf00      	nop
 800f90c:	2000a3ac 	.word	0x2000a3ac
 800f910:	2000a3a4 	.word	0x2000a3a4
 800f914:	2000a3a8 	.word	0x2000a3a8
 800f918:	2000a38c 	.word	0x2000a38c

0800f91c <_ZNK8touchgfx6Bitmap7getDataEv>:
 800f91c:	b508      	push	{r3, lr}
 800f91e:	4b12      	ldr	r3, [pc, #72]	; (800f968 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800f920:	6819      	ldr	r1, [r3, #0]
 800f922:	b931      	cbnz	r1, 800f932 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800f924:	4b11      	ldr	r3, [pc, #68]	; (800f96c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f926:	4a12      	ldr	r2, [pc, #72]	; (800f970 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800f928:	4812      	ldr	r0, [pc, #72]	; (800f974 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800f92a:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800f92e:	f00b fdbb 	bl	801b4a8 <__assert_func>
 800f932:	8803      	ldrh	r3, [r0, #0]
 800f934:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f938:	4293      	cmp	r3, r2
 800f93a:	d012      	beq.n	800f962 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800f93c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f940:	4293      	cmp	r3, r2
 800f942:	d103      	bne.n	800f94c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800f944:	4b0c      	ldr	r3, [pc, #48]	; (800f978 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800f946:	681b      	ldr	r3, [r3, #0]
 800f948:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800f94a:	bd08      	pop	{r3, pc}
 800f94c:	4a0b      	ldr	r2, [pc, #44]	; (800f97c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800f94e:	6812      	ldr	r2, [r2, #0]
 800f950:	b11a      	cbz	r2, 800f95a <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800f952:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800f956:	2800      	cmp	r0, #0
 800f958:	d1f7      	bne.n	800f94a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f95a:	2214      	movs	r2, #20
 800f95c:	4353      	muls	r3, r2
 800f95e:	58c8      	ldr	r0, [r1, r3]
 800f960:	e7f3      	b.n	800f94a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f962:	2000      	movs	r0, #0
 800f964:	e7f1      	b.n	800f94a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f966:	bf00      	nop
 800f968:	2000a3ac 	.word	0x2000a3ac
 800f96c:	0801f11f 	.word	0x0801f11f
 800f970:	0801f1d7 	.word	0x0801f1d7
 800f974:	0801f0a1 	.word	0x0801f0a1
 800f978:	2000a324 	.word	0x2000a324
 800f97c:	2000a388 	.word	0x2000a388

0800f980 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800f980:	8802      	ldrh	r2, [r0, #0]
 800f982:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800f986:	429a      	cmp	r2, r3
 800f988:	d845      	bhi.n	800fa16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800f98a:	4b24      	ldr	r3, [pc, #144]	; (800fa1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800f98c:	8818      	ldrh	r0, [r3, #0]
 800f98e:	4282      	cmp	r2, r0
 800f990:	d221      	bcs.n	800f9d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800f992:	4b23      	ldr	r3, [pc, #140]	; (800fa20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800f994:	6819      	ldr	r1, [r3, #0]
 800f996:	2314      	movs	r3, #20
 800f998:	fb03 1302 	mla	r3, r3, r2, r1
 800f99c:	6858      	ldr	r0, [r3, #4]
 800f99e:	2800      	cmp	r0, #0
 800f9a0:	d03a      	beq.n	800fa18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800f9a2:	4920      	ldr	r1, [pc, #128]	; (800fa24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800f9a4:	6809      	ldr	r1, [r1, #0]
 800f9a6:	2900      	cmp	r1, #0
 800f9a8:	d036      	beq.n	800fa18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800f9aa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800f9ae:	2900      	cmp	r1, #0
 800f9b0:	d032      	beq.n	800fa18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800f9b2:	891a      	ldrh	r2, [r3, #8]
 800f9b4:	8958      	ldrh	r0, [r3, #10]
 800f9b6:	4350      	muls	r0, r2
 800f9b8:	7c5a      	ldrb	r2, [r3, #17]
 800f9ba:	7cdb      	ldrb	r3, [r3, #19]
 800f9bc:	0952      	lsrs	r2, r2, #5
 800f9be:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800f9c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f9c6:	2b0b      	cmp	r3, #11
 800f9c8:	bf18      	it	ne
 800f9ca:	0040      	lslne	r0, r0, #1
 800f9cc:	3003      	adds	r0, #3
 800f9ce:	f020 0003 	bic.w	r0, r0, #3
 800f9d2:	4408      	add	r0, r1
 800f9d4:	4770      	bx	lr
 800f9d6:	4b14      	ldr	r3, [pc, #80]	; (800fa28 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800f9d8:	881b      	ldrh	r3, [r3, #0]
 800f9da:	4403      	add	r3, r0
 800f9dc:	429a      	cmp	r2, r3
 800f9de:	da1a      	bge.n	800fa16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800f9e0:	4b12      	ldr	r3, [pc, #72]	; (800fa2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800f9e2:	681b      	ldr	r3, [r3, #0]
 800f9e4:	1a10      	subs	r0, r2, r0
 800f9e6:	210e      	movs	r1, #14
 800f9e8:	fb01 3000 	mla	r0, r1, r0, r3
 800f9ec:	7b03      	ldrb	r3, [r0, #12]
 800f9ee:	f003 031f 	and.w	r3, r3, #31
 800f9f2:	2b0b      	cmp	r3, #11
 800f9f4:	d10b      	bne.n	800fa0e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f9f6:	8903      	ldrh	r3, [r0, #8]
 800f9f8:	8940      	ldrh	r0, [r0, #10]
 800f9fa:	4358      	muls	r0, r3
 800f9fc:	4b09      	ldr	r3, [pc, #36]	; (800fa24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800f9fe:	6819      	ldr	r1, [r3, #0]
 800fa00:	3003      	adds	r0, #3
 800fa02:	f020 0303 	bic.w	r3, r0, #3
 800fa06:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fa0a:	4418      	add	r0, r3
 800fa0c:	4770      	bx	lr
 800fa0e:	2b0d      	cmp	r3, #13
 800fa10:	d101      	bne.n	800fa16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fa12:	300d      	adds	r0, #13
 800fa14:	4770      	bx	lr
 800fa16:	2000      	movs	r0, #0
 800fa18:	4770      	bx	lr
 800fa1a:	bf00      	nop
 800fa1c:	2000a3a4 	.word	0x2000a3a4
 800fa20:	2000a3ac 	.word	0x2000a3ac
 800fa24:	2000a388 	.word	0x2000a388
 800fa28:	2000a3a8 	.word	0x2000a3a8
 800fa2c:	2000a38c 	.word	0x2000a38c

0800fa30 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fa30:	b510      	push	{r4, lr}
 800fa32:	4b17      	ldr	r3, [pc, #92]	; (800fa90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800fa34:	6819      	ldr	r1, [r3, #0]
 800fa36:	8803      	ldrh	r3, [r0, #0]
 800fa38:	b1e9      	cbz	r1, 800fa76 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fa3a:	4a16      	ldr	r2, [pc, #88]	; (800fa94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800fa3c:	8812      	ldrh	r2, [r2, #0]
 800fa3e:	429a      	cmp	r2, r3
 800fa40:	d90a      	bls.n	800fa58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800fa42:	2214      	movs	r2, #20
 800fa44:	fb02 1303 	mla	r3, r2, r3, r1
 800fa48:	7c58      	ldrb	r0, [r3, #17]
 800fa4a:	0942      	lsrs	r2, r0, #5
 800fa4c:	7cd8      	ldrb	r0, [r3, #19]
 800fa4e:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fa52:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fa56:	bd10      	pop	{r4, pc}
 800fa58:	490f      	ldr	r1, [pc, #60]	; (800fa98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fa5a:	8809      	ldrh	r1, [r1, #0]
 800fa5c:	4411      	add	r1, r2
 800fa5e:	428b      	cmp	r3, r1
 800fa60:	da09      	bge.n	800fa76 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fa62:	1a9b      	subs	r3, r3, r2
 800fa64:	4a0d      	ldr	r2, [pc, #52]	; (800fa9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fa66:	6812      	ldr	r2, [r2, #0]
 800fa68:	210e      	movs	r1, #14
 800fa6a:	fb01 2303 	mla	r3, r1, r3, r2
 800fa6e:	7b18      	ldrb	r0, [r3, #12]
 800fa70:	f000 001f 	and.w	r0, r0, #31
 800fa74:	e7ef      	b.n	800fa56 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fa76:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa7a:	4293      	cmp	r3, r2
 800fa7c:	d106      	bne.n	800fa8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fa7e:	f7fa f867 	bl	8009b50 <_ZN8touchgfx3HAL3lcdEv>
 800fa82:	6803      	ldr	r3, [r0, #0]
 800fa84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fa88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fa8a:	4718      	bx	r3
 800fa8c:	2000      	movs	r0, #0
 800fa8e:	e7e2      	b.n	800fa56 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fa90:	2000a3ac 	.word	0x2000a3ac
 800fa94:	2000a3a4 	.word	0x2000a3a4
 800fa98:	2000a3a8 	.word	0x2000a3a8
 800fa9c:	2000a38c 	.word	0x2000a38c

0800faa0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800faa0:	2010      	movs	r0, #16
 800faa2:	4770      	bx	lr

0800faa4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800faa4:	2000      	movs	r0, #0
 800faa6:	4770      	bx	lr

0800faa8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800faa8:	2bff      	cmp	r3, #255	; 0xff
 800faaa:	d050      	beq.n	800fb4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800faac:	2a0b      	cmp	r2, #11
 800faae:	d04a      	beq.n	800fb46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fab0:	d80e      	bhi.n	800fad0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fab2:	2a03      	cmp	r2, #3
 800fab4:	d03f      	beq.n	800fb36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fab6:	d804      	bhi.n	800fac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fab8:	2a01      	cmp	r2, #1
 800faba:	d03e      	beq.n	800fb3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fabc:	d93f      	bls.n	800fb3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fabe:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fac0:	4770      	bx	lr
 800fac2:	2a09      	cmp	r2, #9
 800fac4:	d03f      	beq.n	800fb46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fac6:	d83c      	bhi.n	800fb42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fac8:	2a08      	cmp	r2, #8
 800faca:	d03a      	beq.n	800fb42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800facc:	2000      	movs	r0, #0
 800face:	4770      	bx	lr
 800fad0:	2a2f      	cmp	r2, #47	; 0x2f
 800fad2:	d024      	beq.n	800fb1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fad4:	d80d      	bhi.n	800faf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fad6:	2a2d      	cmp	r2, #45	; 0x2d
 800fad8:	d014      	beq.n	800fb04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fada:	d826      	bhi.n	800fb2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fadc:	2a2c      	cmp	r2, #44	; 0x2c
 800fade:	d1f5      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fae0:	684b      	ldr	r3, [r1, #4]
 800fae2:	781b      	ldrb	r3, [r3, #0]
 800fae4:	2b01      	cmp	r3, #1
 800fae6:	d018      	beq.n	800fb1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fae8:	d323      	bcc.n	800fb32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800faea:	2b02      	cmp	r3, #2
 800faec:	d1ee      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800faee:	6880      	ldr	r0, [r0, #8]
 800faf0:	4770      	bx	lr
 800faf2:	2a31      	cmp	r2, #49	; 0x31
 800faf4:	d004      	beq.n	800fb00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800faf6:	d328      	bcc.n	800fb4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800faf8:	2a32      	cmp	r2, #50	; 0x32
 800fafa:	d026      	beq.n	800fb4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fafc:	2a33      	cmp	r2, #51	; 0x33
 800fafe:	d1e5      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fb00:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fb02:	4770      	bx	lr
 800fb04:	684b      	ldr	r3, [r1, #4]
 800fb06:	781b      	ldrb	r3, [r3, #0]
 800fb08:	2b01      	cmp	r3, #1
 800fb0a:	d004      	beq.n	800fb16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fb0c:	d30b      	bcc.n	800fb26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fb0e:	2b02      	cmp	r3, #2
 800fb10:	d1dc      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fb12:	6900      	ldr	r0, [r0, #16]
 800fb14:	4770      	bx	lr
 800fb16:	6a00      	ldr	r0, [r0, #32]
 800fb18:	4770      	bx	lr
 800fb1a:	6980      	ldr	r0, [r0, #24]
 800fb1c:	4770      	bx	lr
 800fb1e:	684b      	ldr	r3, [r1, #4]
 800fb20:	781b      	ldrb	r3, [r3, #0]
 800fb22:	2b00      	cmp	r3, #0
 800fb24:	d1d2      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fb26:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fb28:	4770      	bx	lr
 800fb2a:	684b      	ldr	r3, [r1, #4]
 800fb2c:	781b      	ldrb	r3, [r3, #0]
 800fb2e:	2b00      	cmp	r3, #0
 800fb30:	d1cc      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fb32:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fb34:	4770      	bx	lr
 800fb36:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fb38:	4770      	bx	lr
 800fb3a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fb3c:	4770      	bx	lr
 800fb3e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fb40:	4770      	bx	lr
 800fb42:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fb44:	4770      	bx	lr
 800fb46:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fb48:	4770      	bx	lr
 800fb4a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fb4c:	4770      	bx	lr
 800fb4e:	2a0b      	cmp	r2, #11
 800fb50:	d049      	beq.n	800fbe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fb52:	d80e      	bhi.n	800fb72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fb54:	2a03      	cmp	r2, #3
 800fb56:	d040      	beq.n	800fbda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fb58:	d804      	bhi.n	800fb64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fb5a:	2a01      	cmp	r2, #1
 800fb5c:	d03f      	beq.n	800fbde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fb5e:	d940      	bls.n	800fbe2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fb60:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fb62:	4770      	bx	lr
 800fb64:	2a09      	cmp	r2, #9
 800fb66:	d03e      	beq.n	800fbe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fb68:	d801      	bhi.n	800fb6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fb6a:	2a08      	cmp	r2, #8
 800fb6c:	d1ae      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fb6e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fb70:	4770      	bx	lr
 800fb72:	2a2f      	cmp	r2, #47	; 0x2f
 800fb74:	d024      	beq.n	800fbc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fb76:	d80d      	bhi.n	800fb94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fb78:	2a2d      	cmp	r2, #45	; 0x2d
 800fb7a:	d014      	beq.n	800fba6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fb7c:	d826      	bhi.n	800fbcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fb7e:	2a2c      	cmp	r2, #44	; 0x2c
 800fb80:	d1a4      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fb82:	684b      	ldr	r3, [r1, #4]
 800fb84:	781b      	ldrb	r3, [r3, #0]
 800fb86:	2b01      	cmp	r3, #1
 800fb88:	d018      	beq.n	800fbbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fb8a:	d324      	bcc.n	800fbd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fb8c:	2b02      	cmp	r3, #2
 800fb8e:	d19d      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fb90:	68c0      	ldr	r0, [r0, #12]
 800fb92:	4770      	bx	lr
 800fb94:	2a31      	cmp	r2, #49	; 0x31
 800fb96:	d004      	beq.n	800fba2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fb98:	d327      	bcc.n	800fbea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fb9a:	2a32      	cmp	r2, #50	; 0x32
 800fb9c:	d025      	beq.n	800fbea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fb9e:	2a33      	cmp	r2, #51	; 0x33
 800fba0:	d194      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fba2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fba4:	4770      	bx	lr
 800fba6:	684b      	ldr	r3, [r1, #4]
 800fba8:	781b      	ldrb	r3, [r3, #0]
 800fbaa:	2b01      	cmp	r3, #1
 800fbac:	d004      	beq.n	800fbb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fbae:	d30b      	bcc.n	800fbc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fbb0:	2b02      	cmp	r3, #2
 800fbb2:	d18b      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbb4:	6940      	ldr	r0, [r0, #20]
 800fbb6:	4770      	bx	lr
 800fbb8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fbba:	4770      	bx	lr
 800fbbc:	69c0      	ldr	r0, [r0, #28]
 800fbbe:	4770      	bx	lr
 800fbc0:	684b      	ldr	r3, [r1, #4]
 800fbc2:	781b      	ldrb	r3, [r3, #0]
 800fbc4:	2b00      	cmp	r3, #0
 800fbc6:	d181      	bne.n	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbc8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fbca:	4770      	bx	lr
 800fbcc:	684b      	ldr	r3, [r1, #4]
 800fbce:	781b      	ldrb	r3, [r3, #0]
 800fbd0:	2b00      	cmp	r3, #0
 800fbd2:	f47f af7b 	bne.w	800facc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbd6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fbd8:	4770      	bx	lr
 800fbda:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fbdc:	4770      	bx	lr
 800fbde:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fbe0:	4770      	bx	lr
 800fbe2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fbe4:	4770      	bx	lr
 800fbe6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fbe8:	4770      	bx	lr
 800fbea:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800fbec:	4770      	bx	lr

0800fbee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fbee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbf2:	b087      	sub	sp, #28
 800fbf4:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fbf6:	9205      	str	r2, [sp, #20]
 800fbf8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fbfc:	9202      	str	r2, [sp, #8]
 800fbfe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fc02:	9101      	str	r1, [sp, #4]
 800fc04:	6841      	ldr	r1, [r0, #4]
 800fc06:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800fc0a:	fb01 2404 	mla	r4, r1, r4, r2
 800fc0e:	6802      	ldr	r2, [r0, #0]
 800fc10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fc14:	f8de 2000 	ldr.w	r2, [lr]
 800fc18:	9203      	str	r2, [sp, #12]
 800fc1a:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fc1e:	3204      	adds	r2, #4
 800fc20:	9204      	str	r2, [sp, #16]
 800fc22:	9a02      	ldr	r2, [sp, #8]
 800fc24:	43d6      	mvns	r6, r2
 800fc26:	b2f6      	uxtb	r6, r6
 800fc28:	9a01      	ldr	r2, [sp, #4]
 800fc2a:	2a00      	cmp	r2, #0
 800fc2c:	dc03      	bgt.n	800fc36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800fc2e:	9a05      	ldr	r2, [sp, #20]
 800fc30:	2a00      	cmp	r2, #0
 800fc32:	f340 8129 	ble.w	800fe88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fc36:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fc38:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800fc3c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800fc40:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fc44:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fc46:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fc4a:	2b00      	cmp	r3, #0
 800fc4c:	dd0e      	ble.n	800fc6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800fc4e:	1408      	asrs	r0, r1, #16
 800fc50:	d405      	bmi.n	800fc5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fc52:	4560      	cmp	r0, ip
 800fc54:	da03      	bge.n	800fc5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fc56:	1410      	asrs	r0, r2, #16
 800fc58:	d401      	bmi.n	800fc5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fc5a:	42b8      	cmp	r0, r7
 800fc5c:	db07      	blt.n	800fc6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800fc5e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fc60:	4401      	add	r1, r0
 800fc62:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fc64:	3b01      	subs	r3, #1
 800fc66:	4402      	add	r2, r0
 800fc68:	3402      	adds	r4, #2
 800fc6a:	e7ee      	b.n	800fc4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800fc6c:	d071      	beq.n	800fd52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fc6e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fc70:	1e58      	subs	r0, r3, #1
 800fc72:	fb05 1500 	mla	r5, r5, r0, r1
 800fc76:	142d      	asrs	r5, r5, #16
 800fc78:	d45f      	bmi.n	800fd3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fc7a:	4565      	cmp	r5, ip
 800fc7c:	da5d      	bge.n	800fd3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fc7e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fc80:	fb05 2000 	mla	r0, r5, r0, r2
 800fc84:	1400      	asrs	r0, r0, #16
 800fc86:	d458      	bmi.n	800fd3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fc88:	42b8      	cmp	r0, r7
 800fc8a:	da56      	bge.n	800fd3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fc8c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800fc90:	4699      	mov	r9, r3
 800fc92:	46a2      	mov	sl, r4
 800fc94:	f1b9 0f00 	cmp.w	r9, #0
 800fc98:	dd57      	ble.n	800fd4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800fc9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800fc9e:	9803      	ldr	r0, [sp, #12]
 800fca0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800fca4:	140d      	asrs	r5, r1, #16
 800fca6:	fb07 000c 	mla	r0, r7, ip, r0
 800fcaa:	f109 39ff 	add.w	r9, r9, #4294967295
 800fcae:	5d40      	ldrb	r0, [r0, r5]
 800fcb0:	9d04      	ldr	r5, [sp, #16]
 800fcb2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800fcb6:	f8ba 5000 	ldrh.w	r5, [sl]
 800fcba:	122f      	asrs	r7, r5, #8
 800fcbc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fcc0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fcc4:	fb17 f706 	smulbb	r7, r7, r6
 800fcc8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800fccc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fcd0:	00ed      	lsls	r5, r5, #3
 800fcd2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800fcd6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800fcda:	10c7      	asrs	r7, r0, #3
 800fcdc:	b2ed      	uxtb	r5, r5
 800fcde:	00c0      	lsls	r0, r0, #3
 800fce0:	fb18 f806 	smulbb	r8, r8, r6
 800fce4:	fb15 f506 	smulbb	r5, r5, r6
 800fce8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fcec:	b2c0      	uxtb	r0, r0
 800fcee:	fa1f fc8c 	uxth.w	ip, ip
 800fcf2:	fb07 870b 	mla	r7, r7, fp, r8
 800fcf6:	fb00 500b 	mla	r0, r0, fp, r5
 800fcfa:	b280      	uxth	r0, r0
 800fcfc:	b2bf      	uxth	r7, r7
 800fcfe:	f10c 0501 	add.w	r5, ip, #1
 800fd02:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fd06:	f107 0801 	add.w	r8, r7, #1
 800fd0a:	1c45      	adds	r5, r0, #1
 800fd0c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fd10:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800fd14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fd16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fd1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fd1e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800fd22:	ea45 0c0c 	orr.w	ip, r5, ip
 800fd26:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800fd2a:	4401      	add	r1, r0
 800fd2c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fd2e:	ea4c 0c08 	orr.w	ip, ip, r8
 800fd32:	f82a cb02 	strh.w	ip, [sl], #2
 800fd36:	4402      	add	r2, r0
 800fd38:	e7ac      	b.n	800fc94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800fd3a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800fd3e:	f04f 0800 	mov.w	r8, #0
 800fd42:	eb03 0008 	add.w	r0, r3, r8
 800fd46:	2800      	cmp	r0, #0
 800fd48:	dc41      	bgt.n	800fdce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fd4a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fd4e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fd52:	9b01      	ldr	r3, [sp, #4]
 800fd54:	2b00      	cmp	r3, #0
 800fd56:	f340 8097 	ble.w	800fe88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fd5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fd5e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fd62:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fd66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fd68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fd6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fd70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fd74:	eef0 6a62 	vmov.f32	s13, s5
 800fd78:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fd7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fd80:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fd84:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800fd88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fd8c:	eef0 6a43 	vmov.f32	s13, s6
 800fd90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fd94:	ee12 2a90 	vmov	r2, s5
 800fd98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fd9c:	fb92 f3f3 	sdiv	r3, r2, r3
 800fda0:	ee13 2a10 	vmov	r2, s6
 800fda4:	9313      	str	r3, [sp, #76]	; 0x4c
 800fda6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fda8:	fb92 f3f3 	sdiv	r3, r2, r3
 800fdac:	9314      	str	r3, [sp, #80]	; 0x50
 800fdae:	9b01      	ldr	r3, [sp, #4]
 800fdb0:	9a05      	ldr	r2, [sp, #20]
 800fdb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fdb6:	3b01      	subs	r3, #1
 800fdb8:	9301      	str	r3, [sp, #4]
 800fdba:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800fdbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fdc0:	eeb0 3a67 	vmov.f32	s6, s15
 800fdc4:	bf08      	it	eq
 800fdc6:	4613      	moveq	r3, r2
 800fdc8:	eef0 2a47 	vmov.f32	s5, s14
 800fdcc:	e72c      	b.n	800fc28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800fdce:	140f      	asrs	r7, r1, #16
 800fdd0:	d453      	bmi.n	800fe7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fdd2:	f8de 5008 	ldr.w	r5, [lr, #8]
 800fdd6:	42bd      	cmp	r5, r7
 800fdd8:	dd4f      	ble.n	800fe7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fdda:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800fdde:	d44c      	bmi.n	800fe7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fde0:	f8de 000c 	ldr.w	r0, [lr, #12]
 800fde4:	4560      	cmp	r0, ip
 800fde6:	dd48      	ble.n	800fe7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fde8:	9803      	ldr	r0, [sp, #12]
 800fdea:	b22d      	sxth	r5, r5
 800fdec:	fb0c 0505 	mla	r5, ip, r5, r0
 800fdf0:	5de8      	ldrb	r0, [r5, r7]
 800fdf2:	9d04      	ldr	r5, [sp, #16]
 800fdf4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800fdf8:	f06f 0501 	mvn.w	r5, #1
 800fdfc:	fb05 fb08 	mul.w	fp, r5, r8
 800fe00:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fe04:	f834 500b 	ldrh.w	r5, [r4, fp]
 800fe08:	122f      	asrs	r7, r5, #8
 800fe0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fe0e:	fb17 f706 	smulbb	r7, r7, r6
 800fe12:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800fe16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fe1a:	00ed      	lsls	r5, r5, #3
 800fe1c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800fe20:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800fe24:	10c7      	asrs	r7, r0, #3
 800fe26:	b2ed      	uxtb	r5, r5
 800fe28:	00c0      	lsls	r0, r0, #3
 800fe2a:	fb19 f906 	smulbb	r9, r9, r6
 800fe2e:	fb15 f506 	smulbb	r5, r5, r6
 800fe32:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fe36:	b2c0      	uxtb	r0, r0
 800fe38:	fa1f fc8c 	uxth.w	ip, ip
 800fe3c:	fb07 970a 	mla	r7, r7, sl, r9
 800fe40:	fb00 500a 	mla	r0, r0, sl, r5
 800fe44:	b2bf      	uxth	r7, r7
 800fe46:	b280      	uxth	r0, r0
 800fe48:	f10c 0501 	add.w	r5, ip, #1
 800fe4c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fe50:	f107 0901 	add.w	r9, r7, #1
 800fe54:	1c45      	adds	r5, r0, #1
 800fe56:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fe5a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800fe5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fe62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fe66:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800fe6a:	ea45 0c0c 	orr.w	ip, r5, ip
 800fe6e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800fe72:	ea4c 0c09 	orr.w	ip, ip, r9
 800fe76:	f824 c00b 	strh.w	ip, [r4, fp]
 800fe7a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fe7c:	4401      	add	r1, r0
 800fe7e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fe80:	f108 38ff 	add.w	r8, r8, #4294967295
 800fe84:	4402      	add	r2, r0
 800fe86:	e75c      	b.n	800fd42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800fe88:	b007      	add	sp, #28
 800fe8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fe8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fe8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe92:	b085      	sub	sp, #20
 800fe94:	4693      	mov	fp, r2
 800fe96:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fe98:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800fe9a:	6870      	ldr	r0, [r6, #4]
 800fe9c:	9100      	str	r1, [sp, #0]
 800fe9e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800fea2:	fb00 2404 	mla	r4, r0, r4, r2
 800fea6:	6832      	ldr	r2, [r6, #0]
 800fea8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800feac:	682a      	ldr	r2, [r5, #0]
 800feae:	9201      	str	r2, [sp, #4]
 800feb0:	686a      	ldr	r2, [r5, #4]
 800feb2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800feb6:	3204      	adds	r2, #4
 800feb8:	9202      	str	r2, [sp, #8]
 800feba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800febe:	9a00      	ldr	r2, [sp, #0]
 800fec0:	2a00      	cmp	r2, #0
 800fec2:	dc03      	bgt.n	800fecc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800fec4:	f1bb 0f00 	cmp.w	fp, #0
 800fec8:	f340 80a0 	ble.w	801000c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800fecc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fece:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800fed2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800fed6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800feda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fedc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fee0:	2b00      	cmp	r3, #0
 800fee2:	dd0c      	ble.n	800fefe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fee4:	1406      	asrs	r6, r0, #16
 800fee6:	d405      	bmi.n	800fef4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fee8:	454e      	cmp	r6, r9
 800feea:	da03      	bge.n	800fef4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800feec:	1416      	asrs	r6, r2, #16
 800feee:	d401      	bmi.n	800fef4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fef0:	4546      	cmp	r6, r8
 800fef2:	db05      	blt.n	800ff00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800fef4:	4470      	add	r0, lr
 800fef6:	4462      	add	r2, ip
 800fef8:	3b01      	subs	r3, #1
 800fefa:	3402      	adds	r4, #2
 800fefc:	e7f0      	b.n	800fee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800fefe:	d00f      	beq.n	800ff20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800ff00:	1e5e      	subs	r6, r3, #1
 800ff02:	fb0e 0706 	mla	r7, lr, r6, r0
 800ff06:	143f      	asrs	r7, r7, #16
 800ff08:	d541      	bpl.n	800ff8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800ff0a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800ff0e:	4698      	mov	r8, r3
 800ff10:	9603      	str	r6, [sp, #12]
 800ff12:	f1b8 0f00 	cmp.w	r8, #0
 800ff16:	dc59      	bgt.n	800ffcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ff18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ff1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ff20:	9b00      	ldr	r3, [sp, #0]
 800ff22:	2b00      	cmp	r3, #0
 800ff24:	dd72      	ble.n	801000c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800ff26:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ff2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ff2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ff32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff34:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ff38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ff3c:	eeb0 6a62 	vmov.f32	s12, s5
 800ff40:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ff44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ff48:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ff4c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800ff50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ff54:	eeb0 6a43 	vmov.f32	s12, s6
 800ff58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ff5c:	ee12 2a90 	vmov	r2, s5
 800ff60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ff64:	fb92 fef3 	sdiv	lr, r2, r3
 800ff68:	ee13 2a10 	vmov	r2, s6
 800ff6c:	fb92 fcf3 	sdiv	ip, r2, r3
 800ff70:	9b00      	ldr	r3, [sp, #0]
 800ff72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ff76:	3b01      	subs	r3, #1
 800ff78:	9300      	str	r3, [sp, #0]
 800ff7a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800ff7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff80:	eeb0 3a67 	vmov.f32	s6, s15
 800ff84:	bf08      	it	eq
 800ff86:	465b      	moveq	r3, fp
 800ff88:	eef0 2a47 	vmov.f32	s5, s14
 800ff8c:	e797      	b.n	800febe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800ff8e:	454f      	cmp	r7, r9
 800ff90:	dabb      	bge.n	800ff0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800ff92:	fb0c 2606 	mla	r6, ip, r6, r2
 800ff96:	1436      	asrs	r6, r6, #16
 800ff98:	d4b7      	bmi.n	800ff0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800ff9a:	4546      	cmp	r6, r8
 800ff9c:	dab5      	bge.n	800ff0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800ff9e:	461e      	mov	r6, r3
 800ffa0:	46a0      	mov	r8, r4
 800ffa2:	2e00      	cmp	r6, #0
 800ffa4:	ddb8      	ble.n	800ff18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800ffa6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800ffaa:	9901      	ldr	r1, [sp, #4]
 800ffac:	1417      	asrs	r7, r2, #16
 800ffae:	ea4f 4920 	mov.w	r9, r0, asr #16
 800ffb2:	fb0a 1707 	mla	r7, sl, r7, r1
 800ffb6:	9902      	ldr	r1, [sp, #8]
 800ffb8:	f817 7009 	ldrb.w	r7, [r7, r9]
 800ffbc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800ffc0:	f828 7b02 	strh.w	r7, [r8], #2
 800ffc4:	4470      	add	r0, lr
 800ffc6:	4462      	add	r2, ip
 800ffc8:	3e01      	subs	r6, #1
 800ffca:	e7ea      	b.n	800ffa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 800ffcc:	ea5f 4920 	movs.w	r9, r0, asr #16
 800ffd0:	d417      	bmi.n	8010002 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800ffd2:	68ae      	ldr	r6, [r5, #8]
 800ffd4:	454e      	cmp	r6, r9
 800ffd6:	dd14      	ble.n	8010002 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800ffd8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800ffdc:	d411      	bmi.n	8010002 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800ffde:	68ef      	ldr	r7, [r5, #12]
 800ffe0:	4557      	cmp	r7, sl
 800ffe2:	dd0e      	ble.n	8010002 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800ffe4:	9f01      	ldr	r7, [sp, #4]
 800ffe6:	b236      	sxth	r6, r6
 800ffe8:	fb0a 7606 	mla	r6, sl, r6, r7
 800ffec:	9f02      	ldr	r7, [sp, #8]
 800ffee:	f816 6009 	ldrb.w	r6, [r6, r9]
 800fff2:	f06f 0101 	mvn.w	r1, #1
 800fff6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800fffa:	fb01 f608 	mul.w	r6, r1, r8
 800fffe:	9903      	ldr	r1, [sp, #12]
 8010000:	538f      	strh	r7, [r1, r6]
 8010002:	4470      	add	r0, lr
 8010004:	4462      	add	r2, ip
 8010006:	f108 38ff 	add.w	r8, r8, #4294967295
 801000a:	e782      	b.n	800ff12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801000c:	b005      	add	sp, #20
 801000e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010012 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010012:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010016:	b087      	sub	sp, #28
 8010018:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801001a:	9205      	str	r2, [sp, #20]
 801001c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010020:	9203      	str	r2, [sp, #12]
 8010022:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010026:	9102      	str	r1, [sp, #8]
 8010028:	6861      	ldr	r1, [r4, #4]
 801002a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801002e:	fb01 2000 	mla	r0, r1, r0, r2
 8010032:	6822      	ldr	r2, [r4, #0]
 8010034:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8010038:	9200      	str	r2, [sp, #0]
 801003a:	f8dc 2000 	ldr.w	r2, [ip]
 801003e:	9204      	str	r2, [sp, #16]
 8010040:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010044:	3204      	adds	r2, #4
 8010046:	9201      	str	r2, [sp, #4]
 8010048:	9a03      	ldr	r2, [sp, #12]
 801004a:	43d5      	mvns	r5, r2
 801004c:	b2ed      	uxtb	r5, r5
 801004e:	9a02      	ldr	r2, [sp, #8]
 8010050:	2a00      	cmp	r2, #0
 8010052:	dc03      	bgt.n	801005c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8010054:	9a05      	ldr	r2, [sp, #20]
 8010056:	2a00      	cmp	r2, #0
 8010058:	f340 812c 	ble.w	80102b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801005c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801005e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8010062:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8010066:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801006a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801006c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010070:	2b00      	cmp	r3, #0
 8010072:	dd10      	ble.n	8010096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010074:	140c      	asrs	r4, r1, #16
 8010076:	d405      	bmi.n	8010084 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010078:	4574      	cmp	r4, lr
 801007a:	da03      	bge.n	8010084 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801007c:	1414      	asrs	r4, r2, #16
 801007e:	d401      	bmi.n	8010084 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010080:	42bc      	cmp	r4, r7
 8010082:	db09      	blt.n	8010098 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8010084:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010086:	9800      	ldr	r0, [sp, #0]
 8010088:	4421      	add	r1, r4
 801008a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801008c:	3002      	adds	r0, #2
 801008e:	4422      	add	r2, r4
 8010090:	3b01      	subs	r3, #1
 8010092:	9000      	str	r0, [sp, #0]
 8010094:	e7ec      	b.n	8010070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8010096:	d071      	beq.n	801017c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010098:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801009a:	1e5c      	subs	r4, r3, #1
 801009c:	fb06 1604 	mla	r6, r6, r4, r1
 80100a0:	1436      	asrs	r6, r6, #16
 80100a2:	d45d      	bmi.n	8010160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80100a4:	4576      	cmp	r6, lr
 80100a6:	da5b      	bge.n	8010160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80100a8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80100aa:	fb06 2404 	mla	r4, r6, r4, r2
 80100ae:	1424      	asrs	r4, r4, #16
 80100b0:	d456      	bmi.n	8010160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80100b2:	42bc      	cmp	r4, r7
 80100b4:	da54      	bge.n	8010160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80100b6:	f8dd 9000 	ldr.w	r9, [sp]
 80100ba:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80100be:	4698      	mov	r8, r3
 80100c0:	f1b8 0f00 	cmp.w	r8, #0
 80100c4:	dd54      	ble.n	8010170 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80100c6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80100ca:	9804      	ldr	r0, [sp, #16]
 80100cc:	1414      	asrs	r4, r2, #16
 80100ce:	fb07 0404 	mla	r4, r7, r4, r0
 80100d2:	140e      	asrs	r6, r1, #16
 80100d4:	9801      	ldr	r0, [sp, #4]
 80100d6:	f814 e006 	ldrb.w	lr, [r4, r6]
 80100da:	f8b9 4000 	ldrh.w	r4, [r9]
 80100de:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80100e2:	eb00 0b0e 	add.w	fp, r0, lr
 80100e6:	1227      	asrs	r7, r4, #8
 80100e8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80100ec:	f89b b001 	ldrb.w	fp, [fp, #1]
 80100f0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80100f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80100f6:	fb16 f60a 	smulbb	r6, r6, sl
 80100fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80100fe:	fb07 6705 	mla	r7, r7, r5, r6
 8010102:	10e6      	asrs	r6, r4, #3
 8010104:	00e4      	lsls	r4, r4, #3
 8010106:	b2e4      	uxtb	r4, r4
 8010108:	fb1b fb0a 	smulbb	fp, fp, sl
 801010c:	fb14 f405 	smulbb	r4, r4, r5
 8010110:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010114:	b2bf      	uxth	r7, r7
 8010116:	fb06 b605 	mla	r6, r6, r5, fp
 801011a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801011e:	b2b6      	uxth	r6, r6
 8010120:	fa1f fe8e 	uxth.w	lr, lr
 8010124:	1c7c      	adds	r4, r7, #1
 8010126:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801012a:	f106 0b01 	add.w	fp, r6, #1
 801012e:	f10e 0401 	add.w	r4, lr, #1
 8010132:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8010136:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801013a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801013e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010142:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010146:	4327      	orrs	r7, r4
 8010148:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801014c:	4401      	add	r1, r0
 801014e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010150:	ea47 070b 	orr.w	r7, r7, fp
 8010154:	f829 7b02 	strh.w	r7, [r9], #2
 8010158:	4402      	add	r2, r0
 801015a:	f108 38ff 	add.w	r8, r8, #4294967295
 801015e:	e7af      	b.n	80100c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010160:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8010164:	f04f 0e00 	mov.w	lr, #0
 8010168:	eb03 040e 	add.w	r4, r3, lr
 801016c:	2c00      	cmp	r4, #0
 801016e:	dc43      	bgt.n	80101f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8010170:	9a00      	ldr	r2, [sp, #0]
 8010172:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010176:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801017a:	9300      	str	r3, [sp, #0]
 801017c:	9b02      	ldr	r3, [sp, #8]
 801017e:	2b00      	cmp	r3, #0
 8010180:	f340 8098 	ble.w	80102b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010184:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010188:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801018c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010190:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010192:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010196:	ee31 1a05 	vadd.f32	s2, s2, s10
 801019a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801019e:	eef0 6a62 	vmov.f32	s13, s5
 80101a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80101a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80101aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80101ae:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80101b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80101b6:	eef0 6a43 	vmov.f32	s13, s6
 80101ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80101be:	ee12 2a90 	vmov	r2, s5
 80101c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80101c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80101ca:	ee13 2a10 	vmov	r2, s6
 80101ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80101d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80101d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80101d6:	9314      	str	r3, [sp, #80]	; 0x50
 80101d8:	9b02      	ldr	r3, [sp, #8]
 80101da:	9a05      	ldr	r2, [sp, #20]
 80101dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80101e0:	3b01      	subs	r3, #1
 80101e2:	9302      	str	r3, [sp, #8]
 80101e4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80101e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80101ea:	eeb0 3a67 	vmov.f32	s6, s15
 80101ee:	bf08      	it	eq
 80101f0:	4613      	moveq	r3, r2
 80101f2:	eef0 2a47 	vmov.f32	s5, s14
 80101f6:	e72a      	b.n	801004e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80101f8:	140f      	asrs	r7, r1, #16
 80101fa:	d454      	bmi.n	80102a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80101fc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010200:	42be      	cmp	r6, r7
 8010202:	dd50      	ble.n	80102a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010204:	ea5f 4822 	movs.w	r8, r2, asr #16
 8010208:	d44d      	bmi.n	80102a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801020a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801020e:	4544      	cmp	r4, r8
 8010210:	dd49      	ble.n	80102a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010212:	9c04      	ldr	r4, [sp, #16]
 8010214:	b236      	sxth	r6, r6
 8010216:	fb08 4606 	mla	r6, r8, r6, r4
 801021a:	f06f 0001 	mvn.w	r0, #1
 801021e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8010222:	9c01      	ldr	r4, [sp, #4]
 8010224:	fb00 fa0e 	mul.w	sl, r0, lr
 8010228:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801022c:	9800      	ldr	r0, [sp, #0]
 801022e:	eb04 0b08 	add.w	fp, r4, r8
 8010232:	f830 400a 	ldrh.w	r4, [r0, sl]
 8010236:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801023a:	9801      	ldr	r0, [sp, #4]
 801023c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010240:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010244:	9800      	ldr	r0, [sp, #0]
 8010246:	1227      	asrs	r7, r4, #8
 8010248:	fb16 f609 	smulbb	r6, r6, r9
 801024c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010250:	fb07 6705 	mla	r7, r7, r5, r6
 8010254:	10e6      	asrs	r6, r4, #3
 8010256:	00e4      	lsls	r4, r4, #3
 8010258:	b2e4      	uxtb	r4, r4
 801025a:	fb1b fb09 	smulbb	fp, fp, r9
 801025e:	fb14 f405 	smulbb	r4, r4, r5
 8010262:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010266:	b2bf      	uxth	r7, r7
 8010268:	fb06 b605 	mla	r6, r6, r5, fp
 801026c:	fb08 4809 	mla	r8, r8, r9, r4
 8010270:	b2b6      	uxth	r6, r6
 8010272:	fa1f f888 	uxth.w	r8, r8
 8010276:	1c7c      	adds	r4, r7, #1
 8010278:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801027c:	f106 0b01 	add.w	fp, r6, #1
 8010280:	f108 0401 	add.w	r4, r8, #1
 8010284:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010288:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801028c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010290:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010294:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010298:	4327      	orrs	r7, r4
 801029a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801029e:	ea47 070b 	orr.w	r7, r7, fp
 80102a2:	f820 700a 	strh.w	r7, [r0, sl]
 80102a6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80102a8:	4401      	add	r1, r0
 80102aa:	9814      	ldr	r0, [sp, #80]	; 0x50
 80102ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80102b0:	4402      	add	r2, r0
 80102b2:	e759      	b.n	8010168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80102b4:	b007      	add	sp, #28
 80102b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080102bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80102bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102c0:	b085      	sub	sp, #20
 80102c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80102c6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80102c8:	9203      	str	r2, [sp, #12]
 80102ca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80102ce:	6870      	ldr	r0, [r6, #4]
 80102d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80102d2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80102d6:	686f      	ldr	r7, [r5, #4]
 80102d8:	9101      	str	r1, [sp, #4]
 80102da:	fb00 2404 	mla	r4, r0, r4, r2
 80102de:	6832      	ldr	r2, [r6, #0]
 80102e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80102e4:	682a      	ldr	r2, [r5, #0]
 80102e6:	9202      	str	r2, [sp, #8]
 80102e8:	3704      	adds	r7, #4
 80102ea:	9a01      	ldr	r2, [sp, #4]
 80102ec:	2a00      	cmp	r2, #0
 80102ee:	dc03      	bgt.n	80102f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80102f0:	9a03      	ldr	r2, [sp, #12]
 80102f2:	2a00      	cmp	r2, #0
 80102f4:	f340 80cc 	ble.w	8010490 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80102f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80102fa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80102fe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010302:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010306:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010308:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801030c:	2b00      	cmp	r3, #0
 801030e:	dd0d      	ble.n	801032c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010310:	1406      	asrs	r6, r0, #16
 8010312:	d405      	bmi.n	8010320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010314:	454e      	cmp	r6, r9
 8010316:	da03      	bge.n	8010320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010318:	1416      	asrs	r6, r2, #16
 801031a:	d401      	bmi.n	8010320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801031c:	4546      	cmp	r6, r8
 801031e:	db06      	blt.n	801032e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010320:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8010322:	4460      	add	r0, ip
 8010324:	4432      	add	r2, r6
 8010326:	3b01      	subs	r3, #1
 8010328:	3402      	adds	r4, #2
 801032a:	e7ef      	b.n	801030c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801032c:	d00f      	beq.n	801034e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801032e:	1e5e      	subs	r6, r3, #1
 8010330:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010334:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010338:	d543      	bpl.n	80103c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801033a:	4698      	mov	r8, r3
 801033c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010340:	f1b8 0f00 	cmp.w	r8, #0
 8010344:	dc71      	bgt.n	801042a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010346:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801034a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801034e:	9b01      	ldr	r3, [sp, #4]
 8010350:	2b00      	cmp	r3, #0
 8010352:	f340 809d 	ble.w	8010490 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010356:	ee30 0a04 	vadd.f32	s0, s0, s8
 801035a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801035e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010362:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010364:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010368:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801036c:	eeb0 6a62 	vmov.f32	s12, s5
 8010370:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010374:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010378:	ee77 2a62 	vsub.f32	s5, s14, s5
 801037c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010380:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010384:	eeb0 6a43 	vmov.f32	s12, s6
 8010388:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801038c:	ee12 2a90 	vmov	r2, s5
 8010390:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010394:	fb92 fcf3 	sdiv	ip, r2, r3
 8010398:	ee13 2a10 	vmov	r2, s6
 801039c:	fb92 f3f3 	sdiv	r3, r2, r3
 80103a0:	9312      	str	r3, [sp, #72]	; 0x48
 80103a2:	9b01      	ldr	r3, [sp, #4]
 80103a4:	9a03      	ldr	r2, [sp, #12]
 80103a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80103aa:	3b01      	subs	r3, #1
 80103ac:	9301      	str	r3, [sp, #4]
 80103ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80103b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103b4:	eeb0 3a67 	vmov.f32	s6, s15
 80103b8:	bf08      	it	eq
 80103ba:	4613      	moveq	r3, r2
 80103bc:	eef0 2a47 	vmov.f32	s5, s14
 80103c0:	e793      	b.n	80102ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80103c2:	45ce      	cmp	lr, r9
 80103c4:	dab9      	bge.n	801033a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80103c6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80103c8:	fb01 2606 	mla	r6, r1, r6, r2
 80103cc:	1436      	asrs	r6, r6, #16
 80103ce:	d4b4      	bmi.n	801033a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80103d0:	4546      	cmp	r6, r8
 80103d2:	dab2      	bge.n	801033a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80103d4:	4698      	mov	r8, r3
 80103d6:	46a2      	mov	sl, r4
 80103d8:	f1b8 0f00 	cmp.w	r8, #0
 80103dc:	ddb3      	ble.n	8010346 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80103de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80103e2:	9902      	ldr	r1, [sp, #8]
 80103e4:	1416      	asrs	r6, r2, #16
 80103e6:	fb09 1606 	mla	r6, r9, r6, r1
 80103ea:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80103ee:	492a      	ldr	r1, [pc, #168]	; (8010498 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80103f0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80103f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80103f8:	eb07 0b0e 	add.w	fp, r7, lr
 80103fc:	4460      	add	r0, ip
 80103fe:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8010402:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010406:	00f6      	lsls	r6, r6, #3
 8010408:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801040c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010410:	ea49 0606 	orr.w	r6, r9, r6
 8010414:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010418:	9912      	ldr	r1, [sp, #72]	; 0x48
 801041a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801041e:	f82a 6b02 	strh.w	r6, [sl], #2
 8010422:	440a      	add	r2, r1
 8010424:	f108 38ff 	add.w	r8, r8, #4294967295
 8010428:	e7d6      	b.n	80103d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801042a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801042e:	d429      	bmi.n	8010484 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010430:	68ae      	ldr	r6, [r5, #8]
 8010432:	454e      	cmp	r6, r9
 8010434:	dd26      	ble.n	8010484 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010436:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801043a:	d423      	bmi.n	8010484 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801043c:	68e9      	ldr	r1, [r5, #12]
 801043e:	4559      	cmp	r1, fp
 8010440:	dd20      	ble.n	8010484 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010442:	9902      	ldr	r1, [sp, #8]
 8010444:	fa0f fe86 	sxth.w	lr, r6
 8010448:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801044c:	f06f 0101 	mvn.w	r1, #1
 8010450:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010454:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010458:	eb07 060e 	add.w	r6, r7, lr
 801045c:	fb01 f908 	mul.w	r9, r1, r8
 8010460:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010464:	7876      	ldrb	r6, [r6, #1]
 8010466:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801046a:	00f6      	lsls	r6, r6, #3
 801046c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010470:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010474:	ea4b 0606 	orr.w	r6, fp, r6
 8010478:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801047c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010480:	f82a 6009 	strh.w	r6, [sl, r9]
 8010484:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010486:	4460      	add	r0, ip
 8010488:	440a      	add	r2, r1
 801048a:	f108 38ff 	add.w	r8, r8, #4294967295
 801048e:	e757      	b.n	8010340 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010490:	b005      	add	sp, #20
 8010492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010496:	bf00      	nop
 8010498:	fffff800 	.word	0xfffff800

0801049c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801049c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104a0:	b087      	sub	sp, #28
 80104a2:	468b      	mov	fp, r1
 80104a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80104a6:	9204      	str	r2, [sp, #16]
 80104a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80104ac:	9205      	str	r2, [sp, #20]
 80104ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80104b2:	6841      	ldr	r1, [r0, #4]
 80104b4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80104b8:	fb01 2404 	mla	r4, r1, r4, r2
 80104bc:	6802      	ldr	r2, [r0, #0]
 80104be:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80104c2:	f8dc 2000 	ldr.w	r2, [ip]
 80104c6:	9201      	str	r2, [sp, #4]
 80104c8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80104cc:	3204      	adds	r2, #4
 80104ce:	9202      	str	r2, [sp, #8]
 80104d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80104d4:	f1bb 0f00 	cmp.w	fp, #0
 80104d8:	dc03      	bgt.n	80104e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80104da:	9a04      	ldr	r2, [sp, #16]
 80104dc:	2a00      	cmp	r2, #0
 80104de:	f340 8138 	ble.w	8010752 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80104e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80104e4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80104e8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80104ec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80104f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80104f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80104f6:	2b00      	cmp	r3, #0
 80104f8:	dd0e      	ble.n	8010518 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80104fa:	1402      	asrs	r2, r0, #16
 80104fc:	d405      	bmi.n	801050a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80104fe:	42ba      	cmp	r2, r7
 8010500:	da03      	bge.n	801050a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010502:	140a      	asrs	r2, r1, #16
 8010504:	d401      	bmi.n	801050a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010506:	42b2      	cmp	r2, r6
 8010508:	db07      	blt.n	801051a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801050a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801050c:	4410      	add	r0, r2
 801050e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010510:	3b01      	subs	r3, #1
 8010512:	4411      	add	r1, r2
 8010514:	3402      	adds	r4, #2
 8010516:	e7ee      	b.n	80104f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010518:	d019      	beq.n	801054e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801051a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801051c:	1e5a      	subs	r2, r3, #1
 801051e:	fb05 0502 	mla	r5, r5, r2, r0
 8010522:	142d      	asrs	r5, r5, #16
 8010524:	d409      	bmi.n	801053a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010526:	42bd      	cmp	r5, r7
 8010528:	da07      	bge.n	801053a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801052a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801052c:	fb05 1202 	mla	r2, r5, r2, r1
 8010530:	1412      	asrs	r2, r2, #16
 8010532:	d402      	bmi.n	801053a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010534:	42b2      	cmp	r2, r6
 8010536:	f2c0 80ac 	blt.w	8010692 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801053a:	f04f 0e00 	mov.w	lr, #0
 801053e:	eb03 020e 	add.w	r2, r3, lr
 8010542:	2a00      	cmp	r2, #0
 8010544:	dc3e      	bgt.n	80105c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010546:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801054a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801054e:	f1bb 0f00 	cmp.w	fp, #0
 8010552:	f340 80fe 	ble.w	8010752 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010556:	ee30 0a04 	vadd.f32	s0, s0, s8
 801055a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801055e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010562:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010564:	f1bb 0b01 	subs.w	fp, fp, #1
 8010568:	ee31 1a05 	vadd.f32	s2, s2, s10
 801056c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010570:	eeb0 6a62 	vmov.f32	s12, s5
 8010574:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010578:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801057c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010580:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010584:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010588:	eeb0 6a43 	vmov.f32	s12, s6
 801058c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010590:	ee12 2a90 	vmov	r2, s5
 8010594:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010598:	fb92 f3f3 	sdiv	r3, r2, r3
 801059c:	ee13 2a10 	vmov	r2, s6
 80105a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105a4:	9313      	str	r3, [sp, #76]	; 0x4c
 80105a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80105ac:	9a04      	ldr	r2, [sp, #16]
 80105ae:	9314      	str	r3, [sp, #80]	; 0x50
 80105b0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80105b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105b6:	eeb0 3a67 	vmov.f32	s6, s15
 80105ba:	bf08      	it	eq
 80105bc:	4613      	moveq	r3, r2
 80105be:	eef0 2a47 	vmov.f32	s5, s14
 80105c2:	e787      	b.n	80104d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80105c4:	1406      	asrs	r6, r0, #16
 80105c6:	d45d      	bmi.n	8010684 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80105c8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80105cc:	42b5      	cmp	r5, r6
 80105ce:	dd59      	ble.n	8010684 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80105d0:	140f      	asrs	r7, r1, #16
 80105d2:	d457      	bmi.n	8010684 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80105d4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80105d8:	42ba      	cmp	r2, r7
 80105da:	dd53      	ble.n	8010684 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80105dc:	9a01      	ldr	r2, [sp, #4]
 80105de:	b22d      	sxth	r5, r5
 80105e0:	fb07 2505 	mla	r5, r7, r5, r2
 80105e4:	5daa      	ldrb	r2, [r5, r6]
 80105e6:	9d02      	ldr	r5, [sp, #8]
 80105e8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80105ec:	0e2e      	lsrs	r6, r5, #24
 80105ee:	d049      	beq.n	8010684 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80105f0:	f06f 0201 	mvn.w	r2, #1
 80105f4:	fb02 f20e 	mul.w	r2, r2, lr
 80105f8:	9203      	str	r2, [sp, #12]
 80105fa:	f834 8002 	ldrh.w	r8, [r4, r2]
 80105fe:	9a05      	ldr	r2, [sp, #20]
 8010600:	4356      	muls	r6, r2
 8010602:	1c72      	adds	r2, r6, #1
 8010604:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010608:	1212      	asrs	r2, r2, #8
 801060a:	fa1f f982 	uxth.w	r9, r2
 801060e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8010612:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010616:	43d2      	mvns	r2, r2
 8010618:	b2d2      	uxtb	r2, r2
 801061a:	fb16 f609 	smulbb	r6, r6, r9
 801061e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010622:	fb07 6702 	mla	r7, r7, r2, r6
 8010626:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801062a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801062e:	b2ed      	uxtb	r5, r5
 8010630:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010634:	fa5f f888 	uxtb.w	r8, r8
 8010638:	fb15 f509 	smulbb	r5, r5, r9
 801063c:	fb08 5502 	mla	r5, r8, r2, r5
 8010640:	b2bf      	uxth	r7, r7
 8010642:	fb1a fa09 	smulbb	sl, sl, r9
 8010646:	b2ad      	uxth	r5, r5
 8010648:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801064c:	fb06 a602 	mla	r6, r6, r2, sl
 8010650:	1c7a      	adds	r2, r7, #1
 8010652:	f105 0a01 	add.w	sl, r5, #1
 8010656:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801065a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801065e:	b2b6      	uxth	r6, r6
 8010660:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010664:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010668:	ea4a 0707 	orr.w	r7, sl, r7
 801066c:	f106 0a01 	add.w	sl, r6, #1
 8010670:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010674:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010678:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801067c:	9a03      	ldr	r2, [sp, #12]
 801067e:	ea47 070a 	orr.w	r7, r7, sl
 8010682:	52a7      	strh	r7, [r4, r2]
 8010684:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010686:	4410      	add	r0, r2
 8010688:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801068a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801068e:	4411      	add	r1, r2
 8010690:	e755      	b.n	801053e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010692:	f04f 0800 	mov.w	r8, #0
 8010696:	eba3 0208 	sub.w	r2, r3, r8
 801069a:	2a00      	cmp	r2, #0
 801069c:	f77f af53 	ble.w	8010546 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80106a0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80106a4:	9f01      	ldr	r7, [sp, #4]
 80106a6:	140a      	asrs	r2, r1, #16
 80106a8:	1405      	asrs	r5, r0, #16
 80106aa:	fb06 7202 	mla	r2, r6, r2, r7
 80106ae:	5d52      	ldrb	r2, [r2, r5]
 80106b0:	9d02      	ldr	r5, [sp, #8]
 80106b2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80106b6:	0e2e      	lsrs	r6, r5, #24
 80106b8:	d044      	beq.n	8010744 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80106ba:	9a05      	ldr	r2, [sp, #20]
 80106bc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80106c0:	4356      	muls	r6, r2
 80106c2:	1c72      	adds	r2, r6, #1
 80106c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80106c8:	1212      	asrs	r2, r2, #8
 80106ca:	fa1f f982 	uxth.w	r9, r2
 80106ce:	ea4f 272e 	mov.w	r7, lr, asr #8
 80106d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80106d6:	43d2      	mvns	r2, r2
 80106d8:	b2d2      	uxtb	r2, r2
 80106da:	fb16 f609 	smulbb	r6, r6, r9
 80106de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80106e2:	fb07 6702 	mla	r7, r7, r2, r6
 80106e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80106ea:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80106ee:	b2ed      	uxtb	r5, r5
 80106f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80106f4:	fa5f fe8e 	uxtb.w	lr, lr
 80106f8:	fb15 f509 	smulbb	r5, r5, r9
 80106fc:	fb0e 5502 	mla	r5, lr, r2, r5
 8010700:	b2bf      	uxth	r7, r7
 8010702:	fb1a fa09 	smulbb	sl, sl, r9
 8010706:	b2ad      	uxth	r5, r5
 8010708:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801070c:	fb06 a602 	mla	r6, r6, r2, sl
 8010710:	1c7a      	adds	r2, r7, #1
 8010712:	f105 0a01 	add.w	sl, r5, #1
 8010716:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801071a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801071e:	b2b6      	uxth	r6, r6
 8010720:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010724:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010728:	ea4a 0707 	orr.w	r7, sl, r7
 801072c:	f106 0a01 	add.w	sl, r6, #1
 8010730:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010734:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010738:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801073c:	ea47 070a 	orr.w	r7, r7, sl
 8010740:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010744:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010746:	4410      	add	r0, r2
 8010748:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801074a:	f108 0801 	add.w	r8, r8, #1
 801074e:	4411      	add	r1, r2
 8010750:	e7a1      	b.n	8010696 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010752:	b007      	add	sp, #28
 8010754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801075c:	b085      	sub	sp, #20
 801075e:	468b      	mov	fp, r1
 8010760:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010762:	9203      	str	r2, [sp, #12]
 8010764:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010768:	6841      	ldr	r1, [r0, #4]
 801076a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801076e:	fb01 2404 	mla	r4, r1, r4, r2
 8010772:	6802      	ldr	r2, [r0, #0]
 8010774:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010778:	f8de 2000 	ldr.w	r2, [lr]
 801077c:	9200      	str	r2, [sp, #0]
 801077e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010782:	3204      	adds	r2, #4
 8010784:	9201      	str	r2, [sp, #4]
 8010786:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801078a:	f1bb 0f00 	cmp.w	fp, #0
 801078e:	dc03      	bgt.n	8010798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010790:	9a03      	ldr	r2, [sp, #12]
 8010792:	2a00      	cmp	r2, #0
 8010794:	f340 8153 	ble.w	8010a3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010798:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801079a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801079e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80107a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80107a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80107a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80107ac:	2b00      	cmp	r3, #0
 80107ae:	dd0e      	ble.n	80107ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80107b0:	1408      	asrs	r0, r1, #16
 80107b2:	d405      	bmi.n	80107c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80107b4:	42b8      	cmp	r0, r7
 80107b6:	da03      	bge.n	80107c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80107b8:	1410      	asrs	r0, r2, #16
 80107ba:	d401      	bmi.n	80107c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80107bc:	42b0      	cmp	r0, r6
 80107be:	db07      	blt.n	80107d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80107c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80107c2:	4401      	add	r1, r0
 80107c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80107c6:	3b01      	subs	r3, #1
 80107c8:	4402      	add	r2, r0
 80107ca:	3402      	adds	r4, #2
 80107cc:	e7ee      	b.n	80107ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80107ce:	d017      	beq.n	8010800 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80107d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80107d2:	1e58      	subs	r0, r3, #1
 80107d4:	fb05 1500 	mla	r5, r5, r0, r1
 80107d8:	142d      	asrs	r5, r5, #16
 80107da:	d409      	bmi.n	80107f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80107dc:	42bd      	cmp	r5, r7
 80107de:	da07      	bge.n	80107f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80107e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80107e2:	fb05 2000 	mla	r0, r5, r0, r2
 80107e6:	1400      	asrs	r0, r0, #16
 80107e8:	d402      	bmi.n	80107f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80107ea:	42b0      	cmp	r0, r6
 80107ec:	f2c0 80bc 	blt.w	8010968 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80107f0:	2600      	movs	r6, #0
 80107f2:	1998      	adds	r0, r3, r6
 80107f4:	2800      	cmp	r0, #0
 80107f6:	dc3e      	bgt.n	8010876 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80107f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80107fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010800:	f1bb 0f00 	cmp.w	fp, #0
 8010804:	f340 811b 	ble.w	8010a3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010808:	ee30 0a04 	vadd.f32	s0, s0, s8
 801080c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010810:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010814:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010816:	f1bb 0b01 	subs.w	fp, fp, #1
 801081a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801081e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010822:	eeb0 6a62 	vmov.f32	s12, s5
 8010826:	ee61 7a27 	vmul.f32	s15, s2, s15
 801082a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801082e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010832:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010836:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801083a:	eeb0 6a43 	vmov.f32	s12, s6
 801083e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010842:	ee12 2a90 	vmov	r2, s5
 8010846:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801084a:	fb92 f3f3 	sdiv	r3, r2, r3
 801084e:	ee13 2a10 	vmov	r2, s6
 8010852:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010856:	9311      	str	r3, [sp, #68]	; 0x44
 8010858:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801085a:	fb92 f3f3 	sdiv	r3, r2, r3
 801085e:	9a03      	ldr	r2, [sp, #12]
 8010860:	9312      	str	r3, [sp, #72]	; 0x48
 8010862:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010866:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010868:	eeb0 3a67 	vmov.f32	s6, s15
 801086c:	bf08      	it	eq
 801086e:	4613      	moveq	r3, r2
 8010870:	eef0 2a47 	vmov.f32	s5, s14
 8010874:	e789      	b.n	801078a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010876:	140f      	asrs	r7, r1, #16
 8010878:	d45e      	bmi.n	8010938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801087a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801087e:	42bd      	cmp	r5, r7
 8010880:	dd5a      	ble.n	8010938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010882:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010886:	d457      	bmi.n	8010938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010888:	f8de 000c 	ldr.w	r0, [lr, #12]
 801088c:	4560      	cmp	r0, ip
 801088e:	dd53      	ble.n	8010938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010890:	9800      	ldr	r0, [sp, #0]
 8010892:	b22d      	sxth	r5, r5
 8010894:	fb0c 0505 	mla	r5, ip, r5, r0
 8010898:	5de8      	ldrb	r0, [r5, r7]
 801089a:	9d01      	ldr	r5, [sp, #4]
 801089c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80108a0:	0e07      	lsrs	r7, r0, #24
 80108a2:	2fff      	cmp	r7, #255	; 0xff
 80108a4:	d04e      	beq.n	8010944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80108a6:	b2fd      	uxtb	r5, r7
 80108a8:	2f00      	cmp	r7, #0
 80108aa:	d045      	beq.n	8010938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80108ac:	f06f 0701 	mvn.w	r7, #1
 80108b0:	4377      	muls	r7, r6
 80108b2:	fa1f f985 	uxth.w	r9, r5
 80108b6:	f834 8007 	ldrh.w	r8, [r4, r7]
 80108ba:	9702      	str	r7, [sp, #8]
 80108bc:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80108c0:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80108c4:	43ed      	mvns	r5, r5
 80108c6:	b2ed      	uxtb	r5, r5
 80108c8:	fb17 f709 	smulbb	r7, r7, r9
 80108cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80108d0:	fb0c 7c05 	mla	ip, ip, r5, r7
 80108d4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80108d8:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80108dc:	b2c0      	uxtb	r0, r0
 80108de:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80108e2:	fa5f f888 	uxtb.w	r8, r8
 80108e6:	fb10 f009 	smulbb	r0, r0, r9
 80108ea:	fb08 0005 	mla	r0, r8, r5, r0
 80108ee:	b280      	uxth	r0, r0
 80108f0:	fa1f fc8c 	uxth.w	ip, ip
 80108f4:	fb1a fa09 	smulbb	sl, sl, r9
 80108f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80108fc:	fb07 a705 	mla	r7, r7, r5, sl
 8010900:	f100 0a01 	add.w	sl, r0, #1
 8010904:	f10c 0501 	add.w	r5, ip, #1
 8010908:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801090c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010910:	b2bf      	uxth	r7, r7
 8010912:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010916:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801091a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801091e:	f107 0a01 	add.w	sl, r7, #1
 8010922:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010926:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801092a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801092e:	9802      	ldr	r0, [sp, #8]
 8010930:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010934:	f824 c000 	strh.w	ip, [r4, r0]
 8010938:	9811      	ldr	r0, [sp, #68]	; 0x44
 801093a:	4401      	add	r1, r0
 801093c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801093e:	3e01      	subs	r6, #1
 8010940:	4402      	add	r2, r0
 8010942:	e756      	b.n	80107f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010944:	f06f 0501 	mvn.w	r5, #1
 8010948:	fb05 f706 	mul.w	r7, r5, r6
 801094c:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010950:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010954:	0945      	lsrs	r5, r0, #5
 8010956:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801095a:	ea4c 0505 	orr.w	r5, ip, r5
 801095e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010962:	4305      	orrs	r5, r0
 8010964:	53e5      	strh	r5, [r4, r7]
 8010966:	e7e7      	b.n	8010938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010968:	f04f 0800 	mov.w	r8, #0
 801096c:	eba3 0008 	sub.w	r0, r3, r8
 8010970:	2800      	cmp	r0, #0
 8010972:	f77f af41 	ble.w	80107f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010976:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801097a:	9f00      	ldr	r7, [sp, #0]
 801097c:	1410      	asrs	r0, r2, #16
 801097e:	140d      	asrs	r5, r1, #16
 8010980:	fb06 7000 	mla	r0, r6, r0, r7
 8010984:	5d40      	ldrb	r0, [r0, r5]
 8010986:	9d01      	ldr	r5, [sp, #4]
 8010988:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801098c:	0e06      	lsrs	r6, r0, #24
 801098e:	2eff      	cmp	r6, #255	; 0xff
 8010990:	d048      	beq.n	8010a24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8010992:	b2f5      	uxtb	r5, r6
 8010994:	2e00      	cmp	r6, #0
 8010996:	d03e      	beq.n	8010a16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010998:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801099c:	fa1f f985 	uxth.w	r9, r5
 80109a0:	ea4f 272c 	mov.w	r7, ip, asr #8
 80109a4:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80109a8:	43ed      	mvns	r5, r5
 80109aa:	b2ed      	uxtb	r5, r5
 80109ac:	fb16 f609 	smulbb	r6, r6, r9
 80109b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80109b4:	fb07 6705 	mla	r7, r7, r5, r6
 80109b8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80109bc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80109c0:	b2c0      	uxtb	r0, r0
 80109c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80109c6:	fa5f fc8c 	uxtb.w	ip, ip
 80109ca:	fb10 f009 	smulbb	r0, r0, r9
 80109ce:	fb0c 0005 	mla	r0, ip, r5, r0
 80109d2:	b2bf      	uxth	r7, r7
 80109d4:	fb1a fa09 	smulbb	sl, sl, r9
 80109d8:	b280      	uxth	r0, r0
 80109da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80109de:	fb06 a605 	mla	r6, r6, r5, sl
 80109e2:	1c7d      	adds	r5, r7, #1
 80109e4:	f100 0a01 	add.w	sl, r0, #1
 80109e8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80109ec:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80109f0:	b2b6      	uxth	r6, r6
 80109f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80109f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80109fa:	ea4a 0707 	orr.w	r7, sl, r7
 80109fe:	f106 0a01 	add.w	sl, r6, #1
 8010a02:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010a06:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010a0a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010a0e:	ea47 070a 	orr.w	r7, r7, sl
 8010a12:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010a16:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a18:	4401      	add	r1, r0
 8010a1a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010a1c:	f108 0801 	add.w	r8, r8, #1
 8010a20:	4402      	add	r2, r0
 8010a22:	e7a3      	b.n	801096c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010a24:	4d07      	ldr	r5, [pc, #28]	; (8010a44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010a26:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8010a2a:	0945      	lsrs	r5, r0, #5
 8010a2c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010a30:	4335      	orrs	r5, r6
 8010a32:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010a36:	4305      	orrs	r5, r0
 8010a38:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8010a3c:	e7eb      	b.n	8010a16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010a3e:	b005      	add	sp, #20
 8010a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a44:	fffff800 	.word	0xfffff800

08010a48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a4c:	b087      	sub	sp, #28
 8010a4e:	468b      	mov	fp, r1
 8010a50:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010a52:	9204      	str	r2, [sp, #16]
 8010a54:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010a58:	9205      	str	r2, [sp, #20]
 8010a5a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010a5e:	6861      	ldr	r1, [r4, #4]
 8010a60:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010a64:	fb01 2000 	mla	r0, r1, r0, r2
 8010a68:	6822      	ldr	r2, [r4, #0]
 8010a6a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010a6e:	f8de 2000 	ldr.w	r2, [lr]
 8010a72:	9201      	str	r2, [sp, #4]
 8010a74:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010a78:	9202      	str	r2, [sp, #8]
 8010a7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010a7e:	f1bb 0f00 	cmp.w	fp, #0
 8010a82:	dc03      	bgt.n	8010a8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010a84:	9a04      	ldr	r2, [sp, #16]
 8010a86:	2a00      	cmp	r2, #0
 8010a88:	f340 8142 	ble.w	8010d10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010a8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010a8e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010a92:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010a96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010a9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010a9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010aa0:	2b00      	cmp	r3, #0
 8010aa2:	dd0e      	ble.n	8010ac2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010aa4:	140c      	asrs	r4, r1, #16
 8010aa6:	d405      	bmi.n	8010ab4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010aa8:	42bc      	cmp	r4, r7
 8010aaa:	da03      	bge.n	8010ab4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010aac:	1414      	asrs	r4, r2, #16
 8010aae:	d401      	bmi.n	8010ab4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010ab0:	42b4      	cmp	r4, r6
 8010ab2:	db07      	blt.n	8010ac4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010ab4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010ab6:	4421      	add	r1, r4
 8010ab8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010aba:	3b01      	subs	r3, #1
 8010abc:	4422      	add	r2, r4
 8010abe:	3002      	adds	r0, #2
 8010ac0:	e7ee      	b.n	8010aa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010ac2:	d019      	beq.n	8010af8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010ac4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010ac6:	1e5c      	subs	r4, r3, #1
 8010ac8:	fb05 1504 	mla	r5, r5, r4, r1
 8010acc:	142d      	asrs	r5, r5, #16
 8010ace:	d409      	bmi.n	8010ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010ad0:	42bd      	cmp	r5, r7
 8010ad2:	da07      	bge.n	8010ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010ad4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010ad6:	fb05 2404 	mla	r4, r5, r4, r2
 8010ada:	1424      	asrs	r4, r4, #16
 8010adc:	d402      	bmi.n	8010ae4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010ade:	42b4      	cmp	r4, r6
 8010ae0:	f2c0 80b1 	blt.w	8010c46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010ae4:	f04f 0800 	mov.w	r8, #0
 8010ae8:	eb03 0408 	add.w	r4, r3, r8
 8010aec:	2c00      	cmp	r4, #0
 8010aee:	dc3e      	bgt.n	8010b6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010af0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010af4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010af8:	f1bb 0f00 	cmp.w	fp, #0
 8010afc:	f340 8108 	ble.w	8010d10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010b00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010b04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010b08:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010b0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010b0e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010b12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010b16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010b1a:	eeb0 6a62 	vmov.f32	s12, s5
 8010b1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010b22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010b2a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010b2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010b32:	eeb0 6a43 	vmov.f32	s12, s6
 8010b36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010b3a:	ee12 2a90 	vmov	r2, s5
 8010b3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010b42:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b46:	ee13 2a10 	vmov	r2, s6
 8010b4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b4e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010b50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010b52:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b56:	9a04      	ldr	r2, [sp, #16]
 8010b58:	9314      	str	r3, [sp, #80]	; 0x50
 8010b5a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010b5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010b60:	eeb0 3a67 	vmov.f32	s6, s15
 8010b64:	bf08      	it	eq
 8010b66:	4613      	moveq	r3, r2
 8010b68:	eef0 2a47 	vmov.f32	s5, s14
 8010b6c:	e787      	b.n	8010a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010b6e:	140e      	asrs	r6, r1, #16
 8010b70:	d462      	bmi.n	8010c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010b72:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010b76:	42b5      	cmp	r5, r6
 8010b78:	dd5e      	ble.n	8010c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010b7a:	1417      	asrs	r7, r2, #16
 8010b7c:	d45c      	bmi.n	8010c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010b7e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010b82:	42bc      	cmp	r4, r7
 8010b84:	dd58      	ble.n	8010c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010b86:	b22d      	sxth	r5, r5
 8010b88:	fb07 6505 	mla	r5, r7, r5, r6
 8010b8c:	9c02      	ldr	r4, [sp, #8]
 8010b8e:	5d66      	ldrb	r6, [r4, r5]
 8010b90:	2e00      	cmp	r6, #0
 8010b92:	d051      	beq.n	8010c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010b94:	9c01      	ldr	r4, [sp, #4]
 8010b96:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010b9a:	f06f 0401 	mvn.w	r4, #1
 8010b9e:	fb04 f408 	mul.w	r4, r4, r8
 8010ba2:	9403      	str	r4, [sp, #12]
 8010ba4:	5b05      	ldrh	r5, [r0, r4]
 8010ba6:	9c05      	ldr	r4, [sp, #20]
 8010ba8:	4366      	muls	r6, r4
 8010baa:	1c74      	adds	r4, r6, #1
 8010bac:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010bb0:	1224      	asrs	r4, r4, #8
 8010bb2:	b2a7      	uxth	r7, r4
 8010bb4:	122e      	asrs	r6, r5, #8
 8010bb6:	43e4      	mvns	r4, r4
 8010bb8:	b2e4      	uxtb	r4, r4
 8010bba:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010bbe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010bc2:	fb16 f604 	smulbb	r6, r6, r4
 8010bc6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010bca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010bce:	00ed      	lsls	r5, r5, #3
 8010bd0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010bd4:	b2ed      	uxtb	r5, r5
 8010bd6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010bda:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010bde:	fb15 f504 	smulbb	r5, r5, r4
 8010be2:	fa5f f989 	uxtb.w	r9, r9
 8010be6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010bea:	fb09 5507 	mla	r5, r9, r7, r5
 8010bee:	fb1a fa04 	smulbb	sl, sl, r4
 8010bf2:	fa1f fc8c 	uxth.w	ip, ip
 8010bf6:	b2ad      	uxth	r5, r5
 8010bf8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010bfc:	fb06 a607 	mla	r6, r6, r7, sl
 8010c00:	f10c 0401 	add.w	r4, ip, #1
 8010c04:	f105 0a01 	add.w	sl, r5, #1
 8010c08:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010c0c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010c10:	b2b6      	uxth	r6, r6
 8010c12:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010c1a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010c1e:	f106 0a01 	add.w	sl, r6, #1
 8010c22:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010c26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c2a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010c2e:	9c03      	ldr	r4, [sp, #12]
 8010c30:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010c34:	f820 c004 	strh.w	ip, [r0, r4]
 8010c38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010c3a:	4421      	add	r1, r4
 8010c3c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010c3e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010c42:	4422      	add	r2, r4
 8010c44:	e750      	b.n	8010ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010c46:	f04f 0900 	mov.w	r9, #0
 8010c4a:	eba3 0409 	sub.w	r4, r3, r9
 8010c4e:	2c00      	cmp	r4, #0
 8010c50:	f77f af4e 	ble.w	8010af0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010c54:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010c58:	140d      	asrs	r5, r1, #16
 8010c5a:	1414      	asrs	r4, r2, #16
 8010c5c:	fb06 5404 	mla	r4, r6, r4, r5
 8010c60:	9d02      	ldr	r5, [sp, #8]
 8010c62:	5d2e      	ldrb	r6, [r5, r4]
 8010c64:	2e00      	cmp	r6, #0
 8010c66:	d04c      	beq.n	8010d02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010c68:	9d01      	ldr	r5, [sp, #4]
 8010c6a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010c6e:	9c05      	ldr	r4, [sp, #20]
 8010c70:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010c74:	4366      	muls	r6, r4
 8010c76:	1c74      	adds	r4, r6, #1
 8010c78:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010c7c:	1224      	asrs	r4, r4, #8
 8010c7e:	b2a7      	uxth	r7, r4
 8010c80:	122e      	asrs	r6, r5, #8
 8010c82:	43e4      	mvns	r4, r4
 8010c84:	b2e4      	uxtb	r4, r4
 8010c86:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010c8a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010c8e:	fb16 f604 	smulbb	r6, r6, r4
 8010c92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010c96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010c9a:	00ed      	lsls	r5, r5, #3
 8010c9c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010ca0:	b2ed      	uxtb	r5, r5
 8010ca2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010ca6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010caa:	fb15 f504 	smulbb	r5, r5, r4
 8010cae:	fa5f f888 	uxtb.w	r8, r8
 8010cb2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010cb6:	fb08 5507 	mla	r5, r8, r7, r5
 8010cba:	fb1a fa04 	smulbb	sl, sl, r4
 8010cbe:	fa1f fc8c 	uxth.w	ip, ip
 8010cc2:	b2ad      	uxth	r5, r5
 8010cc4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010cc8:	fb06 a607 	mla	r6, r6, r7, sl
 8010ccc:	f10c 0401 	add.w	r4, ip, #1
 8010cd0:	f105 0a01 	add.w	sl, r5, #1
 8010cd4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010cd8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010cdc:	b2b6      	uxth	r6, r6
 8010cde:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ce2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010ce6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010cea:	f106 0a01 	add.w	sl, r6, #1
 8010cee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010cf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010cf6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010cfa:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010cfe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010d02:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010d04:	4421      	add	r1, r4
 8010d06:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010d08:	f109 0901 	add.w	r9, r9, #1
 8010d0c:	4422      	add	r2, r4
 8010d0e:	e79c      	b.n	8010c4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010d10:	b007      	add	sp, #28
 8010d12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010d16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010d16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d1a:	b085      	sub	sp, #20
 8010d1c:	468b      	mov	fp, r1
 8010d1e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010d20:	9203      	str	r2, [sp, #12]
 8010d22:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8010d26:	6861      	ldr	r1, [r4, #4]
 8010d28:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8010d2c:	fb01 2000 	mla	r0, r1, r0, r2
 8010d30:	6822      	ldr	r2, [r4, #0]
 8010d32:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010d36:	f8d8 2000 	ldr.w	r2, [r8]
 8010d3a:	9200      	str	r2, [sp, #0]
 8010d3c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8010d40:	9201      	str	r2, [sp, #4]
 8010d42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d46:	f1bb 0f00 	cmp.w	fp, #0
 8010d4a:	dc03      	bgt.n	8010d54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010d4c:	9a03      	ldr	r2, [sp, #12]
 8010d4e:	2a00      	cmp	r2, #0
 8010d50:	f340 8146 	ble.w	8010fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010d54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010d56:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8010d5a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8010d5e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d62:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010d64:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010d68:	2b00      	cmp	r3, #0
 8010d6a:	dd0e      	ble.n	8010d8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8010d6c:	140c      	asrs	r4, r1, #16
 8010d6e:	d405      	bmi.n	8010d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010d70:	42bc      	cmp	r4, r7
 8010d72:	da03      	bge.n	8010d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010d74:	1414      	asrs	r4, r2, #16
 8010d76:	d401      	bmi.n	8010d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010d78:	42b4      	cmp	r4, r6
 8010d7a:	db07      	blt.n	8010d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010d7c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010d7e:	4421      	add	r1, r4
 8010d80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010d82:	3b01      	subs	r3, #1
 8010d84:	4422      	add	r2, r4
 8010d86:	3002      	adds	r0, #2
 8010d88:	e7ee      	b.n	8010d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010d8a:	d017      	beq.n	8010dbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010d8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010d8e:	1e5c      	subs	r4, r3, #1
 8010d90:	fb05 1504 	mla	r5, r5, r4, r1
 8010d94:	142d      	asrs	r5, r5, #16
 8010d96:	d409      	bmi.n	8010dac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010d98:	42bd      	cmp	r5, r7
 8010d9a:	da07      	bge.n	8010dac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010d9c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010d9e:	fb05 2404 	mla	r4, r5, r4, r2
 8010da2:	1424      	asrs	r4, r4, #16
 8010da4:	d402      	bmi.n	8010dac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010da6:	42b4      	cmp	r4, r6
 8010da8:	f2c0 80b3 	blt.w	8010f12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8010dac:	2600      	movs	r6, #0
 8010dae:	199c      	adds	r4, r3, r6
 8010db0:	2c00      	cmp	r4, #0
 8010db2:	dc3e      	bgt.n	8010e32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010db4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010db8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010dbc:	f1bb 0f00 	cmp.w	fp, #0
 8010dc0:	f340 810e 	ble.w	8010fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010dc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010dc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010dcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010dd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010dd2:	f1bb 0b01 	subs.w	fp, fp, #1
 8010dd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010dda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010dde:	eeb0 6a62 	vmov.f32	s12, s5
 8010de2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010de6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010dea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010dee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010df2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010df6:	eeb0 6a43 	vmov.f32	s12, s6
 8010dfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010dfe:	ee12 2a90 	vmov	r2, s5
 8010e02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e06:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e0a:	ee13 2a10 	vmov	r2, s6
 8010e0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e12:	9311      	str	r3, [sp, #68]	; 0x44
 8010e14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010e16:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e1a:	9a03      	ldr	r2, [sp, #12]
 8010e1c:	9312      	str	r3, [sp, #72]	; 0x48
 8010e1e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010e22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010e24:	eeb0 3a67 	vmov.f32	s6, s15
 8010e28:	bf08      	it	eq
 8010e2a:	4613      	moveq	r3, r2
 8010e2c:	eef0 2a47 	vmov.f32	s5, s14
 8010e30:	e789      	b.n	8010d46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010e32:	140f      	asrs	r7, r1, #16
 8010e34:	d45f      	bmi.n	8010ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010e36:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8010e3a:	42bd      	cmp	r5, r7
 8010e3c:	dd5b      	ble.n	8010ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010e3e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010e42:	d458      	bmi.n	8010ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010e44:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8010e48:	4564      	cmp	r4, ip
 8010e4a:	dd54      	ble.n	8010ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010e4c:	b22d      	sxth	r5, r5
 8010e4e:	fb0c 7505 	mla	r5, ip, r5, r7
 8010e52:	9c01      	ldr	r4, [sp, #4]
 8010e54:	5d64      	ldrb	r4, [r4, r5]
 8010e56:	2cff      	cmp	r4, #255	; 0xff
 8010e58:	d053      	beq.n	8010f02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8010e5a:	2c00      	cmp	r4, #0
 8010e5c:	d04b      	beq.n	8010ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010e5e:	9f00      	ldr	r7, [sp, #0]
 8010e60:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8010e64:	f06f 0501 	mvn.w	r5, #1
 8010e68:	4375      	muls	r5, r6
 8010e6a:	9502      	str	r5, [sp, #8]
 8010e6c:	5b45      	ldrh	r5, [r0, r5]
 8010e6e:	fa1f fc84 	uxth.w	ip, r4
 8010e72:	122f      	asrs	r7, r5, #8
 8010e74:	43e4      	mvns	r4, r4
 8010e76:	b2e4      	uxtb	r4, r4
 8010e78:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8010e7c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010e80:	fb17 f704 	smulbb	r7, r7, r4
 8010e84:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010e88:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010e8c:	00ed      	lsls	r5, r5, #3
 8010e8e:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8010e92:	b2ed      	uxtb	r5, r5
 8010e94:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8010e98:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010e9c:	fb15 f504 	smulbb	r5, r5, r4
 8010ea0:	fa5f f989 	uxtb.w	r9, r9
 8010ea4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010ea8:	fb09 550c 	mla	r5, r9, ip, r5
 8010eac:	fb1a fa04 	smulbb	sl, sl, r4
 8010eb0:	fa1f fe8e 	uxth.w	lr, lr
 8010eb4:	b2ad      	uxth	r5, r5
 8010eb6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010eba:	fb07 a70c 	mla	r7, r7, ip, sl
 8010ebe:	f10e 0401 	add.w	r4, lr, #1
 8010ec2:	f105 0a01 	add.w	sl, r5, #1
 8010ec6:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8010eca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010ece:	b2bf      	uxth	r7, r7
 8010ed0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ed4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010ed8:	ea4a 0e0e 	orr.w	lr, sl, lr
 8010edc:	f107 0a01 	add.w	sl, r7, #1
 8010ee0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010ee4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ee8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010eec:	9c02      	ldr	r4, [sp, #8]
 8010eee:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010ef2:	f820 e004 	strh.w	lr, [r0, r4]
 8010ef6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010ef8:	4421      	add	r1, r4
 8010efa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010efc:	3e01      	subs	r6, #1
 8010efe:	4422      	add	r2, r4
 8010f00:	e755      	b.n	8010dae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010f02:	9c00      	ldr	r4, [sp, #0]
 8010f04:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8010f08:	f06f 0401 	mvn.w	r4, #1
 8010f0c:	4374      	muls	r4, r6
 8010f0e:	5305      	strh	r5, [r0, r4]
 8010f10:	e7f1      	b.n	8010ef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f12:	f04f 0900 	mov.w	r9, #0
 8010f16:	eba3 0409 	sub.w	r4, r3, r9
 8010f1a:	2c00      	cmp	r4, #0
 8010f1c:	f77f af4a 	ble.w	8010db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010f20:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8010f24:	1414      	asrs	r4, r2, #16
 8010f26:	140d      	asrs	r5, r1, #16
 8010f28:	fb06 5504 	mla	r5, r6, r4, r5
 8010f2c:	9c01      	ldr	r4, [sp, #4]
 8010f2e:	5d64      	ldrb	r4, [r4, r5]
 8010f30:	2cff      	cmp	r4, #255	; 0xff
 8010f32:	d04f      	beq.n	8010fd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010f34:	2c00      	cmp	r4, #0
 8010f36:	d046      	beq.n	8010fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8010f38:	9e00      	ldr	r6, [sp, #0]
 8010f3a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8010f3e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010f42:	b2a7      	uxth	r7, r4
 8010f44:	122e      	asrs	r6, r5, #8
 8010f46:	43e4      	mvns	r4, r4
 8010f48:	b2e4      	uxtb	r4, r4
 8010f4a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010f4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010f52:	fb16 f604 	smulbb	r6, r6, r4
 8010f56:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f5e:	00ed      	lsls	r5, r5, #3
 8010f60:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010f64:	b2ed      	uxtb	r5, r5
 8010f66:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010f6a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010f6e:	fb15 f504 	smulbb	r5, r5, r4
 8010f72:	fa5f fe8e 	uxtb.w	lr, lr
 8010f76:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010f7a:	fb0e 5507 	mla	r5, lr, r7, r5
 8010f7e:	fb1a fa04 	smulbb	sl, sl, r4
 8010f82:	fa1f fc8c 	uxth.w	ip, ip
 8010f86:	b2ad      	uxth	r5, r5
 8010f88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f8c:	fb06 a607 	mla	r6, r6, r7, sl
 8010f90:	f10c 0401 	add.w	r4, ip, #1
 8010f94:	f105 0a01 	add.w	sl, r5, #1
 8010f98:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010f9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010fa0:	b2b6      	uxth	r6, r6
 8010fa2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010fa6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010faa:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010fae:	f106 0a01 	add.w	sl, r6, #1
 8010fb2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010fb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010fba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010fbe:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010fc2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010fc6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010fc8:	4421      	add	r1, r4
 8010fca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010fcc:	f109 0901 	add.w	r9, r9, #1
 8010fd0:	4422      	add	r2, r4
 8010fd2:	e7a0      	b.n	8010f16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8010fd4:	9c00      	ldr	r4, [sp, #0]
 8010fd6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8010fda:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8010fde:	e7f2      	b.n	8010fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8010fe0:	b005      	add	sp, #20
 8010fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010fe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010fe6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fea:	b085      	sub	sp, #20
 8010fec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010fee:	9203      	str	r2, [sp, #12]
 8010ff0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8010ff4:	9201      	str	r2, [sp, #4]
 8010ff6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010ffa:	9100      	str	r1, [sp, #0]
 8010ffc:	6841      	ldr	r1, [r0, #4]
 8010ffe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8011002:	fb01 2404 	mla	r4, r1, r4, r2
 8011006:	6802      	ldr	r2, [r0, #0]
 8011008:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801100c:	f8de 2000 	ldr.w	r2, [lr]
 8011010:	9202      	str	r2, [sp, #8]
 8011012:	9a01      	ldr	r2, [sp, #4]
 8011014:	43d6      	mvns	r6, r2
 8011016:	b2f6      	uxtb	r6, r6
 8011018:	9a00      	ldr	r2, [sp, #0]
 801101a:	2a00      	cmp	r2, #0
 801101c:	dc03      	bgt.n	8011026 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801101e:	9a03      	ldr	r2, [sp, #12]
 8011020:	2a00      	cmp	r2, #0
 8011022:	f340 8124 	ble.w	801126e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011026:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011028:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801102c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011030:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011034:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011036:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801103a:	2b00      	cmp	r3, #0
 801103c:	dd0e      	ble.n	801105c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801103e:	1408      	asrs	r0, r1, #16
 8011040:	d405      	bmi.n	801104e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011042:	4560      	cmp	r0, ip
 8011044:	da03      	bge.n	801104e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011046:	1410      	asrs	r0, r2, #16
 8011048:	d401      	bmi.n	801104e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801104a:	42b8      	cmp	r0, r7
 801104c:	db07      	blt.n	801105e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801104e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011050:	4401      	add	r1, r0
 8011052:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011054:	3b01      	subs	r3, #1
 8011056:	4402      	add	r2, r0
 8011058:	3402      	adds	r4, #2
 801105a:	e7ee      	b.n	801103a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801105c:	d06e      	beq.n	801113c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801105e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011060:	1e58      	subs	r0, r3, #1
 8011062:	fb05 1500 	mla	r5, r5, r0, r1
 8011066:	142d      	asrs	r5, r5, #16
 8011068:	d45c      	bmi.n	8011124 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801106a:	4565      	cmp	r5, ip
 801106c:	da5a      	bge.n	8011124 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801106e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011070:	fb05 2000 	mla	r0, r5, r0, r2
 8011074:	1400      	asrs	r0, r0, #16
 8011076:	d455      	bmi.n	8011124 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011078:	42b8      	cmp	r0, r7
 801107a:	da53      	bge.n	8011124 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801107c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8011080:	4699      	mov	r9, r3
 8011082:	46a2      	mov	sl, r4
 8011084:	f1b9 0f00 	cmp.w	r9, #0
 8011088:	dd54      	ble.n	8011134 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801108a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801108e:	140d      	asrs	r5, r1, #16
 8011090:	1410      	asrs	r0, r2, #16
 8011092:	fb07 5000 	mla	r0, r7, r0, r5
 8011096:	9d02      	ldr	r5, [sp, #8]
 8011098:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801109c:	f8ba 5000 	ldrh.w	r5, [sl]
 80110a0:	122f      	asrs	r7, r5, #8
 80110a2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80110a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80110aa:	fb17 f706 	smulbb	r7, r7, r6
 80110ae:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80110b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80110b6:	00ed      	lsls	r5, r5, #3
 80110b8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80110bc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80110c0:	10c7      	asrs	r7, r0, #3
 80110c2:	b2ed      	uxtb	r5, r5
 80110c4:	00c0      	lsls	r0, r0, #3
 80110c6:	fb18 f806 	smulbb	r8, r8, r6
 80110ca:	fb15 f506 	smulbb	r5, r5, r6
 80110ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80110d2:	b2c0      	uxtb	r0, r0
 80110d4:	fa1f fc8c 	uxth.w	ip, ip
 80110d8:	fb07 870b 	mla	r7, r7, fp, r8
 80110dc:	fb00 500b 	mla	r0, r0, fp, r5
 80110e0:	b280      	uxth	r0, r0
 80110e2:	b2bf      	uxth	r7, r7
 80110e4:	f10c 0501 	add.w	r5, ip, #1
 80110e8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80110ec:	f107 0801 	add.w	r8, r7, #1
 80110f0:	1c45      	adds	r5, r0, #1
 80110f2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80110f6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80110fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80110fc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011100:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011104:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011108:	ea45 0c0c 	orr.w	ip, r5, ip
 801110c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011110:	4401      	add	r1, r0
 8011112:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011114:	ea4c 0c08 	orr.w	ip, ip, r8
 8011118:	f82a cb02 	strh.w	ip, [sl], #2
 801111c:	4402      	add	r2, r0
 801111e:	f109 39ff 	add.w	r9, r9, #4294967295
 8011122:	e7af      	b.n	8011084 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011124:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011128:	f04f 0800 	mov.w	r8, #0
 801112c:	eb03 0008 	add.w	r0, r3, r8
 8011130:	2800      	cmp	r0, #0
 8011132:	dc41      	bgt.n	80111b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8011134:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011138:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801113c:	9b00      	ldr	r3, [sp, #0]
 801113e:	2b00      	cmp	r3, #0
 8011140:	f340 8095 	ble.w	801126e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011144:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011148:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801114c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011150:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011152:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011156:	ee31 1a05 	vadd.f32	s2, s2, s10
 801115a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801115e:	eef0 6a62 	vmov.f32	s13, s5
 8011162:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011166:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801116a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801116e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8011172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011176:	eef0 6a43 	vmov.f32	s13, s6
 801117a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801117e:	ee12 2a90 	vmov	r2, s5
 8011182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011186:	fb92 f3f3 	sdiv	r3, r2, r3
 801118a:	ee13 2a10 	vmov	r2, s6
 801118e:	9311      	str	r3, [sp, #68]	; 0x44
 8011190:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011192:	fb92 f3f3 	sdiv	r3, r2, r3
 8011196:	9312      	str	r3, [sp, #72]	; 0x48
 8011198:	9b00      	ldr	r3, [sp, #0]
 801119a:	9a03      	ldr	r2, [sp, #12]
 801119c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80111a0:	3b01      	subs	r3, #1
 80111a2:	9300      	str	r3, [sp, #0]
 80111a4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80111a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80111aa:	eeb0 3a67 	vmov.f32	s6, s15
 80111ae:	bf08      	it	eq
 80111b0:	4613      	moveq	r3, r2
 80111b2:	eef0 2a47 	vmov.f32	s5, s14
 80111b6:	e72f      	b.n	8011018 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80111b8:	140f      	asrs	r7, r1, #16
 80111ba:	d451      	bmi.n	8011260 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80111bc:	f8de 5008 	ldr.w	r5, [lr, #8]
 80111c0:	42bd      	cmp	r5, r7
 80111c2:	dd4d      	ble.n	8011260 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80111c4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80111c8:	d44a      	bmi.n	8011260 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80111ca:	f8de 000c 	ldr.w	r0, [lr, #12]
 80111ce:	4560      	cmp	r0, ip
 80111d0:	dd46      	ble.n	8011260 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80111d2:	b22d      	sxth	r5, r5
 80111d4:	fb0c 7505 	mla	r5, ip, r5, r7
 80111d8:	9802      	ldr	r0, [sp, #8]
 80111da:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80111de:	f06f 0501 	mvn.w	r5, #1
 80111e2:	fb05 fb08 	mul.w	fp, r5, r8
 80111e6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80111ea:	f834 500b 	ldrh.w	r5, [r4, fp]
 80111ee:	122f      	asrs	r7, r5, #8
 80111f0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80111f4:	fb17 f706 	smulbb	r7, r7, r6
 80111f8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80111fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011200:	00ed      	lsls	r5, r5, #3
 8011202:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011206:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801120a:	10c7      	asrs	r7, r0, #3
 801120c:	b2ed      	uxtb	r5, r5
 801120e:	00c0      	lsls	r0, r0, #3
 8011210:	fb19 f906 	smulbb	r9, r9, r6
 8011214:	fb15 f506 	smulbb	r5, r5, r6
 8011218:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801121c:	b2c0      	uxtb	r0, r0
 801121e:	fa1f fc8c 	uxth.w	ip, ip
 8011222:	fb07 970a 	mla	r7, r7, sl, r9
 8011226:	fb00 500a 	mla	r0, r0, sl, r5
 801122a:	b2bf      	uxth	r7, r7
 801122c:	b280      	uxth	r0, r0
 801122e:	f10c 0501 	add.w	r5, ip, #1
 8011232:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011236:	f107 0901 	add.w	r9, r7, #1
 801123a:	1c45      	adds	r5, r0, #1
 801123c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011240:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011244:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011248:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801124c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011250:	ea45 0c0c 	orr.w	ip, r5, ip
 8011254:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011258:	ea4c 0c09 	orr.w	ip, ip, r9
 801125c:	f824 c00b 	strh.w	ip, [r4, fp]
 8011260:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011262:	4401      	add	r1, r0
 8011264:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011266:	f108 38ff 	add.w	r8, r8, #4294967295
 801126a:	4402      	add	r2, r0
 801126c:	e75e      	b.n	801112c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801126e:	b005      	add	sp, #20
 8011270:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011278:	b085      	sub	sp, #20
 801127a:	4693      	mov	fp, r2
 801127c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801127e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011280:	6870      	ldr	r0, [r6, #4]
 8011282:	9101      	str	r1, [sp, #4]
 8011284:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011288:	fb00 2404 	mla	r4, r0, r4, r2
 801128c:	6832      	ldr	r2, [r6, #0]
 801128e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8011292:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011296:	682a      	ldr	r2, [r5, #0]
 8011298:	9202      	str	r2, [sp, #8]
 801129a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801129e:	9a01      	ldr	r2, [sp, #4]
 80112a0:	2a00      	cmp	r2, #0
 80112a2:	dc03      	bgt.n	80112ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80112a4:	f1bb 0f00 	cmp.w	fp, #0
 80112a8:	f340 809a 	ble.w	80113e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80112ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80112ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80112b2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80112b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80112ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80112bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80112c0:	2b00      	cmp	r3, #0
 80112c2:	dd0c      	ble.n	80112de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80112c4:	1406      	asrs	r6, r0, #16
 80112c6:	d405      	bmi.n	80112d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80112c8:	454e      	cmp	r6, r9
 80112ca:	da03      	bge.n	80112d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80112cc:	1416      	asrs	r6, r2, #16
 80112ce:	d401      	bmi.n	80112d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80112d0:	4546      	cmp	r6, r8
 80112d2:	db05      	blt.n	80112e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80112d4:	4470      	add	r0, lr
 80112d6:	4462      	add	r2, ip
 80112d8:	3b01      	subs	r3, #1
 80112da:	3402      	adds	r4, #2
 80112dc:	e7f0      	b.n	80112c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80112de:	d00f      	beq.n	8011300 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80112e0:	1e5e      	subs	r6, r3, #1
 80112e2:	fb0e 0706 	mla	r7, lr, r6, r0
 80112e6:	143f      	asrs	r7, r7, #16
 80112e8:	d541      	bpl.n	801136e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80112ea:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80112ee:	4698      	mov	r8, r3
 80112f0:	9603      	str	r6, [sp, #12]
 80112f2:	f1b8 0f00 	cmp.w	r8, #0
 80112f6:	dc56      	bgt.n	80113a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80112f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80112fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011300:	9b01      	ldr	r3, [sp, #4]
 8011302:	2b00      	cmp	r3, #0
 8011304:	dd6c      	ble.n	80113e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011306:	ee30 0a04 	vadd.f32	s0, s0, s8
 801130a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801130e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011312:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011314:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011318:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801131c:	eeb0 6a62 	vmov.f32	s12, s5
 8011320:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011324:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011328:	ee77 2a62 	vsub.f32	s5, s14, s5
 801132c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011330:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011334:	eeb0 6a43 	vmov.f32	s12, s6
 8011338:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801133c:	ee12 2a90 	vmov	r2, s5
 8011340:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011344:	fb92 fef3 	sdiv	lr, r2, r3
 8011348:	ee13 2a10 	vmov	r2, s6
 801134c:	fb92 fcf3 	sdiv	ip, r2, r3
 8011350:	9b01      	ldr	r3, [sp, #4]
 8011352:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011356:	3b01      	subs	r3, #1
 8011358:	9301      	str	r3, [sp, #4]
 801135a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801135e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011360:	eeb0 3a67 	vmov.f32	s6, s15
 8011364:	bf08      	it	eq
 8011366:	465b      	moveq	r3, fp
 8011368:	eef0 2a47 	vmov.f32	s5, s14
 801136c:	e797      	b.n	801129e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801136e:	454f      	cmp	r7, r9
 8011370:	dabb      	bge.n	80112ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011372:	fb0c 2606 	mla	r6, ip, r6, r2
 8011376:	1436      	asrs	r6, r6, #16
 8011378:	d4b7      	bmi.n	80112ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801137a:	4546      	cmp	r6, r8
 801137c:	dab5      	bge.n	80112ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801137e:	461e      	mov	r6, r3
 8011380:	46a0      	mov	r8, r4
 8011382:	2e00      	cmp	r6, #0
 8011384:	ddb8      	ble.n	80112f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011386:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801138a:	9902      	ldr	r1, [sp, #8]
 801138c:	1417      	asrs	r7, r2, #16
 801138e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011392:	fb0a 9707 	mla	r7, sl, r7, r9
 8011396:	4470      	add	r0, lr
 8011398:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801139c:	f828 7b02 	strh.w	r7, [r8], #2
 80113a0:	4462      	add	r2, ip
 80113a2:	3e01      	subs	r6, #1
 80113a4:	e7ed      	b.n	8011382 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80113a6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80113aa:	d414      	bmi.n	80113d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80113ac:	68ae      	ldr	r6, [r5, #8]
 80113ae:	454e      	cmp	r6, r9
 80113b0:	dd11      	ble.n	80113d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80113b2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80113b6:	d40e      	bmi.n	80113d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80113b8:	68ef      	ldr	r7, [r5, #12]
 80113ba:	4557      	cmp	r7, sl
 80113bc:	dd0b      	ble.n	80113d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80113be:	b236      	sxth	r6, r6
 80113c0:	fb0a 9606 	mla	r6, sl, r6, r9
 80113c4:	9f02      	ldr	r7, [sp, #8]
 80113c6:	f06f 0101 	mvn.w	r1, #1
 80113ca:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80113ce:	fb01 f608 	mul.w	r6, r1, r8
 80113d2:	9903      	ldr	r1, [sp, #12]
 80113d4:	538f      	strh	r7, [r1, r6]
 80113d6:	4470      	add	r0, lr
 80113d8:	4462      	add	r2, ip
 80113da:	f108 38ff 	add.w	r8, r8, #4294967295
 80113de:	e788      	b.n	80112f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80113e0:	b005      	add	sp, #20
 80113e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080113e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80113e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113ea:	b085      	sub	sp, #20
 80113ec:	468b      	mov	fp, r1
 80113ee:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80113f0:	9202      	str	r2, [sp, #8]
 80113f2:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80113f6:	9203      	str	r2, [sp, #12]
 80113f8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80113fc:	6841      	ldr	r1, [r0, #4]
 80113fe:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011402:	fb01 2404 	mla	r4, r1, r4, r2
 8011406:	6802      	ldr	r2, [r0, #0]
 8011408:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801140c:	f8d8 2000 	ldr.w	r2, [r8]
 8011410:	9200      	str	r2, [sp, #0]
 8011412:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011416:	f1bb 0f00 	cmp.w	fp, #0
 801141a:	dc03      	bgt.n	8011424 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801141c:	9a02      	ldr	r2, [sp, #8]
 801141e:	2a00      	cmp	r2, #0
 8011420:	f340 8134 	ble.w	801168c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8011424:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011426:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801142a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801142e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011432:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011434:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011438:	2b00      	cmp	r3, #0
 801143a:	dd0e      	ble.n	801145a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801143c:	1402      	asrs	r2, r0, #16
 801143e:	d405      	bmi.n	801144c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011440:	42ba      	cmp	r2, r7
 8011442:	da03      	bge.n	801144c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011444:	140a      	asrs	r2, r1, #16
 8011446:	d401      	bmi.n	801144c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011448:	42b2      	cmp	r2, r6
 801144a:	db07      	blt.n	801145c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801144c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801144e:	4410      	add	r0, r2
 8011450:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011452:	3b01      	subs	r3, #1
 8011454:	4411      	add	r1, r2
 8011456:	3402      	adds	r4, #2
 8011458:	e7ee      	b.n	8011438 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801145a:	d019      	beq.n	8011490 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801145c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801145e:	1e5a      	subs	r2, r3, #1
 8011460:	fb05 0502 	mla	r5, r5, r2, r0
 8011464:	142d      	asrs	r5, r5, #16
 8011466:	d409      	bmi.n	801147c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011468:	42bd      	cmp	r5, r7
 801146a:	da07      	bge.n	801147c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801146c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801146e:	fb05 1202 	mla	r2, r5, r2, r1
 8011472:	1412      	asrs	r2, r2, #16
 8011474:	d402      	bmi.n	801147c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011476:	42b2      	cmp	r2, r6
 8011478:	f2c0 80aa 	blt.w	80115d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801147c:	f04f 0c00 	mov.w	ip, #0
 8011480:	eb03 020c 	add.w	r2, r3, ip
 8011484:	2a00      	cmp	r2, #0
 8011486:	dc3e      	bgt.n	8011506 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8011488:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801148c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011490:	f1bb 0f00 	cmp.w	fp, #0
 8011494:	f340 80fa 	ble.w	801168c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8011498:	ee30 0a04 	vadd.f32	s0, s0, s8
 801149c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80114a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80114a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80114a6:	f1bb 0b01 	subs.w	fp, fp, #1
 80114aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80114ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80114b2:	eeb0 6a62 	vmov.f32	s12, s5
 80114b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80114ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80114be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80114c2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80114c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80114ca:	eeb0 6a43 	vmov.f32	s12, s6
 80114ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80114d2:	ee12 2a90 	vmov	r2, s5
 80114d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80114da:	fb92 f3f3 	sdiv	r3, r2, r3
 80114de:	ee13 2a10 	vmov	r2, s6
 80114e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80114e6:	9311      	str	r3, [sp, #68]	; 0x44
 80114e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80114ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80114ee:	9a02      	ldr	r2, [sp, #8]
 80114f0:	9312      	str	r3, [sp, #72]	; 0x48
 80114f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80114f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80114f8:	eeb0 3a67 	vmov.f32	s6, s15
 80114fc:	bf08      	it	eq
 80114fe:	4613      	moveq	r3, r2
 8011500:	eef0 2a47 	vmov.f32	s5, s14
 8011504:	e787      	b.n	8011416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011506:	1406      	asrs	r6, r0, #16
 8011508:	d45b      	bmi.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801150a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801150e:	42b5      	cmp	r5, r6
 8011510:	dd57      	ble.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8011512:	140f      	asrs	r7, r1, #16
 8011514:	d455      	bmi.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8011516:	f8d8 200c 	ldr.w	r2, [r8, #12]
 801151a:	42ba      	cmp	r2, r7
 801151c:	dd51      	ble.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801151e:	b22d      	sxth	r5, r5
 8011520:	fb07 6505 	mla	r5, r7, r5, r6
 8011524:	9a00      	ldr	r2, [sp, #0]
 8011526:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 801152a:	0e2e      	lsrs	r6, r5, #24
 801152c:	d049      	beq.n	80115c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801152e:	f06f 0201 	mvn.w	r2, #1
 8011532:	fb02 f20c 	mul.w	r2, r2, ip
 8011536:	9201      	str	r2, [sp, #4]
 8011538:	f834 e002 	ldrh.w	lr, [r4, r2]
 801153c:	9a03      	ldr	r2, [sp, #12]
 801153e:	4356      	muls	r6, r2
 8011540:	1c72      	adds	r2, r6, #1
 8011542:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011546:	1212      	asrs	r2, r2, #8
 8011548:	fa1f f982 	uxth.w	r9, r2
 801154c:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011550:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011554:	43d2      	mvns	r2, r2
 8011556:	b2d2      	uxtb	r2, r2
 8011558:	fb16 f609 	smulbb	r6, r6, r9
 801155c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011560:	fb07 6702 	mla	r7, r7, r2, r6
 8011564:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011568:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801156c:	b2ed      	uxtb	r5, r5
 801156e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011572:	fa5f fe8e 	uxtb.w	lr, lr
 8011576:	fb15 f509 	smulbb	r5, r5, r9
 801157a:	fb0e 5502 	mla	r5, lr, r2, r5
 801157e:	b2bf      	uxth	r7, r7
 8011580:	fb1a fa09 	smulbb	sl, sl, r9
 8011584:	b2ad      	uxth	r5, r5
 8011586:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801158a:	fb06 a602 	mla	r6, r6, r2, sl
 801158e:	1c7a      	adds	r2, r7, #1
 8011590:	f105 0a01 	add.w	sl, r5, #1
 8011594:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011598:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801159c:	b2b6      	uxth	r6, r6
 801159e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80115a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80115a6:	ea4a 0707 	orr.w	r7, sl, r7
 80115aa:	f106 0a01 	add.w	sl, r6, #1
 80115ae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80115b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80115b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80115ba:	9a01      	ldr	r2, [sp, #4]
 80115bc:	ea47 070a 	orr.w	r7, r7, sl
 80115c0:	52a7      	strh	r7, [r4, r2]
 80115c2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80115c4:	4410      	add	r0, r2
 80115c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80115c8:	f10c 3cff 	add.w	ip, ip, #4294967295
 80115cc:	4411      	add	r1, r2
 80115ce:	e757      	b.n	8011480 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80115d0:	f04f 0e00 	mov.w	lr, #0
 80115d4:	eba3 020e 	sub.w	r2, r3, lr
 80115d8:	2a00      	cmp	r2, #0
 80115da:	f77f af55 	ble.w	8011488 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80115de:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80115e2:	1405      	asrs	r5, r0, #16
 80115e4:	140a      	asrs	r2, r1, #16
 80115e6:	fb06 5202 	mla	r2, r6, r2, r5
 80115ea:	9d00      	ldr	r5, [sp, #0]
 80115ec:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80115f0:	0e2e      	lsrs	r6, r5, #24
 80115f2:	d044      	beq.n	801167e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80115f4:	9a03      	ldr	r2, [sp, #12]
 80115f6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80115fa:	4356      	muls	r6, r2
 80115fc:	1c72      	adds	r2, r6, #1
 80115fe:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011602:	1212      	asrs	r2, r2, #8
 8011604:	fa1f f982 	uxth.w	r9, r2
 8011608:	ea4f 272c 	mov.w	r7, ip, asr #8
 801160c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011610:	43d2      	mvns	r2, r2
 8011612:	b2d2      	uxtb	r2, r2
 8011614:	fb16 f609 	smulbb	r6, r6, r9
 8011618:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801161c:	fb07 6702 	mla	r7, r7, r2, r6
 8011620:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011624:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011628:	b2ed      	uxtb	r5, r5
 801162a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801162e:	fa5f fc8c 	uxtb.w	ip, ip
 8011632:	fb15 f509 	smulbb	r5, r5, r9
 8011636:	fb0c 5502 	mla	r5, ip, r2, r5
 801163a:	b2bf      	uxth	r7, r7
 801163c:	fb1a fa09 	smulbb	sl, sl, r9
 8011640:	b2ad      	uxth	r5, r5
 8011642:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011646:	fb06 a602 	mla	r6, r6, r2, sl
 801164a:	1c7a      	adds	r2, r7, #1
 801164c:	f105 0a01 	add.w	sl, r5, #1
 8011650:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011654:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011658:	b2b6      	uxth	r6, r6
 801165a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801165e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011662:	ea4a 0707 	orr.w	r7, sl, r7
 8011666:	f106 0a01 	add.w	sl, r6, #1
 801166a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801166e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011672:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011676:	ea47 070a 	orr.w	r7, r7, sl
 801167a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801167e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011680:	4410      	add	r0, r2
 8011682:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011684:	f10e 0e01 	add.w	lr, lr, #1
 8011688:	4411      	add	r1, r2
 801168a:	e7a3      	b.n	80115d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801168c:	b005      	add	sp, #20
 801168e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011694 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011698:	b085      	sub	sp, #20
 801169a:	468b      	mov	fp, r1
 801169c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801169e:	9203      	str	r2, [sp, #12]
 80116a0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80116a4:	6861      	ldr	r1, [r4, #4]
 80116a6:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 80116aa:	fb01 2000 	mla	r0, r1, r0, r2
 80116ae:	6822      	ldr	r2, [r4, #0]
 80116b0:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80116b4:	f8d9 2000 	ldr.w	r2, [r9]
 80116b8:	9200      	str	r2, [sp, #0]
 80116ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80116be:	f1bb 0f00 	cmp.w	fp, #0
 80116c2:	dc03      	bgt.n	80116cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80116c4:	9a03      	ldr	r2, [sp, #12]
 80116c6:	2a00      	cmp	r2, #0
 80116c8:	f340 814a 	ble.w	8011960 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80116cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80116ce:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80116d2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80116d6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80116da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80116dc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80116e0:	2b00      	cmp	r3, #0
 80116e2:	dd0e      	ble.n	8011702 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80116e4:	140c      	asrs	r4, r1, #16
 80116e6:	d405      	bmi.n	80116f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80116e8:	42bc      	cmp	r4, r7
 80116ea:	da03      	bge.n	80116f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80116ec:	1414      	asrs	r4, r2, #16
 80116ee:	d401      	bmi.n	80116f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80116f0:	42b4      	cmp	r4, r6
 80116f2:	db07      	blt.n	8011704 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80116f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80116f6:	4421      	add	r1, r4
 80116f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80116fa:	3b01      	subs	r3, #1
 80116fc:	4422      	add	r2, r4
 80116fe:	3002      	adds	r0, #2
 8011700:	e7ee      	b.n	80116e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011702:	d017      	beq.n	8011734 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011704:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011706:	1e5c      	subs	r4, r3, #1
 8011708:	fb05 1504 	mla	r5, r5, r4, r1
 801170c:	142d      	asrs	r5, r5, #16
 801170e:	d409      	bmi.n	8011724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011710:	42bd      	cmp	r5, r7
 8011712:	da07      	bge.n	8011724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011714:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011716:	fb05 2404 	mla	r4, r5, r4, r2
 801171a:	1424      	asrs	r4, r4, #16
 801171c:	d402      	bmi.n	8011724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801171e:	42b4      	cmp	r4, r6
 8011720:	f2c0 80ba 	blt.w	8011898 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011724:	2700      	movs	r7, #0
 8011726:	19dc      	adds	r4, r3, r7
 8011728:	2c00      	cmp	r4, #0
 801172a:	dc3e      	bgt.n	80117aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801172c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011730:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011734:	f1bb 0f00 	cmp.w	fp, #0
 8011738:	f340 8112 	ble.w	8011960 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801173c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011740:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011744:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011748:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801174a:	f1bb 0b01 	subs.w	fp, fp, #1
 801174e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011752:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011756:	eeb0 6a62 	vmov.f32	s12, s5
 801175a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801175e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011762:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011766:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801176a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801176e:	eeb0 6a43 	vmov.f32	s12, s6
 8011772:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011776:	ee12 2a90 	vmov	r2, s5
 801177a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801177e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011782:	ee13 2a10 	vmov	r2, s6
 8011786:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801178a:	9311      	str	r3, [sp, #68]	; 0x44
 801178c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801178e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011792:	9a03      	ldr	r2, [sp, #12]
 8011794:	9312      	str	r3, [sp, #72]	; 0x48
 8011796:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801179a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801179c:	eeb0 3a67 	vmov.f32	s6, s15
 80117a0:	bf08      	it	eq
 80117a2:	4613      	moveq	r3, r2
 80117a4:	eef0 2a47 	vmov.f32	s5, s14
 80117a8:	e789      	b.n	80116be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80117aa:	140e      	asrs	r6, r1, #16
 80117ac:	d45f      	bmi.n	801186e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80117ae:	f8d9 5008 	ldr.w	r5, [r9, #8]
 80117b2:	42b5      	cmp	r5, r6
 80117b4:	dd5b      	ble.n	801186e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80117b6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80117ba:	d458      	bmi.n	801186e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80117bc:	f8d9 400c 	ldr.w	r4, [r9, #12]
 80117c0:	4564      	cmp	r4, ip
 80117c2:	dd54      	ble.n	801186e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80117c4:	b22d      	sxth	r5, r5
 80117c6:	fb0c 6505 	mla	r5, ip, r5, r6
 80117ca:	9c00      	ldr	r4, [sp, #0]
 80117cc:	f854 c025 	ldr.w	ip, [r4, r5, lsl #2]
 80117d0:	ea5f 6e1c 	movs.w	lr, ip, lsr #24
 80117d4:	d04b      	beq.n	801186e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80117d6:	fa5f f48e 	uxtb.w	r4, lr
 80117da:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80117de:	9401      	str	r4, [sp, #4]
 80117e0:	ea4f 461c 	mov.w	r6, ip, lsr #16
 80117e4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80117e8:	f06f 0401 	mvn.w	r4, #1
 80117ec:	fa5f fc8c 	uxtb.w	ip, ip
 80117f0:	d043      	beq.n	801187a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80117f2:	437c      	muls	r4, r7
 80117f4:	9402      	str	r4, [sp, #8]
 80117f6:	f830 8004 	ldrh.w	r8, [r0, r4]
 80117fa:	9c01      	ldr	r4, [sp, #4]
 80117fc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011800:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011804:	43e4      	mvns	r4, r4
 8011806:	b2f6      	uxtb	r6, r6
 8011808:	b2e4      	uxtb	r4, r4
 801180a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801180e:	fb16 f60a 	smulbb	r6, r6, sl
 8011812:	fb0e 6604 	mla	r6, lr, r4, r6
 8011816:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 801181a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801181e:	fa5f f888 	uxtb.w	r8, r8
 8011822:	fb1c fc0a 	smulbb	ip, ip, sl
 8011826:	fb08 cc04 	mla	ip, r8, r4, ip
 801182a:	b2ed      	uxtb	r5, r5
 801182c:	b2b6      	uxth	r6, r6
 801182e:	fb15 f50a 	smulbb	r5, r5, sl
 8011832:	fa1f fc8c 	uxth.w	ip, ip
 8011836:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801183a:	fb0e 5e04 	mla	lr, lr, r4, r5
 801183e:	1c74      	adds	r4, r6, #1
 8011840:	f10c 0501 	add.w	r5, ip, #1
 8011844:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8011848:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 801184c:	fa1f fe8e 	uxth.w	lr, lr
 8011850:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011854:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011858:	432e      	orrs	r6, r5
 801185a:	f10e 0501 	add.w	r5, lr, #1
 801185e:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 8011862:	096d      	lsrs	r5, r5, #5
 8011864:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011868:	9c02      	ldr	r4, [sp, #8]
 801186a:	432e      	orrs	r6, r5
 801186c:	5306      	strh	r6, [r0, r4]
 801186e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011870:	4421      	add	r1, r4
 8011872:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011874:	3f01      	subs	r7, #1
 8011876:	4422      	add	r2, r4
 8011878:	e755      	b.n	8011726 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801187a:	fb04 fe07 	mul.w	lr, r4, r7
 801187e:	f2a4 74fe 	subw	r4, r4, #2046	; 0x7fe
 8011882:	ea04 2606 	and.w	r6, r4, r6, lsl #8
 8011886:	00ed      	lsls	r5, r5, #3
 8011888:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 801188c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011890:	432e      	orrs	r6, r5
 8011892:	f820 600e 	strh.w	r6, [r0, lr]
 8011896:	e7ea      	b.n	801186e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8011898:	f04f 0800 	mov.w	r8, #0
 801189c:	eba3 0408 	sub.w	r4, r3, r8
 80118a0:	2c00      	cmp	r4, #0
 80118a2:	f77f af43 	ble.w	801172c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80118a6:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80118aa:	140d      	asrs	r5, r1, #16
 80118ac:	1414      	asrs	r4, r2, #16
 80118ae:	fb06 5404 	mla	r4, r6, r4, r5
 80118b2:	9d00      	ldr	r5, [sp, #0]
 80118b4:	f855 7024 	ldr.w	r7, [r5, r4, lsl #2]
 80118b8:	ea5f 6c17 	movs.w	ip, r7, lsr #24
 80118bc:	d042      	beq.n	8011944 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80118be:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80118c2:	ea4f 4517 	mov.w	r5, r7, lsr #16
 80118c6:	ea4f 2617 	mov.w	r6, r7, lsr #8
 80118ca:	fa5f f48c 	uxtb.w	r4, ip
 80118ce:	b2ff      	uxtb	r7, r7
 80118d0:	d03f      	beq.n	8011952 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80118d2:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 80118d6:	fa1f fa84 	uxth.w	sl, r4
 80118da:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80118de:	43e4      	mvns	r4, r4
 80118e0:	b2ed      	uxtb	r5, r5
 80118e2:	b2e4      	uxtb	r4, r4
 80118e4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80118e8:	fb15 f50a 	smulbb	r5, r5, sl
 80118ec:	fb0c 5504 	mla	r5, ip, r4, r5
 80118f0:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80118f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80118f8:	fa5f fe8e 	uxtb.w	lr, lr
 80118fc:	fb17 f70a 	smulbb	r7, r7, sl
 8011900:	fb0e 7704 	mla	r7, lr, r4, r7
 8011904:	b2f6      	uxtb	r6, r6
 8011906:	b2ad      	uxth	r5, r5
 8011908:	fb16 f60a 	smulbb	r6, r6, sl
 801190c:	b2bf      	uxth	r7, r7
 801190e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011912:	fb0c 6c04 	mla	ip, ip, r4, r6
 8011916:	1c6c      	adds	r4, r5, #1
 8011918:	1c7e      	adds	r6, r7, #1
 801191a:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 801191e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011922:	fa1f fc8c 	uxth.w	ip, ip
 8011926:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801192a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801192e:	4335      	orrs	r5, r6
 8011930:	f10c 0601 	add.w	r6, ip, #1
 8011934:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011938:	0976      	lsrs	r6, r6, #5
 801193a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801193e:	4335      	orrs	r5, r6
 8011940:	f820 5018 	strh.w	r5, [r0, r8, lsl #1]
 8011944:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011946:	4421      	add	r1, r4
 8011948:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801194a:	f108 0801 	add.w	r8, r8, #1
 801194e:	4422      	add	r2, r4
 8011950:	e7a4      	b.n	801189c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011952:	4c05      	ldr	r4, [pc, #20]	; (8011968 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>)
 8011954:	ea04 2505 	and.w	r5, r4, r5, lsl #8
 8011958:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 801195c:	00f6      	lsls	r6, r6, #3
 801195e:	e7ec      	b.n	801193a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8011960:	b005      	add	sp, #20
 8011962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011966:	bf00      	nop
 8011968:	fffff800 	.word	0xfffff800

0801196c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801196c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011970:	b087      	sub	sp, #28
 8011972:	468b      	mov	fp, r1
 8011974:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011976:	9204      	str	r2, [sp, #16]
 8011978:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801197c:	9205      	str	r2, [sp, #20]
 801197e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011982:	6841      	ldr	r1, [r0, #4]
 8011984:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011988:	fb01 2404 	mla	r4, r1, r4, r2
 801198c:	6802      	ldr	r2, [r0, #0]
 801198e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011992:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011996:	3201      	adds	r2, #1
 8011998:	f022 0201 	bic.w	r2, r2, #1
 801199c:	9201      	str	r2, [sp, #4]
 801199e:	f8d8 2000 	ldr.w	r2, [r8]
 80119a2:	9202      	str	r2, [sp, #8]
 80119a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80119a8:	f1bb 0f00 	cmp.w	fp, #0
 80119ac:	dc03      	bgt.n	80119b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80119ae:	9a04      	ldr	r2, [sp, #16]
 80119b0:	2a00      	cmp	r2, #0
 80119b2:	f340 8146 	ble.w	8011c42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80119b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80119b8:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80119bc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80119c0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80119c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80119c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80119ca:	2b00      	cmp	r3, #0
 80119cc:	dd0e      	ble.n	80119ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80119ce:	1402      	asrs	r2, r0, #16
 80119d0:	d405      	bmi.n	80119de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80119d2:	42ba      	cmp	r2, r7
 80119d4:	da03      	bge.n	80119de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80119d6:	140a      	asrs	r2, r1, #16
 80119d8:	d401      	bmi.n	80119de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80119da:	42b2      	cmp	r2, r6
 80119dc:	db07      	blt.n	80119ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80119de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80119e0:	4410      	add	r0, r2
 80119e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80119e4:	3b01      	subs	r3, #1
 80119e6:	4411      	add	r1, r2
 80119e8:	3402      	adds	r4, #2
 80119ea:	e7ee      	b.n	80119ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80119ec:	d017      	beq.n	8011a1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80119ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80119f0:	1e5a      	subs	r2, r3, #1
 80119f2:	fb05 0502 	mla	r5, r5, r2, r0
 80119f6:	142d      	asrs	r5, r5, #16
 80119f8:	d409      	bmi.n	8011a0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80119fa:	42bd      	cmp	r5, r7
 80119fc:	da07      	bge.n	8011a0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80119fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011a00:	fb05 1202 	mla	r2, r5, r2, r1
 8011a04:	1412      	asrs	r2, r2, #16
 8011a06:	d402      	bmi.n	8011a0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011a08:	42b2      	cmp	r2, r6
 8011a0a:	f2c0 80b3 	blt.w	8011b74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011a0e:	2700      	movs	r7, #0
 8011a10:	19da      	adds	r2, r3, r7
 8011a12:	2a00      	cmp	r2, #0
 8011a14:	dc3e      	bgt.n	8011a94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011a16:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011a1a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011a1e:	f1bb 0f00 	cmp.w	fp, #0
 8011a22:	f340 810e 	ble.w	8011c42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011a26:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011a2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011a2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011a32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a34:	f1bb 0b01 	subs.w	fp, fp, #1
 8011a38:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011a3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a40:	eeb0 6a62 	vmov.f32	s12, s5
 8011a44:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a48:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a4c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a50:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011a54:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a58:	eeb0 6a43 	vmov.f32	s12, s6
 8011a5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a60:	ee12 2a90 	vmov	r2, s5
 8011a64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a68:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a6c:	ee13 2a10 	vmov	r2, s6
 8011a70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a74:	9313      	str	r3, [sp, #76]	; 0x4c
 8011a76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a78:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a7c:	9a04      	ldr	r2, [sp, #16]
 8011a7e:	9314      	str	r3, [sp, #80]	; 0x50
 8011a80:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011a84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a86:	eeb0 3a67 	vmov.f32	s6, s15
 8011a8a:	bf08      	it	eq
 8011a8c:	4613      	moveq	r3, r2
 8011a8e:	eef0 2a47 	vmov.f32	s5, s14
 8011a92:	e789      	b.n	80119a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011a94:	1405      	asrs	r5, r0, #16
 8011a96:	d467      	bmi.n	8011b68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011a98:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011a9c:	42aa      	cmp	r2, r5
 8011a9e:	dd63      	ble.n	8011b68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011aa0:	140e      	asrs	r6, r1, #16
 8011aa2:	d461      	bmi.n	8011b68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011aa4:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8011aa8:	42b2      	cmp	r2, r6
 8011aaa:	dd5d      	ble.n	8011b68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011aac:	9a01      	ldr	r2, [sp, #4]
 8011aae:	fb06 5502 	mla	r5, r6, r2, r5
 8011ab2:	086a      	lsrs	r2, r5, #1
 8011ab4:	9e02      	ldr	r6, [sp, #8]
 8011ab6:	5cb2      	ldrb	r2, [r6, r2]
 8011ab8:	07ee      	lsls	r6, r5, #31
 8011aba:	bf54      	ite	pl
 8011abc:	f002 020f 	andpl.w	r2, r2, #15
 8011ac0:	1112      	asrmi	r2, r2, #4
 8011ac2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011ac6:	b2d2      	uxtb	r2, r2
 8011ac8:	2a00      	cmp	r2, #0
 8011aca:	d04d      	beq.n	8011b68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011acc:	4d5e      	ldr	r5, [pc, #376]	; (8011c48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011ace:	f8d5 c000 	ldr.w	ip, [r5]
 8011ad2:	f06f 0501 	mvn.w	r5, #1
 8011ad6:	437d      	muls	r5, r7
 8011ad8:	9503      	str	r5, [sp, #12]
 8011ada:	f834 e005 	ldrh.w	lr, [r4, r5]
 8011ade:	9d05      	ldr	r5, [sp, #20]
 8011ae0:	436a      	muls	r2, r5
 8011ae2:	1c55      	adds	r5, r2, #1
 8011ae4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011ae8:	1212      	asrs	r2, r2, #8
 8011aea:	fa1f f982 	uxth.w	r9, r2
 8011aee:	ea4f 262e 	mov.w	r6, lr, asr #8
 8011af2:	f3cc 4507 	ubfx	r5, ip, #16, #8
 8011af6:	43d2      	mvns	r2, r2
 8011af8:	b2d2      	uxtb	r2, r2
 8011afa:	fb15 f509 	smulbb	r5, r5, r9
 8011afe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011b02:	fb06 5602 	mla	r6, r6, r2, r5
 8011b06:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8011b0a:	ea4f 05ee 	mov.w	r5, lr, asr #3
 8011b0e:	fa5f fc8c 	uxtb.w	ip, ip
 8011b12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011b16:	fa5f fe8e 	uxtb.w	lr, lr
 8011b1a:	fb1c fc09 	smulbb	ip, ip, r9
 8011b1e:	fb0e cc02 	mla	ip, lr, r2, ip
 8011b22:	b2b6      	uxth	r6, r6
 8011b24:	fb1a fa09 	smulbb	sl, sl, r9
 8011b28:	fa1f fc8c 	uxth.w	ip, ip
 8011b2c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011b30:	fb05 a502 	mla	r5, r5, r2, sl
 8011b34:	1c72      	adds	r2, r6, #1
 8011b36:	f10c 0a01 	add.w	sl, ip, #1
 8011b3a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011b3e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8011b42:	b2ad      	uxth	r5, r5
 8011b44:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011b48:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011b4c:	ea4a 0606 	orr.w	r6, sl, r6
 8011b50:	f105 0a01 	add.w	sl, r5, #1
 8011b54:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011b58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011b5c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011b60:	9a03      	ldr	r2, [sp, #12]
 8011b62:	ea46 060a 	orr.w	r6, r6, sl
 8011b66:	52a6      	strh	r6, [r4, r2]
 8011b68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011b6a:	4410      	add	r0, r2
 8011b6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011b6e:	3f01      	subs	r7, #1
 8011b70:	4411      	add	r1, r2
 8011b72:	e74d      	b.n	8011a10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011b74:	f04f 0e00 	mov.w	lr, #0
 8011b78:	eba3 020e 	sub.w	r2, r3, lr
 8011b7c:	2a00      	cmp	r2, #0
 8011b7e:	f77f af4a 	ble.w	8011a16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011b82:	9e01      	ldr	r6, [sp, #4]
 8011b84:	1402      	asrs	r2, r0, #16
 8011b86:	140d      	asrs	r5, r1, #16
 8011b88:	fb06 2505 	mla	r5, r6, r5, r2
 8011b8c:	086a      	lsrs	r2, r5, #1
 8011b8e:	9e02      	ldr	r6, [sp, #8]
 8011b90:	5cb2      	ldrb	r2, [r6, r2]
 8011b92:	07ed      	lsls	r5, r5, #31
 8011b94:	bf54      	ite	pl
 8011b96:	f002 020f 	andpl.w	r2, r2, #15
 8011b9a:	1112      	asrmi	r2, r2, #4
 8011b9c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011ba0:	b2d2      	uxtb	r2, r2
 8011ba2:	2a00      	cmp	r2, #0
 8011ba4:	d046      	beq.n	8011c34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011ba6:	4d28      	ldr	r5, [pc, #160]	; (8011c48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011ba8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011bac:	682f      	ldr	r7, [r5, #0]
 8011bae:	9d05      	ldr	r5, [sp, #20]
 8011bb0:	436a      	muls	r2, r5
 8011bb2:	1c55      	adds	r5, r2, #1
 8011bb4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011bb8:	1212      	asrs	r2, r2, #8
 8011bba:	fa1f f982 	uxth.w	r9, r2
 8011bbe:	ea4f 262c 	mov.w	r6, ip, asr #8
 8011bc2:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8011bc6:	43d2      	mvns	r2, r2
 8011bc8:	b2d2      	uxtb	r2, r2
 8011bca:	fb15 f509 	smulbb	r5, r5, r9
 8011bce:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011bd2:	fb06 5602 	mla	r6, r6, r2, r5
 8011bd6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8011bda:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8011bde:	b2ff      	uxtb	r7, r7
 8011be0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011be4:	fa5f fc8c 	uxtb.w	ip, ip
 8011be8:	fb17 f709 	smulbb	r7, r7, r9
 8011bec:	fb0c 7702 	mla	r7, ip, r2, r7
 8011bf0:	b2b6      	uxth	r6, r6
 8011bf2:	fb1a fa09 	smulbb	sl, sl, r9
 8011bf6:	b2bf      	uxth	r7, r7
 8011bf8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011bfc:	fb05 a502 	mla	r5, r5, r2, sl
 8011c00:	1c72      	adds	r2, r6, #1
 8011c02:	f107 0a01 	add.w	sl, r7, #1
 8011c06:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011c0a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011c0e:	b2ad      	uxth	r5, r5
 8011c10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011c14:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011c18:	ea4a 0606 	orr.w	r6, sl, r6
 8011c1c:	f105 0a01 	add.w	sl, r5, #1
 8011c20:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011c24:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011c28:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011c2c:	ea46 060a 	orr.w	r6, r6, sl
 8011c30:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8011c34:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011c36:	4410      	add	r0, r2
 8011c38:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011c3a:	f10e 0e01 	add.w	lr, lr, #1
 8011c3e:	4411      	add	r1, r2
 8011c40:	e79a      	b.n	8011b78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8011c42:	b007      	add	sp, #28
 8011c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c48:	2000a32c 	.word	0x2000a32c

08011c4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c50:	b087      	sub	sp, #28
 8011c52:	468b      	mov	fp, r1
 8011c54:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011c56:	9205      	str	r2, [sp, #20]
 8011c58:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011c5c:	6841      	ldr	r1, [r0, #4]
 8011c5e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011c62:	fb01 2404 	mla	r4, r1, r4, r2
 8011c66:	6802      	ldr	r2, [r0, #0]
 8011c68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c6c:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011c70:	3201      	adds	r2, #1
 8011c72:	f022 0201 	bic.w	r2, r2, #1
 8011c76:	9201      	str	r2, [sp, #4]
 8011c78:	f8d8 2000 	ldr.w	r2, [r8]
 8011c7c:	9202      	str	r2, [sp, #8]
 8011c7e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011c82:	f1bb 0f00 	cmp.w	fp, #0
 8011c86:	dc03      	bgt.n	8011c90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8011c88:	9a05      	ldr	r2, [sp, #20]
 8011c8a:	2a00      	cmp	r2, #0
 8011c8c:	f340 8159 	ble.w	8011f42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8011c90:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011c92:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011c96:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011c9a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011c9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011ca0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011ca4:	2b00      	cmp	r3, #0
 8011ca6:	dd0e      	ble.n	8011cc6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8011ca8:	1402      	asrs	r2, r0, #16
 8011caa:	d405      	bmi.n	8011cb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011cac:	42ba      	cmp	r2, r7
 8011cae:	da03      	bge.n	8011cb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011cb0:	140a      	asrs	r2, r1, #16
 8011cb2:	d401      	bmi.n	8011cb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011cb4:	42b2      	cmp	r2, r6
 8011cb6:	db07      	blt.n	8011cc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011cb8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011cba:	4410      	add	r0, r2
 8011cbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011cbe:	3b01      	subs	r3, #1
 8011cc0:	4411      	add	r1, r2
 8011cc2:	3402      	adds	r4, #2
 8011cc4:	e7ee      	b.n	8011ca4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8011cc6:	d017      	beq.n	8011cf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8011cc8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011cca:	1e5a      	subs	r2, r3, #1
 8011ccc:	fb05 0502 	mla	r5, r5, r2, r0
 8011cd0:	142d      	asrs	r5, r5, #16
 8011cd2:	d409      	bmi.n	8011ce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011cd4:	42bd      	cmp	r5, r7
 8011cd6:	da07      	bge.n	8011ce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011cd8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011cda:	fb05 1202 	mla	r2, r5, r2, r1
 8011cde:	1412      	asrs	r2, r2, #16
 8011ce0:	d402      	bmi.n	8011ce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011ce2:	42b2      	cmp	r2, r6
 8011ce4:	f2c0 80c3 	blt.w	8011e6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8011ce8:	2700      	movs	r7, #0
 8011cea:	19da      	adds	r2, r3, r7
 8011cec:	2a00      	cmp	r2, #0
 8011cee:	dc3e      	bgt.n	8011d6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8011cf0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011cf4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011cf8:	f1bb 0f00 	cmp.w	fp, #0
 8011cfc:	f340 8121 	ble.w	8011f42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8011d00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011d04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d08:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011d0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d0e:	f1bb 0b01 	subs.w	fp, fp, #1
 8011d12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d1a:	eeb0 6a62 	vmov.f32	s12, s5
 8011d1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d2a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011d2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d32:	eeb0 6a43 	vmov.f32	s12, s6
 8011d36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d3a:	ee12 2a90 	vmov	r2, s5
 8011d3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d42:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d46:	ee13 2a10 	vmov	r2, s6
 8011d4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d4e:	9313      	str	r3, [sp, #76]	; 0x4c
 8011d50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d52:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d56:	9a05      	ldr	r2, [sp, #20]
 8011d58:	9314      	str	r3, [sp, #80]	; 0x50
 8011d5a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011d5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d60:	eeb0 3a67 	vmov.f32	s6, s15
 8011d64:	bf08      	it	eq
 8011d66:	4613      	moveq	r3, r2
 8011d68:	eef0 2a47 	vmov.f32	s5, s14
 8011d6c:	e789      	b.n	8011c82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011d6e:	1405      	asrs	r5, r0, #16
 8011d70:	d465      	bmi.n	8011e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011d72:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011d76:	42aa      	cmp	r2, r5
 8011d78:	dd61      	ble.n	8011e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011d7a:	140e      	asrs	r6, r1, #16
 8011d7c:	d45f      	bmi.n	8011e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011d7e:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8011d82:	42b2      	cmp	r2, r6
 8011d84:	dd5b      	ble.n	8011e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011d86:	9a01      	ldr	r2, [sp, #4]
 8011d88:	fb06 5502 	mla	r5, r6, r2, r5
 8011d8c:	086a      	lsrs	r2, r5, #1
 8011d8e:	9e02      	ldr	r6, [sp, #8]
 8011d90:	5cb2      	ldrb	r2, [r6, r2]
 8011d92:	07ee      	lsls	r6, r5, #31
 8011d94:	bf54      	ite	pl
 8011d96:	f002 020f 	andpl.w	r2, r2, #15
 8011d9a:	1112      	asrmi	r2, r2, #4
 8011d9c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011da0:	b2d2      	uxtb	r2, r2
 8011da2:	2a00      	cmp	r2, #0
 8011da4:	d04b      	beq.n	8011e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011da6:	4d68      	ldr	r5, [pc, #416]	; (8011f48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011da8:	f8d5 9000 	ldr.w	r9, [r5]
 8011dac:	2aff      	cmp	r2, #255	; 0xff
 8011dae:	ea4f 2519 	mov.w	r5, r9, lsr #8
 8011db2:	ea4f 4619 	mov.w	r6, r9, lsr #16
 8011db6:	9503      	str	r5, [sp, #12]
 8011db8:	fa5f f989 	uxtb.w	r9, r9
 8011dbc:	d045      	beq.n	8011e4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8011dbe:	f06f 0501 	mvn.w	r5, #1
 8011dc2:	437d      	muls	r5, r7
 8011dc4:	fa1f fa82 	uxth.w	sl, r2
 8011dc8:	f834 e005 	ldrh.w	lr, [r4, r5]
 8011dcc:	9504      	str	r5, [sp, #16]
 8011dce:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011dd2:	43d2      	mvns	r2, r2
 8011dd4:	b2f6      	uxtb	r6, r6
 8011dd6:	b2d2      	uxtb	r2, r2
 8011dd8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011ddc:	fb16 f60a 	smulbb	r6, r6, sl
 8011de0:	fb0c 6602 	mla	r6, ip, r2, r6
 8011de4:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011de8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011dec:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8011df0:	fa5f fe8e 	uxtb.w	lr, lr
 8011df4:	fb19 f90a 	smulbb	r9, r9, sl
 8011df8:	fb0e 9902 	mla	r9, lr, r2, r9
 8011dfc:	b2b6      	uxth	r6, r6
 8011dfe:	fb15 f50a 	smulbb	r5, r5, sl
 8011e02:	fa1f f989 	uxth.w	r9, r9
 8011e06:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011e0a:	fb0c 5c02 	mla	ip, ip, r2, r5
 8011e0e:	1c72      	adds	r2, r6, #1
 8011e10:	f109 0501 	add.w	r5, r9, #1
 8011e14:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011e18:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8011e1c:	fa1f fc8c 	uxth.w	ip, ip
 8011e20:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011e24:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011e28:	432e      	orrs	r6, r5
 8011e2a:	f10c 0501 	add.w	r5, ip, #1
 8011e2e:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 8011e32:	096d      	lsrs	r5, r5, #5
 8011e34:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011e38:	9a04      	ldr	r2, [sp, #16]
 8011e3a:	432e      	orrs	r6, r5
 8011e3c:	52a6      	strh	r6, [r4, r2]
 8011e3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e40:	4410      	add	r0, r2
 8011e42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e44:	3f01      	subs	r7, #1
 8011e46:	4411      	add	r1, r2
 8011e48:	e74f      	b.n	8011cea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011e4a:	f06f 0201 	mvn.w	r2, #1
 8011e4e:	fb02 fc07 	mul.w	ip, r2, r7
 8011e52:	f2a2 72fe 	subw	r2, r2, #2046	; 0x7fe
 8011e56:	ea02 2606 	and.w	r6, r2, r6, lsl #8
 8011e5a:	9a03      	ldr	r2, [sp, #12]
 8011e5c:	00d5      	lsls	r5, r2, #3
 8011e5e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011e62:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011e66:	432e      	orrs	r6, r5
 8011e68:	f824 600c 	strh.w	r6, [r4, ip]
 8011e6c:	e7e7      	b.n	8011e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e6e:	f04f 0e00 	mov.w	lr, #0
 8011e72:	eba3 020e 	sub.w	r2, r3, lr
 8011e76:	2a00      	cmp	r2, #0
 8011e78:	f77f af3a 	ble.w	8011cf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011e7c:	9e01      	ldr	r6, [sp, #4]
 8011e7e:	1402      	asrs	r2, r0, #16
 8011e80:	140d      	asrs	r5, r1, #16
 8011e82:	fb06 2505 	mla	r5, r6, r5, r2
 8011e86:	086a      	lsrs	r2, r5, #1
 8011e88:	9e02      	ldr	r6, [sp, #8]
 8011e8a:	5cb2      	ldrb	r2, [r6, r2]
 8011e8c:	07ed      	lsls	r5, r5, #31
 8011e8e:	bf54      	ite	pl
 8011e90:	f002 020f 	andpl.w	r2, r2, #15
 8011e94:	1112      	asrmi	r2, r2, #4
 8011e96:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e9a:	b2d2      	uxtb	r2, r2
 8011e9c:	2a00      	cmp	r2, #0
 8011e9e:	d042      	beq.n	8011f26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8011ea0:	4d29      	ldr	r5, [pc, #164]	; (8011f48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011ea2:	682f      	ldr	r7, [r5, #0]
 8011ea4:	2aff      	cmp	r2, #255	; 0xff
 8011ea6:	ea4f 4517 	mov.w	r5, r7, lsr #16
 8011eaa:	ea4f 2617 	mov.w	r6, r7, lsr #8
 8011eae:	fa5f f987 	uxtb.w	r9, r7
 8011eb2:	d03f      	beq.n	8011f34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8011eb4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011eb8:	fa1f fa82 	uxth.w	sl, r2
 8011ebc:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011ec0:	43d2      	mvns	r2, r2
 8011ec2:	b2ed      	uxtb	r5, r5
 8011ec4:	b2d2      	uxtb	r2, r2
 8011ec6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011eca:	fb15 f50a 	smulbb	r5, r5, sl
 8011ece:	fb07 5502 	mla	r5, r7, r2, r5
 8011ed2:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8011ed6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011eda:	fa5f fc8c 	uxtb.w	ip, ip
 8011ede:	fb19 f90a 	smulbb	r9, r9, sl
 8011ee2:	fb0c 9902 	mla	r9, ip, r2, r9
 8011ee6:	b2f6      	uxtb	r6, r6
 8011ee8:	b2ad      	uxth	r5, r5
 8011eea:	fb16 f60a 	smulbb	r6, r6, sl
 8011eee:	fa1f f989 	uxth.w	r9, r9
 8011ef2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011ef6:	fb07 6702 	mla	r7, r7, r2, r6
 8011efa:	1c6a      	adds	r2, r5, #1
 8011efc:	f109 0601 	add.w	r6, r9, #1
 8011f00:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8011f04:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8011f08:	b2bf      	uxth	r7, r7
 8011f0a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011f0e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8011f12:	4335      	orrs	r5, r6
 8011f14:	1c7e      	adds	r6, r7, #1
 8011f16:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011f1a:	0976      	lsrs	r6, r6, #5
 8011f1c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011f20:	4335      	orrs	r5, r6
 8011f22:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8011f26:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f28:	4410      	add	r0, r2
 8011f2a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f2c:	f10e 0e01 	add.w	lr, lr, #1
 8011f30:	4411      	add	r1, r2
 8011f32:	e79e      	b.n	8011e72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8011f34:	4a05      	ldr	r2, [pc, #20]	; (8011f4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>)
 8011f36:	ea02 2505 	and.w	r5, r2, r5, lsl #8
 8011f3a:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 8011f3e:	00f6      	lsls	r6, r6, #3
 8011f40:	e7ec      	b.n	8011f1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8011f42:	b007      	add	sp, #28
 8011f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f48:	2000a32c 	.word	0x2000a32c
 8011f4c:	fffff800 	.word	0xfffff800

08011f50 <_ZN8touchgfx8LCD16bppD1Ev>:
 8011f50:	4770      	bx	lr

08011f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8011f52:	4770      	bx	lr

08011f54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8011f54:	4770      	bx	lr

08011f56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8011f56:	4770      	bx	lr

08011f58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8011f58:	4770      	bx	lr

08011f5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011f5a:	4770      	bx	lr

08011f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011f5c:	4770      	bx	lr

08011f5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011f5e:	4770      	bx	lr

08011f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011f60:	4770      	bx	lr

08011f62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011f62:	4770      	bx	lr

08011f64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011f64:	4770      	bx	lr

08011f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011f66:	4770      	bx	lr

08011f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011f68:	4770      	bx	lr

08011f6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011f6a:	4770      	bx	lr

08011f6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8011f6c:	4770      	bx	lr

08011f6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011f6e:	4770      	bx	lr

08011f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011f70:	4770      	bx	lr

08011f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011f72:	4770      	bx	lr

08011f74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011f74:	4770      	bx	lr

08011f76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011f76:	4770      	bx	lr

08011f78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011f78:	4770      	bx	lr

08011f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011f7a:	4770      	bx	lr

08011f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8011f7c:	4770      	bx	lr

08011f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011f7e:	4770      	bx	lr

08011f80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8011f80:	4770      	bx	lr

08011f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011f82:	4770      	bx	lr

08011f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011f84:	4770      	bx	lr

08011f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011f86:	4770      	bx	lr

08011f88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8011f88:	4770      	bx	lr
	...

08011f8c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8011f8c:	b508      	push	{r3, lr}
 8011f8e:	4b06      	ldr	r3, [pc, #24]	; (8011fa8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8011f90:	8818      	ldrh	r0, [r3, #0]
 8011f92:	b928      	cbnz	r0, 8011fa0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8011f94:	4b05      	ldr	r3, [pc, #20]	; (8011fac <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8011f96:	4a06      	ldr	r2, [pc, #24]	; (8011fb0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8011f98:	4806      	ldr	r0, [pc, #24]	; (8011fb4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8011f9a:	2150      	movs	r1, #80	; 0x50
 8011f9c:	f009 fa84 	bl	801b4a8 <__assert_func>
 8011fa0:	0040      	lsls	r0, r0, #1
 8011fa2:	b280      	uxth	r0, r0
 8011fa4:	bd08      	pop	{r3, pc}
 8011fa6:	bf00      	nop
 8011fa8:	2000a31e 	.word	0x2000a31e
 8011fac:	0801f5b8 	.word	0x0801f5b8
 8011fb0:	0801fbb0 	.word	0x0801fbb0
 8011fb4:	0801f5fa 	.word	0x0801f5fa

08011fb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8011fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fbc:	b08b      	sub	sp, #44	; 0x2c
 8011fbe:	460f      	mov	r7, r1
 8011fc0:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8011fc4:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8011fc8:	4616      	mov	r6, r2
 8011fca:	f1bb 0f00 	cmp.w	fp, #0
 8011fce:	d046      	beq.n	801205e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8011fd0:	6810      	ldr	r0, [r2, #0]
 8011fd2:	6851      	ldr	r1, [r2, #4]
 8011fd4:	ad06      	add	r5, sp, #24
 8011fd6:	c503      	stmia	r5!, {r0, r1}
 8011fd8:	6818      	ldr	r0, [r3, #0]
 8011fda:	6859      	ldr	r1, [r3, #4]
 8011fdc:	ad08      	add	r5, sp, #32
 8011fde:	c503      	stmia	r5!, {r0, r1}
 8011fe0:	a806      	add	r0, sp, #24
 8011fe2:	f7fa f9cd 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011fe6:	4631      	mov	r1, r6
 8011fe8:	a808      	add	r0, sp, #32
 8011fea:	f7fa f9b1 	bl	800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011fee:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011ff2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011ff6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8011ffa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8011ffe:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8012002:	fb16 2103 	smlabb	r1, r6, r3, r2
 8012006:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801200a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801200e:	4f5e      	ldr	r7, [pc, #376]	; (8012188 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8012010:	440a      	add	r2, r1
 8012012:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012016:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801201a:	6838      	ldr	r0, [r7, #0]
 801201c:	4413      	add	r3, r2
 801201e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012022:	6803      	ldr	r3, [r0, #0]
 8012024:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012026:	4798      	blx	r3
 8012028:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801202c:	46b9      	mov	r9, r7
 801202e:	d019      	beq.n	8012064 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8012030:	f010 0f04 	tst.w	r0, #4
 8012034:	d01a      	beq.n	801206c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012036:	f8d9 0000 	ldr.w	r0, [r9]
 801203a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801203e:	6801      	ldr	r1, [r0, #0]
 8012040:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012044:	e9cd b403 	strd	fp, r4, [sp, #12]
 8012048:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801204c:	9402      	str	r4, [sp, #8]
 801204e:	b2ad      	uxth	r5, r5
 8012050:	fa1f f488 	uxth.w	r4, r8
 8012054:	9501      	str	r5, [sp, #4]
 8012056:	9400      	str	r4, [sp, #0]
 8012058:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 801205a:	4631      	mov	r1, r6
 801205c:	47a0      	blx	r4
 801205e:	b00b      	add	sp, #44	; 0x2c
 8012060:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012064:	b914      	cbnz	r4, 801206c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012066:	f010 0f01 	tst.w	r0, #1
 801206a:	e7e3      	b.n	8012034 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801206c:	f8d9 0000 	ldr.w	r0, [r9]
 8012070:	6803      	ldr	r3, [r0, #0]
 8012072:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012074:	4798      	blx	r3
 8012076:	4b45      	ldr	r3, [pc, #276]	; (801218c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012078:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801207c:	881a      	ldrh	r2, [r3, #0]
 801207e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012082:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012086:	fb02 1404 	mla	r4, r2, r4, r1
 801208a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801208e:	469a      	mov	sl, r3
 8012090:	fb05 f502 	mul.w	r5, r5, r2
 8012094:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012098:	d059      	beq.n	801214e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x196>
 801209a:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801209e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80120a2:	fa1f f28b 	uxth.w	r2, fp
 80120a6:	fa1f f989 	uxth.w	r9, r9
 80120aa:	469e      	mov	lr, r3
 80120ac:	42ac      	cmp	r4, r5
 80120ae:	d264      	bcs.n	801217a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 80120b0:	eb04 0a07 	add.w	sl, r4, r7
 80120b4:	4554      	cmp	r4, sl
 80120b6:	d23d      	bcs.n	8012134 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17c>
 80120b8:	8821      	ldrh	r1, [r4, #0]
 80120ba:	f836 3b02 	ldrh.w	r3, [r6], #2
 80120be:	1208      	asrs	r0, r1, #8
 80120c0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80120c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80120c8:	fb10 f009 	smulbb	r0, r0, r9
 80120cc:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80120d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80120d4:	00c9      	lsls	r1, r1, #3
 80120d6:	fb0c 0c02 	mla	ip, ip, r2, r0
 80120da:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80120de:	10d8      	asrs	r0, r3, #3
 80120e0:	b2c9      	uxtb	r1, r1
 80120e2:	00db      	lsls	r3, r3, #3
 80120e4:	fa1f fc8c 	uxth.w	ip, ip
 80120e8:	fb1b fb09 	smulbb	fp, fp, r9
 80120ec:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80120f0:	b2db      	uxtb	r3, r3
 80120f2:	fb11 f109 	smulbb	r1, r1, r9
 80120f6:	fb00 b002 	mla	r0, r0, r2, fp
 80120fa:	fb03 1302 	mla	r3, r3, r2, r1
 80120fe:	f10c 0b01 	add.w	fp, ip, #1
 8012102:	b29b      	uxth	r3, r3
 8012104:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8012108:	b280      	uxth	r0, r0
 801210a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801210e:	f103 0c01 	add.w	ip, r3, #1
 8012112:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012116:	1c43      	adds	r3, r0, #1
 8012118:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801211c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012120:	0940      	lsrs	r0, r0, #5
 8012122:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012126:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801212a:	ea4c 0c00 	orr.w	ip, ip, r0
 801212e:	f824 cb02 	strh.w	ip, [r4], #2
 8012132:	e7bf      	b.n	80120b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8012134:	f8be 3000 	ldrh.w	r3, [lr]
 8012138:	eba3 0308 	sub.w	r3, r3, r8
 801213c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012140:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012144:	eba3 0308 	sub.w	r3, r3, r8
 8012148:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801214c:	e7ae      	b.n	80120ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 801214e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012152:	f8d9 0000 	ldr.w	r0, [r9]
 8012156:	42ac      	cmp	r4, r5
 8012158:	6803      	ldr	r3, [r0, #0]
 801215a:	d20e      	bcs.n	801217a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 801215c:	f8d3 8030 	ldr.w	r8, [r3, #48]	; 0x30
 8012160:	4632      	mov	r2, r6
 8012162:	463b      	mov	r3, r7
 8012164:	4621      	mov	r1, r4
 8012166:	47c0      	blx	r8
 8012168:	f8ba 3000 	ldrh.w	r3, [sl]
 801216c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012170:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012174:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012178:	e7eb      	b.n	8012152 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19a>
 801217a:	4b03      	ldr	r3, [pc, #12]	; (8012188 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 801217c:	6818      	ldr	r0, [r3, #0]
 801217e:	6803      	ldr	r3, [r0, #0]
 8012180:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012182:	4798      	blx	r3
 8012184:	e76b      	b.n	801205e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012186:	bf00      	nop
 8012188:	2000a324 	.word	0x2000a324
 801218c:	2000a31e 	.word	0x2000a31e

08012190 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012190:	b510      	push	{r4, lr}
 8012192:	2178      	movs	r1, #120	; 0x78
 8012194:	4604      	mov	r4, r0
 8012196:	f009 f958 	bl	801b44a <_ZdlPvj>
 801219a:	4620      	mov	r0, r4
 801219c:	bd10      	pop	{r4, pc}

0801219e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801219e:	b510      	push	{r4, lr}
 80121a0:	2104      	movs	r1, #4
 80121a2:	4604      	mov	r4, r0
 80121a4:	f009 f951 	bl	801b44a <_ZdlPvj>
 80121a8:	4620      	mov	r0, r4
 80121aa:	bd10      	pop	{r4, pc}

080121ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80121ac:	b510      	push	{r4, lr}
 80121ae:	2104      	movs	r1, #4
 80121b0:	4604      	mov	r4, r0
 80121b2:	f009 f94a 	bl	801b44a <_ZdlPvj>
 80121b6:	4620      	mov	r0, r4
 80121b8:	bd10      	pop	{r4, pc}

080121ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80121ba:	b510      	push	{r4, lr}
 80121bc:	2104      	movs	r1, #4
 80121be:	4604      	mov	r4, r0
 80121c0:	f009 f943 	bl	801b44a <_ZdlPvj>
 80121c4:	4620      	mov	r0, r4
 80121c6:	bd10      	pop	{r4, pc}

080121c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80121c8:	b510      	push	{r4, lr}
 80121ca:	2104      	movs	r1, #4
 80121cc:	4604      	mov	r4, r0
 80121ce:	f009 f93c 	bl	801b44a <_ZdlPvj>
 80121d2:	4620      	mov	r0, r4
 80121d4:	bd10      	pop	{r4, pc}

080121d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80121d6:	b510      	push	{r4, lr}
 80121d8:	2104      	movs	r1, #4
 80121da:	4604      	mov	r4, r0
 80121dc:	f009 f935 	bl	801b44a <_ZdlPvj>
 80121e0:	4620      	mov	r0, r4
 80121e2:	bd10      	pop	{r4, pc}

080121e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80121e4:	b510      	push	{r4, lr}
 80121e6:	2104      	movs	r1, #4
 80121e8:	4604      	mov	r4, r0
 80121ea:	f009 f92e 	bl	801b44a <_ZdlPvj>
 80121ee:	4620      	mov	r0, r4
 80121f0:	bd10      	pop	{r4, pc}

080121f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80121f2:	b510      	push	{r4, lr}
 80121f4:	2104      	movs	r1, #4
 80121f6:	4604      	mov	r4, r0
 80121f8:	f009 f927 	bl	801b44a <_ZdlPvj>
 80121fc:	4620      	mov	r0, r4
 80121fe:	bd10      	pop	{r4, pc}

08012200 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012200:	b510      	push	{r4, lr}
 8012202:	2104      	movs	r1, #4
 8012204:	4604      	mov	r4, r0
 8012206:	f009 f920 	bl	801b44a <_ZdlPvj>
 801220a:	4620      	mov	r0, r4
 801220c:	bd10      	pop	{r4, pc}

0801220e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801220e:	b510      	push	{r4, lr}
 8012210:	2104      	movs	r1, #4
 8012212:	4604      	mov	r4, r0
 8012214:	f009 f919 	bl	801b44a <_ZdlPvj>
 8012218:	4620      	mov	r0, r4
 801221a:	bd10      	pop	{r4, pc}

0801221c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801221c:	b510      	push	{r4, lr}
 801221e:	2104      	movs	r1, #4
 8012220:	4604      	mov	r4, r0
 8012222:	f009 f912 	bl	801b44a <_ZdlPvj>
 8012226:	4620      	mov	r0, r4
 8012228:	bd10      	pop	{r4, pc}

0801222a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801222a:	b510      	push	{r4, lr}
 801222c:	2104      	movs	r1, #4
 801222e:	4604      	mov	r4, r0
 8012230:	f009 f90b 	bl	801b44a <_ZdlPvj>
 8012234:	4620      	mov	r0, r4
 8012236:	bd10      	pop	{r4, pc}

08012238 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012238:	b510      	push	{r4, lr}
 801223a:	2104      	movs	r1, #4
 801223c:	4604      	mov	r4, r0
 801223e:	f009 f904 	bl	801b44a <_ZdlPvj>
 8012242:	4620      	mov	r0, r4
 8012244:	bd10      	pop	{r4, pc}

08012246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012246:	b510      	push	{r4, lr}
 8012248:	2104      	movs	r1, #4
 801224a:	4604      	mov	r4, r0
 801224c:	f009 f8fd 	bl	801b44a <_ZdlPvj>
 8012250:	4620      	mov	r0, r4
 8012252:	bd10      	pop	{r4, pc}

08012254 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012254:	b510      	push	{r4, lr}
 8012256:	2104      	movs	r1, #4
 8012258:	4604      	mov	r4, r0
 801225a:	f009 f8f6 	bl	801b44a <_ZdlPvj>
 801225e:	4620      	mov	r0, r4
 8012260:	bd10      	pop	{r4, pc}

08012262 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012262:	b510      	push	{r4, lr}
 8012264:	2104      	movs	r1, #4
 8012266:	4604      	mov	r4, r0
 8012268:	f009 f8ef 	bl	801b44a <_ZdlPvj>
 801226c:	4620      	mov	r0, r4
 801226e:	bd10      	pop	{r4, pc}

08012270 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012270:	b510      	push	{r4, lr}
 8012272:	2104      	movs	r1, #4
 8012274:	4604      	mov	r4, r0
 8012276:	f009 f8e8 	bl	801b44a <_ZdlPvj>
 801227a:	4620      	mov	r0, r4
 801227c:	bd10      	pop	{r4, pc}

0801227e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801227e:	b510      	push	{r4, lr}
 8012280:	2104      	movs	r1, #4
 8012282:	4604      	mov	r4, r0
 8012284:	f009 f8e1 	bl	801b44a <_ZdlPvj>
 8012288:	4620      	mov	r0, r4
 801228a:	bd10      	pop	{r4, pc}

0801228c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801228c:	b510      	push	{r4, lr}
 801228e:	2104      	movs	r1, #4
 8012290:	4604      	mov	r4, r0
 8012292:	f009 f8da 	bl	801b44a <_ZdlPvj>
 8012296:	4620      	mov	r0, r4
 8012298:	bd10      	pop	{r4, pc}

0801229a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801229a:	b510      	push	{r4, lr}
 801229c:	2104      	movs	r1, #4
 801229e:	4604      	mov	r4, r0
 80122a0:	f009 f8d3 	bl	801b44a <_ZdlPvj>
 80122a4:	4620      	mov	r0, r4
 80122a6:	bd10      	pop	{r4, pc}

080122a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80122a8:	b510      	push	{r4, lr}
 80122aa:	2104      	movs	r1, #4
 80122ac:	4604      	mov	r4, r0
 80122ae:	f009 f8cc 	bl	801b44a <_ZdlPvj>
 80122b2:	4620      	mov	r0, r4
 80122b4:	bd10      	pop	{r4, pc}

080122b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80122b6:	b510      	push	{r4, lr}
 80122b8:	2104      	movs	r1, #4
 80122ba:	4604      	mov	r4, r0
 80122bc:	f009 f8c5 	bl	801b44a <_ZdlPvj>
 80122c0:	4620      	mov	r0, r4
 80122c2:	bd10      	pop	{r4, pc}

080122c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80122c4:	b510      	push	{r4, lr}
 80122c6:	2104      	movs	r1, #4
 80122c8:	4604      	mov	r4, r0
 80122ca:	f009 f8be 	bl	801b44a <_ZdlPvj>
 80122ce:	4620      	mov	r0, r4
 80122d0:	bd10      	pop	{r4, pc}

080122d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80122d2:	b510      	push	{r4, lr}
 80122d4:	2104      	movs	r1, #4
 80122d6:	4604      	mov	r4, r0
 80122d8:	f009 f8b7 	bl	801b44a <_ZdlPvj>
 80122dc:	4620      	mov	r0, r4
 80122de:	bd10      	pop	{r4, pc}

080122e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80122e0:	b510      	push	{r4, lr}
 80122e2:	2104      	movs	r1, #4
 80122e4:	4604      	mov	r4, r0
 80122e6:	f009 f8b0 	bl	801b44a <_ZdlPvj>
 80122ea:	4620      	mov	r0, r4
 80122ec:	bd10      	pop	{r4, pc}

080122ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80122ee:	b510      	push	{r4, lr}
 80122f0:	2104      	movs	r1, #4
 80122f2:	4604      	mov	r4, r0
 80122f4:	f009 f8a9 	bl	801b44a <_ZdlPvj>
 80122f8:	4620      	mov	r0, r4
 80122fa:	bd10      	pop	{r4, pc}

080122fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80122fc:	b510      	push	{r4, lr}
 80122fe:	2104      	movs	r1, #4
 8012300:	4604      	mov	r4, r0
 8012302:	f009 f8a2 	bl	801b44a <_ZdlPvj>
 8012306:	4620      	mov	r0, r4
 8012308:	bd10      	pop	{r4, pc}

0801230a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801230a:	b510      	push	{r4, lr}
 801230c:	2104      	movs	r1, #4
 801230e:	4604      	mov	r4, r0
 8012310:	f009 f89b 	bl	801b44a <_ZdlPvj>
 8012314:	4620      	mov	r0, r4
 8012316:	bd10      	pop	{r4, pc}

08012318 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012318:	b510      	push	{r4, lr}
 801231a:	2104      	movs	r1, #4
 801231c:	4604      	mov	r4, r0
 801231e:	f009 f894 	bl	801b44a <_ZdlPvj>
 8012322:	4620      	mov	r0, r4
 8012324:	bd10      	pop	{r4, pc}
	...

08012328 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8012328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801232c:	4f97      	ldr	r7, [pc, #604]	; (801258c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 801232e:	4616      	mov	r6, r2
 8012330:	683a      	ldr	r2, [r7, #0]
 8012332:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8012336:	2a02      	cmp	r2, #2
 8012338:	b08f      	sub	sp, #60	; 0x3c
 801233a:	4604      	mov	r4, r0
 801233c:	4689      	mov	r9, r1
 801233e:	d106      	bne.n	801234e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8012340:	4b93      	ldr	r3, [pc, #588]	; (8012590 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8012342:	4a94      	ldr	r2, [pc, #592]	; (8012594 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012344:	f240 310f 	movw	r1, #783	; 0x30f
 8012348:	4893      	ldr	r0, [pc, #588]	; (8012598 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801234a:	f009 f8ad 	bl	801b4a8 <__assert_func>
 801234e:	ad0e      	add	r5, sp, #56	; 0x38
 8012350:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8012354:	4628      	mov	r0, r5
 8012356:	f7fd fb6b 	bl	800fa30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801235a:	6823      	ldr	r3, [r4, #0]
 801235c:	4680      	mov	r8, r0
 801235e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012360:	4620      	mov	r0, r4
 8012362:	4798      	blx	r3
 8012364:	4580      	cmp	r8, r0
 8012366:	d004      	beq.n	8012372 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8012368:	4b8c      	ldr	r3, [pc, #560]	; (801259c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801236a:	4a8a      	ldr	r2, [pc, #552]	; (8012594 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801236c:	f240 3111 	movw	r1, #785	; 0x311
 8012370:	e7ea      	b.n	8012348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012372:	4628      	mov	r0, r5
 8012374:	f7fd fad2 	bl	800f91c <_ZNK8touchgfx6Bitmap7getDataEv>
 8012378:	4680      	mov	r8, r0
 801237a:	b920      	cbnz	r0, 8012386 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801237c:	4b88      	ldr	r3, [pc, #544]	; (80125a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801237e:	4a85      	ldr	r2, [pc, #532]	; (8012594 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012380:	f240 3113 	movw	r1, #787	; 0x313
 8012384:	e7e0      	b.n	8012348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012386:	6830      	ldr	r0, [r6, #0]
 8012388:	6871      	ldr	r1, [r6, #4]
 801238a:	f9b6 a000 	ldrsh.w	sl, [r6]
 801238e:	ab06      	add	r3, sp, #24
 8012390:	c303      	stmia	r3!, {r0, r1}
 8012392:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8012396:	f8d9 0000 	ldr.w	r0, [r9]
 801239a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801239e:	ab08      	add	r3, sp, #32
 80123a0:	c303      	stmia	r3!, {r0, r1}
 80123a2:	4628      	mov	r0, r5
 80123a4:	f7fd f9b2 	bl	800f70c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80123a8:	4606      	mov	r6, r0
 80123aa:	4628      	mov	r0, r5
 80123ac:	f7fd f9e8 	bl	800f780 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80123b0:	f10d 0b20 	add.w	fp, sp, #32
 80123b4:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 80123b8:	a806      	add	r0, sp, #24
 80123ba:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80123be:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80123c2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80123c6:	f7f9 ffdb 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80123ca:	4658      	mov	r0, fp
 80123cc:	f7f9 ffd8 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80123d0:	a80a      	add	r0, sp, #40	; 0x28
 80123d2:	f7f9 ffd5 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80123d6:	4d73      	ldr	r5, [pc, #460]	; (80125a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80123d8:	4b73      	ldr	r3, [pc, #460]	; (80125a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80123da:	f9b5 2000 	ldrsh.w	r2, [r5]
 80123de:	f9b3 3000 	ldrsh.w	r3, [r3]
 80123e2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80123e6:	2100      	movs	r1, #0
 80123e8:	910c      	str	r1, [sp, #48]	; 0x30
 80123ea:	4658      	mov	r0, fp
 80123ec:	a90c      	add	r1, sp, #48	; 0x30
 80123ee:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80123f2:	f7f7 f8d5 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 80123f6:	4658      	mov	r0, fp
 80123f8:	f7f7 f915 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 80123fc:	2800      	cmp	r0, #0
 80123fe:	f040 8099 	bne.w	8012534 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012402:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8012406:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801240a:	4288      	cmp	r0, r1
 801240c:	db37      	blt.n	801247e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801240e:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8012412:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012416:	429a      	cmp	r2, r3
 8012418:	db31      	blt.n	801247e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801241a:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801241e:	4430      	add	r0, r6
 8012420:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8012424:	4431      	add	r1, r6
 8012426:	b200      	sxth	r0, r0
 8012428:	b209      	sxth	r1, r1
 801242a:	4288      	cmp	r0, r1
 801242c:	dc27      	bgt.n	801247e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801242e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8012432:	440a      	add	r2, r1
 8012434:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8012438:	440b      	add	r3, r1
 801243a:	b212      	sxth	r2, r2
 801243c:	b21b      	sxth	r3, r3
 801243e:	429a      	cmp	r2, r3
 8012440:	dc1d      	bgt.n	801247e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8012442:	6823      	ldr	r3, [r4, #0]
 8012444:	4620      	mov	r0, r4
 8012446:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012448:	4798      	blx	r3
 801244a:	4682      	mov	sl, r0
 801244c:	6838      	ldr	r0, [r7, #0]
 801244e:	6803      	ldr	r3, [r0, #0]
 8012450:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012452:	4798      	blx	r3
 8012454:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012458:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801245c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012460:	1a5b      	subs	r3, r3, r1
 8012462:	b29b      	uxth	r3, r3
 8012464:	b21c      	sxth	r4, r3
 8012466:	2c00      	cmp	r4, #0
 8012468:	dc0e      	bgt.n	8012488 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 801246a:	bf1f      	itttt	ne
 801246c:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8012470:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8012474:	185b      	addne	r3, r3, r1
 8012476:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801247a:	4644      	mov	r4, r8
 801247c:	e009      	b.n	8012492 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 801247e:	4b4b      	ldr	r3, [pc, #300]	; (80125ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8012480:	4a44      	ldr	r2, [pc, #272]	; (8012594 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012482:	f240 3121 	movw	r1, #801	; 0x321
 8012486:	e75f      	b.n	8012348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012488:	1ad3      	subs	r3, r2, r3
 801248a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801248e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012492:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8012496:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801249a:	1b9b      	subs	r3, r3, r6
 801249c:	b29b      	uxth	r3, r3
 801249e:	b219      	sxth	r1, r3
 80124a0:	2900      	cmp	r1, #0
 80124a2:	dd4b      	ble.n	801253c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 80124a4:	4351      	muls	r1, r2
 80124a6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80124aa:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80124ae:	1acb      	subs	r3, r1, r3
 80124b0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80124b4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80124b8:	2e00      	cmp	r6, #0
 80124ba:	dd3b      	ble.n	8012534 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80124bc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80124c0:	2b00      	cmp	r3, #0
 80124c2:	dd37      	ble.n	8012534 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80124c4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80124c8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80124cc:	fb0a f90c 	mul.w	r9, sl, ip
 80124d0:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 80124d4:	4481      	add	r9, r0
 80124d6:	8828      	ldrh	r0, [r5, #0]
 80124d8:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 80124dc:	42ae      	cmp	r6, r5
 80124de:	bfa8      	it	ge
 80124e0:	462e      	movge	r6, r5
 80124e2:	1a41      	subs	r1, r0, r1
 80124e4:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80124e8:	428e      	cmp	r6, r1
 80124ea:	bfa8      	it	ge
 80124ec:	460e      	movge	r6, r1
 80124ee:	429d      	cmp	r5, r3
 80124f0:	bfa8      	it	ge
 80124f2:	461d      	movge	r5, r3
 80124f4:	4b2c      	ldr	r3, [pc, #176]	; (80125a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80124f6:	881b      	ldrh	r3, [r3, #0]
 80124f8:	eba3 030c 	sub.w	r3, r3, ip
 80124fc:	429d      	cmp	r5, r3
 80124fe:	bfa8      	it	ge
 8012500:	461d      	movge	r5, r3
 8012502:	42b0      	cmp	r0, r6
 8012504:	d12c      	bne.n	8012560 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8012506:	4290      	cmp	r0, r2
 8012508:	d12a      	bne.n	8012560 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801250a:	6838      	ldr	r0, [r7, #0]
 801250c:	9203      	str	r2, [sp, #12]
 801250e:	6803      	ldr	r3, [r0, #0]
 8012510:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012512:	4798      	blx	r3
 8012514:	07c3      	lsls	r3, r0, #31
 8012516:	d51a      	bpl.n	801254e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8012518:	9a03      	ldr	r2, [sp, #12]
 801251a:	6838      	ldr	r0, [r7, #0]
 801251c:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8012520:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8012524:	6803      	ldr	r3, [r0, #0]
 8012526:	9200      	str	r2, [sp, #0]
 8012528:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 801252a:	e89b 0006 	ldmia.w	fp, {r1, r2}
 801252e:	4623      	mov	r3, r4
 8012530:	47a8      	blx	r5
 8012532:	4680      	mov	r8, r0
 8012534:	4640      	mov	r0, r8
 8012536:	b00f      	add	sp, #60	; 0x3c
 8012538:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801253c:	bf1f      	itttt	ne
 801253e:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8012542:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8012546:	185b      	addne	r3, r3, r1
 8012548:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801254c:	e7b2      	b.n	80124b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801254e:	6838      	ldr	r0, [r7, #0]
 8012550:	6803      	ldr	r3, [r0, #0]
 8012552:	464a      	mov	r2, r9
 8012554:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8012556:	4621      	mov	r1, r4
 8012558:	fb05 f30a 	mul.w	r3, r5, sl
 801255c:	47b0      	blx	r6
 801255e:	e7e9      	b.n	8012534 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012560:	4355      	muls	r5, r2
 8012562:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8012566:	9303      	str	r3, [sp, #12]
 8012568:	0076      	lsls	r6, r6, #1
 801256a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801256e:	9b03      	ldr	r3, [sp, #12]
 8012570:	429c      	cmp	r4, r3
 8012572:	d2df      	bcs.n	8012534 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012574:	6838      	ldr	r0, [r7, #0]
 8012576:	6803      	ldr	r3, [r0, #0]
 8012578:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801257a:	464a      	mov	r2, r9
 801257c:	461d      	mov	r5, r3
 801257e:	4621      	mov	r1, r4
 8012580:	4633      	mov	r3, r6
 8012582:	47a8      	blx	r5
 8012584:	44d1      	add	r9, sl
 8012586:	445c      	add	r4, fp
 8012588:	e7f1      	b.n	801256e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 801258a:	bf00      	nop
 801258c:	2000a324 	.word	0x2000a324
 8012590:	0801f3b0 	.word	0x0801f3b0
 8012594:	0801fc60 	.word	0x0801fc60
 8012598:	0801f462 	.word	0x0801f462
 801259c:	0801f494 	.word	0x0801f494
 80125a0:	0801f4e9 	.word	0x0801f4e9
 80125a4:	2000a31e 	.word	0x2000a31e
 80125a8:	2000a320 	.word	0x2000a320
 80125ac:	0801f527 	.word	0x0801f527

080125b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80125b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80125b2:	4607      	mov	r7, r0
 80125b4:	b087      	sub	sp, #28
 80125b6:	460d      	mov	r5, r1
 80125b8:	4614      	mov	r4, r2
 80125ba:	461e      	mov	r6, r3
 80125bc:	b373      	cbz	r3, 801261c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 80125be:	4608      	mov	r0, r1
 80125c0:	f7f7 f831 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 80125c4:	bb50      	cbnz	r0, 801261c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 80125c6:	6828      	ldr	r0, [r5, #0]
 80125c8:	6869      	ldr	r1, [r5, #4]
 80125ca:	4d1f      	ldr	r5, [pc, #124]	; (8012648 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x98>)
 80125cc:	ab04      	add	r3, sp, #16
 80125ce:	c303      	stmia	r3!, {r0, r1}
 80125d0:	a804      	add	r0, sp, #16
 80125d2:	f7f9 fed5 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80125d6:	6828      	ldr	r0, [r5, #0]
 80125d8:	6803      	ldr	r3, [r0, #0]
 80125da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80125dc:	4798      	blx	r3
 80125de:	2eff      	cmp	r6, #255	; 0xff
 80125e0:	d01e      	beq.n	8012620 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x70>
 80125e2:	f010 0f08 	tst.w	r0, #8
 80125e6:	6828      	ldr	r0, [r5, #0]
 80125e8:	6803      	ldr	r3, [r0, #0]
 80125ea:	d01c      	beq.n	8012626 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x76>
 80125ec:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80125ee:	4b17      	ldr	r3, [pc, #92]	; (801264c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9c>)
 80125f0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80125f4:	9602      	str	r6, [sp, #8]
 80125f6:	ea03 2314 	and.w	r3, r3, r4, lsr #8
 80125fa:	f3c4 01c4 	ubfx	r1, r4, #3, #5
 80125fe:	0964      	lsrs	r4, r4, #5
 8012600:	4319      	orrs	r1, r3
 8012602:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8012606:	4321      	orrs	r1, r4
 8012608:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801260c:	9401      	str	r4, [sp, #4]
 801260e:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8012612:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012616:	9400      	str	r4, [sp, #0]
 8012618:	b289      	uxth	r1, r1
 801261a:	47a8      	blx	r5
 801261c:	b007      	add	sp, #28
 801261e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012620:	f010 0f02 	tst.w	r0, #2
 8012624:	e7df      	b.n	80125e6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012626:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012628:	4798      	blx	r3
 801262a:	4b09      	ldr	r3, [pc, #36]	; (8012650 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>)
 801262c:	881a      	ldrh	r2, [r3, #0]
 801262e:	683b      	ldr	r3, [r7, #0]
 8012630:	e9cd 4600 	strd	r4, r6, [sp]
 8012634:	4601      	mov	r1, r0
 8012636:	69dc      	ldr	r4, [r3, #28]
 8012638:	4638      	mov	r0, r7
 801263a:	ab04      	add	r3, sp, #16
 801263c:	47a0      	blx	r4
 801263e:	6828      	ldr	r0, [r5, #0]
 8012640:	6803      	ldr	r3, [r0, #0]
 8012642:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012644:	4798      	blx	r3
 8012646:	e7e9      	b.n	801261c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8012648:	2000a324 	.word	0x2000a324
 801264c:	fffff800 	.word	0xfffff800
 8012650:	2000a31e 	.word	0x2000a31e

08012654 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8012654:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012658:	f89d 6024 	ldrb.w	r6, [sp, #36]	; 0x24
 801265c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8012660:	460f      	mov	r7, r1
 8012662:	4614      	mov	r4, r2
 8012664:	461d      	mov	r5, r3
 8012666:	2e00      	cmp	r6, #0
 8012668:	f000 80b6 	beq.w	80127d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 801266c:	4618      	mov	r0, r3
 801266e:	f7f6 ffda 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012672:	2800      	cmp	r0, #0
 8012674:	f040 80b0 	bne.w	80127d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8012678:	f9b5 1000 	ldrsh.w	r1, [r5]
 801267c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012680:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8012684:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8012688:	fb04 1303 	mla	r3, r4, r3, r1
 801268c:	eb07 0143 	add.w	r1, r7, r3, lsl #1
 8012690:	4365      	muls	r5, r4
 8012692:	2eff      	cmp	r6, #255	; 0xff
 8012694:	eba4 0c00 	sub.w	ip, r4, r0
 8012698:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801269c:	ea4f 4e18 	mov.w	lr, r8, lsr #16
 80126a0:	ea4f 2718 	mov.w	r7, r8, lsr #8
 80126a4:	fa5f f288 	uxtb.w	r2, r8
 80126a8:	d04a      	beq.n	8012740 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 80126aa:	f1c6 08ff 	rsb	r8, r6, #255	; 0xff
 80126ae:	fa5f fe8e 	uxtb.w	lr, lr
 80126b2:	b2b6      	uxth	r6, r6
 80126b4:	b2ff      	uxtb	r7, r7
 80126b6:	0040      	lsls	r0, r0, #1
 80126b8:	fb0e fe06 	mul.w	lr, lr, r6
 80126bc:	4377      	muls	r7, r6
 80126be:	fb02 f306 	mul.w	r3, r2, r6
 80126c2:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 80126c6:	fa1f f888 	uxth.w	r8, r8
 80126ca:	42a9      	cmp	r1, r5
 80126cc:	f080 8084 	bcs.w	80127d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80126d0:	eb01 0900 	add.w	r9, r1, r0
 80126d4:	4549      	cmp	r1, r9
 80126d6:	d231      	bcs.n	801273c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe8>
 80126d8:	880a      	ldrh	r2, [r1, #0]
 80126da:	1214      	asrs	r4, r2, #8
 80126dc:	10d6      	asrs	r6, r2, #3
 80126de:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80126e2:	00d2      	lsls	r2, r2, #3
 80126e4:	b2d2      	uxtb	r2, r2
 80126e6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80126ea:	fb14 f408 	smulbb	r4, r4, r8
 80126ee:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80126f2:	4474      	add	r4, lr
 80126f4:	fb12 f208 	smulbb	r2, r2, r8
 80126f8:	b2a4      	uxth	r4, r4
 80126fa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80126fe:	441a      	add	r2, r3
 8012700:	b292      	uxth	r2, r2
 8012702:	f104 0a01 	add.w	sl, r4, #1
 8012706:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801270a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801270e:	fb16 f608 	smulbb	r6, r6, r8
 8012712:	f102 0a01 	add.w	sl, r2, #1
 8012716:	443e      	add	r6, r7
 8012718:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801271c:	b2b6      	uxth	r6, r6
 801271e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012722:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012726:	4322      	orrs	r2, r4
 8012728:	1c74      	adds	r4, r6, #1
 801272a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801272e:	0976      	lsrs	r6, r6, #5
 8012730:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012734:	4332      	orrs	r2, r6
 8012736:	f821 2b02 	strh.w	r2, [r1], #2
 801273a:	e7cb      	b.n	80126d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x80>
 801273c:	4461      	add	r1, ip
 801273e:	e7c4      	b.n	80126ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8012740:	4b26      	ldr	r3, [pc, #152]	; (80127dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8012742:	00ff      	lsls	r7, r7, #3
 8012744:	ea03 230e 	and.w	r3, r3, lr, lsl #8
 8012748:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801274c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012750:	433b      	orrs	r3, r7
 8012752:	07e2      	lsls	r2, r4, #31
 8012754:	b29b      	uxth	r3, r3
 8012756:	d50c      	bpl.n	8012772 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8012758:	0040      	lsls	r0, r0, #1
 801275a:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 801275e:	42a9      	cmp	r1, r5
 8012760:	d23a      	bcs.n	80127d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8012762:	180a      	adds	r2, r1, r0
 8012764:	4291      	cmp	r1, r2
 8012766:	d202      	bcs.n	801276e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11a>
 8012768:	f821 3b02 	strh.w	r3, [r1], #2
 801276c:	e7fa      	b.n	8012764 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801276e:	4461      	add	r1, ip
 8012770:	e7f5      	b.n	801275e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 8012772:	078f      	lsls	r7, r1, #30
 8012774:	d008      	beq.n	8012788 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>
 8012776:	0066      	lsls	r6, r4, #1
 8012778:	460a      	mov	r2, r1
 801277a:	42aa      	cmp	r2, r5
 801277c:	d202      	bcs.n	8012784 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>
 801277e:	8013      	strh	r3, [r2, #0]
 8012780:	4432      	add	r2, r6
 8012782:	e7fa      	b.n	801277a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8012784:	3102      	adds	r1, #2
 8012786:	3801      	subs	r0, #1
 8012788:	07c6      	lsls	r6, r0, #31
 801278a:	d50b      	bpl.n	80127a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x150>
 801278c:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8012790:	3a01      	subs	r2, #1
 8012792:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012796:	0066      	lsls	r6, r4, #1
 8012798:	42aa      	cmp	r2, r5
 801279a:	d202      	bcs.n	80127a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14e>
 801279c:	8013      	strh	r3, [r2, #0]
 801279e:	4432      	add	r2, r6
 80127a0:	e7fa      	b.n	8012798 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80127a2:	3801      	subs	r0, #1
 80127a4:	b1c0      	cbz	r0, 80127d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80127a6:	1040      	asrs	r0, r0, #1
 80127a8:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80127ac:	0080      	lsls	r0, r0, #2
 80127ae:	0064      	lsls	r4, r4, #1
 80127b0:	42a9      	cmp	r1, r5
 80127b2:	d211      	bcs.n	80127d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80127b4:	078a      	lsls	r2, r1, #30
 80127b6:	d006      	beq.n	80127c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x172>
 80127b8:	4b09      	ldr	r3, [pc, #36]	; (80127e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 80127ba:	4a0a      	ldr	r2, [pc, #40]	; (80127e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x190>)
 80127bc:	480a      	ldr	r0, [pc, #40]	; (80127e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x194>)
 80127be:	f240 31d6 	movw	r1, #982	; 0x3d6
 80127c2:	f008 fe71 	bl	801b4a8 <__assert_func>
 80127c6:	180e      	adds	r6, r1, r0
 80127c8:	460a      	mov	r2, r1
 80127ca:	42b2      	cmp	r2, r6
 80127cc:	d202      	bcs.n	80127d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>
 80127ce:	f842 3b04 	str.w	r3, [r2], #4
 80127d2:	e7fa      	b.n	80127ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x176>
 80127d4:	4421      	add	r1, r4
 80127d6:	e7eb      	b.n	80127b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15c>
 80127d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80127dc:	fffff800 	.word	0xfffff800
 80127e0:	0801f261 	.word	0x0801f261
 80127e4:	0801f8ac 	.word	0x0801f8ac
 80127e8:	0801f462 	.word	0x0801f462

080127ec <_ZN8touchgfx8LCD16bppC1Ev>:
 80127ec:	2200      	movs	r2, #0
 80127ee:	4910      	ldr	r1, [pc, #64]	; (8012830 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80127f0:	6042      	str	r2, [r0, #4]
 80127f2:	6001      	str	r1, [r0, #0]
 80127f4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80127f8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80127fc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012800:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012804:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012808:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801280c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012810:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012814:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012818:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801281c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012820:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012824:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012828:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801282c:	4770      	bx	lr
 801282e:	bf00      	nop
 8012830:	0801f868 	.word	0x0801f868

08012834 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012838:	460d      	mov	r5, r1
 801283a:	b08b      	sub	sp, #44	; 0x2c
 801283c:	4604      	mov	r4, r0
 801283e:	6808      	ldr	r0, [r1, #0]
 8012840:	6849      	ldr	r1, [r1, #4]
 8012842:	4699      	mov	r9, r3
 8012844:	ab06      	add	r3, sp, #24
 8012846:	c303      	stmia	r3!, {r0, r1}
 8012848:	6810      	ldr	r0, [r2, #0]
 801284a:	6851      	ldr	r1, [r2, #4]
 801284c:	ab08      	add	r3, sp, #32
 801284e:	c303      	stmia	r3!, {r0, r1}
 8012850:	a806      	add	r0, sp, #24
 8012852:	f7f9 fd95 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012856:	4629      	mov	r1, r5
 8012858:	a808      	add	r0, sp, #32
 801285a:	f7f9 fd79 	bl	800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801285e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012862:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012866:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801286a:	4d62      	ldr	r5, [pc, #392]	; (80129f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 801286c:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012870:	6828      	ldr	r0, [r5, #0]
 8012872:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8012876:	fb11 2103 	smlabb	r1, r1, r3, r2
 801287a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801287e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012882:	440a      	add	r2, r1
 8012884:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012888:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801288c:	4413      	add	r3, r2
 801288e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012892:	6803      	ldr	r3, [r0, #0]
 8012894:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012896:	4798      	blx	r3
 8012898:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801289c:	d118      	bne.n	80128d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 801289e:	f010 0f20 	tst.w	r0, #32
 80128a2:	6828      	ldr	r0, [r5, #0]
 80128a4:	d017      	beq.n	80128d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 80128a6:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 80128aa:	6801      	ldr	r1, [r0, #0]
 80128ac:	9502      	str	r5, [sp, #8]
 80128ae:	b2b6      	uxth	r6, r6
 80128b0:	fa1f f588 	uxth.w	r5, r8
 80128b4:	f8cd 900c 	str.w	r9, [sp, #12]
 80128b8:	9601      	str	r6, [sp, #4]
 80128ba:	9500      	str	r5, [sp, #0]
 80128bc:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 80128be:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80128c2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80128c6:	4621      	mov	r1, r4
 80128c8:	47a8      	blx	r5
 80128ca:	b00b      	add	sp, #44	; 0x2c
 80128cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128d0:	f010 0f40 	tst.w	r0, #64	; 0x40
 80128d4:	e7e5      	b.n	80128a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80128d6:	6803      	ldr	r3, [r0, #0]
 80128d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80128da:	4798      	blx	r3
 80128dc:	4946      	ldr	r1, [pc, #280]	; (80129f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80128de:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80128e2:	880b      	ldrh	r3, [r1, #0]
 80128e4:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 80128e8:	fb03 5202 	mla	r2, r3, r2, r5
 80128ec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80128f0:	4373      	muls	r3, r6
 80128f2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80128f6:	9305      	str	r3, [sp, #20]
 80128f8:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80128fc:	9304      	str	r3, [sp, #16]
 80128fe:	468a      	mov	sl, r1
 8012900:	9b05      	ldr	r3, [sp, #20]
 8012902:	4298      	cmp	r0, r3
 8012904:	d26f      	bcs.n	80129e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b2>
 8012906:	9b04      	ldr	r3, [sp, #16]
 8012908:	4621      	mov	r1, r4
 801290a:	eb00 0b03 	add.w	fp, r0, r3
 801290e:	4558      	cmp	r0, fp
 8012910:	d25c      	bcs.n	80129cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x198>
 8012912:	f851 2b04 	ldr.w	r2, [r1], #4
 8012916:	0e14      	lsrs	r4, r2, #24
 8012918:	d016      	beq.n	8012948 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 801291a:	2cff      	cmp	r4, #255	; 0xff
 801291c:	b2d3      	uxtb	r3, r2
 801291e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8012922:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8012926:	d111      	bne.n	801294c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 8012928:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801292c:	d10e      	bne.n	801294c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 801292e:	f6a4 04ff 	subw	r4, r4, #2303	; 0x8ff
 8012932:	ea04 2202 	and.w	r2, r4, r2, lsl #8
 8012936:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801293a:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 801293e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8012942:	ea43 030c 	orr.w	r3, r3, ip
 8012946:	8003      	strh	r3, [r0, #0]
 8012948:	3002      	adds	r0, #2
 801294a:	e7e0      	b.n	801290e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 801294c:	fb09 f404 	mul.w	r4, r9, r4
 8012950:	8807      	ldrh	r7, [r0, #0]
 8012952:	1c65      	adds	r5, r4, #1
 8012954:	eb05 2424 	add.w	r4, r5, r4, asr #8
 8012958:	1224      	asrs	r4, r4, #8
 801295a:	123e      	asrs	r6, r7, #8
 801295c:	fa1f fe84 	uxth.w	lr, r4
 8012960:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012964:	43e4      	mvns	r4, r4
 8012966:	b2d2      	uxtb	r2, r2
 8012968:	b2e4      	uxtb	r4, r4
 801296a:	10fd      	asrs	r5, r7, #3
 801296c:	fb12 f20e 	smulbb	r2, r2, lr
 8012970:	00ff      	lsls	r7, r7, #3
 8012972:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012976:	fb06 2604 	mla	r6, r6, r4, r2
 801297a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801297e:	b2ff      	uxtb	r7, r7
 8012980:	fa5f fc8c 	uxtb.w	ip, ip
 8012984:	b2b6      	uxth	r6, r6
 8012986:	fb1c fc0e 	smulbb	ip, ip, lr
 801298a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801298e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8012992:	fb13 f30e 	smulbb	r3, r3, lr
 8012996:	fb05 c504 	mla	r5, r5, r4, ip
 801299a:	1c72      	adds	r2, r6, #1
 801299c:	fb07 3704 	mla	r7, r7, r4, r3
 80129a0:	b2ad      	uxth	r5, r5
 80129a2:	b2bf      	uxth	r7, r7
 80129a4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80129a8:	f406 4278 	and.w	r2, r6, #63488	; 0xf800
 80129ac:	f105 0c01 	add.w	ip, r5, #1
 80129b0:	1c7e      	adds	r6, r7, #1
 80129b2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80129b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80129ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80129be:	096d      	lsrs	r5, r5, #5
 80129c0:	4316      	orrs	r6, r2
 80129c2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80129c6:	432e      	orrs	r6, r5
 80129c8:	8006      	strh	r6, [r0, #0]
 80129ca:	e7bd      	b.n	8012948 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 80129cc:	f8ba 3000 	ldrh.w	r3, [sl]
 80129d0:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 80129d4:	eba3 0308 	sub.w	r3, r3, r8
 80129d8:	eba4 0408 	sub.w	r4, r4, r8
 80129dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80129e0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80129e4:	e78c      	b.n	8012900 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xcc>
 80129e6:	4b03      	ldr	r3, [pc, #12]	; (80129f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 80129e8:	6818      	ldr	r0, [r3, #0]
 80129ea:	6803      	ldr	r3, [r0, #0]
 80129ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80129ee:	4798      	blx	r3
 80129f0:	e76b      	b.n	80128ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 80129f2:	bf00      	nop
 80129f4:	2000a324 	.word	0x2000a324
 80129f8:	2000a31e 	.word	0x2000a31e

080129fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80129fc:	b570      	push	{r4, r5, r6, lr}
 80129fe:	9d04      	ldr	r5, [sp, #16]
 8012a00:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012a04:	460c      	mov	r4, r1
 8012a06:	4619      	mov	r1, r3
 8012a08:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012a0c:	2a0d      	cmp	r2, #13
 8012a0e:	d820      	bhi.n	8012a52 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8012a10:	e8df f002 	tbb	[pc, r2]
 8012a14:	18121807 	.word	0x18121807
 8012a18:	18181818 	.word	0x18181818
 8012a1c:	18181818 	.word	0x18181818
 8012a20:	1818      	.short	0x1818
 8012a22:	6802      	ldr	r2, [r0, #0]
 8012a24:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012a28:	68d6      	ldr	r6, [r2, #12]
 8012a2a:	462b      	mov	r3, r5
 8012a2c:	460a      	mov	r2, r1
 8012a2e:	46b4      	mov	ip, r6
 8012a30:	4621      	mov	r1, r4
 8012a32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a36:	4760      	bx	ip
 8012a38:	462a      	mov	r2, r5
 8012a3a:	4620      	mov	r0, r4
 8012a3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a40:	f7ff bef8 	b.w	8012834 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012a44:	4b03      	ldr	r3, [pc, #12]	; (8012a54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8012a46:	4a04      	ldr	r2, [pc, #16]	; (8012a58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8012a48:	4804      	ldr	r0, [pc, #16]	; (8012a5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8012a4a:	f44f 7142 	mov.w	r1, #776	; 0x308
 8012a4e:	f008 fd2b 	bl	801b4a8 <__assert_func>
 8012a52:	bd70      	pop	{r4, r5, r6, pc}
 8012a54:	0801f587 	.word	0x0801f587
 8012a58:	0801fce6 	.word	0x0801fce6
 8012a5c:	0801f462 	.word	0x0801f462

08012a60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8012a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a64:	460e      	mov	r6, r1
 8012a66:	b08c      	sub	sp, #48	; 0x30
 8012a68:	4604      	mov	r4, r0
 8012a6a:	6808      	ldr	r0, [r1, #0]
 8012a6c:	6849      	ldr	r1, [r1, #4]
 8012a6e:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 8012c40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>
 8012a72:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8012c44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>
 8012a76:	461d      	mov	r5, r3
 8012a78:	ab08      	add	r3, sp, #32
 8012a7a:	c303      	stmia	r3!, {r0, r1}
 8012a7c:	6810      	ldr	r0, [r2, #0]
 8012a7e:	6851      	ldr	r1, [r2, #4]
 8012a80:	ab0a      	add	r3, sp, #40	; 0x28
 8012a82:	c303      	stmia	r3!, {r0, r1}
 8012a84:	a808      	add	r0, sp, #32
 8012a86:	f7f9 fc7b 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012a8a:	4631      	mov	r1, r6
 8012a8c:	a80a      	add	r0, sp, #40	; 0x28
 8012a8e:	f7f9 fc5f 	bl	800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012a92:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012a96:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012a9a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012a9e:	f8d8 0000 	ldr.w	r0, [r8]
 8012aa2:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	; 0x2c
 8012aa6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012aaa:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012aae:	440c      	add	r4, r1
 8012ab0:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012ab4:	440a      	add	r2, r1
 8012ab6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012aba:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012abe:	4413      	add	r3, r2
 8012ac0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012ac4:	6803      	ldr	r3, [r0, #0]
 8012ac6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012ac8:	4798      	blx	r3
 8012aca:	2dff      	cmp	r5, #255	; 0xff
 8012acc:	d122      	bne.n	8012b14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb4>
 8012ace:	f010 0f01 	tst.w	r0, #1
 8012ad2:	f8d8 0000 	ldr.w	r0, [r8]
 8012ad6:	d020      	beq.n	8012b1a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xba>
 8012ad8:	2100      	movs	r1, #0
 8012ada:	f04f 0e01 	mov.w	lr, #1
 8012ade:	f8d0 c000 	ldr.w	ip, [r0]
 8012ae2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012ae6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012aea:	e9cd e106 	strd	lr, r1, [sp, #24]
 8012aee:	f8b9 e000 	ldrh.w	lr, [r9]
 8012af2:	9503      	str	r5, [sp, #12]
 8012af4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8012af8:	b2b6      	uxth	r6, r6
 8012afa:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012afe:	9102      	str	r1, [sp, #8]
 8012b00:	b2bf      	uxth	r7, r7
 8012b02:	9601      	str	r6, [sp, #4]
 8012b04:	9700      	str	r7, [sp, #0]
 8012b06:	f8dc 503c 	ldr.w	r5, [ip, #60]	; 0x3c
 8012b0a:	4621      	mov	r1, r4
 8012b0c:	47a8      	blx	r5
 8012b0e:	b00c      	add	sp, #48	; 0x30
 8012b10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012b14:	f010 0f04 	tst.w	r0, #4
 8012b18:	e7db      	b.n	8012ad2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x72>
 8012b1a:	6803      	ldr	r3, [r0, #0]
 8012b1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012b1e:	4798      	blx	r3
 8012b20:	f8b9 3000 	ldrh.w	r3, [r9]
 8012b24:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012b28:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012b2c:	f9bd c024 	ldrsh.w	ip, [sp, #36]	; 0x24
 8012b30:	fb03 1202 	mla	r2, r3, r2, r1
 8012b34:	ebac 0c07 	sub.w	ip, ip, r7
 8012b38:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012b3c:	435e      	muls	r6, r3
 8012b3e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8012b42:	2dff      	cmp	r5, #255	; 0xff
 8012b44:	eba3 0707 	sub.w	r7, r3, r7
 8012b48:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012b4c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8012b50:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8012b54:	d049      	beq.n	8012bea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18a>
 8012b56:	43eb      	mvns	r3, r5
 8012b58:	fa1f f985 	uxth.w	r9, r5
 8012b5c:	b2db      	uxtb	r3, r3
 8012b5e:	42b0      	cmp	r0, r6
 8012b60:	d266      	bcs.n	8012c30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8012b62:	eb00 0a0e 	add.w	sl, r0, lr
 8012b66:	4550      	cmp	r0, sl
 8012b68:	4621      	mov	r1, r4
 8012b6a:	f104 0403 	add.w	r4, r4, #3
 8012b6e:	d25b      	bcs.n	8012c28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8012b70:	8802      	ldrh	r2, [r0, #0]
 8012b72:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012b76:	ea4f 2822 	mov.w	r8, r2, asr #8
 8012b7a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8012b7e:	fb11 f109 	smulbb	r1, r1, r9
 8012b82:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8012b86:	10d5      	asrs	r5, r2, #3
 8012b88:	fb08 1803 	mla	r8, r8, r3, r1
 8012b8c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8012b90:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012b94:	fb11 f109 	smulbb	r1, r1, r9
 8012b98:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012b9c:	fb05 1503 	mla	r5, r5, r3, r1
 8012ba0:	00d2      	lsls	r2, r2, #3
 8012ba2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012ba6:	b2d2      	uxtb	r2, r2
 8012ba8:	fb11 f109 	smulbb	r1, r1, r9
 8012bac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012bb0:	fa1f f888 	uxth.w	r8, r8
 8012bb4:	fb02 1203 	mla	r2, r2, r3, r1
 8012bb8:	b292      	uxth	r2, r2
 8012bba:	f108 0101 	add.w	r1, r8, #1
 8012bbe:	b2ad      	uxth	r5, r5
 8012bc0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8012bc4:	1c51      	adds	r1, r2, #1
 8012bc6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8012bca:	1c69      	adds	r1, r5, #1
 8012bcc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8012bd0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8012bd4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012bd8:	096d      	lsrs	r5, r5, #5
 8012bda:	ea42 0208 	orr.w	r2, r2, r8
 8012bde:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012be2:	432a      	orrs	r2, r5
 8012be4:	f820 2b02 	strh.w	r2, [r0], #2
 8012be8:	e7bd      	b.n	8012b66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8012bea:	4a14      	ldr	r2, [pc, #80]	; (8012c3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1dc>)
 8012bec:	42b0      	cmp	r0, r6
 8012bee:	d21f      	bcs.n	8012c30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8012bf0:	eb00 050e 	add.w	r5, r0, lr
 8012bf4:	42a8      	cmp	r0, r5
 8012bf6:	4621      	mov	r1, r4
 8012bf8:	f104 0403 	add.w	r4, r4, #3
 8012bfc:	d210      	bcs.n	8012c20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c0>
 8012bfe:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8012c02:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012c06:	00db      	lsls	r3, r3, #3
 8012c08:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8012c0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012c10:	430b      	orrs	r3, r1
 8012c12:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012c16:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8012c1a:	f820 3b02 	strh.w	r3, [r0], #2
 8012c1e:	e7e9      	b.n	8012bf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8012c20:	4438      	add	r0, r7
 8012c22:	eb01 040c 	add.w	r4, r1, ip
 8012c26:	e7e1      	b.n	8012bec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18c>
 8012c28:	4438      	add	r0, r7
 8012c2a:	eb01 040c 	add.w	r4, r1, ip
 8012c2e:	e796      	b.n	8012b5e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xfe>
 8012c30:	4b03      	ldr	r3, [pc, #12]	; (8012c40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>)
 8012c32:	6818      	ldr	r0, [r3, #0]
 8012c34:	6803      	ldr	r3, [r0, #0]
 8012c36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012c38:	4798      	blx	r3
 8012c3a:	e768      	b.n	8012b0e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xae>
 8012c3c:	fffff800 	.word	0xfffff800
 8012c40:	2000a324 	.word	0x2000a324
 8012c44:	2000a31e 	.word	0x2000a31e

08012c48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c4c:	b093      	sub	sp, #76	; 0x4c
 8012c4e:	880e      	ldrh	r6, [r1, #0]
 8012c50:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012c54:	4681      	mov	r9, r0
 8012c56:	4688      	mov	r8, r1
 8012c58:	4615      	mov	r5, r2
 8012c5a:	b136      	cbz	r6, 8012c6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8012c5c:	4b70      	ldr	r3, [pc, #448]	; (8012e20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012c5e:	4a71      	ldr	r2, [pc, #452]	; (8012e24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012c60:	4871      	ldr	r0, [pc, #452]	; (8012e28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012c62:	f44f 719a 	mov.w	r1, #308	; 0x134
 8012c66:	f008 fc1f 	bl	801b4a8 <__assert_func>
 8012c6a:	6810      	ldr	r0, [r2, #0]
 8012c6c:	6851      	ldr	r1, [r2, #4]
 8012c6e:	4f6f      	ldr	r7, [pc, #444]	; (8012e2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012c70:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8012e30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8012c74:	ac0e      	add	r4, sp, #56	; 0x38
 8012c76:	c403      	stmia	r4!, {r0, r1}
 8012c78:	6818      	ldr	r0, [r3, #0]
 8012c7a:	6859      	ldr	r1, [r3, #4]
 8012c7c:	ac10      	add	r4, sp, #64	; 0x40
 8012c7e:	c403      	stmia	r4!, {r0, r1}
 8012c80:	a80e      	add	r0, sp, #56	; 0x38
 8012c82:	f7f9 fb7d 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012c86:	4629      	mov	r1, r5
 8012c88:	a810      	add	r0, sp, #64	; 0x40
 8012c8a:	f7f9 fb61 	bl	800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012c8e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012c92:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012c96:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012c9a:	6838      	ldr	r0, [r7, #0]
 8012c9c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8012ca0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8012ca4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012ca8:	4489      	add	r9, r1
 8012caa:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012cae:	440a      	add	r2, r1
 8012cb0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012cb4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012cb8:	4413      	add	r3, r2
 8012cba:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012cbe:	6803      	ldr	r3, [r0, #0]
 8012cc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012cc2:	4798      	blx	r3
 8012cc4:	f010 0f80 	tst.w	r0, #128	; 0x80
 8012cc8:	6838      	ldr	r0, [r7, #0]
 8012cca:	d01c      	beq.n	8012d06 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8012ccc:	210b      	movs	r1, #11
 8012cce:	6802      	ldr	r2, [r0, #0]
 8012cd0:	9608      	str	r6, [sp, #32]
 8012cd2:	9107      	str	r1, [sp, #28]
 8012cd4:	f8bb 1000 	ldrh.w	r1, [fp]
 8012cd8:	9106      	str	r1, [sp, #24]
 8012cda:	2101      	movs	r1, #1
 8012cdc:	e9cd a104 	strd	sl, r1, [sp, #16]
 8012ce0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012ce4:	9103      	str	r1, [sp, #12]
 8012ce6:	b2a4      	uxth	r4, r4
 8012ce8:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8012cec:	9100      	str	r1, [sp, #0]
 8012cee:	b2ad      	uxth	r5, r5
 8012cf0:	9502      	str	r5, [sp, #8]
 8012cf2:	9401      	str	r4, [sp, #4]
 8012cf4:	6b94      	ldr	r4, [r2, #56]	; 0x38
 8012cf6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012cfa:	4642      	mov	r2, r8
 8012cfc:	4649      	mov	r1, r9
 8012cfe:	47a0      	blx	r4
 8012d00:	b013      	add	sp, #76	; 0x4c
 8012d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d06:	6803      	ldr	r3, [r0, #0]
 8012d08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012d0a:	4798      	blx	r3
 8012d0c:	f8bb 3000 	ldrh.w	r3, [fp]
 8012d10:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8012d14:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8012d18:	fb03 1202 	mla	r2, r3, r2, r1
 8012d1c:	435d      	muls	r5, r3
 8012d1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012d22:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8012d26:	920c      	str	r2, [sp, #48]	; 0x30
 8012d28:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8012d2c:	1b12      	subs	r2, r2, r4
 8012d2e:	920d      	str	r2, [sp, #52]	; 0x34
 8012d30:	0062      	lsls	r2, r4, #1
 8012d32:	1b1c      	subs	r4, r3, r4
 8012d34:	0063      	lsls	r3, r4, #1
 8012d36:	920a      	str	r2, [sp, #40]	; 0x28
 8012d38:	930b      	str	r3, [sp, #44]	; 0x2c
 8012d3a:	f04f 0e04 	mov.w	lr, #4
 8012d3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012d40:	4298      	cmp	r0, r3
 8012d42:	d266      	bcs.n	8012e12 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ca>
 8012d44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012d46:	eb00 0b03 	add.w	fp, r0, r3
 8012d4a:	4558      	cmp	r0, fp
 8012d4c:	d25c      	bcs.n	8012e08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c0>
 8012d4e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8012d52:	fb1e e303 	smlabb	r3, lr, r3, lr
 8012d56:	f858 2003 	ldr.w	r2, [r8, r3]
 8012d5a:	0e11      	lsrs	r1, r2, #24
 8012d5c:	d012      	beq.n	8012d84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8012d5e:	29ff      	cmp	r1, #255	; 0xff
 8012d60:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8012d64:	d110      	bne.n	8012d88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8012d66:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012d6a:	d10d      	bne.n	8012d88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8012d6c:	0953      	lsrs	r3, r2, #5
 8012d6e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8012d72:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012d76:	f027 0707 	bic.w	r7, r7, #7
 8012d7a:	431f      	orrs	r7, r3
 8012d7c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012d80:	433a      	orrs	r2, r7
 8012d82:	8002      	strh	r2, [r0, #0]
 8012d84:	3002      	adds	r0, #2
 8012d86:	e7e0      	b.n	8012d4a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x102>
 8012d88:	fb0a f101 	mul.w	r1, sl, r1
 8012d8c:	8806      	ldrh	r6, [r0, #0]
 8012d8e:	1c4b      	adds	r3, r1, #1
 8012d90:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8012d94:	1235      	asrs	r5, r6, #8
 8012d96:	10f4      	asrs	r4, r6, #3
 8012d98:	121b      	asrs	r3, r3, #8
 8012d9a:	00f6      	lsls	r6, r6, #3
 8012d9c:	b299      	uxth	r1, r3
 8012d9e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8012da2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8012da6:	b2f6      	uxtb	r6, r6
 8012da8:	43db      	mvns	r3, r3
 8012daa:	b2d2      	uxtb	r2, r2
 8012dac:	b2db      	uxtb	r3, r3
 8012dae:	fb1c fc01 	smulbb	ip, ip, r1
 8012db2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8012db6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012dba:	fb12 f201 	smulbb	r2, r2, r1
 8012dbe:	fb05 c503 	mla	r5, r5, r3, ip
 8012dc2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8012dc6:	b2ff      	uxtb	r7, r7
 8012dc8:	fb06 2203 	mla	r2, r6, r3, r2
 8012dcc:	b2ad      	uxth	r5, r5
 8012dce:	fb17 f701 	smulbb	r7, r7, r1
 8012dd2:	b292      	uxth	r2, r2
 8012dd4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8012dd8:	fb04 7403 	mla	r4, r4, r3, r7
 8012ddc:	f105 0c01 	add.w	ip, r5, #1
 8012de0:	1c57      	adds	r7, r2, #1
 8012de2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012de6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8012dea:	b2a4      	uxth	r4, r4
 8012dec:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8012df0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8012df4:	433d      	orrs	r5, r7
 8012df6:	1c67      	adds	r7, r4, #1
 8012df8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8012dfc:	0964      	lsrs	r4, r4, #5
 8012dfe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8012e02:	4325      	orrs	r5, r4
 8012e04:	8005      	strh	r5, [r0, #0]
 8012e06:	e7bd      	b.n	8012d84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8012e08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012e0a:	4418      	add	r0, r3
 8012e0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e0e:	4499      	add	r9, r3
 8012e10:	e795      	b.n	8012d3e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf6>
 8012e12:	4b06      	ldr	r3, [pc, #24]	; (8012e2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012e14:	6818      	ldr	r0, [r3, #0]
 8012e16:	6803      	ldr	r3, [r0, #0]
 8012e18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e1a:	4798      	blx	r3
 8012e1c:	e770      	b.n	8012d00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8012e1e:	bf00      	nop
 8012e20:	0801f360 	.word	0x0801f360
 8012e24:	0801fab7 	.word	0x0801fab7
 8012e28:	0801f462 	.word	0x0801f462
 8012e2c:	2000a324 	.word	0x2000a324
 8012e30:	2000a31e 	.word	0x2000a31e

08012e34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e38:	4614      	mov	r4, r2
 8012e3a:	880a      	ldrh	r2, [r1, #0]
 8012e3c:	b087      	sub	sp, #28
 8012e3e:	2a02      	cmp	r2, #2
 8012e40:	4680      	mov	r8, r0
 8012e42:	460d      	mov	r5, r1
 8012e44:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8012e48:	d006      	beq.n	8012e58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8012e4a:	4b63      	ldr	r3, [pc, #396]	; (8012fd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8012e4c:	4a63      	ldr	r2, [pc, #396]	; (8012fdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8012e4e:	4864      	ldr	r0, [pc, #400]	; (8012fe0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8012e50:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 8012e54:	f008 fb28 	bl	801b4a8 <__assert_func>
 8012e58:	2e00      	cmp	r6, #0
 8012e5a:	f000 80b9 	beq.w	8012fd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8012e5e:	6820      	ldr	r0, [r4, #0]
 8012e60:	6861      	ldr	r1, [r4, #4]
 8012e62:	af02      	add	r7, sp, #8
 8012e64:	c703      	stmia	r7!, {r0, r1}
 8012e66:	6818      	ldr	r0, [r3, #0]
 8012e68:	6859      	ldr	r1, [r3, #4]
 8012e6a:	af04      	add	r7, sp, #16
 8012e6c:	c703      	stmia	r7!, {r0, r1}
 8012e6e:	a802      	add	r0, sp, #8
 8012e70:	f7f9 fa86 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e74:	4621      	mov	r1, r4
 8012e76:	a804      	add	r0, sp, #16
 8012e78:	f7f9 fa6a 	bl	800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012e7c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012e80:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012e84:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8012e88:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8012e8c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8012e90:	eb08 0401 	add.w	r4, r8, r1
 8012e94:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8012e98:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8012e9c:	440a      	add	r2, r1
 8012e9e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012ea2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012ea6:	4413      	add	r3, r2
 8012ea8:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012eac:	4b4d      	ldr	r3, [pc, #308]	; (8012fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8012eae:	6818      	ldr	r0, [r3, #0]
 8012eb0:	6803      	ldr	r3, [r0, #0]
 8012eb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012eb4:	4798      	blx	r3
 8012eb6:	4b4c      	ldr	r3, [pc, #304]	; (8012fe8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8012eb8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8012ebc:	881a      	ldrh	r2, [r3, #0]
 8012ebe:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8012ec2:	2eff      	cmp	r6, #255	; 0xff
 8012ec4:	fb02 c101 	mla	r1, r2, r1, ip
 8012ec8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8012ecc:	fb02 f207 	mul.w	r2, r2, r7
 8012ed0:	f105 0104 	add.w	r1, r5, #4
 8012ed4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8012ed8:	461d      	mov	r5, r3
 8012eda:	d05a      	beq.n	8012f92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8012edc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8012ee0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012ee4:	b2b6      	uxth	r6, r6
 8012ee6:	fa1f fe8e 	uxth.w	lr, lr
 8012eea:	9301      	str	r3, [sp, #4]
 8012eec:	4282      	cmp	r2, r0
 8012eee:	d96a      	bls.n	8012fc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8012ef0:	eb00 0b0a 	add.w	fp, r0, sl
 8012ef4:	4583      	cmp	fp, r0
 8012ef6:	d940      	bls.n	8012f7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8012ef8:	f814 3b01 	ldrb.w	r3, [r4], #1
 8012efc:	8805      	ldrh	r5, [r0, #0]
 8012efe:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8012f02:	122f      	asrs	r7, r5, #8
 8012f04:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012f08:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012f0c:	fb17 f70e 	smulbb	r7, r7, lr
 8012f10:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012f14:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012f18:	00ed      	lsls	r5, r5, #3
 8012f1a:	fb0c 7c06 	mla	ip, ip, r6, r7
 8012f1e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012f22:	10df      	asrs	r7, r3, #3
 8012f24:	b2ed      	uxtb	r5, r5
 8012f26:	00db      	lsls	r3, r3, #3
 8012f28:	fa1f fc8c 	uxth.w	ip, ip
 8012f2c:	fb19 f90e 	smulbb	r9, r9, lr
 8012f30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012f34:	b2db      	uxtb	r3, r3
 8012f36:	fb15 f50e 	smulbb	r5, r5, lr
 8012f3a:	fb07 9706 	mla	r7, r7, r6, r9
 8012f3e:	fb03 5306 	mla	r3, r3, r6, r5
 8012f42:	f10c 0901 	add.w	r9, ip, #1
 8012f46:	b29b      	uxth	r3, r3
 8012f48:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012f4c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8012f50:	f103 0c01 	add.w	ip, r3, #1
 8012f54:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012f58:	b2bf      	uxth	r7, r7
 8012f5a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012f5e:	ea4c 0c09 	orr.w	ip, ip, r9
 8012f62:	f107 0901 	add.w	r9, r7, #1
 8012f66:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8012f6a:	097f      	lsrs	r7, r7, #5
 8012f6c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012f70:	ea4c 0c07 	orr.w	ip, ip, r7
 8012f74:	f820 cb02 	strh.w	ip, [r0], #2
 8012f78:	e7bc      	b.n	8012ef4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012f7a:	9b01      	ldr	r3, [sp, #4]
 8012f7c:	881b      	ldrh	r3, [r3, #0]
 8012f7e:	eba3 0308 	sub.w	r3, r3, r8
 8012f82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012f86:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012f8a:	eba3 0308 	sub.w	r3, r3, r8
 8012f8e:	441c      	add	r4, r3
 8012f90:	e7ac      	b.n	8012eec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 8012f92:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012f96:	4282      	cmp	r2, r0
 8012f98:	d915      	bls.n	8012fc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8012f9a:	eb00 060a 	add.w	r6, r0, sl
 8012f9e:	4286      	cmp	r6, r0
 8012fa0:	d906      	bls.n	8012fb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 8012fa2:	f814 3b01 	ldrb.w	r3, [r4], #1
 8012fa6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8012faa:	f820 3b02 	strh.w	r3, [r0], #2
 8012fae:	e7f6      	b.n	8012f9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8012fb0:	882b      	ldrh	r3, [r5, #0]
 8012fb2:	eba3 0308 	sub.w	r3, r3, r8
 8012fb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012fba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012fbe:	eba3 0308 	sub.w	r3, r3, r8
 8012fc2:	441c      	add	r4, r3
 8012fc4:	e7e7      	b.n	8012f96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 8012fc6:	4b07      	ldr	r3, [pc, #28]	; (8012fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8012fc8:	6818      	ldr	r0, [r3, #0]
 8012fca:	6803      	ldr	r3, [r0, #0]
 8012fcc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012fce:	4798      	blx	r3
 8012fd0:	b007      	add	sp, #28
 8012fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fd6:	bf00      	nop
 8012fd8:	0801f290 	.word	0x0801f290
 8012fdc:	0801f921 	.word	0x0801f921
 8012fe0:	0801f462 	.word	0x0801f462
 8012fe4:	2000a324 	.word	0x2000a324
 8012fe8:	2000a31e 	.word	0x2000a31e

08012fec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8012fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ff0:	f8b1 9000 	ldrh.w	r9, [r1]
 8012ff4:	b091      	sub	sp, #68	; 0x44
 8012ff6:	f1b9 0f01 	cmp.w	r9, #1
 8012ffa:	4604      	mov	r4, r0
 8012ffc:	460f      	mov	r7, r1
 8012ffe:	4690      	mov	r8, r2
 8013000:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8013004:	d006      	beq.n	8013014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 8013006:	4b84      	ldr	r3, [pc, #528]	; (8013218 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8013008:	4a84      	ldr	r2, [pc, #528]	; (801321c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801300a:	4885      	ldr	r0, [pc, #532]	; (8013220 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 801300c:	f44f 71ee 	mov.w	r1, #476	; 0x1dc
 8013010:	f008 fa4a 	bl	801b4a8 <__assert_func>
 8013014:	2d00      	cmp	r5, #0
 8013016:	d04f      	beq.n	80130b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8013018:	6810      	ldr	r0, [r2, #0]
 801301a:	6851      	ldr	r1, [r2, #4]
 801301c:	f8df b208 	ldr.w	fp, [pc, #520]	; 8013228 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8013020:	ae0c      	add	r6, sp, #48	; 0x30
 8013022:	c603      	stmia	r6!, {r0, r1}
 8013024:	6818      	ldr	r0, [r3, #0]
 8013026:	6859      	ldr	r1, [r3, #4]
 8013028:	ae0e      	add	r6, sp, #56	; 0x38
 801302a:	c603      	stmia	r6!, {r0, r1}
 801302c:	a80c      	add	r0, sp, #48	; 0x30
 801302e:	f7f9 f9a7 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013032:	4641      	mov	r1, r8
 8013034:	a80e      	add	r0, sp, #56	; 0x38
 8013036:	f7f9 f98b 	bl	800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801303a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801303e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8013042:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013046:	f8db 0000 	ldr.w	r0, [fp]
 801304a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801304e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8013052:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801322c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 8013056:	fb11 2103 	smlabb	r1, r1, r3, r2
 801305a:	440c      	add	r4, r1
 801305c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8013060:	440a      	add	r2, r1
 8013062:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8013066:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801306a:	4413      	add	r3, r2
 801306c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8013070:	6803      	ldr	r3, [r0, #0]
 8013072:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013074:	4798      	blx	r3
 8013076:	f010 0f80 	tst.w	r0, #128	; 0x80
 801307a:	f8db 0000 	ldr.w	r0, [fp]
 801307e:	d01e      	beq.n	80130be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8013080:	210b      	movs	r1, #11
 8013082:	f04f 0c00 	mov.w	ip, #0
 8013086:	6802      	ldr	r2, [r0, #0]
 8013088:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801308c:	e9cd 1c07 	strd	r1, ip, [sp, #28]
 8013090:	f8b8 1000 	ldrh.w	r1, [r8]
 8013094:	9504      	str	r5, [sp, #16]
 8013096:	e9cd 9105 	strd	r9, r1, [sp, #20]
 801309a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801309e:	9103      	str	r1, [sp, #12]
 80130a0:	fa1f f18a 	uxth.w	r1, sl
 80130a4:	9102      	str	r1, [sp, #8]
 80130a6:	b2b6      	uxth	r6, r6
 80130a8:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 80130ac:	9100      	str	r1, [sp, #0]
 80130ae:	9601      	str	r6, [sp, #4]
 80130b0:	6b95      	ldr	r5, [r2, #56]	; 0x38
 80130b2:	4621      	mov	r1, r4
 80130b4:	463a      	mov	r2, r7
 80130b6:	47a8      	blx	r5
 80130b8:	b011      	add	sp, #68	; 0x44
 80130ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130be:	6803      	ldr	r3, [r0, #0]
 80130c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80130c2:	4798      	blx	r3
 80130c4:	f8b8 2000 	ldrh.w	r2, [r8]
 80130c8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80130cc:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80130d0:	2dff      	cmp	r5, #255	; 0xff
 80130d2:	fb02 1303 	mla	r3, r2, r3, r1
 80130d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80130da:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80130de:	fb0a fa02 	mul.w	sl, sl, r2
 80130e2:	d062      	beq.n	80131aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80130e4:	ea6f 0c05 	mvn.w	ip, r5
 80130e8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80130ec:	930a      	str	r3, [sp, #40]	; 0x28
 80130ee:	b2ad      	uxth	r5, r5
 80130f0:	fa5f fc8c 	uxtb.w	ip, ip
 80130f4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80130f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80130fa:	4298      	cmp	r0, r3
 80130fc:	f080 8085 	bcs.w	801320a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8013100:	eb00 0b09 	add.w	fp, r0, r9
 8013104:	4558      	cmp	r0, fp
 8013106:	d246      	bcs.n	8013196 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8013108:	f814 eb01 	ldrb.w	lr, [r4], #1
 801310c:	2303      	movs	r3, #3
 801310e:	2204      	movs	r2, #4
 8013110:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8013114:	eb07 0a0e 	add.w	sl, r7, lr
 8013118:	8803      	ldrh	r3, [r0, #0]
 801311a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801311e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8013122:	1219      	asrs	r1, r3, #8
 8013124:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013128:	fb18 f805 	smulbb	r8, r8, r5
 801312c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8013130:	10da      	asrs	r2, r3, #3
 8013132:	fb01 810c 	mla	r1, r1, ip, r8
 8013136:	00db      	lsls	r3, r3, #3
 8013138:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801313c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013140:	b2db      	uxtb	r3, r3
 8013142:	fb18 f805 	smulbb	r8, r8, r5
 8013146:	fb1e fe05 	smulbb	lr, lr, r5
 801314a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801314e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8013152:	b289      	uxth	r1, r1
 8013154:	fb02 820c 	mla	r2, r2, ip, r8
 8013158:	fb03 e30c 	mla	r3, r3, ip, lr
 801315c:	b292      	uxth	r2, r2
 801315e:	b29b      	uxth	r3, r3
 8013160:	f101 0801 	add.w	r8, r1, #1
 8013164:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013168:	f103 0e01 	add.w	lr, r3, #1
 801316c:	f102 0801 	add.w	r8, r2, #1
 8013170:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8013174:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8013178:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801317c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013180:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013184:	ea4e 0101 	orr.w	r1, lr, r1
 8013188:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801318c:	ea41 0108 	orr.w	r1, r1, r8
 8013190:	f820 1b02 	strh.w	r1, [r0], #2
 8013194:	e7b6      	b.n	8013104 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 8013196:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013198:	881b      	ldrh	r3, [r3, #0]
 801319a:	1b9b      	subs	r3, r3, r6
 801319c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80131a0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80131a4:	1b9b      	subs	r3, r3, r6
 80131a6:	441c      	add	r4, r3
 80131a8:	e7a6      	b.n	80130f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80131aa:	491e      	ldr	r1, [pc, #120]	; (8013224 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80131ac:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80131b0:	2203      	movs	r2, #3
 80131b2:	2504      	movs	r5, #4
 80131b4:	4550      	cmp	r0, sl
 80131b6:	d228      	bcs.n	801320a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80131b8:	eb00 0c09 	add.w	ip, r0, r9
 80131bc:	4560      	cmp	r0, ip
 80131be:	4623      	mov	r3, r4
 80131c0:	d219      	bcs.n	80131f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80131c2:	f893 e000 	ldrb.w	lr, [r3]
 80131c6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80131ca:	eb07 0b0e 	add.w	fp, r7, lr
 80131ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80131d2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80131d6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80131da:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80131de:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80131e2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80131e6:	ea43 030b 	orr.w	r3, r3, fp
 80131ea:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80131ee:	3401      	adds	r4, #1
 80131f0:	f820 3b02 	strh.w	r3, [r0], #2
 80131f4:	e7e2      	b.n	80131bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 80131f6:	f8b8 3000 	ldrh.w	r3, [r8]
 80131fa:	1b9b      	subs	r3, r3, r6
 80131fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013200:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013204:	1b9b      	subs	r3, r3, r6
 8013206:	441c      	add	r4, r3
 8013208:	e7d4      	b.n	80131b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801320a:	4b07      	ldr	r3, [pc, #28]	; (8013228 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801320c:	6818      	ldr	r0, [r3, #0]
 801320e:	6803      	ldr	r3, [r0, #0]
 8013210:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013212:	4798      	blx	r3
 8013214:	e750      	b.n	80130b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8013216:	bf00      	nop
 8013218:	0801f2de 	.word	0x0801f2de
 801321c:	0801f9aa 	.word	0x0801f9aa
 8013220:	0801f462 	.word	0x0801f462
 8013224:	fffff800 	.word	0xfffff800
 8013228:	2000a324 	.word	0x2000a324
 801322c:	2000a31e 	.word	0x2000a31e

08013230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8013230:	b430      	push	{r4, r5}
 8013232:	780d      	ldrb	r5, [r1, #0]
 8013234:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013238:	2d01      	cmp	r5, #1
 801323a:	d00a      	beq.n	8013252 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801323c:	d305      	bcc.n	801324a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801323e:	2d02      	cmp	r5, #2
 8013240:	d10b      	bne.n	801325a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8013242:	9402      	str	r4, [sp, #8]
 8013244:	bc30      	pop	{r4, r5}
 8013246:	f7ff bdf5 	b.w	8012e34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801324a:	9402      	str	r4, [sp, #8]
 801324c:	bc30      	pop	{r4, r5}
 801324e:	f7ff bcfb 	b.w	8012c48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8013252:	9402      	str	r4, [sp, #8]
 8013254:	bc30      	pop	{r4, r5}
 8013256:	f7ff bec9 	b.w	8012fec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801325a:	bc30      	pop	{r4, r5}
 801325c:	4770      	bx	lr
	...

08013260 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013264:	4604      	mov	r4, r0
 8013266:	b087      	sub	sp, #28
 8013268:	6810      	ldr	r0, [r2, #0]
 801326a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801326e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80134a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8013272:	460e      	mov	r6, r1
 8013274:	6851      	ldr	r1, [r2, #4]
 8013276:	ad02      	add	r5, sp, #8
 8013278:	c503      	stmia	r5!, {r0, r1}
 801327a:	6818      	ldr	r0, [r3, #0]
 801327c:	6859      	ldr	r1, [r3, #4]
 801327e:	ad04      	add	r5, sp, #16
 8013280:	4617      	mov	r7, r2
 8013282:	c503      	stmia	r5!, {r0, r1}
 8013284:	a802      	add	r0, sp, #8
 8013286:	f7f9 f87b 	bl	800c380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801328a:	4639      	mov	r1, r7
 801328c:	a804      	add	r0, sp, #16
 801328e:	f7f9 f85f 	bl	800c350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013292:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013296:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801329a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801329e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80132a2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80132a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80132aa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80132ae:	440e      	add	r6, r1
 80132b0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80132b4:	440a      	add	r2, r1
 80132b6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80132ba:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80132be:	4413      	add	r3, r2
 80132c0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80132c4:	4b77      	ldr	r3, [pc, #476]	; (80134a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80132c6:	6818      	ldr	r0, [r3, #0]
 80132c8:	6803      	ldr	r3, [r0, #0]
 80132ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80132cc:	4798      	blx	r3
 80132ce:	f8b9 b000 	ldrh.w	fp, [r9]
 80132d2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80132d6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80132da:	fb0b 2303 	mla	r3, fp, r3, r2
 80132de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80132e2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80132e6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80132ea:	fb05 f50b 	mul.w	r5, r5, fp
 80132ee:	9300      	str	r3, [sp, #0]
 80132f0:	d069      	beq.n	80133c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80132f2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80132f6:	4558      	cmp	r0, fp
 80132f8:	f080 80cc 	bcs.w	8013494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80132fc:	9b00      	ldr	r3, [sp, #0]
 80132fe:	18c3      	adds	r3, r0, r3
 8013300:	9301      	str	r3, [sp, #4]
 8013302:	4631      	mov	r1, r6
 8013304:	9b01      	ldr	r3, [sp, #4]
 8013306:	4298      	cmp	r0, r3
 8013308:	d24f      	bcs.n	80133aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801330a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801330e:	2a00      	cmp	r2, #0
 8013310:	d048      	beq.n	80133a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8013312:	fb0a f202 	mul.w	r2, sl, r2
 8013316:	1c53      	adds	r3, r2, #1
 8013318:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801331c:	121b      	asrs	r3, r3, #8
 801331e:	d041      	beq.n	80133a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8013320:	8802      	ldrh	r2, [r0, #0]
 8013322:	f8b4 c000 	ldrh.w	ip, [r4]
 8013326:	b29e      	uxth	r6, r3
 8013328:	1215      	asrs	r5, r2, #8
 801332a:	43db      	mvns	r3, r3
 801332c:	b2db      	uxtb	r3, r3
 801332e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013332:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013336:	fb15 f503 	smulbb	r5, r5, r3
 801333a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801333e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013342:	00d2      	lsls	r2, r2, #3
 8013344:	fb07 5706 	mla	r7, r7, r6, r5
 8013348:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801334c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013350:	b2d2      	uxtb	r2, r2
 8013352:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013356:	b2bf      	uxth	r7, r7
 8013358:	fb1e fe03 	smulbb	lr, lr, r3
 801335c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013360:	fa5f fc8c 	uxtb.w	ip, ip
 8013364:	fb12 f203 	smulbb	r2, r2, r3
 8013368:	fb05 e506 	mla	r5, r5, r6, lr
 801336c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8013370:	f107 0e01 	add.w	lr, r7, #1
 8013374:	fa1f fc8c 	uxth.w	ip, ip
 8013378:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801337c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8013380:	f10c 0701 	add.w	r7, ip, #1
 8013384:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8013388:	b2ad      	uxth	r5, r5
 801338a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801338e:	ea47 070e 	orr.w	r7, r7, lr
 8013392:	f105 0e01 	add.w	lr, r5, #1
 8013396:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801339a:	096d      	lsrs	r5, r5, #5
 801339c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80133a0:	432f      	orrs	r7, r5
 80133a2:	8007      	strh	r7, [r0, #0]
 80133a4:	3002      	adds	r0, #2
 80133a6:	3402      	adds	r4, #2
 80133a8:	e7ac      	b.n	8013304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80133aa:	f8b9 3000 	ldrh.w	r3, [r9]
 80133ae:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80133b2:	eba3 0308 	sub.w	r3, r3, r8
 80133b6:	eba6 0608 	sub.w	r6, r6, r8
 80133ba:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80133be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80133c2:	440e      	add	r6, r1
 80133c4:	e797      	b.n	80132f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80133c6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80133ca:	42a8      	cmp	r0, r5
 80133cc:	d262      	bcs.n	8013494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80133ce:	9b00      	ldr	r3, [sp, #0]
 80133d0:	4631      	mov	r1, r6
 80133d2:	eb00 0b03 	add.w	fp, r0, r3
 80133d6:	4558      	cmp	r0, fp
 80133d8:	d24e      	bcs.n	8013478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80133da:	f811 3b01 	ldrb.w	r3, [r1], #1
 80133de:	b12b      	cbz	r3, 80133ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80133e0:	2bff      	cmp	r3, #255	; 0xff
 80133e2:	f8b4 e000 	ldrh.w	lr, [r4]
 80133e6:	d104      	bne.n	80133f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80133e8:	f8a0 e000 	strh.w	lr, [r0]
 80133ec:	3002      	adds	r0, #2
 80133ee:	3402      	adds	r4, #2
 80133f0:	e7f1      	b.n	80133d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80133f2:	8802      	ldrh	r2, [r0, #0]
 80133f4:	b29f      	uxth	r7, r3
 80133f6:	1216      	asrs	r6, r2, #8
 80133f8:	43db      	mvns	r3, r3
 80133fa:	b2db      	uxtb	r3, r3
 80133fc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013400:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013404:	fb16 f603 	smulbb	r6, r6, r3
 8013408:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801340c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013410:	00d2      	lsls	r2, r2, #3
 8013412:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013416:	b2d2      	uxtb	r2, r2
 8013418:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801341c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8013420:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013424:	fb1a fa03 	smulbb	sl, sl, r3
 8013428:	fa1f fc8c 	uxth.w	ip, ip
 801342c:	fb12 f303 	smulbb	r3, r2, r3
 8013430:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013434:	fa5f fe8e 	uxtb.w	lr, lr
 8013438:	fb06 a607 	mla	r6, r6, r7, sl
 801343c:	f10c 0201 	add.w	r2, ip, #1
 8013440:	fb0e 3307 	mla	r3, lr, r7, r3
 8013444:	b2b6      	uxth	r6, r6
 8013446:	b29b      	uxth	r3, r3
 8013448:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801344c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8013450:	f106 0a01 	add.w	sl, r6, #1
 8013454:	f103 0c01 	add.w	ip, r3, #1
 8013458:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801345c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013460:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013464:	0976      	lsrs	r6, r6, #5
 8013466:	ea4c 0c02 	orr.w	ip, ip, r2
 801346a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801346e:	ea4c 0c06 	orr.w	ip, ip, r6
 8013472:	f8a0 c000 	strh.w	ip, [r0]
 8013476:	e7b9      	b.n	80133ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013478:	f8b9 3000 	ldrh.w	r3, [r9]
 801347c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013480:	eba3 0308 	sub.w	r3, r3, r8
 8013484:	eba6 0608 	sub.w	r6, r6, r8
 8013488:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801348c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013490:	440e      	add	r6, r1
 8013492:	e79a      	b.n	80133ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8013494:	4b03      	ldr	r3, [pc, #12]	; (80134a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013496:	6818      	ldr	r0, [r3, #0]
 8013498:	6803      	ldr	r3, [r0, #0]
 801349a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801349c:	4798      	blx	r3
 801349e:	b007      	add	sp, #28
 80134a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134a4:	2000a324 	.word	0x2000a324
 80134a8:	2000a31e 	.word	0x2000a31e

080134ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80134ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134b0:	b089      	sub	sp, #36	; 0x24
 80134b2:	4682      	mov	sl, r0
 80134b4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80134b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80134ba:	4689      	mov	r9, r1
 80134bc:	4690      	mov	r8, r2
 80134be:	461f      	mov	r7, r3
 80134c0:	b355      	cbz	r5, 8013518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80134c2:	4608      	mov	r0, r1
 80134c4:	f7fc f922 	bl	800f70c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80134c8:	4606      	mov	r6, r0
 80134ca:	4648      	mov	r0, r9
 80134cc:	f7fc f958 	bl	800f780 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80134d0:	f8ad 000e 	strh.w	r0, [sp, #14]
 80134d4:	4648      	mov	r0, r9
 80134d6:	f8ad 8008 	strh.w	r8, [sp, #8]
 80134da:	f8ad 600c 	strh.w	r6, [sp, #12]
 80134de:	f8ad 700a 	strh.w	r7, [sp, #10]
 80134e2:	f7fc fa1b 	bl	800f91c <_ZNK8touchgfx6Bitmap7getDataEv>
 80134e6:	4606      	mov	r6, r0
 80134e8:	4648      	mov	r0, r9
 80134ea:	f7fc fa49 	bl	800f980 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80134ee:	4680      	mov	r8, r0
 80134f0:	4648      	mov	r0, r9
 80134f2:	f7fc fa9d 	bl	800fa30 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80134f6:	280b      	cmp	r0, #11
 80134f8:	f200 80ca 	bhi.w	8013690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e4>
 80134fc:	e8df f000 	tbb	[pc, r0]
 8013500:	c8060f1e 	.word	0xc8060f1e
 8013504:	c8c8c8c8 	.word	0xc8c8c8c8
 8013508:	16c8c8c8 	.word	0x16c8c8c8
 801350c:	462b      	mov	r3, r5
 801350e:	4622      	mov	r2, r4
 8013510:	a902      	add	r1, sp, #8
 8013512:	4630      	mov	r0, r6
 8013514:	f7ff f98e 	bl	8012834 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013518:	b009      	add	sp, #36	; 0x24
 801351a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801351e:	462b      	mov	r3, r5
 8013520:	4622      	mov	r2, r4
 8013522:	a902      	add	r1, sp, #8
 8013524:	4630      	mov	r0, r6
 8013526:	f7ff fa9b 	bl	8012a60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801352a:	e7f5      	b.n	8013518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801352c:	9500      	str	r5, [sp, #0]
 801352e:	4623      	mov	r3, r4
 8013530:	aa02      	add	r2, sp, #8
 8013532:	4641      	mov	r1, r8
 8013534:	4630      	mov	r0, r6
 8013536:	f7ff fe7b 	bl	8013230 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801353a:	e7ed      	b.n	8013518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801353c:	4648      	mov	r0, r9
 801353e:	f7fc f9b3 	bl	800f8a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013542:	b950      	cbnz	r0, 801355a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xae>
 8013544:	e9cd 5000 	strd	r5, r0, [sp]
 8013548:	f8da 3000 	ldr.w	r3, [sl]
 801354c:	aa02      	add	r2, sp, #8
 801354e:	68dd      	ldr	r5, [r3, #12]
 8013550:	4631      	mov	r1, r6
 8013552:	4623      	mov	r3, r4
 8013554:	4650      	mov	r0, sl
 8013556:	47a8      	blx	r5
 8013558:	e7de      	b.n	8013518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801355a:	af06      	add	r7, sp, #24
 801355c:	4649      	mov	r1, r9
 801355e:	4638      	mov	r0, r7
 8013560:	f7fc f948 	bl	800f7f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013564:	e897 0003 	ldmia.w	r7, {r0, r1}
 8013568:	f10d 0910 	add.w	r9, sp, #16
 801356c:	e889 0003 	stmia.w	r9, {r0, r1}
 8013570:	4648      	mov	r0, r9
 8013572:	4621      	mov	r1, r4
 8013574:	f7f6 f814 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8013578:	4648      	mov	r0, r9
 801357a:	f7f6 f854 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 801357e:	b138      	cbz	r0, 8013590 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xe4>
 8013580:	9500      	str	r5, [sp, #0]
 8013582:	4623      	mov	r3, r4
 8013584:	aa02      	add	r2, sp, #8
 8013586:	4641      	mov	r1, r8
 8013588:	4630      	mov	r0, r6
 801358a:	f7ff fe69 	bl	8013260 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801358e:	e7c3      	b.n	8013518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8013590:	e9cd 5000 	strd	r5, r0, [sp]
 8013594:	f8da 3000 	ldr.w	r3, [sl]
 8013598:	aa02      	add	r2, sp, #8
 801359a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801359e:	4631      	mov	r1, r6
 80135a0:	464b      	mov	r3, r9
 80135a2:	4650      	mov	r0, sl
 80135a4:	47d8      	blx	fp
 80135a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80135aa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80135ae:	4293      	cmp	r3, r2
 80135b0:	dd13      	ble.n	80135da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 80135b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80135b6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80135ba:	f8ad 0018 	strh.w	r0, [sp, #24]
 80135be:	1a9b      	subs	r3, r3, r2
 80135c0:	f8ad 201a 	strh.w	r2, [sp, #26]
 80135c4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80135c8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80135cc:	9500      	str	r5, [sp, #0]
 80135ce:	463b      	mov	r3, r7
 80135d0:	aa02      	add	r2, sp, #8
 80135d2:	4641      	mov	r1, r8
 80135d4:	4630      	mov	r0, r6
 80135d6:	f7ff fe43 	bl	8013260 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80135da:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80135de:	f9b4 2000 	ldrsh.w	r2, [r4]
 80135e2:	4293      	cmp	r3, r2
 80135e4:	dd13      	ble.n	801360e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x162>
 80135e6:	1a9b      	subs	r3, r3, r2
 80135e8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80135ec:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80135f0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80135f4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80135f8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80135fc:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013600:	9500      	str	r5, [sp, #0]
 8013602:	463b      	mov	r3, r7
 8013604:	aa02      	add	r2, sp, #8
 8013606:	4641      	mov	r1, r8
 8013608:	4630      	mov	r0, r6
 801360a:	f7ff fe29 	bl	8013260 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801360e:	88a2      	ldrh	r2, [r4, #4]
 8013610:	8823      	ldrh	r3, [r4, #0]
 8013612:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013616:	4413      	add	r3, r2
 8013618:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801361c:	440a      	add	r2, r1
 801361e:	b29b      	uxth	r3, r3
 8013620:	b292      	uxth	r2, r2
 8013622:	b211      	sxth	r1, r2
 8013624:	b218      	sxth	r0, r3
 8013626:	4288      	cmp	r0, r1
 8013628:	dd13      	ble.n	8013652 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a6>
 801362a:	1a9b      	subs	r3, r3, r2
 801362c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013630:	f9bd c012 	ldrsh.w	ip, [sp, #18]
 8013634:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013638:	f8ad 301c 	strh.w	r3, [sp, #28]
 801363c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013640:	9500      	str	r5, [sp, #0]
 8013642:	463b      	mov	r3, r7
 8013644:	aa02      	add	r2, sp, #8
 8013646:	4641      	mov	r1, r8
 8013648:	4630      	mov	r0, r6
 801364a:	f8ad c01a 	strh.w	ip, [sp, #26]
 801364e:	f7ff fe07 	bl	8013260 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013652:	88e2      	ldrh	r2, [r4, #6]
 8013654:	8863      	ldrh	r3, [r4, #2]
 8013656:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801365a:	4413      	add	r3, r2
 801365c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013660:	440a      	add	r2, r1
 8013662:	b29b      	uxth	r3, r3
 8013664:	b292      	uxth	r2, r2
 8013666:	b211      	sxth	r1, r2
 8013668:	b218      	sxth	r0, r3
 801366a:	4288      	cmp	r0, r1
 801366c:	f77f af54 	ble.w	8013518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8013670:	f9b4 c000 	ldrsh.w	ip, [r4]
 8013674:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013678:	f8ad c018 	strh.w	ip, [sp, #24]
 801367c:	1a9b      	subs	r3, r3, r2
 801367e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013682:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013686:	f8ad 001c 	strh.w	r0, [sp, #28]
 801368a:	9500      	str	r5, [sp, #0]
 801368c:	463b      	mov	r3, r7
 801368e:	e779      	b.n	8013584 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xd8>
 8013690:	4b02      	ldr	r3, [pc, #8]	; (801369c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f0>)
 8013692:	4a03      	ldr	r2, [pc, #12]	; (80136a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f4>)
 8013694:	4803      	ldr	r0, [pc, #12]	; (80136a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8013696:	2181      	movs	r1, #129	; 0x81
 8013698:	f007 ff06 	bl	801b4a8 <__assert_func>
 801369c:	0801f32c 	.word	0x0801f32c
 80136a0:	0801fa33 	.word	0x0801fa33
 80136a4:	0801f462 	.word	0x0801f462

080136a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80136a8:	b508      	push	{r3, lr}
 80136aa:	b180      	cbz	r0, 80136ce <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 80136ac:	2902      	cmp	r1, #2
 80136ae:	d014      	beq.n	80136da <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 80136b0:	2903      	cmp	r1, #3
 80136b2:	d01d      	beq.n	80136f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80136b4:	2901      	cmp	r1, #1
 80136b6:	d101      	bne.n	80136bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80136b8:	2001      	movs	r0, #1
 80136ba:	bd08      	pop	{r3, pc}
 80136bc:	4b0e      	ldr	r3, [pc, #56]	; (80136f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80136be:	8818      	ldrh	r0, [r3, #0]
 80136c0:	b990      	cbnz	r0, 80136e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80136c2:	4b0e      	ldr	r3, [pc, #56]	; (80136fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 80136c4:	4a0e      	ldr	r2, [pc, #56]	; (8013700 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 80136c6:	480f      	ldr	r0, [pc, #60]	; (8013704 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 80136c8:	2150      	movs	r1, #80	; 0x50
 80136ca:	f007 feed 	bl	801b4a8 <__assert_func>
 80136ce:	2902      	cmp	r1, #2
 80136d0:	d00e      	beq.n	80136f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80136d2:	2903      	cmp	r1, #3
 80136d4:	d0f2      	beq.n	80136bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80136d6:	2901      	cmp	r1, #1
 80136d8:	d1ee      	bne.n	80136b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 80136da:	4b07      	ldr	r3, [pc, #28]	; (80136f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80136dc:	8818      	ldrh	r0, [r3, #0]
 80136de:	2800      	cmp	r0, #0
 80136e0:	d0ef      	beq.n	80136c2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80136e2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80136e6:	e7e8      	b.n	80136ba <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80136e8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80136ec:	4240      	negs	r0, r0
 80136ee:	e7e4      	b.n	80136ba <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80136f0:	f04f 30ff 	mov.w	r0, #4294967295
 80136f4:	e7e1      	b.n	80136ba <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80136f6:	bf00      	nop
 80136f8:	2000a31e 	.word	0x2000a31e
 80136fc:	0801f5b8 	.word	0x0801f5b8
 8013700:	0801fbb0 	.word	0x0801fbb0
 8013704:	0801f5fa 	.word	0x0801f5fa

08013708 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013708:	b508      	push	{r3, lr}
 801370a:	b180      	cbz	r0, 801372e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801370c:	2902      	cmp	r1, #2
 801370e:	d014      	beq.n	801373a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013710:	2903      	cmp	r1, #3
 8013712:	d018      	beq.n	8013746 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013714:	2901      	cmp	r1, #1
 8013716:	d001      	beq.n	801371c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013718:	2001      	movs	r0, #1
 801371a:	e013      	b.n	8013744 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801371c:	4b0e      	ldr	r3, [pc, #56]	; (8013758 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801371e:	8818      	ldrh	r0, [r3, #0]
 8013720:	b970      	cbnz	r0, 8013740 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8013722:	4b0e      	ldr	r3, [pc, #56]	; (801375c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013724:	4a0e      	ldr	r2, [pc, #56]	; (8013760 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013726:	480f      	ldr	r0, [pc, #60]	; (8013764 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013728:	2150      	movs	r1, #80	; 0x50
 801372a:	f007 febd 	bl	801b4a8 <__assert_func>
 801372e:	2902      	cmp	r1, #2
 8013730:	d009      	beq.n	8013746 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013732:	2903      	cmp	r1, #3
 8013734:	d0f0      	beq.n	8013718 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013736:	2901      	cmp	r1, #1
 8013738:	d1f0      	bne.n	801371c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801373a:	f04f 30ff 	mov.w	r0, #4294967295
 801373e:	e001      	b.n	8013744 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013740:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013744:	bd08      	pop	{r3, pc}
 8013746:	4b04      	ldr	r3, [pc, #16]	; (8013758 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013748:	8818      	ldrh	r0, [r3, #0]
 801374a:	2800      	cmp	r0, #0
 801374c:	d0e9      	beq.n	8013722 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801374e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013752:	4240      	negs	r0, r0
 8013754:	e7f6      	b.n	8013744 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013756:	bf00      	nop
 8013758:	2000a31e 	.word	0x2000a31e
 801375c:	0801f5b8 	.word	0x0801f5b8
 8013760:	0801fbb0 	.word	0x0801fbb0
 8013764:	0801f5fa 	.word	0x0801f5fa

08013768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801376c:	b097      	sub	sp, #92	; 0x5c
 801376e:	9109      	str	r1, [sp, #36]	; 0x24
 8013770:	a912      	add	r1, sp, #72	; 0x48
 8013772:	e881 000c 	stmia.w	r1, {r2, r3}
 8013776:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 801377a:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 801377e:	9308      	str	r3, [sp, #32]
 8013780:	f891 900d 	ldrb.w	r9, [r1, #13]
 8013784:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8013788:	930f      	str	r3, [sp, #60]	; 0x3c
 801378a:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 801378e:	930a      	str	r3, [sp, #40]	; 0x28
 8013790:	7988      	ldrb	r0, [r1, #6]
 8013792:	f9bd 5080 	ldrsh.w	r5, [sp, #128]	; 0x80
 8013796:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 801379a:	f8bd 708c 	ldrh.w	r7, [sp, #140]	; 0x8c
 801379e:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 80137a2:	f89d a0ac 	ldrb.w	sl, [sp, #172]	; 0xac
 80137a6:	ea4f 1349 	mov.w	r3, r9, lsl #5
 80137aa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80137ae:	4303      	orrs	r3, r0
 80137b0:	9307      	str	r3, [sp, #28]
 80137b2:	f000 81b3 	beq.w	8013b1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80137b6:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80137ba:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80137be:	f891 9007 	ldrb.w	r9, [r1, #7]
 80137c2:	ea59 0903 	orrs.w	r9, r9, r3
 80137c6:	f000 81a9 	beq.w	8013b1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80137ca:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80137ce:	b29b      	uxth	r3, r3
 80137d0:	2e00      	cmp	r6, #0
 80137d2:	f000 8137 	beq.w	8013a44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80137d6:	1af6      	subs	r6, r6, r3
 80137d8:	b2b6      	uxth	r6, r6
 80137da:	0434      	lsls	r4, r6, #16
 80137dc:	d502      	bpl.n	80137e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 80137de:	1bad      	subs	r5, r5, r6
 80137e0:	b22d      	sxth	r5, r5
 80137e2:	2600      	movs	r6, #0
 80137e4:	f9b2 1000 	ldrsh.w	r1, [r2]
 80137e8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80137ec:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 80137f0:	428d      	cmp	r5, r1
 80137f2:	b28b      	uxth	r3, r1
 80137f4:	bfbf      	itttt	lt
 80137f6:	18f6      	addlt	r6, r6, r3
 80137f8:	1b75      	sublt	r5, r6, r5
 80137fa:	b2ae      	uxthlt	r6, r5
 80137fc:	460d      	movlt	r5, r1
 80137fe:	8891      	ldrh	r1, [r2, #4]
 8013800:	440b      	add	r3, r1
 8013802:	b21b      	sxth	r3, r3
 8013804:	930e      	str	r3, [sp, #56]	; 0x38
 8013806:	88d3      	ldrh	r3, [r2, #6]
 8013808:	8852      	ldrh	r2, [r2, #2]
 801380a:	4413      	add	r3, r2
 801380c:	b21b      	sxth	r3, r3
 801380e:	930d      	str	r3, [sp, #52]	; 0x34
 8013810:	4b8e      	ldr	r3, [pc, #568]	; (8013a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>)
 8013812:	9a08      	ldr	r2, [sp, #32]
 8013814:	f893 b000 	ldrb.w	fp, [r3]
 8013818:	f10b 30ff 	add.w	r0, fp, #4294967295
 801381c:	4243      	negs	r3, r0
 801381e:	4143      	adcs	r3, r0
 8013820:	930c      	str	r3, [sp, #48]	; 0x30
 8013822:	4629      	mov	r1, r5
 8013824:	4653      	mov	r3, sl
 8013826:	a812      	add	r0, sp, #72	; 0x48
 8013828:	f7f8 fc02 	bl	800c030 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801382c:	4629      	mov	r1, r5
 801382e:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8013832:	4653      	mov	r3, sl
 8013834:	9a08      	ldr	r2, [sp, #32]
 8013836:	a812      	add	r0, sp, #72	; 0x48
 8013838:	f7f8 fc12 	bl	800c060 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801383c:	a916      	add	r1, sp, #88	; 0x58
 801383e:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013842:	a815      	add	r0, sp, #84	; 0x54
 8013844:	f7f8 fd6e 	bl	800c324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013848:	f1ba 0f00 	cmp.w	sl, #0
 801384c:	f040 8106 	bne.w	8013a5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f4>
 8013850:	f1bb 0f01 	cmp.w	fp, #1
 8013854:	f040 810a 	bne.w	8013a6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8013858:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801385a:	b153      	cbz	r3, 8013872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 801385c:	9a07      	ldr	r2, [sp, #28]
 801385e:	2408      	movs	r4, #8
 8013860:	fb94 f3f8 	sdiv	r3, r4, r8
 8013864:	1e5c      	subs	r4, r3, #1
 8013866:	4414      	add	r4, r2
 8013868:	fb94 f4f3 	sdiv	r4, r4, r3
 801386c:	fb14 f403 	smulbb	r4, r4, r3
 8013870:	b2a4      	uxth	r4, r4
 8013872:	b906      	cbnz	r6, 8013876 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8013874:	b16f      	cbz	r7, 8013892 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 8013876:	fb07 6304 	mla	r3, r7, r4, r6
 801387a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801387c:	fb08 f303 	mul.w	r3, r8, r3
 8013880:	463a      	mov	r2, r7
 8013882:	f003 0707 	and.w	r7, r3, #7
 8013886:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801388a:	9326      	str	r3, [sp, #152]	; 0x98
 801388c:	eba9 0302 	sub.w	r3, r9, r2
 8013890:	930b      	str	r3, [sp, #44]	; 0x2c
 8013892:	4651      	mov	r1, sl
 8013894:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013896:	f7ff ff07 	bl	80136a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801389a:	4651      	mov	r1, sl
 801389c:	4681      	mov	r9, r0
 801389e:	980c      	ldr	r0, [sp, #48]	; 0x30
 80138a0:	f7ff ff32 	bl	8013708 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80138a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80138a6:	9a08      	ldr	r2, [sp, #32]
 80138a8:	eba3 0a02 	sub.w	sl, r3, r2
 80138ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80138ae:	459a      	cmp	sl, r3
 80138b0:	bfa8      	it	ge
 80138b2:	469a      	movge	sl, r3
 80138b4:	f1ba 0f00 	cmp.w	sl, #0
 80138b8:	4683      	mov	fp, r0
 80138ba:	f340 812f 	ble.w	8013b1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80138be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80138c0:	1bad      	subs	r5, r5, r6
 80138c2:	1b5d      	subs	r5, r3, r5
 80138c4:	9b07      	ldr	r3, [sp, #28]
 80138c6:	429d      	cmp	r5, r3
 80138c8:	bfd4      	ite	le
 80138ca:	ebc6 0605 	rsble	r6, r6, r5
 80138ce:	ebc6 0603 	rsbgt	r6, r6, r3
 80138d2:	2e00      	cmp	r6, #0
 80138d4:	f340 8122 	ble.w	8013b1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80138d8:	1ba4      	subs	r4, r4, r6
 80138da:	fb08 f304 	mul.w	r3, r8, r4
 80138de:	930d      	str	r3, [sp, #52]	; 0x34
 80138e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80138e2:	2b00      	cmp	r3, #0
 80138e4:	f040 811f 	bne.w	8013b26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 80138e8:	4b59      	ldr	r3, [pc, #356]	; (8013a50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>)
 80138ea:	6818      	ldr	r0, [r3, #0]
 80138ec:	6803      	ldr	r3, [r0, #0]
 80138ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80138f0:	4798      	blx	r3
 80138f2:	2301      	movs	r3, #1
 80138f4:	fa03 f308 	lsl.w	r3, r3, r8
 80138f8:	4a56      	ldr	r2, [pc, #344]	; (8013a54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>)
 80138fa:	3b01      	subs	r3, #1
 80138fc:	b2db      	uxtb	r3, r3
 80138fe:	8811      	ldrh	r1, [r2, #0]
 8013900:	930c      	str	r3, [sp, #48]	; 0x30
 8013902:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8013906:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801390a:	fb01 2303 	mla	r3, r1, r3, r2
 801390e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013912:	9308      	str	r3, [sp, #32]
 8013914:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013916:	0c1a      	lsrs	r2, r3, #16
 8013918:	b2d3      	uxtb	r3, r2
 801391a:	9311      	str	r3, [sp, #68]	; 0x44
 801391c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801391e:	0a1b      	lsrs	r3, r3, #8
 8013920:	b2d9      	uxtb	r1, r3
 8013922:	9110      	str	r1, [sp, #64]	; 0x40
 8013924:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013926:	b2c9      	uxtb	r1, r1
 8013928:	910e      	str	r1, [sp, #56]	; 0x38
 801392a:	494b      	ldr	r1, [pc, #300]	; (8013a58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>)
 801392c:	ea01 2202 	and.w	r2, r1, r2, lsl #8
 8013930:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013932:	00db      	lsls	r3, r3, #3
 8013934:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013938:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801393c:	431a      	orrs	r2, r3
 801393e:	b293      	uxth	r3, r2
 8013940:	930f      	str	r3, [sp, #60]	; 0x3c
 8013942:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013944:	781a      	ldrb	r2, [r3, #0]
 8013946:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801394a:	413a      	asrs	r2, r7
 801394c:	fb06 b919 	mls	r9, r6, r9, fp
 8013950:	fb03 fb06 	mul.w	fp, r3, r6
 8013954:	b2d2      	uxtb	r2, r2
 8013956:	930b      	str	r3, [sp, #44]	; 0x2c
 8013958:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801395c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8013960:	f0c0 80f6 	bcc.w	8013b50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8013964:	f8dd c020 	ldr.w	ip, [sp, #32]
 8013968:	46b6      	mov	lr, r6
 801396a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801396e:	f0c0 80de 	bcc.w	8013b2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8013972:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013974:	4013      	ands	r3, r2
 8013976:	d055      	beq.n	8013a24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2bc>
 8013978:	20ff      	movs	r0, #255	; 0xff
 801397a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801397c:	fb90 f1f1 	sdiv	r1, r0, r1
 8013980:	434b      	muls	r3, r1
 8013982:	2bfe      	cmp	r3, #254	; 0xfe
 8013984:	dd03      	ble.n	801398e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 8013986:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013988:	4281      	cmp	r1, r0
 801398a:	f000 80ce 	beq.w	8013b2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c2>
 801398e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013990:	f8bc 4000 	ldrh.w	r4, [ip]
 8013994:	fb11 f303 	smulbb	r3, r1, r3
 8013998:	b29b      	uxth	r3, r3
 801399a:	1c59      	adds	r1, r3, #1
 801399c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80139a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80139a4:	b29d      	uxth	r5, r3
 80139a6:	43db      	mvns	r3, r3
 80139a8:	b2db      	uxtb	r3, r3
 80139aa:	9307      	str	r3, [sp, #28]
 80139ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80139ae:	1220      	asrs	r0, r4, #8
 80139b0:	fb13 f905 	smulbb	r9, r3, r5
 80139b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80139b8:	9b07      	ldr	r3, [sp, #28]
 80139ba:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80139be:	fb00 9003 	mla	r0, r0, r3, r9
 80139c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139c4:	10e1      	asrs	r1, r4, #3
 80139c6:	fb13 f905 	smulbb	r9, r3, r5
 80139ca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80139ce:	9b07      	ldr	r3, [sp, #28]
 80139d0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80139d4:	fb01 9103 	mla	r1, r1, r3, r9
 80139d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80139da:	00e4      	lsls	r4, r4, #3
 80139dc:	fb13 f505 	smulbb	r5, r3, r5
 80139e0:	b2e4      	uxtb	r4, r4
 80139e2:	9b07      	ldr	r3, [sp, #28]
 80139e4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80139e8:	fb04 5403 	mla	r4, r4, r3, r5
 80139ec:	b280      	uxth	r0, r0
 80139ee:	b2a4      	uxth	r4, r4
 80139f0:	1c43      	adds	r3, r0, #1
 80139f2:	f104 0901 	add.w	r9, r4, #1
 80139f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80139fa:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80139fe:	b289      	uxth	r1, r1
 8013a00:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8013a04:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013a08:	ea49 0000 	orr.w	r0, r9, r0
 8013a0c:	f101 0901 	add.w	r9, r1, #1
 8013a10:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8013a14:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013a18:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013a1c:	ea40 0009 	orr.w	r0, r0, r9
 8013a20:	f8ac 0000 	strh.w	r0, [ip]
 8013a24:	4447      	add	r7, r8
 8013a26:	b2bf      	uxth	r7, r7
 8013a28:	2f07      	cmp	r7, #7
 8013a2a:	bf81      	itttt	hi
 8013a2c:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8013a2e:	785a      	ldrbhi	r2, [r3, #1]
 8013a30:	3301      	addhi	r3, #1
 8013a32:	9326      	strhi	r3, [sp, #152]	; 0x98
 8013a34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a36:	bf9a      	itte	ls
 8013a38:	fa42 f208 	asrls.w	r2, r2, r8
 8013a3c:	b2d2      	uxtbls	r2, r2
 8013a3e:	2700      	movhi	r7, #0
 8013a40:	449c      	add	ip, r3
 8013a42:	e792      	b.n	801396a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8013a44:	441d      	add	r5, r3
 8013a46:	b22d      	sxth	r5, r5
 8013a48:	e6cc      	b.n	80137e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013a4a:	bf00      	nop
 8013a4c:	2000a31c 	.word	0x2000a31c
 8013a50:	2000a324 	.word	0x2000a324
 8013a54:	2000a31e 	.word	0x2000a31e
 8013a58:	fffff800 	.word	0xfffff800
 8013a5c:	f1ba 0f01 	cmp.w	sl, #1
 8013a60:	f47f aefa 	bne.w	8013858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013a64:	f1bb 0f01 	cmp.w	fp, #1
 8013a68:	f47f aef6 	bne.w	8013858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013a6c:	f8df b104 	ldr.w	fp, [pc, #260]	; 8013b74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>
 8013a70:	f8db 0000 	ldr.w	r0, [fp]
 8013a74:	6803      	ldr	r3, [r0, #0]
 8013a76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013a78:	4798      	blx	r3
 8013a7a:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8013a7e:	465a      	mov	r2, fp
 8013a80:	d006      	beq.n	8013a90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8013a82:	f1b8 0f04 	cmp.w	r8, #4
 8013a86:	d14c      	bne.n	8013b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8013a88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013a8a:	3300      	adds	r3, #0
 8013a8c:	bf18      	it	ne
 8013a8e:	2301      	movne	r3, #1
 8013a90:	0581      	lsls	r1, r0, #22
 8013a92:	d566      	bpl.n	8013b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8013a94:	f1b8 0f08 	cmp.w	r8, #8
 8013a98:	d163      	bne.n	8013b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8013a9a:	2b00      	cmp	r3, #0
 8013a9c:	bf0c      	ite	eq
 8013a9e:	f44f 7c00 	moveq.w	ip, #512	; 0x200
 8013aa2:	f44f 7c80 	movne.w	ip, #256	; 0x100
 8013aa6:	2e00      	cmp	r6, #0
 8013aa8:	f47f aed6 	bne.w	8013858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013aac:	2f00      	cmp	r7, #0
 8013aae:	f47f aed3 	bne.w	8013858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013ab2:	9b07      	ldr	r3, [sp, #28]
 8013ab4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013ab6:	18eb      	adds	r3, r5, r3
 8013ab8:	428b      	cmp	r3, r1
 8013aba:	f73f aecd 	bgt.w	8013858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013abe:	9b08      	ldr	r3, [sp, #32]
 8013ac0:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013ac2:	444b      	add	r3, r9
 8013ac4:	428b      	cmp	r3, r1
 8013ac6:	f73f aec7 	bgt.w	8013858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013aca:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013acc:	4e28      	ldr	r6, [pc, #160]	; (8013b70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x408>)
 8013ace:	6810      	ldr	r0, [r2, #0]
 8013ad0:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8013ad4:	6803      	ldr	r3, [r0, #0]
 8013ad6:	ea06 2611 	and.w	r6, r6, r1, lsr #8
 8013ada:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8013ade:	4331      	orrs	r1, r6
 8013ae0:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8013ae2:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8013ae4:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8013ae8:	f8cd c014 	str.w	ip, [sp, #20]
 8013aec:	f1b8 0f08 	cmp.w	r8, #8
 8013af0:	ea4f 1656 	mov.w	r6, r6, lsr #5
 8013af4:	bf18      	it	ne
 8013af6:	3401      	addne	r4, #1
 8013af8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013afc:	bf18      	it	ne
 8013afe:	f024 0401 	bicne.w	r4, r4, #1
 8013b02:	ea41 0106 	orr.w	r1, r1, r6
 8013b06:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013b08:	bf18      	it	ne
 8013b0a:	b2a4      	uxthne	r4, r4
 8013b0c:	b289      	uxth	r1, r1
 8013b0e:	e9cd 1603 	strd	r1, r6, [sp, #12]
 8013b12:	e9cd 9401 	strd	r9, r4, [sp, #4]
 8013b16:	9400      	str	r4, [sp, #0]
 8013b18:	9926      	ldr	r1, [sp, #152]	; 0x98
 8013b1a:	47a8      	blx	r5
 8013b1c:	b017      	add	sp, #92	; 0x5c
 8013b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b22:	2300      	movs	r3, #0
 8013b24:	e7b4      	b.n	8013a90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8013b26:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013b28:	e6e3      	b.n	80138f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18a>
 8013b2a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013b2c:	e778      	b.n	8013a20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b8>
 8013b2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b30:	b153      	cbz	r3, 8013b48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>
 8013b32:	441f      	add	r7, r3
 8013b34:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013b36:	b2bf      	uxth	r7, r7
 8013b38:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8013b3c:	f007 0707 	and.w	r7, r7, #7
 8013b40:	781a      	ldrb	r2, [r3, #0]
 8013b42:	9326      	str	r3, [sp, #152]	; 0x98
 8013b44:	413a      	asrs	r2, r7
 8013b46:	b2d2      	uxtb	r2, r2
 8013b48:	9b08      	ldr	r3, [sp, #32]
 8013b4a:	445b      	add	r3, fp
 8013b4c:	9308      	str	r3, [sp, #32]
 8013b4e:	e705      	b.n	801395c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8013b50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b52:	2b00      	cmp	r3, #0
 8013b54:	d1e2      	bne.n	8013b1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8013b56:	4b07      	ldr	r3, [pc, #28]	; (8013b74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>)
 8013b58:	6818      	ldr	r0, [r3, #0]
 8013b5a:	6803      	ldr	r3, [r0, #0]
 8013b5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013b5e:	4798      	blx	r3
 8013b60:	e7dc      	b.n	8013b1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8013b62:	2b00      	cmp	r3, #0
 8013b64:	f43f ae78 	beq.w	8013858 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013b68:	f44f 7c80 	mov.w	ip, #256	; 0x100
 8013b6c:	e79b      	b.n	8013aa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8013b6e:	bf00      	nop
 8013b70:	fffff800 	.word	0xfffff800
 8013b74:	2000a324 	.word	0x2000a324

08013b78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8013b78:	b538      	push	{r3, r4, r5, lr}
 8013b7a:	4c15      	ldr	r4, [pc, #84]	; (8013bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8013b7c:	7823      	ldrb	r3, [r4, #0]
 8013b7e:	f3bf 8f5b 	dmb	ish
 8013b82:	07da      	lsls	r2, r3, #31
 8013b84:	4605      	mov	r5, r0
 8013b86:	d40b      	bmi.n	8013ba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013b88:	4620      	mov	r0, r4
 8013b8a:	f007 fc60 	bl	801b44e <__cxa_guard_acquire>
 8013b8e:	b138      	cbz	r0, 8013ba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013b90:	4620      	mov	r0, r4
 8013b92:	f007 fc68 	bl	801b466 <__cxa_guard_release>
 8013b96:	4a0f      	ldr	r2, [pc, #60]	; (8013bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013b98:	490f      	ldr	r1, [pc, #60]	; (8013bd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8013b9a:	4810      	ldr	r0, [pc, #64]	; (8013bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013b9c:	f007 fc50 	bl	801b440 <__aeabi_atexit>
 8013ba0:	4c0f      	ldr	r4, [pc, #60]	; (8013be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8013ba2:	7823      	ldrb	r3, [r4, #0]
 8013ba4:	f3bf 8f5b 	dmb	ish
 8013ba8:	07db      	lsls	r3, r3, #31
 8013baa:	d40b      	bmi.n	8013bc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013bac:	4620      	mov	r0, r4
 8013bae:	f007 fc4e 	bl	801b44e <__cxa_guard_acquire>
 8013bb2:	b138      	cbz	r0, 8013bc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013bb4:	4620      	mov	r0, r4
 8013bb6:	f007 fc56 	bl	801b466 <__cxa_guard_release>
 8013bba:	4a06      	ldr	r2, [pc, #24]	; (8013bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013bbc:	4909      	ldr	r1, [pc, #36]	; (8013be4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8013bbe:	480a      	ldr	r0, [pc, #40]	; (8013be8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013bc0:	f007 fc3e 	bl	801b440 <__aeabi_atexit>
 8013bc4:	4b05      	ldr	r3, [pc, #20]	; (8013bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013bc6:	612b      	str	r3, [r5, #16]
 8013bc8:	4b07      	ldr	r3, [pc, #28]	; (8013be8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013bca:	616b      	str	r3, [r5, #20]
 8013bcc:	bd38      	pop	{r3, r4, r5, pc}
 8013bce:	bf00      	nop
 8013bd0:	2000a3f0 	.word	0x2000a3f0
 8013bd4:	20000000 	.word	0x20000000
 8013bd8:	08011f85 	.word	0x08011f85
 8013bdc:	200000a4 	.word	0x200000a4
 8013be0:	2000a3f4 	.word	0x2000a3f4
 8013be4:	08011f83 	.word	0x08011f83
 8013be8:	200000a8 	.word	0x200000a8

08013bec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013bec:	b538      	push	{r3, r4, r5, lr}
 8013bee:	4c15      	ldr	r4, [pc, #84]	; (8013c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013bf0:	7823      	ldrb	r3, [r4, #0]
 8013bf2:	f3bf 8f5b 	dmb	ish
 8013bf6:	07da      	lsls	r2, r3, #31
 8013bf8:	4605      	mov	r5, r0
 8013bfa:	d40b      	bmi.n	8013c14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013bfc:	4620      	mov	r0, r4
 8013bfe:	f007 fc26 	bl	801b44e <__cxa_guard_acquire>
 8013c02:	b138      	cbz	r0, 8013c14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013c04:	4620      	mov	r0, r4
 8013c06:	f007 fc2e 	bl	801b466 <__cxa_guard_release>
 8013c0a:	4a0f      	ldr	r2, [pc, #60]	; (8013c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013c0c:	490f      	ldr	r1, [pc, #60]	; (8013c4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013c0e:	4810      	ldr	r0, [pc, #64]	; (8013c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013c10:	f007 fc16 	bl	801b440 <__aeabi_atexit>
 8013c14:	4c0f      	ldr	r4, [pc, #60]	; (8013c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8013c16:	7823      	ldrb	r3, [r4, #0]
 8013c18:	f3bf 8f5b 	dmb	ish
 8013c1c:	07db      	lsls	r3, r3, #31
 8013c1e:	d40b      	bmi.n	8013c38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013c20:	4620      	mov	r0, r4
 8013c22:	f007 fc14 	bl	801b44e <__cxa_guard_acquire>
 8013c26:	b138      	cbz	r0, 8013c38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013c28:	4620      	mov	r0, r4
 8013c2a:	f007 fc1c 	bl	801b466 <__cxa_guard_release>
 8013c2e:	4a06      	ldr	r2, [pc, #24]	; (8013c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013c30:	4909      	ldr	r1, [pc, #36]	; (8013c58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8013c32:	480a      	ldr	r0, [pc, #40]	; (8013c5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013c34:	f007 fc04 	bl	801b440 <__aeabi_atexit>
 8013c38:	4b05      	ldr	r3, [pc, #20]	; (8013c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013c3a:	60ab      	str	r3, [r5, #8]
 8013c3c:	4b07      	ldr	r3, [pc, #28]	; (8013c5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013c3e:	60eb      	str	r3, [r5, #12]
 8013c40:	bd38      	pop	{r3, r4, r5, pc}
 8013c42:	bf00      	nop
 8013c44:	2000a3c8 	.word	0x2000a3c8
 8013c48:	20000000 	.word	0x20000000
 8013c4c:	08011f89 	.word	0x08011f89
 8013c50:	2000007c 	.word	0x2000007c
 8013c54:	2000a3cc 	.word	0x2000a3cc
 8013c58:	08011f87 	.word	0x08011f87
 8013c5c:	20000080 	.word	0x20000080

08013c60 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013c60:	b510      	push	{r4, lr}
 8013c62:	4604      	mov	r4, r0
 8013c64:	f7ff ff88 	bl	8013b78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013c68:	4620      	mov	r0, r4
 8013c6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c6e:	f7ff bfbd 	b.w	8013bec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08013c74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8013c74:	b538      	push	{r3, r4, r5, lr}
 8013c76:	4c15      	ldr	r4, [pc, #84]	; (8013ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013c78:	7823      	ldrb	r3, [r4, #0]
 8013c7a:	f3bf 8f5b 	dmb	ish
 8013c7e:	07da      	lsls	r2, r3, #31
 8013c80:	4605      	mov	r5, r0
 8013c82:	d40b      	bmi.n	8013c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013c84:	4620      	mov	r0, r4
 8013c86:	f007 fbe2 	bl	801b44e <__cxa_guard_acquire>
 8013c8a:	b138      	cbz	r0, 8013c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013c8c:	4620      	mov	r0, r4
 8013c8e:	f007 fbea 	bl	801b466 <__cxa_guard_release>
 8013c92:	4a0f      	ldr	r2, [pc, #60]	; (8013cd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013c94:	490f      	ldr	r1, [pc, #60]	; (8013cd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013c96:	4810      	ldr	r0, [pc, #64]	; (8013cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013c98:	f007 fbd2 	bl	801b440 <__aeabi_atexit>
 8013c9c:	4c0f      	ldr	r4, [pc, #60]	; (8013cdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8013c9e:	7823      	ldrb	r3, [r4, #0]
 8013ca0:	f3bf 8f5b 	dmb	ish
 8013ca4:	07db      	lsls	r3, r3, #31
 8013ca6:	d40b      	bmi.n	8013cc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013ca8:	4620      	mov	r0, r4
 8013caa:	f007 fbd0 	bl	801b44e <__cxa_guard_acquire>
 8013cae:	b138      	cbz	r0, 8013cc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013cb0:	4620      	mov	r0, r4
 8013cb2:	f007 fbd8 	bl	801b466 <__cxa_guard_release>
 8013cb6:	4a06      	ldr	r2, [pc, #24]	; (8013cd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013cb8:	4909      	ldr	r1, [pc, #36]	; (8013ce0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013cba:	480a      	ldr	r0, [pc, #40]	; (8013ce4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013cbc:	f007 fbc0 	bl	801b440 <__aeabi_atexit>
 8013cc0:	4b05      	ldr	r3, [pc, #20]	; (8013cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013cc2:	622b      	str	r3, [r5, #32]
 8013cc4:	4b07      	ldr	r3, [pc, #28]	; (8013ce4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013cc6:	626b      	str	r3, [r5, #36]	; 0x24
 8013cc8:	bd38      	pop	{r3, r4, r5, pc}
 8013cca:	bf00      	nop
 8013ccc:	2000a3f8 	.word	0x2000a3f8
 8013cd0:	20000000 	.word	0x20000000
 8013cd4:	08011f7d 	.word	0x08011f7d
 8013cd8:	200000ac 	.word	0x200000ac
 8013cdc:	2000a3fc 	.word	0x2000a3fc
 8013ce0:	08011f7b 	.word	0x08011f7b
 8013ce4:	200000b0 	.word	0x200000b0

08013ce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013ce8:	b538      	push	{r3, r4, r5, lr}
 8013cea:	4c15      	ldr	r4, [pc, #84]	; (8013d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013cec:	7823      	ldrb	r3, [r4, #0]
 8013cee:	f3bf 8f5b 	dmb	ish
 8013cf2:	07da      	lsls	r2, r3, #31
 8013cf4:	4605      	mov	r5, r0
 8013cf6:	d40b      	bmi.n	8013d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013cf8:	4620      	mov	r0, r4
 8013cfa:	f007 fba8 	bl	801b44e <__cxa_guard_acquire>
 8013cfe:	b138      	cbz	r0, 8013d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013d00:	4620      	mov	r0, r4
 8013d02:	f007 fbb0 	bl	801b466 <__cxa_guard_release>
 8013d06:	4a0f      	ldr	r2, [pc, #60]	; (8013d44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013d08:	490f      	ldr	r1, [pc, #60]	; (8013d48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013d0a:	4810      	ldr	r0, [pc, #64]	; (8013d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013d0c:	f007 fb98 	bl	801b440 <__aeabi_atexit>
 8013d10:	4c0f      	ldr	r4, [pc, #60]	; (8013d50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8013d12:	7823      	ldrb	r3, [r4, #0]
 8013d14:	f3bf 8f5b 	dmb	ish
 8013d18:	07db      	lsls	r3, r3, #31
 8013d1a:	d40b      	bmi.n	8013d34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013d1c:	4620      	mov	r0, r4
 8013d1e:	f007 fb96 	bl	801b44e <__cxa_guard_acquire>
 8013d22:	b138      	cbz	r0, 8013d34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013d24:	4620      	mov	r0, r4
 8013d26:	f007 fb9e 	bl	801b466 <__cxa_guard_release>
 8013d2a:	4a06      	ldr	r2, [pc, #24]	; (8013d44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013d2c:	4909      	ldr	r1, [pc, #36]	; (8013d54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013d2e:	480a      	ldr	r0, [pc, #40]	; (8013d58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013d30:	f007 fb86 	bl	801b440 <__aeabi_atexit>
 8013d34:	4b05      	ldr	r3, [pc, #20]	; (8013d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013d36:	61ab      	str	r3, [r5, #24]
 8013d38:	4b07      	ldr	r3, [pc, #28]	; (8013d58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013d3a:	61eb      	str	r3, [r5, #28]
 8013d3c:	bd38      	pop	{r3, r4, r5, pc}
 8013d3e:	bf00      	nop
 8013d40:	2000a3d0 	.word	0x2000a3d0
 8013d44:	20000000 	.word	0x20000000
 8013d48:	08011f81 	.word	0x08011f81
 8013d4c:	20000084 	.word	0x20000084
 8013d50:	2000a3d4 	.word	0x2000a3d4
 8013d54:	08011f7f 	.word	0x08011f7f
 8013d58:	20000088 	.word	0x20000088

08013d5c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013d5c:	b510      	push	{r4, lr}
 8013d5e:	4604      	mov	r4, r0
 8013d60:	f7ff ff88 	bl	8013c74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8013d64:	4620      	mov	r0, r4
 8013d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d6a:	f7ff bfbd 	b.w	8013ce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013d70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013d70:	b538      	push	{r3, r4, r5, lr}
 8013d72:	4c15      	ldr	r4, [pc, #84]	; (8013dc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8013d74:	7823      	ldrb	r3, [r4, #0]
 8013d76:	f3bf 8f5b 	dmb	ish
 8013d7a:	07da      	lsls	r2, r3, #31
 8013d7c:	4605      	mov	r5, r0
 8013d7e:	d40b      	bmi.n	8013d98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013d80:	4620      	mov	r0, r4
 8013d82:	f007 fb64 	bl	801b44e <__cxa_guard_acquire>
 8013d86:	b138      	cbz	r0, 8013d98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013d88:	4620      	mov	r0, r4
 8013d8a:	f007 fb6c 	bl	801b466 <__cxa_guard_release>
 8013d8e:	4a0f      	ldr	r2, [pc, #60]	; (8013dcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013d90:	490f      	ldr	r1, [pc, #60]	; (8013dd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013d92:	4810      	ldr	r0, [pc, #64]	; (8013dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013d94:	f007 fb54 	bl	801b440 <__aeabi_atexit>
 8013d98:	4c0f      	ldr	r4, [pc, #60]	; (8013dd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8013d9a:	7823      	ldrb	r3, [r4, #0]
 8013d9c:	f3bf 8f5b 	dmb	ish
 8013da0:	07db      	lsls	r3, r3, #31
 8013da2:	d40b      	bmi.n	8013dbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013da4:	4620      	mov	r0, r4
 8013da6:	f007 fb52 	bl	801b44e <__cxa_guard_acquire>
 8013daa:	b138      	cbz	r0, 8013dbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013dac:	4620      	mov	r0, r4
 8013dae:	f007 fb5a 	bl	801b466 <__cxa_guard_release>
 8013db2:	4a06      	ldr	r2, [pc, #24]	; (8013dcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013db4:	4909      	ldr	r1, [pc, #36]	; (8013ddc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013db6:	480a      	ldr	r0, [pc, #40]	; (8013de0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013db8:	f007 fb42 	bl	801b440 <__aeabi_atexit>
 8013dbc:	4b05      	ldr	r3, [pc, #20]	; (8013dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013dbe:	632b      	str	r3, [r5, #48]	; 0x30
 8013dc0:	4b07      	ldr	r3, [pc, #28]	; (8013de0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013dc2:	636b      	str	r3, [r5, #52]	; 0x34
 8013dc4:	bd38      	pop	{r3, r4, r5, pc}
 8013dc6:	bf00      	nop
 8013dc8:	2000a408 	.word	0x2000a408
 8013dcc:	20000000 	.word	0x20000000
 8013dd0:	08011f75 	.word	0x08011f75
 8013dd4:	200000bc 	.word	0x200000bc
 8013dd8:	2000a40c 	.word	0x2000a40c
 8013ddc:	08011f73 	.word	0x08011f73
 8013de0:	200000c0 	.word	0x200000c0

08013de4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8013de4:	b538      	push	{r3, r4, r5, lr}
 8013de6:	4c15      	ldr	r4, [pc, #84]	; (8013e3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013de8:	7823      	ldrb	r3, [r4, #0]
 8013dea:	f3bf 8f5b 	dmb	ish
 8013dee:	07da      	lsls	r2, r3, #31
 8013df0:	4605      	mov	r5, r0
 8013df2:	d40b      	bmi.n	8013e0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013df4:	4620      	mov	r0, r4
 8013df6:	f007 fb2a 	bl	801b44e <__cxa_guard_acquire>
 8013dfa:	b138      	cbz	r0, 8013e0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013dfc:	4620      	mov	r0, r4
 8013dfe:	f007 fb32 	bl	801b466 <__cxa_guard_release>
 8013e02:	4a0f      	ldr	r2, [pc, #60]	; (8013e40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013e04:	490f      	ldr	r1, [pc, #60]	; (8013e44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8013e06:	4810      	ldr	r0, [pc, #64]	; (8013e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013e08:	f007 fb1a 	bl	801b440 <__aeabi_atexit>
 8013e0c:	4c0f      	ldr	r4, [pc, #60]	; (8013e4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013e0e:	7823      	ldrb	r3, [r4, #0]
 8013e10:	f3bf 8f5b 	dmb	ish
 8013e14:	07db      	lsls	r3, r3, #31
 8013e16:	d40b      	bmi.n	8013e30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013e18:	4620      	mov	r0, r4
 8013e1a:	f007 fb18 	bl	801b44e <__cxa_guard_acquire>
 8013e1e:	b138      	cbz	r0, 8013e30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013e20:	4620      	mov	r0, r4
 8013e22:	f007 fb20 	bl	801b466 <__cxa_guard_release>
 8013e26:	4a06      	ldr	r2, [pc, #24]	; (8013e40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013e28:	4909      	ldr	r1, [pc, #36]	; (8013e50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013e2a:	480a      	ldr	r0, [pc, #40]	; (8013e54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013e2c:	f007 fb08 	bl	801b440 <__aeabi_atexit>
 8013e30:	4b05      	ldr	r3, [pc, #20]	; (8013e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013e32:	62ab      	str	r3, [r5, #40]	; 0x28
 8013e34:	4b07      	ldr	r3, [pc, #28]	; (8013e54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013e36:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013e38:	bd38      	pop	{r3, r4, r5, pc}
 8013e3a:	bf00      	nop
 8013e3c:	2000a3d8 	.word	0x2000a3d8
 8013e40:	20000000 	.word	0x20000000
 8013e44:	08011f79 	.word	0x08011f79
 8013e48:	2000008c 	.word	0x2000008c
 8013e4c:	2000a3dc 	.word	0x2000a3dc
 8013e50:	08011f77 	.word	0x08011f77
 8013e54:	20000090 	.word	0x20000090

08013e58 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013e58:	b510      	push	{r4, lr}
 8013e5a:	4604      	mov	r4, r0
 8013e5c:	f7ff ff88 	bl	8013d70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013e60:	4620      	mov	r0, r4
 8013e62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e66:	f7ff bfbd 	b.w	8013de4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08013e6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8013e6c:	b538      	push	{r3, r4, r5, lr}
 8013e6e:	4c15      	ldr	r4, [pc, #84]	; (8013ec4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013e70:	7823      	ldrb	r3, [r4, #0]
 8013e72:	f3bf 8f5b 	dmb	ish
 8013e76:	07da      	lsls	r2, r3, #31
 8013e78:	4605      	mov	r5, r0
 8013e7a:	d40b      	bmi.n	8013e94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013e7c:	4620      	mov	r0, r4
 8013e7e:	f007 fae6 	bl	801b44e <__cxa_guard_acquire>
 8013e82:	b138      	cbz	r0, 8013e94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013e84:	4620      	mov	r0, r4
 8013e86:	f007 faee 	bl	801b466 <__cxa_guard_release>
 8013e8a:	4a0f      	ldr	r2, [pc, #60]	; (8013ec8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013e8c:	490f      	ldr	r1, [pc, #60]	; (8013ecc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8013e8e:	4810      	ldr	r0, [pc, #64]	; (8013ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013e90:	f007 fad6 	bl	801b440 <__aeabi_atexit>
 8013e94:	4c0f      	ldr	r4, [pc, #60]	; (8013ed4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013e96:	7823      	ldrb	r3, [r4, #0]
 8013e98:	f3bf 8f5b 	dmb	ish
 8013e9c:	07db      	lsls	r3, r3, #31
 8013e9e:	d40b      	bmi.n	8013eb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013ea0:	4620      	mov	r0, r4
 8013ea2:	f007 fad4 	bl	801b44e <__cxa_guard_acquire>
 8013ea6:	b138      	cbz	r0, 8013eb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013ea8:	4620      	mov	r0, r4
 8013eaa:	f007 fadc 	bl	801b466 <__cxa_guard_release>
 8013eae:	4a06      	ldr	r2, [pc, #24]	; (8013ec8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013eb0:	4909      	ldr	r1, [pc, #36]	; (8013ed8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013eb2:	480a      	ldr	r0, [pc, #40]	; (8013edc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013eb4:	f007 fac4 	bl	801b440 <__aeabi_atexit>
 8013eb8:	4b05      	ldr	r3, [pc, #20]	; (8013ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013eba:	652b      	str	r3, [r5, #80]	; 0x50
 8013ebc:	4b07      	ldr	r3, [pc, #28]	; (8013edc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013ebe:	656b      	str	r3, [r5, #84]	; 0x54
 8013ec0:	bd38      	pop	{r3, r4, r5, pc}
 8013ec2:	bf00      	nop
 8013ec4:	2000a410 	.word	0x2000a410
 8013ec8:	20000000 	.word	0x20000000
 8013ecc:	08011f65 	.word	0x08011f65
 8013ed0:	200000c4 	.word	0x200000c4
 8013ed4:	2000a414 	.word	0x2000a414
 8013ed8:	08011f63 	.word	0x08011f63
 8013edc:	200000c8 	.word	0x200000c8

08013ee0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013ee0:	b538      	push	{r3, r4, r5, lr}
 8013ee2:	4c15      	ldr	r4, [pc, #84]	; (8013f38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8013ee4:	7823      	ldrb	r3, [r4, #0]
 8013ee6:	f3bf 8f5b 	dmb	ish
 8013eea:	07da      	lsls	r2, r3, #31
 8013eec:	4605      	mov	r5, r0
 8013eee:	d40b      	bmi.n	8013f08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013ef0:	4620      	mov	r0, r4
 8013ef2:	f007 faac 	bl	801b44e <__cxa_guard_acquire>
 8013ef6:	b138      	cbz	r0, 8013f08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013ef8:	4620      	mov	r0, r4
 8013efa:	f007 fab4 	bl	801b466 <__cxa_guard_release>
 8013efe:	4a0f      	ldr	r2, [pc, #60]	; (8013f3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013f00:	490f      	ldr	r1, [pc, #60]	; (8013f40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8013f02:	4810      	ldr	r0, [pc, #64]	; (8013f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013f04:	f007 fa9c 	bl	801b440 <__aeabi_atexit>
 8013f08:	4c0f      	ldr	r4, [pc, #60]	; (8013f48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013f0a:	7823      	ldrb	r3, [r4, #0]
 8013f0c:	f3bf 8f5b 	dmb	ish
 8013f10:	07db      	lsls	r3, r3, #31
 8013f12:	d40b      	bmi.n	8013f2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013f14:	4620      	mov	r0, r4
 8013f16:	f007 fa9a 	bl	801b44e <__cxa_guard_acquire>
 8013f1a:	b138      	cbz	r0, 8013f2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013f1c:	4620      	mov	r0, r4
 8013f1e:	f007 faa2 	bl	801b466 <__cxa_guard_release>
 8013f22:	4a06      	ldr	r2, [pc, #24]	; (8013f3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013f24:	4909      	ldr	r1, [pc, #36]	; (8013f4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013f26:	480a      	ldr	r0, [pc, #40]	; (8013f50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013f28:	f007 fa8a 	bl	801b440 <__aeabi_atexit>
 8013f2c:	4b05      	ldr	r3, [pc, #20]	; (8013f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013f2e:	64ab      	str	r3, [r5, #72]	; 0x48
 8013f30:	4b07      	ldr	r3, [pc, #28]	; (8013f50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013f32:	64eb      	str	r3, [r5, #76]	; 0x4c
 8013f34:	bd38      	pop	{r3, r4, r5, pc}
 8013f36:	bf00      	nop
 8013f38:	2000a418 	.word	0x2000a418
 8013f3c:	20000000 	.word	0x20000000
 8013f40:	08011f69 	.word	0x08011f69
 8013f44:	200000cc 	.word	0x200000cc
 8013f48:	2000a41c 	.word	0x2000a41c
 8013f4c:	08011f67 	.word	0x08011f67
 8013f50:	200000d0 	.word	0x200000d0

08013f54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8013f54:	b538      	push	{r3, r4, r5, lr}
 8013f56:	4c15      	ldr	r4, [pc, #84]	; (8013fac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8013f58:	7823      	ldrb	r3, [r4, #0]
 8013f5a:	f3bf 8f5b 	dmb	ish
 8013f5e:	07da      	lsls	r2, r3, #31
 8013f60:	4605      	mov	r5, r0
 8013f62:	d40b      	bmi.n	8013f7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013f64:	4620      	mov	r0, r4
 8013f66:	f007 fa72 	bl	801b44e <__cxa_guard_acquire>
 8013f6a:	b138      	cbz	r0, 8013f7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013f6c:	4620      	mov	r0, r4
 8013f6e:	f007 fa7a 	bl	801b466 <__cxa_guard_release>
 8013f72:	4a0f      	ldr	r2, [pc, #60]	; (8013fb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013f74:	490f      	ldr	r1, [pc, #60]	; (8013fb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8013f76:	4810      	ldr	r0, [pc, #64]	; (8013fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013f78:	f007 fa62 	bl	801b440 <__aeabi_atexit>
 8013f7c:	4c0f      	ldr	r4, [pc, #60]	; (8013fbc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8013f7e:	7823      	ldrb	r3, [r4, #0]
 8013f80:	f3bf 8f5b 	dmb	ish
 8013f84:	07db      	lsls	r3, r3, #31
 8013f86:	d40b      	bmi.n	8013fa0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013f88:	4620      	mov	r0, r4
 8013f8a:	f007 fa60 	bl	801b44e <__cxa_guard_acquire>
 8013f8e:	b138      	cbz	r0, 8013fa0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013f90:	4620      	mov	r0, r4
 8013f92:	f007 fa68 	bl	801b466 <__cxa_guard_release>
 8013f96:	4a06      	ldr	r2, [pc, #24]	; (8013fb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013f98:	4909      	ldr	r1, [pc, #36]	; (8013fc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8013f9a:	480a      	ldr	r0, [pc, #40]	; (8013fc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013f9c:	f007 fa50 	bl	801b440 <__aeabi_atexit>
 8013fa0:	4b05      	ldr	r3, [pc, #20]	; (8013fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013fa2:	642b      	str	r3, [r5, #64]	; 0x40
 8013fa4:	4b07      	ldr	r3, [pc, #28]	; (8013fc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013fa6:	646b      	str	r3, [r5, #68]	; 0x44
 8013fa8:	bd38      	pop	{r3, r4, r5, pc}
 8013faa:	bf00      	nop
 8013fac:	2000a3e0 	.word	0x2000a3e0
 8013fb0:	20000000 	.word	0x20000000
 8013fb4:	08011f6d 	.word	0x08011f6d
 8013fb8:	20000094 	.word	0x20000094
 8013fbc:	2000a3e4 	.word	0x2000a3e4
 8013fc0:	08011f6b 	.word	0x08011f6b
 8013fc4:	20000098 	.word	0x20000098

08013fc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013fc8:	b538      	push	{r3, r4, r5, lr}
 8013fca:	4c15      	ldr	r4, [pc, #84]	; (8014020 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8013fcc:	7823      	ldrb	r3, [r4, #0]
 8013fce:	f3bf 8f5b 	dmb	ish
 8013fd2:	07da      	lsls	r2, r3, #31
 8013fd4:	4605      	mov	r5, r0
 8013fd6:	d40b      	bmi.n	8013ff0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013fd8:	4620      	mov	r0, r4
 8013fda:	f007 fa38 	bl	801b44e <__cxa_guard_acquire>
 8013fde:	b138      	cbz	r0, 8013ff0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013fe0:	4620      	mov	r0, r4
 8013fe2:	f007 fa40 	bl	801b466 <__cxa_guard_release>
 8013fe6:	4a0f      	ldr	r2, [pc, #60]	; (8014024 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013fe8:	490f      	ldr	r1, [pc, #60]	; (8014028 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8013fea:	4810      	ldr	r0, [pc, #64]	; (801402c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013fec:	f007 fa28 	bl	801b440 <__aeabi_atexit>
 8013ff0:	4c0f      	ldr	r4, [pc, #60]	; (8014030 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8013ff2:	7823      	ldrb	r3, [r4, #0]
 8013ff4:	f3bf 8f5b 	dmb	ish
 8013ff8:	07db      	lsls	r3, r3, #31
 8013ffa:	d40b      	bmi.n	8014014 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013ffc:	4620      	mov	r0, r4
 8013ffe:	f007 fa26 	bl	801b44e <__cxa_guard_acquire>
 8014002:	b138      	cbz	r0, 8014014 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014004:	4620      	mov	r0, r4
 8014006:	f007 fa2e 	bl	801b466 <__cxa_guard_release>
 801400a:	4a06      	ldr	r2, [pc, #24]	; (8014024 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801400c:	4909      	ldr	r1, [pc, #36]	; (8014034 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801400e:	480a      	ldr	r0, [pc, #40]	; (8014038 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014010:	f007 fa16 	bl	801b440 <__aeabi_atexit>
 8014014:	4b05      	ldr	r3, [pc, #20]	; (801402c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014016:	63ab      	str	r3, [r5, #56]	; 0x38
 8014018:	4b07      	ldr	r3, [pc, #28]	; (8014038 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801401a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801401c:	bd38      	pop	{r3, r4, r5, pc}
 801401e:	bf00      	nop
 8014020:	2000a400 	.word	0x2000a400
 8014024:	20000000 	.word	0x20000000
 8014028:	08011f71 	.word	0x08011f71
 801402c:	200000b4 	.word	0x200000b4
 8014030:	2000a404 	.word	0x2000a404
 8014034:	08011f6f 	.word	0x08011f6f
 8014038:	200000b8 	.word	0x200000b8

0801403c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801403c:	b510      	push	{r4, lr}
 801403e:	4604      	mov	r4, r0
 8014040:	f7ff ff14 	bl	8013e6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8014044:	4620      	mov	r0, r4
 8014046:	f7ff ff85 	bl	8013f54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801404a:	4620      	mov	r0, r4
 801404c:	f7ff ff48 	bl	8013ee0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014050:	4620      	mov	r0, r4
 8014052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014056:	f7ff bfb7 	b.w	8013fc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801405c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801405c:	b538      	push	{r3, r4, r5, lr}
 801405e:	4c15      	ldr	r4, [pc, #84]	; (80140b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014060:	7823      	ldrb	r3, [r4, #0]
 8014062:	f3bf 8f5b 	dmb	ish
 8014066:	07da      	lsls	r2, r3, #31
 8014068:	4605      	mov	r5, r0
 801406a:	d40b      	bmi.n	8014084 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801406c:	4620      	mov	r0, r4
 801406e:	f007 f9ee 	bl	801b44e <__cxa_guard_acquire>
 8014072:	b138      	cbz	r0, 8014084 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014074:	4620      	mov	r0, r4
 8014076:	f007 f9f6 	bl	801b466 <__cxa_guard_release>
 801407a:	4a0f      	ldr	r2, [pc, #60]	; (80140b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801407c:	490f      	ldr	r1, [pc, #60]	; (80140bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801407e:	4810      	ldr	r0, [pc, #64]	; (80140c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014080:	f007 f9de 	bl	801b440 <__aeabi_atexit>
 8014084:	4c0f      	ldr	r4, [pc, #60]	; (80140c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8014086:	7823      	ldrb	r3, [r4, #0]
 8014088:	f3bf 8f5b 	dmb	ish
 801408c:	07db      	lsls	r3, r3, #31
 801408e:	d40b      	bmi.n	80140a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014090:	4620      	mov	r0, r4
 8014092:	f007 f9dc 	bl	801b44e <__cxa_guard_acquire>
 8014096:	b138      	cbz	r0, 80140a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014098:	4620      	mov	r0, r4
 801409a:	f007 f9e4 	bl	801b466 <__cxa_guard_release>
 801409e:	4a06      	ldr	r2, [pc, #24]	; (80140b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80140a0:	4909      	ldr	r1, [pc, #36]	; (80140c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80140a2:	480a      	ldr	r0, [pc, #40]	; (80140cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80140a4:	f007 f9cc 	bl	801b440 <__aeabi_atexit>
 80140a8:	4b05      	ldr	r3, [pc, #20]	; (80140c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80140aa:	662b      	str	r3, [r5, #96]	; 0x60
 80140ac:	4b07      	ldr	r3, [pc, #28]	; (80140cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80140ae:	666b      	str	r3, [r5, #100]	; 0x64
 80140b0:	bd38      	pop	{r3, r4, r5, pc}
 80140b2:	bf00      	nop
 80140b4:	2000a3e8 	.word	0x2000a3e8
 80140b8:	20000000 	.word	0x20000000
 80140bc:	08011f5d 	.word	0x08011f5d
 80140c0:	2000009c 	.word	0x2000009c
 80140c4:	2000a3ec 	.word	0x2000a3ec
 80140c8:	08011f5b 	.word	0x08011f5b
 80140cc:	200000a0 	.word	0x200000a0

080140d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80140d0:	b538      	push	{r3, r4, r5, lr}
 80140d2:	4c15      	ldr	r4, [pc, #84]	; (8014128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80140d4:	7823      	ldrb	r3, [r4, #0]
 80140d6:	f3bf 8f5b 	dmb	ish
 80140da:	07da      	lsls	r2, r3, #31
 80140dc:	4605      	mov	r5, r0
 80140de:	d40b      	bmi.n	80140f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80140e0:	4620      	mov	r0, r4
 80140e2:	f007 f9b4 	bl	801b44e <__cxa_guard_acquire>
 80140e6:	b138      	cbz	r0, 80140f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80140e8:	4620      	mov	r0, r4
 80140ea:	f007 f9bc 	bl	801b466 <__cxa_guard_release>
 80140ee:	4a0f      	ldr	r2, [pc, #60]	; (801412c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80140f0:	490f      	ldr	r1, [pc, #60]	; (8014130 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80140f2:	4810      	ldr	r0, [pc, #64]	; (8014134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80140f4:	f007 f9a4 	bl	801b440 <__aeabi_atexit>
 80140f8:	4c0f      	ldr	r4, [pc, #60]	; (8014138 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80140fa:	7823      	ldrb	r3, [r4, #0]
 80140fc:	f3bf 8f5b 	dmb	ish
 8014100:	07db      	lsls	r3, r3, #31
 8014102:	d40b      	bmi.n	801411c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014104:	4620      	mov	r0, r4
 8014106:	f007 f9a2 	bl	801b44e <__cxa_guard_acquire>
 801410a:	b138      	cbz	r0, 801411c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801410c:	4620      	mov	r0, r4
 801410e:	f007 f9aa 	bl	801b466 <__cxa_guard_release>
 8014112:	4a06      	ldr	r2, [pc, #24]	; (801412c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014114:	4909      	ldr	r1, [pc, #36]	; (801413c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8014116:	480a      	ldr	r0, [pc, #40]	; (8014140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014118:	f007 f992 	bl	801b440 <__aeabi_atexit>
 801411c:	4b05      	ldr	r3, [pc, #20]	; (8014134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801411e:	65ab      	str	r3, [r5, #88]	; 0x58
 8014120:	4b07      	ldr	r3, [pc, #28]	; (8014140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014122:	65eb      	str	r3, [r5, #92]	; 0x5c
 8014124:	bd38      	pop	{r3, r4, r5, pc}
 8014126:	bf00      	nop
 8014128:	2000a3c0 	.word	0x2000a3c0
 801412c:	20000000 	.word	0x20000000
 8014130:	08011f61 	.word	0x08011f61
 8014134:	20000074 	.word	0x20000074
 8014138:	2000a3c4 	.word	0x2000a3c4
 801413c:	08011f5f 	.word	0x08011f5f
 8014140:	20000078 	.word	0x20000078

08014144 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014144:	b510      	push	{r4, lr}
 8014146:	4604      	mov	r4, r0
 8014148:	f7ff ff88 	bl	801405c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801414c:	4620      	mov	r0, r4
 801414e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014152:	f7ff bfbd 	b.w	80140d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014158:	b538      	push	{r3, r4, r5, lr}
 801415a:	4c15      	ldr	r4, [pc, #84]	; (80141b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801415c:	7823      	ldrb	r3, [r4, #0]
 801415e:	f3bf 8f5b 	dmb	ish
 8014162:	07da      	lsls	r2, r3, #31
 8014164:	4605      	mov	r5, r0
 8014166:	d40b      	bmi.n	8014180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014168:	4620      	mov	r0, r4
 801416a:	f007 f970 	bl	801b44e <__cxa_guard_acquire>
 801416e:	b138      	cbz	r0, 8014180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014170:	4620      	mov	r0, r4
 8014172:	f007 f978 	bl	801b466 <__cxa_guard_release>
 8014176:	4a0f      	ldr	r2, [pc, #60]	; (80141b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014178:	490f      	ldr	r1, [pc, #60]	; (80141b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801417a:	4810      	ldr	r0, [pc, #64]	; (80141bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801417c:	f007 f960 	bl	801b440 <__aeabi_atexit>
 8014180:	4c0f      	ldr	r4, [pc, #60]	; (80141c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8014182:	7823      	ldrb	r3, [r4, #0]
 8014184:	f3bf 8f5b 	dmb	ish
 8014188:	07db      	lsls	r3, r3, #31
 801418a:	d40b      	bmi.n	80141a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801418c:	4620      	mov	r0, r4
 801418e:	f007 f95e 	bl	801b44e <__cxa_guard_acquire>
 8014192:	b138      	cbz	r0, 80141a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014194:	4620      	mov	r0, r4
 8014196:	f007 f966 	bl	801b466 <__cxa_guard_release>
 801419a:	4a06      	ldr	r2, [pc, #24]	; (80141b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801419c:	4909      	ldr	r1, [pc, #36]	; (80141c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801419e:	480a      	ldr	r0, [pc, #40]	; (80141c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80141a0:	f007 f94e 	bl	801b440 <__aeabi_atexit>
 80141a4:	4b05      	ldr	r3, [pc, #20]	; (80141bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80141a6:	672b      	str	r3, [r5, #112]	; 0x70
 80141a8:	4b07      	ldr	r3, [pc, #28]	; (80141c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80141aa:	676b      	str	r3, [r5, #116]	; 0x74
 80141ac:	bd38      	pop	{r3, r4, r5, pc}
 80141ae:	bf00      	nop
 80141b0:	2000a3b8 	.word	0x2000a3b8
 80141b4:	20000000 	.word	0x20000000
 80141b8:	08011f55 	.word	0x08011f55
 80141bc:	2000006c 	.word	0x2000006c
 80141c0:	2000a3bc 	.word	0x2000a3bc
 80141c4:	08011f53 	.word	0x08011f53
 80141c8:	20000070 	.word	0x20000070

080141cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80141cc:	b538      	push	{r3, r4, r5, lr}
 80141ce:	4c15      	ldr	r4, [pc, #84]	; (8014224 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80141d0:	7823      	ldrb	r3, [r4, #0]
 80141d2:	f3bf 8f5b 	dmb	ish
 80141d6:	07da      	lsls	r2, r3, #31
 80141d8:	4605      	mov	r5, r0
 80141da:	d40b      	bmi.n	80141f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80141dc:	4620      	mov	r0, r4
 80141de:	f007 f936 	bl	801b44e <__cxa_guard_acquire>
 80141e2:	b138      	cbz	r0, 80141f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80141e4:	4620      	mov	r0, r4
 80141e6:	f007 f93e 	bl	801b466 <__cxa_guard_release>
 80141ea:	4a0f      	ldr	r2, [pc, #60]	; (8014228 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80141ec:	490f      	ldr	r1, [pc, #60]	; (801422c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80141ee:	4810      	ldr	r0, [pc, #64]	; (8014230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80141f0:	f007 f926 	bl	801b440 <__aeabi_atexit>
 80141f4:	4c0f      	ldr	r4, [pc, #60]	; (8014234 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80141f6:	7823      	ldrb	r3, [r4, #0]
 80141f8:	f3bf 8f5b 	dmb	ish
 80141fc:	07db      	lsls	r3, r3, #31
 80141fe:	d40b      	bmi.n	8014218 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014200:	4620      	mov	r0, r4
 8014202:	f007 f924 	bl	801b44e <__cxa_guard_acquire>
 8014206:	b138      	cbz	r0, 8014218 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014208:	4620      	mov	r0, r4
 801420a:	f007 f92c 	bl	801b466 <__cxa_guard_release>
 801420e:	4a06      	ldr	r2, [pc, #24]	; (8014228 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014210:	4909      	ldr	r1, [pc, #36]	; (8014238 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8014212:	480a      	ldr	r0, [pc, #40]	; (801423c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014214:	f007 f914 	bl	801b440 <__aeabi_atexit>
 8014218:	4b05      	ldr	r3, [pc, #20]	; (8014230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801421a:	66ab      	str	r3, [r5, #104]	; 0x68
 801421c:	4b07      	ldr	r3, [pc, #28]	; (801423c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801421e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014220:	bd38      	pop	{r3, r4, r5, pc}
 8014222:	bf00      	nop
 8014224:	2000a3b0 	.word	0x2000a3b0
 8014228:	20000000 	.word	0x20000000
 801422c:	08011f59 	.word	0x08011f59
 8014230:	20000064 	.word	0x20000064
 8014234:	2000a3b4 	.word	0x2000a3b4
 8014238:	08011f57 	.word	0x08011f57
 801423c:	20000068 	.word	0x20000068

08014240 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014240:	b510      	push	{r4, lr}
 8014242:	4604      	mov	r4, r0
 8014244:	f7ff ff88 	bl	8014158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014248:	4620      	mov	r0, r4
 801424a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801424e:	f7ff bfbd 	b.w	80141cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014252 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014252:	b510      	push	{r4, lr}
 8014254:	4604      	mov	r4, r0
 8014256:	f7ff fff3 	bl	8014240 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801425a:	4620      	mov	r0, r4
 801425c:	f7ff ff72 	bl	8014144 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014260:	4620      	mov	r0, r4
 8014262:	f7ff fdf9 	bl	8013e58 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014266:	4620      	mov	r0, r4
 8014268:	f7ff fcfa 	bl	8013c60 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801426c:	4620      	mov	r0, r4
 801426e:	f7ff fd75 	bl	8013d5c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014272:	4620      	mov	r0, r4
 8014274:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014278:	f7ff bee0 	b.w	801403c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801427c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801427c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014280:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8014284:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014288:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801428c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014290:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8014294:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014298:	8808      	ldrh	r0, [r1, #0]
 801429a:	fb0e 4708 	mla	r7, lr, r8, r4
 801429e:	f1be 0f00 	cmp.w	lr, #0
 80142a2:	eb02 0a07 	add.w	sl, r2, r7
 80142a6:	db37      	blt.n	8014318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80142a8:	45f3      	cmp	fp, lr
 80142aa:	dd35      	ble.n	8014318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80142ac:	2c00      	cmp	r4, #0
 80142ae:	db31      	blt.n	8014314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80142b0:	45a0      	cmp	r8, r4
 80142b2:	dd2f      	ble.n	8014314 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80142b4:	5dd2      	ldrb	r2, [r2, r7]
 80142b6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80142ba:	1c62      	adds	r2, r4, #1
 80142bc:	d42f      	bmi.n	801431e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80142be:	4590      	cmp	r8, r2
 80142c0:	dd2d      	ble.n	801431e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80142c2:	b366      	cbz	r6, 801431e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80142c4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80142c8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80142cc:	f11e 0e01 	adds.w	lr, lr, #1
 80142d0:	d429      	bmi.n	8014326 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80142d2:	45f3      	cmp	fp, lr
 80142d4:	dd27      	ble.n	8014326 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80142d6:	f1bc 0f00 	cmp.w	ip, #0
 80142da:	f000 80a1 	beq.w	8014420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 80142de:	2c00      	cmp	r4, #0
 80142e0:	db1f      	blt.n	8014322 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80142e2:	45a0      	cmp	r8, r4
 80142e4:	dd1d      	ble.n	8014322 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80142e6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80142ea:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80142ee:	3401      	adds	r4, #1
 80142f0:	d41c      	bmi.n	801432c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80142f2:	45a0      	cmp	r8, r4
 80142f4:	dd1a      	ble.n	801432c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80142f6:	b1de      	cbz	r6, 8014330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80142f8:	44d0      	add	r8, sl
 80142fa:	f898 2001 	ldrb.w	r2, [r8, #1]
 80142fe:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8014302:	2e0f      	cmp	r6, #15
 8014304:	d915      	bls.n	8014332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8014306:	4b49      	ldr	r3, [pc, #292]	; (801442c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014308:	4a49      	ldr	r2, [pc, #292]	; (8014430 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801430a:	484a      	ldr	r0, [pc, #296]	; (8014434 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801430c:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8014310:	f007 f8ca 	bl	801b4a8 <__assert_func>
 8014314:	4681      	mov	r9, r0
 8014316:	e7d0      	b.n	80142ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014318:	4607      	mov	r7, r0
 801431a:	4681      	mov	r9, r0
 801431c:	e7d6      	b.n	80142cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801431e:	4607      	mov	r7, r0
 8014320:	e7d4      	b.n	80142cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014322:	4686      	mov	lr, r0
 8014324:	e7e3      	b.n	80142ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8014326:	4603      	mov	r3, r0
 8014328:	4686      	mov	lr, r0
 801432a:	e7ea      	b.n	8014302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801432c:	4603      	mov	r3, r0
 801432e:	e7e8      	b.n	8014302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014330:	4603      	mov	r3, r0
 8014332:	f1bc 0f0f 	cmp.w	ip, #15
 8014336:	d8e6      	bhi.n	8014306 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014338:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801433c:	fb16 f80c 	smulbb	r8, r6, ip
 8014340:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014344:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014348:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801434c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014350:	ea44 0909 	orr.w	r9, r4, r9
 8014354:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014358:	f1cc 0410 	rsb	r4, ip, #16
 801435c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014360:	1ba4      	subs	r4, r4, r6
 8014362:	041a      	lsls	r2, r3, #16
 8014364:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014368:	ea4a 0707 	orr.w	r7, sl, r7
 801436c:	4377      	muls	r7, r6
 801436e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014372:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014376:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801437a:	fb04 7409 	mla	r4, r4, r9, r7
 801437e:	4313      	orrs	r3, r2
 8014380:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014384:	fb08 4303 	mla	r3, r8, r3, r4
 8014388:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801438c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014390:	4322      	orrs	r2, r4
 8014392:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014396:	fb0c 3202 	mla	r2, ip, r2, r3
 801439a:	0d53      	lsrs	r3, r2, #21
 801439c:	0952      	lsrs	r2, r2, #5
 801439e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80143a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80143a6:	431a      	orrs	r2, r3
 80143a8:	b293      	uxth	r3, r2
 80143aa:	b2af      	uxth	r7, r5
 80143ac:	1202      	asrs	r2, r0, #8
 80143ae:	43ed      	mvns	r5, r5
 80143b0:	b2ed      	uxtb	r5, r5
 80143b2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80143b6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80143ba:	fb12 f205 	smulbb	r2, r2, r5
 80143be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80143c2:	fb0c 2c07 	mla	ip, ip, r7, r2
 80143c6:	00dc      	lsls	r4, r3, #3
 80143c8:	10da      	asrs	r2, r3, #3
 80143ca:	10c6      	asrs	r6, r0, #3
 80143cc:	00c3      	lsls	r3, r0, #3
 80143ce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80143d2:	b2db      	uxtb	r3, r3
 80143d4:	fb16 f605 	smulbb	r6, r6, r5
 80143d8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80143dc:	b2e4      	uxtb	r4, r4
 80143de:	fb13 f305 	smulbb	r3, r3, r5
 80143e2:	fa1f fc8c 	uxth.w	ip, ip
 80143e6:	fb02 6207 	mla	r2, r2, r7, r6
 80143ea:	fb04 3307 	mla	r3, r4, r7, r3
 80143ee:	b296      	uxth	r6, r2
 80143f0:	b29a      	uxth	r2, r3
 80143f2:	f10c 0301 	add.w	r3, ip, #1
 80143f6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80143fa:	1c53      	adds	r3, r2, #1
 80143fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014400:	1c72      	adds	r2, r6, #1
 8014402:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8014406:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801440a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801440e:	0952      	lsrs	r2, r2, #5
 8014410:	ea43 030c 	orr.w	r3, r3, ip
 8014414:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014418:	4313      	orrs	r3, r2
 801441a:	800b      	strh	r3, [r1, #0]
 801441c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014420:	2e0f      	cmp	r6, #15
 8014422:	f63f af70 	bhi.w	8014306 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014426:	4603      	mov	r3, r0
 8014428:	4686      	mov	lr, r0
 801442a:	e785      	b.n	8014338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801442c:	0801f576 	.word	0x0801f576
 8014430:	0801fbeb 	.word	0x0801fbeb
 8014434:	0801f5fa 	.word	0x0801f5fa

08014438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801443c:	ed2d 8b08 	vpush	{d8-d11}
 8014440:	b099      	sub	sp, #100	; 0x64
 8014442:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8014446:	9215      	str	r2, [sp, #84]	; 0x54
 8014448:	9309      	str	r3, [sp, #36]	; 0x24
 801444a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801444c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014450:	930d      	str	r3, [sp, #52]	; 0x34
 8014452:	910c      	str	r1, [sp, #48]	; 0x30
 8014454:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8014458:	9016      	str	r0, [sp, #88]	; 0x58
 801445a:	6850      	ldr	r0, [r2, #4]
 801445c:	6812      	ldr	r2, [r2, #0]
 801445e:	fb00 1303 	mla	r3, r0, r3, r1
 8014462:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014466:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014468:	681b      	ldr	r3, [r3, #0]
 801446a:	930b      	str	r3, [sp, #44]	; 0x2c
 801446c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801446e:	685e      	ldr	r6, [r3, #4]
 8014470:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014472:	43db      	mvns	r3, r3
 8014474:	b2db      	uxtb	r3, r3
 8014476:	eeb0 aa40 	vmov.f32	s20, s0
 801447a:	eef0 9a60 	vmov.f32	s19, s1
 801447e:	eeb0 9a41 	vmov.f32	s18, s2
 8014482:	eeb0 8a62 	vmov.f32	s16, s5
 8014486:	eef0 8a43 	vmov.f32	s17, s6
 801448a:	eef0 ba44 	vmov.f32	s23, s8
 801448e:	eeb0 ba64 	vmov.f32	s22, s9
 8014492:	eef0 aa45 	vmov.f32	s21, s10
 8014496:	3604      	adds	r6, #4
 8014498:	930a      	str	r3, [sp, #40]	; 0x28
 801449a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801449c:	2b00      	cmp	r3, #0
 801449e:	dc03      	bgt.n	80144a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80144a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80144a2:	2b00      	cmp	r3, #0
 80144a4:	f340 8225 	ble.w	80148f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80144a8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80144aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80144ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80144b2:	1e48      	subs	r0, r1, #1
 80144b4:	1e57      	subs	r7, r2, #1
 80144b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144b8:	2b00      	cmp	r3, #0
 80144ba:	f340 80e3 	ble.w	8014684 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 80144be:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80144c2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80144c6:	d406      	bmi.n	80144d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80144c8:	4584      	cmp	ip, r0
 80144ca:	da04      	bge.n	80144d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80144cc:	2b00      	cmp	r3, #0
 80144ce:	db02      	blt.n	80144d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80144d0:	42bb      	cmp	r3, r7
 80144d2:	f2c0 80d8 	blt.w	8014686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80144d6:	f11c 0c01 	adds.w	ip, ip, #1
 80144da:	f100 80c9 	bmi.w	8014670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80144de:	4561      	cmp	r1, ip
 80144e0:	f2c0 80c6 	blt.w	8014670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80144e4:	3301      	adds	r3, #1
 80144e6:	f100 80c3 	bmi.w	8014670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80144ea:	429a      	cmp	r2, r3
 80144ec:	f2c0 80c0 	blt.w	8014670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80144f0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80144f4:	4647      	mov	r7, r8
 80144f6:	f1bb 0f00 	cmp.w	fp, #0
 80144fa:	f340 80e3 	ble.w	80146c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80144fe:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014500:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014502:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014506:	689b      	ldr	r3, [r3, #8]
 8014508:	ea5f 422a 	movs.w	r2, sl, asr #16
 801450c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014510:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014514:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014518:	f100 8121 	bmi.w	801475e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801451c:	f103 39ff 	add.w	r9, r3, #4294967295
 8014520:	454a      	cmp	r2, r9
 8014522:	f280 811c 	bge.w	801475e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014526:	f1bc 0f00 	cmp.w	ip, #0
 801452a:	f2c0 8118 	blt.w	801475e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801452e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014532:	45cc      	cmp	ip, r9
 8014534:	f280 8113 	bge.w	801475e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014538:	b21b      	sxth	r3, r3
 801453a:	fb0c 2203 	mla	r2, ip, r3, r2
 801453e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014540:	eb04 0902 	add.w	r9, r4, r2
 8014544:	5ca2      	ldrb	r2, [r4, r2]
 8014546:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801454a:	2800      	cmp	r0, #0
 801454c:	f000 80fe 	beq.w	801474c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014550:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014554:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014558:	9211      	str	r2, [sp, #68]	; 0x44
 801455a:	b151      	cbz	r1, 8014572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801455c:	eb09 0203 	add.w	r2, r9, r3
 8014560:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014564:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014568:	930f      	str	r3, [sp, #60]	; 0x3c
 801456a:	7853      	ldrb	r3, [r2, #1]
 801456c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014570:	9312      	str	r3, [sp, #72]	; 0x48
 8014572:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014574:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014576:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801457a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801457e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014582:	ea4c 0c03 	orr.w	ip, ip, r3
 8014586:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014588:	041b      	lsls	r3, r3, #16
 801458a:	fb10 f201 	smulbb	r2, r0, r1
 801458e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014592:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014596:	10d2      	asrs	r2, r2, #3
 8014598:	4323      	orrs	r3, r4
 801459a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801459e:	4353      	muls	r3, r2
 80145a0:	fb09 330c 	mla	r3, r9, ip, r3
 80145a4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80145a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80145ac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80145b0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80145b4:	f1c1 0c10 	rsb	ip, r1, #16
 80145b8:	ebac 0c00 	sub.w	ip, ip, r0
 80145bc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80145c0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80145c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80145c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80145c8:	0418      	lsls	r0, r3, #16
 80145ca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80145ce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80145d2:	4318      	orrs	r0, r3
 80145d4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80145d8:	fb02 c200 	mla	r2, r2, r0, ip
 80145dc:	0d53      	lsrs	r3, r2, #21
 80145de:	0952      	lsrs	r2, r2, #5
 80145e0:	8838      	ldrh	r0, [r7, #0]
 80145e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80145e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80145ea:	431a      	orrs	r2, r3
 80145ec:	b292      	uxth	r2, r2
 80145ee:	1201      	asrs	r1, r0, #8
 80145f0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80145f4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80145f8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80145fc:	fb11 f104 	smulbb	r1, r1, r4
 8014600:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014604:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014608:	00c0      	lsls	r0, r0, #3
 801460a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801460e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014612:	10d1      	asrs	r1, r2, #3
 8014614:	b2c0      	uxtb	r0, r0
 8014616:	00d2      	lsls	r2, r2, #3
 8014618:	b2d2      	uxtb	r2, r2
 801461a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801461e:	fb1e fe04 	smulbb	lr, lr, r4
 8014622:	fb10 f004 	smulbb	r0, r0, r4
 8014626:	fa1f fc8c 	uxth.w	ip, ip
 801462a:	fb01 e103 	mla	r1, r1, r3, lr
 801462e:	fb02 0303 	mla	r3, r2, r3, r0
 8014632:	b29a      	uxth	r2, r3
 8014634:	f10c 0301 	add.w	r3, ip, #1
 8014638:	b289      	uxth	r1, r1
 801463a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801463e:	1c53      	adds	r3, r2, #1
 8014640:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014644:	1c4a      	adds	r2, r1, #1
 8014646:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801464a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801464e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014652:	0949      	lsrs	r1, r1, #5
 8014654:	ea43 030c 	orr.w	r3, r3, ip
 8014658:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801465c:	430b      	orrs	r3, r1
 801465e:	803b      	strh	r3, [r7, #0]
 8014660:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014662:	449a      	add	sl, r3
 8014664:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014666:	3702      	adds	r7, #2
 8014668:	441d      	add	r5, r3
 801466a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801466e:	e742      	b.n	80144f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014670:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014672:	449a      	add	sl, r3
 8014674:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014676:	441d      	add	r5, r3
 8014678:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801467a:	3b01      	subs	r3, #1
 801467c:	9309      	str	r3, [sp, #36]	; 0x24
 801467e:	f108 0802 	add.w	r8, r8, #2
 8014682:	e718      	b.n	80144b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014684:	d023      	beq.n	80146ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8014686:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014688:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801468a:	3b01      	subs	r3, #1
 801468c:	fb00 a003 	mla	r0, r0, r3, sl
 8014690:	1400      	asrs	r0, r0, #16
 8014692:	f53f af2d 	bmi.w	80144f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014696:	3901      	subs	r1, #1
 8014698:	4288      	cmp	r0, r1
 801469a:	f6bf af29 	bge.w	80144f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801469e:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80146a0:	fb01 5303 	mla	r3, r1, r3, r5
 80146a4:	141b      	asrs	r3, r3, #16
 80146a6:	f53f af23 	bmi.w	80144f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80146aa:	3a01      	subs	r2, #1
 80146ac:	4293      	cmp	r3, r2
 80146ae:	f6bf af1f 	bge.w	80144f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80146b2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80146b6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80146ba:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80146be:	f1be 0f00 	cmp.w	lr, #0
 80146c2:	dc6c      	bgt.n	801479e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 80146c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146c6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80146ca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80146ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80146d0:	2b00      	cmp	r3, #0
 80146d2:	f340 810e 	ble.w	80148f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80146d6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80146da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80146de:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80146e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80146e4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80146e8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80146ec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80146f0:	eef0 6a48 	vmov.f32	s13, s16
 80146f4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80146f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146fc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014700:	ee16 aa90 	vmov	sl, s13
 8014704:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014708:	eef0 6a68 	vmov.f32	s13, s17
 801470c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014710:	ee18 2a10 	vmov	r2, s16
 8014714:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014718:	fb92 f3f3 	sdiv	r3, r2, r3
 801471c:	ee18 2a90 	vmov	r2, s17
 8014720:	932d      	str	r3, [sp, #180]	; 0xb4
 8014722:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014724:	fb92 f3f3 	sdiv	r3, r2, r3
 8014728:	932e      	str	r3, [sp, #184]	; 0xb8
 801472a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801472c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801472e:	3b01      	subs	r3, #1
 8014730:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014734:	930c      	str	r3, [sp, #48]	; 0x30
 8014736:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014738:	bf08      	it	eq
 801473a:	4613      	moveq	r3, r2
 801473c:	ee16 5a90 	vmov	r5, s13
 8014740:	9309      	str	r3, [sp, #36]	; 0x24
 8014742:	eef0 8a67 	vmov.f32	s17, s15
 8014746:	eeb0 8a47 	vmov.f32	s16, s14
 801474a:	e6a6      	b.n	801449a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801474c:	2900      	cmp	r1, #0
 801474e:	f43f af10 	beq.w	8014572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014752:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014756:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801475a:	930f      	str	r3, [sp, #60]	; 0x3c
 801475c:	e709      	b.n	8014572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801475e:	f112 0901 	adds.w	r9, r2, #1
 8014762:	f53f af7d 	bmi.w	8014660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014766:	454b      	cmp	r3, r9
 8014768:	f6ff af7a 	blt.w	8014660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801476c:	f11c 0901 	adds.w	r9, ip, #1
 8014770:	f53f af76 	bmi.w	8014660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014774:	45ce      	cmp	lr, r9
 8014776:	f6ff af73 	blt.w	8014660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801477a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801477c:	9202      	str	r2, [sp, #8]
 801477e:	b21b      	sxth	r3, r3
 8014780:	fa0f f28e 	sxth.w	r2, lr
 8014784:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014788:	e9cd c003 	strd	ip, r0, [sp, #12]
 801478c:	9201      	str	r2, [sp, #4]
 801478e:	9300      	str	r3, [sp, #0]
 8014790:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014792:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014794:	4633      	mov	r3, r6
 8014796:	4639      	mov	r1, r7
 8014798:	f7ff fd70 	bl	801427c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801479c:	e760      	b.n	8014660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801479e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80147a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80147a2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80147a6:	ea4f 422a 	mov.w	r2, sl, asr #16
 80147aa:	1429      	asrs	r1, r5, #16
 80147ac:	fb03 2101 	mla	r1, r3, r1, r2
 80147b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80147b2:	440a      	add	r2, r1
 80147b4:	5c61      	ldrb	r1, [r4, r1]
 80147b6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80147ba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80147be:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80147c2:	f1bc 0f00 	cmp.w	ip, #0
 80147c6:	f000 808c 	beq.w	80148e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80147ca:	7857      	ldrb	r7, [r2, #1]
 80147cc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80147d0:	9413      	str	r4, [sp, #76]	; 0x4c
 80147d2:	b140      	cbz	r0, 80147e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80147d4:	18d7      	adds	r7, r2, r3
 80147d6:	5cd3      	ldrb	r3, [r2, r3]
 80147d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80147dc:	9310      	str	r3, [sp, #64]	; 0x40
 80147de:	787b      	ldrb	r3, [r7, #1]
 80147e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80147e4:	9314      	str	r3, [sp, #80]	; 0x50
 80147e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80147e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80147ea:	fb1c f200 	smulbb	r2, ip, r0
 80147ee:	041f      	lsls	r7, r3, #16
 80147f0:	10d2      	asrs	r2, r2, #3
 80147f2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80147f6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80147fa:	431f      	orrs	r7, r3
 80147fc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014800:	9317      	str	r3, [sp, #92]	; 0x5c
 8014802:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014804:	041b      	lsls	r3, r3, #16
 8014806:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801480a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801480e:	ea43 030b 	orr.w	r3, r3, fp
 8014812:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014814:	4353      	muls	r3, r2
 8014816:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801481a:	fb04 3707 	mla	r7, r4, r7, r3
 801481e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014822:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014826:	ea43 0b01 	orr.w	fp, r3, r1
 801482a:	f1c0 0110 	rsb	r1, r0, #16
 801482e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014830:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014832:	eba1 0c0c 	sub.w	ip, r1, ip
 8014836:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801483a:	fb0c 770b 	mla	r7, ip, fp, r7
 801483e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014842:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014846:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801484a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801484e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014852:	fb02 770c 	mla	r7, r2, ip, r7
 8014856:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014858:	0d79      	lsrs	r1, r7, #21
 801485a:	097f      	lsrs	r7, r7, #5
 801485c:	8812      	ldrh	r2, [r2, #0]
 801485e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014862:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014866:	430f      	orrs	r7, r1
 8014868:	b2bb      	uxth	r3, r7
 801486a:	1211      	asrs	r1, r2, #8
 801486c:	1218      	asrs	r0, r3, #8
 801486e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014872:	fb11 f104 	smulbb	r1, r1, r4
 8014876:	10d7      	asrs	r7, r2, #3
 8014878:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801487c:	00d2      	lsls	r2, r2, #3
 801487e:	fb00 1009 	mla	r0, r0, r9, r1
 8014882:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014886:	10d9      	asrs	r1, r3, #3
 8014888:	b2d2      	uxtb	r2, r2
 801488a:	00db      	lsls	r3, r3, #3
 801488c:	fb17 f704 	smulbb	r7, r7, r4
 8014890:	fb12 f204 	smulbb	r2, r2, r4
 8014894:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014898:	b2db      	uxtb	r3, r3
 801489a:	b280      	uxth	r0, r0
 801489c:	fb01 7109 	mla	r1, r1, r9, r7
 80148a0:	fb03 2309 	mla	r3, r3, r9, r2
 80148a4:	b29b      	uxth	r3, r3
 80148a6:	b289      	uxth	r1, r1
 80148a8:	1c42      	adds	r2, r0, #1
 80148aa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80148ae:	1c4f      	adds	r7, r1, #1
 80148b0:	1c5a      	adds	r2, r3, #1
 80148b2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80148b6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80148ba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80148be:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80148c2:	0949      	lsrs	r1, r1, #5
 80148c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148c6:	4310      	orrs	r0, r2
 80148c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80148cc:	4308      	orrs	r0, r1
 80148ce:	f823 0b02 	strh.w	r0, [r3], #2
 80148d2:	930e      	str	r3, [sp, #56]	; 0x38
 80148d4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80148d6:	449a      	add	sl, r3
 80148d8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80148da:	f10e 3eff 	add.w	lr, lr, #4294967295
 80148de:	441d      	add	r5, r3
 80148e0:	e6ed      	b.n	80146be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 80148e2:	2800      	cmp	r0, #0
 80148e4:	f43f af7f 	beq.w	80147e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80148e8:	5cd3      	ldrb	r3, [r2, r3]
 80148ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80148ee:	9310      	str	r3, [sp, #64]	; 0x40
 80148f0:	e779      	b.n	80147e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80148f2:	b019      	add	sp, #100	; 0x64
 80148f4:	ecbd 8b08 	vpop	{d8-d11}
 80148f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080148fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80148fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014900:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8014904:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014908:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801490c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014910:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8014914:	8808      	ldrh	r0, [r1, #0]
 8014916:	fb06 570e 	mla	r7, r6, lr, r5
 801491a:	2e00      	cmp	r6, #0
 801491c:	eb02 0807 	add.w	r8, r2, r7
 8014920:	db38      	blt.n	8014994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014922:	45b1      	cmp	r9, r6
 8014924:	dd36      	ble.n	8014994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014926:	2d00      	cmp	r5, #0
 8014928:	db32      	blt.n	8014990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801492a:	45ae      	cmp	lr, r5
 801492c:	dd30      	ble.n	8014990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801492e:	5dd2      	ldrb	r2, [r2, r7]
 8014930:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014934:	1c6a      	adds	r2, r5, #1
 8014936:	d430      	bmi.n	801499a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014938:	4596      	cmp	lr, r2
 801493a:	dd2e      	ble.n	801499a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801493c:	b36c      	cbz	r4, 801499a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801493e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014942:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014946:	3601      	adds	r6, #1
 8014948:	d42b      	bmi.n	80149a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801494a:	45b1      	cmp	r9, r6
 801494c:	dd29      	ble.n	80149a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801494e:	f1bc 0f00 	cmp.w	ip, #0
 8014952:	d028      	beq.n	80149a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014954:	2d00      	cmp	r5, #0
 8014956:	db22      	blt.n	801499e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014958:	45ae      	cmp	lr, r5
 801495a:	dd20      	ble.n	801499e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801495c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014960:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014964:	3501      	adds	r5, #1
 8014966:	d407      	bmi.n	8014978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014968:	45ae      	cmp	lr, r5
 801496a:	dd05      	ble.n	8014978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801496c:	b134      	cbz	r4, 801497c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801496e:	44c6      	add	lr, r8
 8014970:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014974:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014978:	2c0f      	cmp	r4, #15
 801497a:	d802      	bhi.n	8014982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801497c:	f1bc 0f0f 	cmp.w	ip, #15
 8014980:	d914      	bls.n	80149ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014982:	4b26      	ldr	r3, [pc, #152]	; (8014a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014984:	4a26      	ldr	r2, [pc, #152]	; (8014a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8014986:	4827      	ldr	r0, [pc, #156]	; (8014a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014988:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 801498c:	f006 fd8c 	bl	801b4a8 <__assert_func>
 8014990:	4607      	mov	r7, r0
 8014992:	e7cf      	b.n	8014934 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014994:	4602      	mov	r2, r0
 8014996:	4607      	mov	r7, r0
 8014998:	e7d5      	b.n	8014946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801499a:	4602      	mov	r2, r0
 801499c:	e7d3      	b.n	8014946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801499e:	4606      	mov	r6, r0
 80149a0:	e7e0      	b.n	8014964 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 80149a2:	4606      	mov	r6, r0
 80149a4:	e7e8      	b.n	8014978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80149a6:	2c0f      	cmp	r4, #15
 80149a8:	d8eb      	bhi.n	8014982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80149aa:	4606      	mov	r6, r0
 80149ac:	043d      	lsls	r5, r7, #16
 80149ae:	fb14 f30c 	smulbb	r3, r4, ip
 80149b2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80149b6:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80149ba:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80149be:	10db      	asrs	r3, r3, #3
 80149c0:	432f      	orrs	r7, r5
 80149c2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80149c6:	f1cc 0510 	rsb	r5, ip, #16
 80149ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80149ce:	1b2d      	subs	r5, r5, r4
 80149d0:	ea4e 0202 	orr.w	r2, lr, r2
 80149d4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80149d8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80149dc:	4354      	muls	r4, r2
 80149de:	fb05 4507 	mla	r5, r5, r7, r4
 80149e2:	0404      	lsls	r4, r0, #16
 80149e4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80149e8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80149ec:	4320      	orrs	r0, r4
 80149ee:	fb03 5400 	mla	r4, r3, r0, r5
 80149f2:	0430      	lsls	r0, r6, #16
 80149f4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80149f8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80149fc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014a00:	4330      	orrs	r0, r6
 8014a02:	fb03 4000 	mla	r0, r3, r0, r4
 8014a06:	0d43      	lsrs	r3, r0, #21
 8014a08:	0940      	lsrs	r0, r0, #5
 8014a0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014a0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014a12:	4318      	orrs	r0, r3
 8014a14:	8008      	strh	r0, [r1, #0]
 8014a16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014a1a:	bf00      	nop
 8014a1c:	0801f576 	.word	0x0801f576
 8014a20:	0801fbeb 	.word	0x0801fbeb
 8014a24:	0801f5fa 	.word	0x0801f5fa

08014a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a2c:	ed2d 8b0a 	vpush	{d8-d12}
 8014a30:	b093      	sub	sp, #76	; 0x4c
 8014a32:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8014a36:	920f      	str	r2, [sp, #60]	; 0x3c
 8014a38:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014a3a:	9108      	str	r1, [sp, #32]
 8014a3c:	9306      	str	r3, [sp, #24]
 8014a3e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014a42:	9010      	str	r0, [sp, #64]	; 0x40
 8014a44:	6850      	ldr	r0, [r2, #4]
 8014a46:	6812      	ldr	r2, [r2, #0]
 8014a48:	fb00 1303 	mla	r3, r0, r3, r1
 8014a4c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8014a50:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014a52:	681b      	ldr	r3, [r3, #0]
 8014a54:	9307      	str	r3, [sp, #28]
 8014a56:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014a58:	685f      	ldr	r7, [r3, #4]
 8014a5a:	eeb0 aa40 	vmov.f32	s20, s0
 8014a5e:	eef0 9a60 	vmov.f32	s19, s1
 8014a62:	eeb0 9a41 	vmov.f32	s18, s2
 8014a66:	eeb0 8a62 	vmov.f32	s16, s5
 8014a6a:	eef0 8a43 	vmov.f32	s17, s6
 8014a6e:	eeb0 ca44 	vmov.f32	s24, s8
 8014a72:	eef0 ba64 	vmov.f32	s23, s9
 8014a76:	eeb0 ba45 	vmov.f32	s22, s10
 8014a7a:	3704      	adds	r7, #4
 8014a7c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014a80:	9b08      	ldr	r3, [sp, #32]
 8014a82:	2b00      	cmp	r3, #0
 8014a84:	dc03      	bgt.n	8014a8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a86:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014a88:	2b00      	cmp	r3, #0
 8014a8a:	f340 81b2 	ble.w	8014df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014a8e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014a90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014a94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014a98:	1e48      	subs	r0, r1, #1
 8014a9a:	f102 3cff 	add.w	ip, r2, #4294967295
 8014a9e:	9b06      	ldr	r3, [sp, #24]
 8014aa0:	2b00      	cmp	r3, #0
 8014aa2:	f340 80a9 	ble.w	8014bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8014aa6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8014aaa:	ea4f 4326 	mov.w	r3, r6, asr #16
 8014aae:	d406      	bmi.n	8014abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014ab0:	4586      	cmp	lr, r0
 8014ab2:	da04      	bge.n	8014abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014ab4:	2b00      	cmp	r3, #0
 8014ab6:	db02      	blt.n	8014abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014ab8:	4563      	cmp	r3, ip
 8014aba:	f2c0 809e 	blt.w	8014bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014abe:	f11e 0e01 	adds.w	lr, lr, #1
 8014ac2:	f100 808f 	bmi.w	8014be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014ac6:	4571      	cmp	r1, lr
 8014ac8:	f2c0 808c 	blt.w	8014be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014acc:	3301      	adds	r3, #1
 8014ace:	f100 8089 	bmi.w	8014be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014ad2:	429a      	cmp	r2, r3
 8014ad4:	f2c0 8086 	blt.w	8014be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014ad8:	f8dd b018 	ldr.w	fp, [sp, #24]
 8014adc:	46c8      	mov	r8, r9
 8014ade:	f1bb 0f00 	cmp.w	fp, #0
 8014ae2:	f340 80a6 	ble.w	8014c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8014ae6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014ae8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014aea:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014aee:	689b      	ldr	r3, [r3, #8]
 8014af0:	1422      	asrs	r2, r4, #16
 8014af2:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8014af6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8014afa:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8014afe:	f100 80e3 	bmi.w	8014cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014b02:	f103 3aff 	add.w	sl, r3, #4294967295
 8014b06:	4552      	cmp	r2, sl
 8014b08:	f280 80de 	bge.w	8014cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014b0c:	f1bc 0f00 	cmp.w	ip, #0
 8014b10:	f2c0 80da 	blt.w	8014cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014b14:	f10e 3aff 	add.w	sl, lr, #4294967295
 8014b18:	45d4      	cmp	ip, sl
 8014b1a:	f280 80d5 	bge.w	8014cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014b1e:	b21b      	sxth	r3, r3
 8014b20:	fb0c 2203 	mla	r2, ip, r3, r2
 8014b24:	9d07      	ldr	r5, [sp, #28]
 8014b26:	eb05 0a02 	add.w	sl, r5, r2
 8014b2a:	5caa      	ldrb	r2, [r5, r2]
 8014b2c:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8014b30:	2800      	cmp	r0, #0
 8014b32:	f000 80c0 	beq.w	8014cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8014b36:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014b3a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014b3e:	920b      	str	r2, [sp, #44]	; 0x2c
 8014b40:	b151      	cbz	r1, 8014b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014b42:	eb0a 0203 	add.w	r2, sl, r3
 8014b46:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014b4a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014b4e:	9309      	str	r3, [sp, #36]	; 0x24
 8014b50:	7853      	ldrb	r3, [r2, #1]
 8014b52:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014b56:	930c      	str	r3, [sp, #48]	; 0x30
 8014b58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014b5a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014b5c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014b60:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014b64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014b68:	ea4c 0c03 	orr.w	ip, ip, r3
 8014b6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014b6e:	041b      	lsls	r3, r3, #16
 8014b70:	fb10 f201 	smulbb	r2, r0, r1
 8014b74:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014b78:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014b7c:	10d2      	asrs	r2, r2, #3
 8014b7e:	432b      	orrs	r3, r5
 8014b80:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8014b84:	4353      	muls	r3, r2
 8014b86:	fb0a 330c 	mla	r3, sl, ip, r3
 8014b8a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014b8e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014b92:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014b96:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014b9a:	f1c1 0c10 	rsb	ip, r1, #16
 8014b9e:	ebac 0c00 	sub.w	ip, ip, r0
 8014ba2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014ba6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014baa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014bac:	0418      	lsls	r0, r3, #16
 8014bae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014bb2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014bb6:	4318      	orrs	r0, r3
 8014bb8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014bbc:	fb02 c200 	mla	r2, r2, r0, ip
 8014bc0:	0d53      	lsrs	r3, r2, #21
 8014bc2:	0952      	lsrs	r2, r2, #5
 8014bc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014bc8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014bcc:	431a      	orrs	r2, r3
 8014bce:	f8a8 2000 	strh.w	r2, [r8]
 8014bd2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014bd4:	441c      	add	r4, r3
 8014bd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014bd8:	f108 0802 	add.w	r8, r8, #2
 8014bdc:	441e      	add	r6, r3
 8014bde:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014be2:	e77c      	b.n	8014ade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8014be4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014be6:	441c      	add	r4, r3
 8014be8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014bea:	441e      	add	r6, r3
 8014bec:	9b06      	ldr	r3, [sp, #24]
 8014bee:	3b01      	subs	r3, #1
 8014bf0:	9306      	str	r3, [sp, #24]
 8014bf2:	f109 0902 	add.w	r9, r9, #2
 8014bf6:	e752      	b.n	8014a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014bf8:	d020      	beq.n	8014c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014bfa:	9b06      	ldr	r3, [sp, #24]
 8014bfc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014bfe:	3b01      	subs	r3, #1
 8014c00:	fb00 4003 	mla	r0, r0, r3, r4
 8014c04:	1400      	asrs	r0, r0, #16
 8014c06:	f53f af67 	bmi.w	8014ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014c0a:	3901      	subs	r1, #1
 8014c0c:	4288      	cmp	r0, r1
 8014c0e:	f6bf af63 	bge.w	8014ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014c12:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014c14:	fb01 6303 	mla	r3, r1, r3, r6
 8014c18:	141b      	asrs	r3, r3, #16
 8014c1a:	f53f af5d 	bmi.w	8014ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014c1e:	3a01      	subs	r2, #1
 8014c20:	4293      	cmp	r3, r2
 8014c22:	f6bf af59 	bge.w	8014ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014c26:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8014c2a:	46ca      	mov	sl, r9
 8014c2c:	f1b8 0f00 	cmp.w	r8, #0
 8014c30:	dc67      	bgt.n	8014d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8014c32:	9b06      	ldr	r3, [sp, #24]
 8014c34:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014c38:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8014c3c:	9b08      	ldr	r3, [sp, #32]
 8014c3e:	2b00      	cmp	r3, #0
 8014c40:	f340 80d7 	ble.w	8014df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014c44:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014c48:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014c4c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014c50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014c52:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014c56:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014c5a:	eef0 6a48 	vmov.f32	s13, s16
 8014c5e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014c62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c66:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014c6a:	ee16 4a90 	vmov	r4, s13
 8014c6e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014c72:	eef0 6a68 	vmov.f32	s13, s17
 8014c76:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014c7a:	ee18 2a10 	vmov	r2, s16
 8014c7e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014c82:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c86:	ee18 2a90 	vmov	r2, s17
 8014c8a:	9329      	str	r3, [sp, #164]	; 0xa4
 8014c8c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014c8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c92:	932a      	str	r3, [sp, #168]	; 0xa8
 8014c94:	9b08      	ldr	r3, [sp, #32]
 8014c96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014c98:	3b01      	subs	r3, #1
 8014c9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c9e:	9308      	str	r3, [sp, #32]
 8014ca0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014ca2:	bf08      	it	eq
 8014ca4:	4613      	moveq	r3, r2
 8014ca6:	ee16 6a90 	vmov	r6, s13
 8014caa:	9306      	str	r3, [sp, #24]
 8014cac:	eef0 8a67 	vmov.f32	s17, s15
 8014cb0:	eeb0 8a47 	vmov.f32	s16, s14
 8014cb4:	e6e4      	b.n	8014a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014cb6:	2900      	cmp	r1, #0
 8014cb8:	f43f af4e 	beq.w	8014b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014cbc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014cc0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014cc4:	9309      	str	r3, [sp, #36]	; 0x24
 8014cc6:	e747      	b.n	8014b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014cc8:	f112 0a01 	adds.w	sl, r2, #1
 8014ccc:	d481      	bmi.n	8014bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014cce:	4553      	cmp	r3, sl
 8014cd0:	f6ff af7f 	blt.w	8014bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014cd4:	f11c 0a01 	adds.w	sl, ip, #1
 8014cd8:	f53f af7b 	bmi.w	8014bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014cdc:	45d6      	cmp	lr, sl
 8014cde:	f6ff af78 	blt.w	8014bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014ce2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8014ce6:	b21b      	sxth	r3, r3
 8014ce8:	fa0f f28e 	sxth.w	r2, lr
 8014cec:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014cf0:	9201      	str	r2, [sp, #4]
 8014cf2:	9300      	str	r3, [sp, #0]
 8014cf4:	9a07      	ldr	r2, [sp, #28]
 8014cf6:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014cf8:	463b      	mov	r3, r7
 8014cfa:	4641      	mov	r1, r8
 8014cfc:	f7ff fdfe 	bl	80148fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014d00:	e767      	b.n	8014bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014d02:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014d04:	9d07      	ldr	r5, [sp, #28]
 8014d06:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014d0a:	1422      	asrs	r2, r4, #16
 8014d0c:	1431      	asrs	r1, r6, #16
 8014d0e:	fb03 2101 	mla	r1, r3, r1, r2
 8014d12:	9a07      	ldr	r2, [sp, #28]
 8014d14:	440a      	add	r2, r1
 8014d16:	5c69      	ldrb	r1, [r5, r1]
 8014d18:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8014d1c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014d20:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8014d24:	f1be 0f00 	cmp.w	lr, #0
 8014d28:	d05c      	beq.n	8014de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8014d2a:	f892 c001 	ldrb.w	ip, [r2, #1]
 8014d2e:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8014d32:	950d      	str	r5, [sp, #52]	; 0x34
 8014d34:	b150      	cbz	r0, 8014d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014d36:	eb02 0c03 	add.w	ip, r2, r3
 8014d3a:	5cd3      	ldrb	r3, [r2, r3]
 8014d3c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014d40:	930a      	str	r3, [sp, #40]	; 0x28
 8014d42:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8014d46:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014d4a:	930e      	str	r3, [sp, #56]	; 0x38
 8014d4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014d50:	fb1e f200 	smulbb	r2, lr, r0
 8014d54:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014d58:	10d2      	asrs	r2, r2, #3
 8014d5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014d5e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014d62:	ea4c 0c03 	orr.w	ip, ip, r3
 8014d66:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014d6a:	9311      	str	r3, [sp, #68]	; 0x44
 8014d6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d6e:	041b      	lsls	r3, r3, #16
 8014d70:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014d74:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014d78:	ea43 030b 	orr.w	r3, r3, fp
 8014d7c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014d7e:	4353      	muls	r3, r2
 8014d80:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014d84:	fb05 3c0c 	mla	ip, r5, ip, r3
 8014d88:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014d8c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014d90:	ea43 0b01 	orr.w	fp, r3, r1
 8014d94:	f1c0 0110 	rsb	r1, r0, #16
 8014d98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014d9a:	eba1 0e0e 	sub.w	lr, r1, lr
 8014d9e:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014da2:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014da6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8014daa:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8014dae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014db2:	ea4b 0e0e 	orr.w	lr, fp, lr
 8014db6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014dba:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014dbe:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8014dc2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014dc6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014dca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014dce:	ea43 0c0c 	orr.w	ip, r3, ip
 8014dd2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014dd4:	f82a cb02 	strh.w	ip, [sl], #2
 8014dd8:	441c      	add	r4, r3
 8014dda:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ddc:	f108 38ff 	add.w	r8, r8, #4294967295
 8014de0:	441e      	add	r6, r3
 8014de2:	e723      	b.n	8014c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014de4:	2800      	cmp	r0, #0
 8014de6:	d0b1      	beq.n	8014d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014de8:	5cd3      	ldrb	r3, [r2, r3]
 8014dea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014dee:	930a      	str	r3, [sp, #40]	; 0x28
 8014df0:	e7ac      	b.n	8014d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014df2:	b013      	add	sp, #76	; 0x4c
 8014df4:	ecbd 8b0a 	vpop	{d8-d12}
 8014df8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e00:	468b      	mov	fp, r1
 8014e02:	8809      	ldrh	r1, [r1, #0]
 8014e04:	b089      	sub	sp, #36	; 0x24
 8014e06:	10cd      	asrs	r5, r1, #3
 8014e08:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014e0c:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014e10:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014e14:	00c9      	lsls	r1, r1, #3
 8014e16:	9500      	str	r5, [sp, #0]
 8014e18:	b2c9      	uxtb	r1, r1
 8014e1a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014e1e:	9101      	str	r1, [sp, #4]
 8014e20:	9900      	ldr	r1, [sp, #0]
 8014e22:	9202      	str	r2, [sp, #8]
 8014e24:	fb04 650e 	mla	r5, r4, lr, r6
 8014e28:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014e2c:	eb02 0805 	add.w	r8, r2, r5
 8014e30:	0209      	lsls	r1, r1, #8
 8014e32:	9a01      	ldr	r2, [sp, #4]
 8014e34:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014e38:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8014e3c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014e40:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8014e44:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014e48:	4311      	orrs	r1, r2
 8014e4a:	2c00      	cmp	r4, #0
 8014e4c:	9107      	str	r1, [sp, #28]
 8014e4e:	db43      	blt.n	8014ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014e50:	45a2      	cmp	sl, r4
 8014e52:	dd41      	ble.n	8014ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014e54:	2e00      	cmp	r6, #0
 8014e56:	db3d      	blt.n	8014ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014e58:	45b6      	cmp	lr, r6
 8014e5a:	dd3b      	ble.n	8014ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014e5c:	9a02      	ldr	r2, [sp, #8]
 8014e5e:	5d55      	ldrb	r5, [r2, r5]
 8014e60:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014e64:	441d      	add	r5, r3
 8014e66:	1c72      	adds	r2, r6, #1
 8014e68:	d439      	bmi.n	8014ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014e6a:	4596      	cmp	lr, r2
 8014e6c:	dd37      	ble.n	8014ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014e6e:	2f00      	cmp	r7, #0
 8014e70:	d035      	beq.n	8014ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014e72:	f898 1001 	ldrb.w	r1, [r8, #1]
 8014e76:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014e7a:	4419      	add	r1, r3
 8014e7c:	3401      	adds	r4, #1
 8014e7e:	d432      	bmi.n	8014ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014e80:	45a2      	cmp	sl, r4
 8014e82:	dd30      	ble.n	8014ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014e84:	b378      	cbz	r0, 8014ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014e86:	2e00      	cmp	r6, #0
 8014e88:	db2b      	blt.n	8014ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014e8a:	45b6      	cmp	lr, r6
 8014e8c:	dd29      	ble.n	8014ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014e8e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8014e92:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014e96:	441c      	add	r4, r3
 8014e98:	3601      	adds	r6, #1
 8014e9a:	d427      	bmi.n	8014eec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014e9c:	45b6      	cmp	lr, r6
 8014e9e:	dd25      	ble.n	8014eec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014ea0:	b327      	cbz	r7, 8014eec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014ea2:	44c6      	add	lr, r8
 8014ea4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014ea8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014eac:	4413      	add	r3, r2
 8014eae:	782a      	ldrb	r2, [r5, #0]
 8014eb0:	9202      	str	r2, [sp, #8]
 8014eb2:	780a      	ldrb	r2, [r1, #0]
 8014eb4:	9203      	str	r2, [sp, #12]
 8014eb6:	7822      	ldrb	r2, [r4, #0]
 8014eb8:	9204      	str	r2, [sp, #16]
 8014eba:	2f0f      	cmp	r7, #15
 8014ebc:	781a      	ldrb	r2, [r3, #0]
 8014ebe:	9205      	str	r2, [sp, #20]
 8014ec0:	d801      	bhi.n	8014ec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8014ec2:	280f      	cmp	r0, #15
 8014ec4:	d914      	bls.n	8014ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8014ec6:	4b3f      	ldr	r3, [pc, #252]	; (8014fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014ec8:	4a3f      	ldr	r2, [pc, #252]	; (8014fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8014eca:	4840      	ldr	r0, [pc, #256]	; (8014fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8014ecc:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8014ed0:	f006 faea 	bl	801b4a8 <__assert_func>
 8014ed4:	ad07      	add	r5, sp, #28
 8014ed6:	e7c6      	b.n	8014e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014ed8:	a907      	add	r1, sp, #28
 8014eda:	460d      	mov	r5, r1
 8014edc:	e7ce      	b.n	8014e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014ede:	a907      	add	r1, sp, #28
 8014ee0:	e7cc      	b.n	8014e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014ee2:	ac07      	add	r4, sp, #28
 8014ee4:	e7d8      	b.n	8014e98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8014ee6:	ab07      	add	r3, sp, #28
 8014ee8:	461c      	mov	r4, r3
 8014eea:	e7e0      	b.n	8014eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014eec:	ab07      	add	r3, sp, #28
 8014eee:	e7de      	b.n	8014eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014ef0:	b2ba      	uxth	r2, r7
 8014ef2:	b280      	uxth	r0, r0
 8014ef4:	fb02 fa00 	mul.w	sl, r2, r0
 8014ef8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014efc:	0112      	lsls	r2, r2, #4
 8014efe:	b280      	uxth	r0, r0
 8014f00:	f891 8002 	ldrb.w	r8, [r1, #2]
 8014f04:	7849      	ldrb	r1, [r1, #1]
 8014f06:	78ae      	ldrb	r6, [r5, #2]
 8014f08:	786d      	ldrb	r5, [r5, #1]
 8014f0a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014f0e:	eba2 020a 	sub.w	r2, r2, sl
 8014f12:	b292      	uxth	r2, r2
 8014f14:	ebae 0e00 	sub.w	lr, lr, r0
 8014f18:	fa1f fe8e 	uxth.w	lr, lr
 8014f1c:	4351      	muls	r1, r2
 8014f1e:	fb02 f808 	mul.w	r8, r2, r8
 8014f22:	fb0e 8806 	mla	r8, lr, r6, r8
 8014f26:	fb0e 1505 	mla	r5, lr, r5, r1
 8014f2a:	78a6      	ldrb	r6, [r4, #2]
 8014f2c:	7861      	ldrb	r1, [r4, #1]
 8014f2e:	fa1f f78c 	uxth.w	r7, ip
 8014f32:	fb00 8806 	mla	r8, r0, r6, r8
 8014f36:	fb00 5501 	mla	r5, r0, r1, r5
 8014f3a:	789e      	ldrb	r6, [r3, #2]
 8014f3c:	7859      	ldrb	r1, [r3, #1]
 8014f3e:	9b00      	ldr	r3, [sp, #0]
 8014f40:	ea6f 0c0c 	mvn.w	ip, ip
 8014f44:	fa5f fc8c 	uxtb.w	ip, ip
 8014f48:	fb0a 5101 	mla	r1, sl, r1, r5
 8014f4c:	fb13 f50c 	smulbb	r5, r3, ip
 8014f50:	9b03      	ldr	r3, [sp, #12]
 8014f52:	435a      	muls	r2, r3
 8014f54:	9b02      	ldr	r3, [sp, #8]
 8014f56:	fb0e 2203 	mla	r2, lr, r3, r2
 8014f5a:	9b04      	ldr	r3, [sp, #16]
 8014f5c:	fb00 2003 	mla	r0, r0, r3, r2
 8014f60:	9b05      	ldr	r3, [sp, #20]
 8014f62:	fb0a 8606 	mla	r6, sl, r6, r8
 8014f66:	fb19 f90c 	smulbb	r9, r9, ip
 8014f6a:	fb0a 0a03 	mla	sl, sl, r3, r0
 8014f6e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014f72:	9b01      	ldr	r3, [sp, #4]
 8014f74:	fb06 9607 	mla	r6, r6, r7, r9
 8014f78:	b2b6      	uxth	r6, r6
 8014f7a:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8014f7e:	fb13 fc0c 	smulbb	ip, r3, ip
 8014f82:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014f86:	fb01 5107 	mla	r1, r1, r7, r5
 8014f8a:	f106 0901 	add.w	r9, r6, #1
 8014f8e:	fb0a c707 	mla	r7, sl, r7, ip
 8014f92:	b2bf      	uxth	r7, r7
 8014f94:	b289      	uxth	r1, r1
 8014f96:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8014f9a:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 8014f9e:	1c4d      	adds	r5, r1, #1
 8014fa0:	1c7e      	adds	r6, r7, #1
 8014fa2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014fa6:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8014faa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014fae:	0949      	lsrs	r1, r1, #5
 8014fb0:	ea46 0609 	orr.w	r6, r6, r9
 8014fb4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014fb8:	430e      	orrs	r6, r1
 8014fba:	f8ab 6000 	strh.w	r6, [fp]
 8014fbe:	b009      	add	sp, #36	; 0x24
 8014fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fc4:	0801f576 	.word	0x0801f576
 8014fc8:	0801fb42 	.word	0x0801fb42
 8014fcc:	0801f5fa 	.word	0x0801f5fa

08014fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fd4:	ed2d 8b08 	vpush	{d8-d11}
 8014fd8:	b095      	sub	sp, #84	; 0x54
 8014fda:	eeb0 aa40 	vmov.f32	s20, s0
 8014fde:	9212      	str	r2, [sp, #72]	; 0x48
 8014fe0:	9309      	str	r3, [sp, #36]	; 0x24
 8014fe2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014fe4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8014fe8:	930f      	str	r3, [sp, #60]	; 0x3c
 8014fea:	910e      	str	r1, [sp, #56]	; 0x38
 8014fec:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014ff0:	9013      	str	r0, [sp, #76]	; 0x4c
 8014ff2:	6850      	ldr	r0, [r2, #4]
 8014ff4:	6812      	ldr	r2, [r2, #0]
 8014ff6:	fb00 1303 	mla	r3, r0, r3, r1
 8014ffa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014ffe:	930a      	str	r3, [sp, #40]	; 0x28
 8015000:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015002:	681b      	ldr	r3, [r3, #0]
 8015004:	930d      	str	r3, [sp, #52]	; 0x34
 8015006:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015008:	685c      	ldr	r4, [r3, #4]
 801500a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801500c:	43db      	mvns	r3, r3
 801500e:	b2db      	uxtb	r3, r3
 8015010:	eef0 9a60 	vmov.f32	s19, s1
 8015014:	eeb0 9a41 	vmov.f32	s18, s2
 8015018:	eeb0 8a62 	vmov.f32	s16, s5
 801501c:	eef0 8a43 	vmov.f32	s17, s6
 8015020:	eef0 ba44 	vmov.f32	s23, s8
 8015024:	eeb0 ba64 	vmov.f32	s22, s9
 8015028:	eef0 aa45 	vmov.f32	s21, s10
 801502c:	3404      	adds	r4, #4
 801502e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015030:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015032:	2b00      	cmp	r3, #0
 8015034:	dc03      	bgt.n	801503e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015036:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015038:	2b00      	cmp	r3, #0
 801503a:	f340 8255 	ble.w	80154e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801503e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015040:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015044:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015048:	1e48      	subs	r0, r1, #1
 801504a:	1e55      	subs	r5, r2, #1
 801504c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801504e:	2b00      	cmp	r3, #0
 8015050:	f340 80f9 	ble.w	8015246 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015054:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8015056:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015058:	1436      	asrs	r6, r6, #16
 801505a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801505e:	d406      	bmi.n	801506e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015060:	4286      	cmp	r6, r0
 8015062:	da04      	bge.n	801506e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015064:	2b00      	cmp	r3, #0
 8015066:	db02      	blt.n	801506e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015068:	42ab      	cmp	r3, r5
 801506a:	f2c0 80ed 	blt.w	8015248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801506e:	3601      	adds	r6, #1
 8015070:	f100 80da 	bmi.w	8015228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015074:	42b1      	cmp	r1, r6
 8015076:	f2c0 80d7 	blt.w	8015228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801507a:	3301      	adds	r3, #1
 801507c:	f100 80d4 	bmi.w	8015228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015080:	429a      	cmp	r2, r3
 8015082:	f2c0 80d1 	blt.w	8015228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015086:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015088:	9311      	str	r3, [sp, #68]	; 0x44
 801508a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801508c:	930c      	str	r3, [sp, #48]	; 0x30
 801508e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015090:	2b00      	cmp	r3, #0
 8015092:	f340 80fa 	ble.w	801528a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015096:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8015098:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801509a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801509c:	68c6      	ldr	r6, [r0, #12]
 801509e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80150a0:	141d      	asrs	r5, r3, #16
 80150a2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80150a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80150a8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80150aa:	1400      	asrs	r0, r0, #16
 80150ac:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80150b0:	6892      	ldr	r2, [r2, #8]
 80150b2:	f100 813e 	bmi.w	8015332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80150b6:	1e57      	subs	r7, r2, #1
 80150b8:	42b8      	cmp	r0, r7
 80150ba:	f280 813a 	bge.w	8015332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80150be:	2d00      	cmp	r5, #0
 80150c0:	f2c0 8137 	blt.w	8015332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80150c4:	1e77      	subs	r7, r6, #1
 80150c6:	42bd      	cmp	r5, r7
 80150c8:	f280 8133 	bge.w	8015332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80150cc:	b212      	sxth	r2, r2
 80150ce:	fb05 0002 	mla	r0, r5, r2, r0
 80150d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80150d4:	f815 a000 	ldrb.w	sl, [r5, r0]
 80150d8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80150dc:	182e      	adds	r6, r5, r0
 80150de:	eb04 050a 	add.w	r5, r4, sl
 80150e2:	2b00      	cmp	r3, #0
 80150e4:	f000 8117 	beq.w	8015316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 80150e8:	f896 c001 	ldrb.w	ip, [r6, #1]
 80150ec:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80150f0:	44a4      	add	ip, r4
 80150f2:	2900      	cmp	r1, #0
 80150f4:	f000 8117 	beq.w	8015326 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80150f8:	18b0      	adds	r0, r6, r2
 80150fa:	5cb2      	ldrb	r2, [r6, r2]
 80150fc:	7840      	ldrb	r0, [r0, #1]
 80150fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015102:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015106:	4422      	add	r2, r4
 8015108:	4420      	add	r0, r4
 801510a:	b29b      	uxth	r3, r3
 801510c:	b289      	uxth	r1, r1
 801510e:	fb03 f901 	mul.w	r9, r3, r1
 8015112:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015116:	011b      	lsls	r3, r3, #4
 8015118:	b289      	uxth	r1, r1
 801511a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801511e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015122:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015124:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8015128:	f8b6 e000 	ldrh.w	lr, [r6]
 801512c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8015130:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015134:	eba3 0309 	sub.w	r3, r3, r9
 8015138:	b29b      	uxth	r3, r3
 801513a:	eba8 0801 	sub.w	r8, r8, r1
 801513e:	fa1f f888 	uxth.w	r8, r8
 8015142:	435f      	muls	r7, r3
 8015144:	fb08 770b 	mla	r7, r8, fp, r7
 8015148:	f892 b002 	ldrb.w	fp, [r2, #2]
 801514c:	9310      	str	r3, [sp, #64]	; 0x40
 801514e:	fb01 770b 	mla	r7, r1, fp, r7
 8015152:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015156:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015158:	fb09 770b 	mla	r7, r9, fp, r7
 801515c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015160:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015164:	fb1b fb03 	smulbb	fp, fp, r3
 8015168:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801516c:	fb07 b706 	mla	r7, r7, r6, fp
 8015170:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015172:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015176:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801517a:	f89c c000 	ldrb.w	ip, [ip]
 801517e:	435d      	muls	r5, r3
 8015180:	fb08 550b 	mla	r5, r8, fp, r5
 8015184:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015188:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801518a:	fb01 550b 	mla	r5, r1, fp, r5
 801518e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015192:	fb09 550b 	mla	r5, r9, fp, r5
 8015196:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801519a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801519e:	fb1b fb03 	smulbb	fp, fp, r3
 80151a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80151a4:	fb03 f30c 	mul.w	r3, r3, ip
 80151a8:	f892 c000 	ldrb.w	ip, [r2]
 80151ac:	fb08 330a 	mla	r3, r8, sl, r3
 80151b0:	fb01 330c 	mla	r3, r1, ip, r3
 80151b4:	f890 c000 	ldrb.w	ip, [r0]
 80151b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80151bc:	fb09 3c0c 	mla	ip, r9, ip, r3
 80151c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80151c2:	fa5f fe8e 	uxtb.w	lr, lr
 80151c6:	b2bf      	uxth	r7, r7
 80151c8:	fb1e fe03 	smulbb	lr, lr, r3
 80151cc:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80151d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80151d4:	fb05 b506 	mla	r5, r5, r6, fp
 80151d8:	1c7b      	adds	r3, r7, #1
 80151da:	fb0c e606 	mla	r6, ip, r6, lr
 80151de:	b2ad      	uxth	r5, r5
 80151e0:	b2b6      	uxth	r6, r6
 80151e2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80151e6:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80151ea:	f105 0b01 	add.w	fp, r5, #1
 80151ee:	1c77      	adds	r7, r6, #1
 80151f0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80151f4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80151f8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80151fc:	096d      	lsrs	r5, r5, #5
 80151fe:	431f      	orrs	r7, r3
 8015200:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015204:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015206:	433d      	orrs	r5, r7
 8015208:	801d      	strh	r5, [r3, #0]
 801520a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801520c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801520e:	3302      	adds	r3, #2
 8015210:	930c      	str	r3, [sp, #48]	; 0x30
 8015212:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015214:	4413      	add	r3, r2
 8015216:	9327      	str	r3, [sp, #156]	; 0x9c
 8015218:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801521a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801521c:	4413      	add	r3, r2
 801521e:	9328      	str	r3, [sp, #160]	; 0xa0
 8015220:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015222:	3b01      	subs	r3, #1
 8015224:	9311      	str	r3, [sp, #68]	; 0x44
 8015226:	e732      	b.n	801508e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015228:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801522a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801522c:	4433      	add	r3, r6
 801522e:	9327      	str	r3, [sp, #156]	; 0x9c
 8015230:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8015232:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015234:	4433      	add	r3, r6
 8015236:	9328      	str	r3, [sp, #160]	; 0xa0
 8015238:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801523a:	3b01      	subs	r3, #1
 801523c:	9309      	str	r3, [sp, #36]	; 0x24
 801523e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015240:	3302      	adds	r3, #2
 8015242:	930a      	str	r3, [sp, #40]	; 0x28
 8015244:	e702      	b.n	801504c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015246:	d027      	beq.n	8015298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015248:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801524a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801524c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801524e:	3b01      	subs	r3, #1
 8015250:	fb00 5003 	mla	r0, r0, r3, r5
 8015254:	1400      	asrs	r0, r0, #16
 8015256:	f53f af16 	bmi.w	8015086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801525a:	3901      	subs	r1, #1
 801525c:	4288      	cmp	r0, r1
 801525e:	f6bf af12 	bge.w	8015086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015262:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015264:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015266:	fb01 0303 	mla	r3, r1, r3, r0
 801526a:	141b      	asrs	r3, r3, #16
 801526c:	f53f af0b 	bmi.w	8015086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015270:	3a01      	subs	r2, #1
 8015272:	4293      	cmp	r3, r2
 8015274:	f6bf af07 	bge.w	8015086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015278:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801527a:	9311      	str	r3, [sp, #68]	; 0x44
 801527c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8015280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015282:	930c      	str	r3, [sp, #48]	; 0x30
 8015284:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015286:	2b00      	cmp	r3, #0
 8015288:	dc70      	bgt.n	801536c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801528a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801528c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801528e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015292:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015296:	930a      	str	r3, [sp, #40]	; 0x28
 8015298:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801529a:	2b00      	cmp	r3, #0
 801529c:	f340 8124 	ble.w	80154e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80152a0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80152a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80152a8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80152ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80152ae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80152b2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80152b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80152ba:	eef0 6a48 	vmov.f32	s13, s16
 80152be:	ee69 7a27 	vmul.f32	s15, s18, s15
 80152c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80152c6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80152ca:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80152ce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80152d2:	eef0 6a68 	vmov.f32	s13, s17
 80152d6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80152da:	ee18 2a10 	vmov	r2, s16
 80152de:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80152e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80152e6:	ee18 2a90 	vmov	r2, s17
 80152ea:	9329      	str	r3, [sp, #164]	; 0xa4
 80152ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80152ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80152f2:	932a      	str	r3, [sp, #168]	; 0xa8
 80152f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80152f8:	3b01      	subs	r3, #1
 80152fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80152fe:	930e      	str	r3, [sp, #56]	; 0x38
 8015300:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015302:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8015306:	bf08      	it	eq
 8015308:	4613      	moveq	r3, r2
 801530a:	9309      	str	r3, [sp, #36]	; 0x24
 801530c:	eef0 8a67 	vmov.f32	s17, s15
 8015310:	eeb0 8a47 	vmov.f32	s16, s14
 8015314:	e68c      	b.n	8015030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015316:	b149      	cbz	r1, 801532c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8015318:	5cb2      	ldrb	r2, [r6, r2]
 801531a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801531e:	4422      	add	r2, r4
 8015320:	4628      	mov	r0, r5
 8015322:	46ac      	mov	ip, r5
 8015324:	e6f1      	b.n	801510a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015326:	4628      	mov	r0, r5
 8015328:	462a      	mov	r2, r5
 801532a:	e6ee      	b.n	801510a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801532c:	4628      	mov	r0, r5
 801532e:	462a      	mov	r2, r5
 8015330:	e7f7      	b.n	8015322 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8015332:	1c47      	adds	r7, r0, #1
 8015334:	f53f af69 	bmi.w	801520a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015338:	42ba      	cmp	r2, r7
 801533a:	f6ff af66 	blt.w	801520a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801533e:	1c6f      	adds	r7, r5, #1
 8015340:	f53f af63 	bmi.w	801520a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015344:	42be      	cmp	r6, r7
 8015346:	f6ff af60 	blt.w	801520a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801534a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801534c:	9002      	str	r0, [sp, #8]
 801534e:	b236      	sxth	r6, r6
 8015350:	b212      	sxth	r2, r2
 8015352:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015356:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801535a:	9200      	str	r2, [sp, #0]
 801535c:	9601      	str	r6, [sp, #4]
 801535e:	4623      	mov	r3, r4
 8015360:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015364:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015366:	f7ff fd49 	bl	8014dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801536a:	e74e      	b.n	801520a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801536c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801536e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015370:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015372:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015374:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015378:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801537a:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801537e:	142d      	asrs	r5, r5, #16
 8015380:	1400      	asrs	r0, r0, #16
 8015382:	fb02 5000 	mla	r0, r2, r0, r5
 8015386:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015388:	f815 9000 	ldrb.w	r9, [r5, r0]
 801538c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015390:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015394:	182e      	adds	r6, r5, r0
 8015396:	eb04 0509 	add.w	r5, r4, r9
 801539a:	2b00      	cmp	r3, #0
 801539c:	f000 8096 	beq.w	80154cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80153a0:	7877      	ldrb	r7, [r6, #1]
 80153a2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80153a6:	4427      	add	r7, r4
 80153a8:	2900      	cmp	r1, #0
 80153aa:	f000 8097 	beq.w	80154dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 80153ae:	18b0      	adds	r0, r6, r2
 80153b0:	5cb2      	ldrb	r2, [r6, r2]
 80153b2:	7840      	ldrb	r0, [r0, #1]
 80153b4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80153b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80153bc:	4422      	add	r2, r4
 80153be:	4420      	add	r0, r4
 80153c0:	b29b      	uxth	r3, r3
 80153c2:	b289      	uxth	r1, r1
 80153c4:	fb03 f801 	mul.w	r8, r3, r1
 80153c8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80153ca:	f895 b002 	ldrb.w	fp, [r5, #2]
 80153ce:	f8b6 c000 	ldrh.w	ip, [r6]
 80153d2:	78be      	ldrb	r6, [r7, #2]
 80153d4:	f814 9009 	ldrb.w	r9, [r4, r9]
 80153d8:	011b      	lsls	r3, r3, #4
 80153da:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80153de:	b289      	uxth	r1, r1
 80153e0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80153e4:	eba3 0308 	sub.w	r3, r3, r8
 80153e8:	b29b      	uxth	r3, r3
 80153ea:	ebae 0e01 	sub.w	lr, lr, r1
 80153ee:	fa1f fe8e 	uxth.w	lr, lr
 80153f2:	435e      	muls	r6, r3
 80153f4:	fb0e 660b 	mla	r6, lr, fp, r6
 80153f8:	f892 b002 	ldrb.w	fp, [r2, #2]
 80153fc:	9310      	str	r3, [sp, #64]	; 0x40
 80153fe:	fb01 660b 	mla	r6, r1, fp, r6
 8015402:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015406:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015408:	fb08 660b 	mla	r6, r8, fp, r6
 801540c:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8015410:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015414:	fb1b fb03 	smulbb	fp, fp, r3
 8015418:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801541c:	fb06 b60a 	mla	r6, r6, sl, fp
 8015420:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015422:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015426:	787d      	ldrb	r5, [r7, #1]
 8015428:	783f      	ldrb	r7, [r7, #0]
 801542a:	435d      	muls	r5, r3
 801542c:	fb0e 550b 	mla	r5, lr, fp, r5
 8015430:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015434:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015436:	fb01 550b 	mla	r5, r1, fp, r5
 801543a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801543e:	fb08 550b 	mla	r5, r8, fp, r5
 8015442:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015446:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801544a:	fb1b fb03 	smulbb	fp, fp, r3
 801544e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015450:	437b      	muls	r3, r7
 8015452:	7817      	ldrb	r7, [r2, #0]
 8015454:	fb0e 3309 	mla	r3, lr, r9, r3
 8015458:	fb01 3307 	mla	r3, r1, r7, r3
 801545c:	7807      	ldrb	r7, [r0, #0]
 801545e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015462:	fb08 3707 	mla	r7, r8, r7, r3
 8015466:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015468:	fa5f fc8c 	uxtb.w	ip, ip
 801546c:	fb1c fc03 	smulbb	ip, ip, r3
 8015470:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015474:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015478:	fb05 b50a 	mla	r5, r5, sl, fp
 801547c:	fb07 c70a 	mla	r7, r7, sl, ip
 8015480:	b2b6      	uxth	r6, r6
 8015482:	b2ad      	uxth	r5, r5
 8015484:	b2bf      	uxth	r7, r7
 8015486:	1c73      	adds	r3, r6, #1
 8015488:	1c7a      	adds	r2, r7, #1
 801548a:	f105 0b01 	add.w	fp, r5, #1
 801548e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015492:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015496:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801549a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801549e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80154a2:	096d      	lsrs	r5, r5, #5
 80154a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80154a6:	4316      	orrs	r6, r2
 80154a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80154ac:	432e      	orrs	r6, r5
 80154ae:	f823 6b02 	strh.w	r6, [r3], #2
 80154b2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80154b4:	930c      	str	r3, [sp, #48]	; 0x30
 80154b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80154b8:	4413      	add	r3, r2
 80154ba:	9327      	str	r3, [sp, #156]	; 0x9c
 80154bc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80154be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80154c0:	4413      	add	r3, r2
 80154c2:	9328      	str	r3, [sp, #160]	; 0xa0
 80154c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80154c6:	3b01      	subs	r3, #1
 80154c8:	9311      	str	r3, [sp, #68]	; 0x44
 80154ca:	e6db      	b.n	8015284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80154cc:	b149      	cbz	r1, 80154e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80154ce:	5cb2      	ldrb	r2, [r6, r2]
 80154d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80154d4:	4422      	add	r2, r4
 80154d6:	4628      	mov	r0, r5
 80154d8:	462f      	mov	r7, r5
 80154da:	e771      	b.n	80153c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80154dc:	4628      	mov	r0, r5
 80154de:	462a      	mov	r2, r5
 80154e0:	e76e      	b.n	80153c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80154e2:	4628      	mov	r0, r5
 80154e4:	462a      	mov	r2, r5
 80154e6:	e7f7      	b.n	80154d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80154e8:	b015      	add	sp, #84	; 0x54
 80154ea:	ecbd 8b08 	vpop	{d8-d11}
 80154ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080154f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80154f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154f8:	880e      	ldrh	r6, [r1, #0]
 80154fa:	b085      	sub	sp, #20
 80154fc:	0230      	lsls	r0, r6, #8
 80154fe:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015502:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8015506:	0170      	lsls	r0, r6, #5
 8015508:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801550c:	9101      	str	r1, [sp, #4]
 801550e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015512:	00f6      	lsls	r6, r6, #3
 8015514:	ea4b 0000 	orr.w	r0, fp, r0
 8015518:	b2f6      	uxtb	r6, r6
 801551a:	4691      	mov	r9, r2
 801551c:	fb05 7a0c 	mla	sl, r5, ip, r7
 8015520:	4306      	orrs	r6, r0
 8015522:	2d00      	cmp	r5, #0
 8015524:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015528:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 801552c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015530:	9603      	str	r6, [sp, #12]
 8015532:	eb09 0e0a 	add.w	lr, r9, sl
 8015536:	db42      	blt.n	80155be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015538:	45a8      	cmp	r8, r5
 801553a:	dd40      	ble.n	80155be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801553c:	2f00      	cmp	r7, #0
 801553e:	db3c      	blt.n	80155ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015540:	45bc      	cmp	ip, r7
 8015542:	dd3a      	ble.n	80155ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015544:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015548:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801554c:	441e      	add	r6, r3
 801554e:	1c78      	adds	r0, r7, #1
 8015550:	d438      	bmi.n	80155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015552:	4584      	cmp	ip, r0
 8015554:	dd36      	ble.n	80155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015556:	b3aa      	cbz	r2, 80155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015558:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801555c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015560:	4418      	add	r0, r3
 8015562:	3501      	adds	r5, #1
 8015564:	d432      	bmi.n	80155cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015566:	45a8      	cmp	r8, r5
 8015568:	dd30      	ble.n	80155cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801556a:	b37c      	cbz	r4, 80155cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801556c:	2f00      	cmp	r7, #0
 801556e:	db2b      	blt.n	80155c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015570:	45bc      	cmp	ip, r7
 8015572:	dd29      	ble.n	80155c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015574:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015578:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801557c:	441d      	add	r5, r3
 801557e:	3701      	adds	r7, #1
 8015580:	d427      	bmi.n	80155d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015582:	45bc      	cmp	ip, r7
 8015584:	dd25      	ble.n	80155d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015586:	b322      	cbz	r2, 80155d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015588:	44f4      	add	ip, lr
 801558a:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801558e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015592:	443b      	add	r3, r7
 8015594:	781f      	ldrb	r7, [r3, #0]
 8015596:	f896 9000 	ldrb.w	r9, [r6]
 801559a:	f890 a000 	ldrb.w	sl, [r0]
 801559e:	f895 8000 	ldrb.w	r8, [r5]
 80155a2:	2a0f      	cmp	r2, #15
 80155a4:	4639      	mov	r1, r7
 80155a6:	d801      	bhi.n	80155ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 80155a8:	2c0f      	cmp	r4, #15
 80155aa:	d914      	bls.n	80155d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 80155ac:	4b2c      	ldr	r3, [pc, #176]	; (8015660 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80155ae:	4a2d      	ldr	r2, [pc, #180]	; (8015664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80155b0:	482d      	ldr	r0, [pc, #180]	; (8015668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 80155b2:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 80155b6:	f005 ff77 	bl	801b4a8 <__assert_func>
 80155ba:	ae03      	add	r6, sp, #12
 80155bc:	e7c7      	b.n	801554e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 80155be:	a803      	add	r0, sp, #12
 80155c0:	4606      	mov	r6, r0
 80155c2:	e7ce      	b.n	8015562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80155c4:	a803      	add	r0, sp, #12
 80155c6:	e7cc      	b.n	8015562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80155c8:	ad03      	add	r5, sp, #12
 80155ca:	e7d8      	b.n	801557e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 80155cc:	ab03      	add	r3, sp, #12
 80155ce:	461d      	mov	r5, r3
 80155d0:	e7e0      	b.n	8015594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 80155d2:	ab03      	add	r3, sp, #12
 80155d4:	e7de      	b.n	8015594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 80155d6:	b292      	uxth	r2, r2
 80155d8:	b2a4      	uxth	r4, r4
 80155da:	fb02 fe04 	mul.w	lr, r2, r4
 80155de:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 80155e2:	0112      	lsls	r2, r2, #4
 80155e4:	b2a4      	uxth	r4, r4
 80155e6:	f890 c002 	ldrb.w	ip, [r0, #2]
 80155ea:	f896 b002 	ldrb.w	fp, [r6, #2]
 80155ee:	7840      	ldrb	r0, [r0, #1]
 80155f0:	7876      	ldrb	r6, [r6, #1]
 80155f2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80155f6:	eba2 020e 	sub.w	r2, r2, lr
 80155fa:	b292      	uxth	r2, r2
 80155fc:	1b3f      	subs	r7, r7, r4
 80155fe:	b2bf      	uxth	r7, r7
 8015600:	fb02 fc0c 	mul.w	ip, r2, ip
 8015604:	fb07 cc0b 	mla	ip, r7, fp, ip
 8015608:	f895 b002 	ldrb.w	fp, [r5, #2]
 801560c:	fb04 cc0b 	mla	ip, r4, fp, ip
 8015610:	f893 b002 	ldrb.w	fp, [r3, #2]
 8015614:	785b      	ldrb	r3, [r3, #1]
 8015616:	fb0e cc0b 	mla	ip, lr, fp, ip
 801561a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801561e:	fb02 fc0a 	mul.w	ip, r2, sl
 8015622:	4342      	muls	r2, r0
 8015624:	7868      	ldrb	r0, [r5, #1]
 8015626:	fb07 cc09 	mla	ip, r7, r9, ip
 801562a:	fb07 2206 	mla	r2, r7, r6, r2
 801562e:	fb04 cc08 	mla	ip, r4, r8, ip
 8015632:	fb04 2400 	mla	r4, r4, r0, r2
 8015636:	fb0e cc01 	mla	ip, lr, r1, ip
 801563a:	fb0e 4e03 	mla	lr, lr, r3, r4
 801563e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015642:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015646:	ea4c 0c0b 	orr.w	ip, ip, fp
 801564a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801564e:	9b01      	ldr	r3, [sp, #4]
 8015650:	ea4c 0c0e 	orr.w	ip, ip, lr
 8015654:	f8a3 c000 	strh.w	ip, [r3]
 8015658:	b005      	add	sp, #20
 801565a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801565e:	bf00      	nop
 8015660:	0801f576 	.word	0x0801f576
 8015664:	0801fb42 	.word	0x0801fb42
 8015668:	0801f5fa 	.word	0x0801f5fa

0801566c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801566c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015670:	ed2d 8b08 	vpush	{d8-d11}
 8015674:	b08f      	sub	sp, #60	; 0x3c
 8015676:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801567a:	920c      	str	r2, [sp, #48]	; 0x30
 801567c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801567e:	910a      	str	r1, [sp, #40]	; 0x28
 8015680:	9306      	str	r3, [sp, #24]
 8015682:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8015686:	900d      	str	r0, [sp, #52]	; 0x34
 8015688:	6850      	ldr	r0, [r2, #4]
 801568a:	6812      	ldr	r2, [r2, #0]
 801568c:	fb00 1303 	mla	r3, r0, r3, r1
 8015690:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015694:	9307      	str	r3, [sp, #28]
 8015696:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015698:	681b      	ldr	r3, [r3, #0]
 801569a:	9308      	str	r3, [sp, #32]
 801569c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801569e:	685c      	ldr	r4, [r3, #4]
 80156a0:	eeb0 aa40 	vmov.f32	s20, s0
 80156a4:	eef0 9a60 	vmov.f32	s19, s1
 80156a8:	eeb0 9a41 	vmov.f32	s18, s2
 80156ac:	eeb0 8a62 	vmov.f32	s16, s5
 80156b0:	eef0 8a43 	vmov.f32	s17, s6
 80156b4:	eef0 ba44 	vmov.f32	s23, s8
 80156b8:	eeb0 ba64 	vmov.f32	s22, s9
 80156bc:	eef0 aa45 	vmov.f32	s21, s10
 80156c0:	3404      	adds	r4, #4
 80156c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80156c4:	2b00      	cmp	r3, #0
 80156c6:	dc03      	bgt.n	80156d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80156c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80156ca:	2b00      	cmp	r3, #0
 80156cc:	f340 81d6 	ble.w	8015a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80156d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80156d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80156d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80156da:	1e48      	subs	r0, r1, #1
 80156dc:	1e56      	subs	r6, r2, #1
 80156de:	9b06      	ldr	r3, [sp, #24]
 80156e0:	2b00      	cmp	r3, #0
 80156e2:	f340 80b7 	ble.w	8015854 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80156e6:	ea5f 472b 	movs.w	r7, fp, asr #16
 80156ea:	ea4f 4325 	mov.w	r3, r5, asr #16
 80156ee:	d406      	bmi.n	80156fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80156f0:	4287      	cmp	r7, r0
 80156f2:	da04      	bge.n	80156fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80156f4:	2b00      	cmp	r3, #0
 80156f6:	db02      	blt.n	80156fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80156f8:	42b3      	cmp	r3, r6
 80156fa:	f2c0 80ac 	blt.w	8015856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80156fe:	3701      	adds	r7, #1
 8015700:	f100 809d 	bmi.w	801583e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015704:	42b9      	cmp	r1, r7
 8015706:	f2c0 809a 	blt.w	801583e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801570a:	3301      	adds	r3, #1
 801570c:	f100 8097 	bmi.w	801583e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015710:	429a      	cmp	r2, r3
 8015712:	f2c0 8094 	blt.w	801583e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015716:	9b06      	ldr	r3, [sp, #24]
 8015718:	930b      	str	r3, [sp, #44]	; 0x2c
 801571a:	9b07      	ldr	r3, [sp, #28]
 801571c:	9309      	str	r3, [sp, #36]	; 0x24
 801571e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015720:	2b00      	cmp	r3, #0
 8015722:	f340 80b5 	ble.w	8015890 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8015726:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015728:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801572a:	68c7      	ldr	r7, [r0, #12]
 801572c:	6892      	ldr	r2, [r2, #8]
 801572e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015732:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015736:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801573a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801573e:	f100 80fb 	bmi.w	8015938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015742:	f102 3cff 	add.w	ip, r2, #4294967295
 8015746:	4560      	cmp	r0, ip
 8015748:	f280 80f6 	bge.w	8015938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801574c:	2e00      	cmp	r6, #0
 801574e:	f2c0 80f3 	blt.w	8015938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015752:	f107 3cff 	add.w	ip, r7, #4294967295
 8015756:	4566      	cmp	r6, ip
 8015758:	f280 80ee 	bge.w	8015938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801575c:	b212      	sxth	r2, r2
 801575e:	fb06 0002 	mla	r0, r6, r2, r0
 8015762:	9e08      	ldr	r6, [sp, #32]
 8015764:	1837      	adds	r7, r6, r0
 8015766:	5c30      	ldrb	r0, [r6, r0]
 8015768:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801576c:	eb04 0c08 	add.w	ip, r4, r8
 8015770:	2b00      	cmp	r3, #0
 8015772:	f000 80d3 	beq.w	801591c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015776:	787e      	ldrb	r6, [r7, #1]
 8015778:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801577c:	4426      	add	r6, r4
 801577e:	2900      	cmp	r1, #0
 8015780:	f000 80d4 	beq.w	801592c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015784:	18b8      	adds	r0, r7, r2
 8015786:	5cba      	ldrb	r2, [r7, r2]
 8015788:	7840      	ldrb	r0, [r0, #1]
 801578a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801578e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015792:	4422      	add	r2, r4
 8015794:	4420      	add	r0, r4
 8015796:	b29b      	uxth	r3, r3
 8015798:	b289      	uxth	r1, r1
 801579a:	fb03 f901 	mul.w	r9, r3, r1
 801579e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80157a2:	011b      	lsls	r3, r3, #4
 80157a4:	b289      	uxth	r1, r1
 80157a6:	78b7      	ldrb	r7, [r6, #2]
 80157a8:	f89c a002 	ldrb.w	sl, [ip, #2]
 80157ac:	f89c c001 	ldrb.w	ip, [ip, #1]
 80157b0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80157b4:	eba3 0309 	sub.w	r3, r3, r9
 80157b8:	b29b      	uxth	r3, r3
 80157ba:	ebae 0e01 	sub.w	lr, lr, r1
 80157be:	fa1f fe8e 	uxth.w	lr, lr
 80157c2:	435f      	muls	r7, r3
 80157c4:	fb0e 770a 	mla	r7, lr, sl, r7
 80157c8:	f892 a002 	ldrb.w	sl, [r2, #2]
 80157cc:	fb01 770a 	mla	r7, r1, sl, r7
 80157d0:	f890 a002 	ldrb.w	sl, [r0, #2]
 80157d4:	fb09 7a0a 	mla	sl, r9, sl, r7
 80157d8:	f814 7008 	ldrb.w	r7, [r4, r8]
 80157dc:	f896 8000 	ldrb.w	r8, [r6]
 80157e0:	7876      	ldrb	r6, [r6, #1]
 80157e2:	fb03 f808 	mul.w	r8, r3, r8
 80157e6:	fb0e 8807 	mla	r8, lr, r7, r8
 80157ea:	7817      	ldrb	r7, [r2, #0]
 80157ec:	fb01 8807 	mla	r8, r1, r7, r8
 80157f0:	7807      	ldrb	r7, [r0, #0]
 80157f2:	fb09 8707 	mla	r7, r9, r7, r8
 80157f6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80157fa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80157fe:	ea47 070a 	orr.w	r7, r7, sl
 8015802:	4373      	muls	r3, r6
 8015804:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015808:	fb0e 330c 	mla	r3, lr, ip, r3
 801580c:	fb01 310a 	mla	r1, r1, sl, r3
 8015810:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015814:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015816:	fb09 1a0a 	mla	sl, r9, sl, r1
 801581a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801581e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015822:	ea47 070a 	orr.w	r7, r7, sl
 8015826:	801f      	strh	r7, [r3, #0]
 8015828:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801582a:	3302      	adds	r3, #2
 801582c:	9309      	str	r3, [sp, #36]	; 0x24
 801582e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015830:	449b      	add	fp, r3
 8015832:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015834:	441d      	add	r5, r3
 8015836:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015838:	3b01      	subs	r3, #1
 801583a:	930b      	str	r3, [sp, #44]	; 0x2c
 801583c:	e76f      	b.n	801571e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801583e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015840:	449b      	add	fp, r3
 8015842:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015844:	441d      	add	r5, r3
 8015846:	9b06      	ldr	r3, [sp, #24]
 8015848:	3b01      	subs	r3, #1
 801584a:	9306      	str	r3, [sp, #24]
 801584c:	9b07      	ldr	r3, [sp, #28]
 801584e:	3302      	adds	r3, #2
 8015850:	9307      	str	r3, [sp, #28]
 8015852:	e744      	b.n	80156de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015854:	d023      	beq.n	801589e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015856:	9b06      	ldr	r3, [sp, #24]
 8015858:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801585a:	3b01      	subs	r3, #1
 801585c:	fb00 b003 	mla	r0, r0, r3, fp
 8015860:	1400      	asrs	r0, r0, #16
 8015862:	f53f af58 	bmi.w	8015716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015866:	3901      	subs	r1, #1
 8015868:	4288      	cmp	r0, r1
 801586a:	f6bf af54 	bge.w	8015716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801586e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8015870:	fb01 5303 	mla	r3, r1, r3, r5
 8015874:	141b      	asrs	r3, r3, #16
 8015876:	f53f af4e 	bmi.w	8015716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801587a:	3a01      	subs	r2, #1
 801587c:	4293      	cmp	r3, r2
 801587e:	f6bf af4a 	bge.w	8015716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015882:	9b06      	ldr	r3, [sp, #24]
 8015884:	9309      	str	r3, [sp, #36]	; 0x24
 8015886:	9b07      	ldr	r3, [sp, #28]
 8015888:	930b      	str	r3, [sp, #44]	; 0x2c
 801588a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801588c:	2b00      	cmp	r3, #0
 801588e:	dc70      	bgt.n	8015972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8015890:	9b06      	ldr	r3, [sp, #24]
 8015892:	9a07      	ldr	r2, [sp, #28]
 8015894:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015898:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801589c:	9307      	str	r3, [sp, #28]
 801589e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80158a0:	2b00      	cmp	r3, #0
 80158a2:	f340 80eb 	ble.w	8015a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80158a6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80158aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80158ae:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80158b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80158b4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80158b8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80158bc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80158c0:	eef0 6a48 	vmov.f32	s13, s16
 80158c4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80158c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80158cc:	ee37 8a48 	vsub.f32	s16, s14, s16
 80158d0:	ee16 ba90 	vmov	fp, s13
 80158d4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80158d8:	eef0 6a68 	vmov.f32	s13, s17
 80158dc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80158e0:	ee18 2a10 	vmov	r2, s16
 80158e4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80158e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80158ec:	ee18 2a90 	vmov	r2, s17
 80158f0:	9323      	str	r3, [sp, #140]	; 0x8c
 80158f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80158f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80158f8:	9324      	str	r3, [sp, #144]	; 0x90
 80158fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80158fc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80158fe:	3b01      	subs	r3, #1
 8015900:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015904:	930a      	str	r3, [sp, #40]	; 0x28
 8015906:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015908:	bf08      	it	eq
 801590a:	4613      	moveq	r3, r2
 801590c:	ee16 5a90 	vmov	r5, s13
 8015910:	9306      	str	r3, [sp, #24]
 8015912:	eef0 8a67 	vmov.f32	s17, s15
 8015916:	eeb0 8a47 	vmov.f32	s16, s14
 801591a:	e6d2      	b.n	80156c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801591c:	b149      	cbz	r1, 8015932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 801591e:	5cba      	ldrb	r2, [r7, r2]
 8015920:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015924:	4422      	add	r2, r4
 8015926:	4660      	mov	r0, ip
 8015928:	4666      	mov	r6, ip
 801592a:	e734      	b.n	8015796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801592c:	4660      	mov	r0, ip
 801592e:	4662      	mov	r2, ip
 8015930:	e731      	b.n	8015796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015932:	4660      	mov	r0, ip
 8015934:	4662      	mov	r2, ip
 8015936:	e7f7      	b.n	8015928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015938:	f110 0c01 	adds.w	ip, r0, #1
 801593c:	f53f af74 	bmi.w	8015828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015940:	4562      	cmp	r2, ip
 8015942:	f6ff af71 	blt.w	8015828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015946:	f116 0c01 	adds.w	ip, r6, #1
 801594a:	f53f af6d 	bmi.w	8015828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801594e:	4567      	cmp	r7, ip
 8015950:	f6ff af6a 	blt.w	8015828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015954:	b23f      	sxth	r7, r7
 8015956:	b212      	sxth	r2, r2
 8015958:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801595c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8015960:	9200      	str	r2, [sp, #0]
 8015962:	9701      	str	r7, [sp, #4]
 8015964:	4623      	mov	r3, r4
 8015966:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801596a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801596c:	f7ff fdc2 	bl	80154f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015970:	e75a      	b.n	8015828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015972:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015974:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015978:	ea4f 462b 	mov.w	r6, fp, asr #16
 801597c:	1428      	asrs	r0, r5, #16
 801597e:	fb02 6000 	mla	r0, r2, r0, r6
 8015982:	9e08      	ldr	r6, [sp, #32]
 8015984:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015988:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801598c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015990:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015994:	1837      	adds	r7, r6, r0
 8015996:	eb04 0c08 	add.w	ip, r4, r8
 801599a:	2b00      	cmp	r3, #0
 801599c:	d060      	beq.n	8015a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801599e:	787e      	ldrb	r6, [r7, #1]
 80159a0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80159a4:	4426      	add	r6, r4
 80159a6:	2900      	cmp	r1, #0
 80159a8:	d062      	beq.n	8015a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 80159aa:	18b8      	adds	r0, r7, r2
 80159ac:	5cba      	ldrb	r2, [r7, r2]
 80159ae:	7840      	ldrb	r0, [r0, #1]
 80159b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80159b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80159b8:	4422      	add	r2, r4
 80159ba:	4420      	add	r0, r4
 80159bc:	b29b      	uxth	r3, r3
 80159be:	b289      	uxth	r1, r1
 80159c0:	fb03 f901 	mul.w	r9, r3, r1
 80159c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80159c8:	011b      	lsls	r3, r3, #4
 80159ca:	b289      	uxth	r1, r1
 80159cc:	78b7      	ldrb	r7, [r6, #2]
 80159ce:	f89c a002 	ldrb.w	sl, [ip, #2]
 80159d2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80159d6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80159da:	eba3 0309 	sub.w	r3, r3, r9
 80159de:	b29b      	uxth	r3, r3
 80159e0:	ebae 0e01 	sub.w	lr, lr, r1
 80159e4:	fa1f fe8e 	uxth.w	lr, lr
 80159e8:	435f      	muls	r7, r3
 80159ea:	fb0e 770a 	mla	r7, lr, sl, r7
 80159ee:	f892 a002 	ldrb.w	sl, [r2, #2]
 80159f2:	fb01 770a 	mla	r7, r1, sl, r7
 80159f6:	f890 a002 	ldrb.w	sl, [r0, #2]
 80159fa:	fb09 7a0a 	mla	sl, r9, sl, r7
 80159fe:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015a02:	f896 8000 	ldrb.w	r8, [r6]
 8015a06:	7876      	ldrb	r6, [r6, #1]
 8015a08:	fb03 f808 	mul.w	r8, r3, r8
 8015a0c:	fb0e 8807 	mla	r8, lr, r7, r8
 8015a10:	7817      	ldrb	r7, [r2, #0]
 8015a12:	fb01 8807 	mla	r8, r1, r7, r8
 8015a16:	7807      	ldrb	r7, [r0, #0]
 8015a18:	fb09 8707 	mla	r7, r9, r7, r8
 8015a1c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015a20:	4373      	muls	r3, r6
 8015a22:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015a26:	7856      	ldrb	r6, [r2, #1]
 8015a28:	ea47 070a 	orr.w	r7, r7, sl
 8015a2c:	fb0e 330c 	mla	r3, lr, ip, r3
 8015a30:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015a34:	fb01 3306 	mla	r3, r1, r6, r3
 8015a38:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015a3c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015a40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015a42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015a46:	ea47 070a 	orr.w	r7, r7, sl
 8015a4a:	f823 7b02 	strh.w	r7, [r3], #2
 8015a4e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015a50:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015a52:	449b      	add	fp, r3
 8015a54:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015a56:	441d      	add	r5, r3
 8015a58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015a5a:	3b01      	subs	r3, #1
 8015a5c:	9309      	str	r3, [sp, #36]	; 0x24
 8015a5e:	e714      	b.n	801588a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8015a60:	b149      	cbz	r1, 8015a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8015a62:	5cba      	ldrb	r2, [r7, r2]
 8015a64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a68:	4422      	add	r2, r4
 8015a6a:	4660      	mov	r0, ip
 8015a6c:	4666      	mov	r6, ip
 8015a6e:	e7a5      	b.n	80159bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015a70:	4660      	mov	r0, ip
 8015a72:	4662      	mov	r2, ip
 8015a74:	e7a2      	b.n	80159bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015a76:	4660      	mov	r0, ip
 8015a78:	4662      	mov	r2, ip
 8015a7a:	e7f7      	b.n	8015a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8015a7c:	b00f      	add	sp, #60	; 0x3c
 8015a7e:	ecbd 8b08 	vpop	{d8-d11}
 8015a82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015a88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8015a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a8c:	880e      	ldrh	r6, [r1, #0]
 8015a8e:	b085      	sub	sp, #20
 8015a90:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8015a94:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015a98:	4691      	mov	r9, r2
 8015a9a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015a9e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015aa2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8015aa6:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015aaa:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8015aae:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8015ab2:	9200      	str	r2, [sp, #0]
 8015ab4:	00f6      	lsls	r6, r6, #3
 8015ab6:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8015aba:	9201      	str	r2, [sp, #4]
 8015abc:	2c00      	cmp	r4, #0
 8015abe:	b2f2      	uxtb	r2, r6
 8015ac0:	fb04 560c 	mla	r6, r4, ip, r5
 8015ac4:	9202      	str	r2, [sp, #8]
 8015ac6:	eb09 0e06 	add.w	lr, r9, r6
 8015aca:	db3e      	blt.n	8015b4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8015acc:	45a0      	cmp	r8, r4
 8015ace:	dd3c      	ble.n	8015b4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8015ad0:	2d00      	cmp	r5, #0
 8015ad2:	db38      	blt.n	8015b46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015ad4:	45ac      	cmp	ip, r5
 8015ad6:	dd36      	ble.n	8015b46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015ad8:	f819 2006 	ldrb.w	r2, [r9, r6]
 8015adc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015ae0:	1c6e      	adds	r6, r5, #1
 8015ae2:	d435      	bmi.n	8015b50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8015ae4:	45b4      	cmp	ip, r6
 8015ae6:	dd33      	ble.n	8015b50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8015ae8:	b3a0      	cbz	r0, 8015b54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8015aea:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015aee:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8015af2:	3401      	adds	r4, #1
 8015af4:	d432      	bmi.n	8015b5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8015af6:	45a0      	cmp	r8, r4
 8015af8:	dd30      	ble.n	8015b5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8015afa:	b397      	cbz	r7, 8015b62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8015afc:	2d00      	cmp	r5, #0
 8015afe:	db2b      	blt.n	8015b58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015b00:	45ac      	cmp	ip, r5
 8015b02:	dd29      	ble.n	8015b58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015b04:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8015b08:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015b0c:	3501      	adds	r5, #1
 8015b0e:	d42b      	bmi.n	8015b68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8015b10:	45ac      	cmp	ip, r5
 8015b12:	dd29      	ble.n	8015b68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8015b14:	b350      	cbz	r0, 8015b6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8015b16:	44f4      	add	ip, lr
 8015b18:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015b1c:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8015b20:	280f      	cmp	r0, #15
 8015b22:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015b26:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015b2a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015b2e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8015b32:	d801      	bhi.n	8015b38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8015b34:	2f0f      	cmp	r7, #15
 8015b36:	d91b      	bls.n	8015b70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8015b38:	4b84      	ldr	r3, [pc, #528]	; (8015d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8015b3a:	4a85      	ldr	r2, [pc, #532]	; (8015d50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8015b3c:	4885      	ldr	r0, [pc, #532]	; (8015d54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8015b3e:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8015b42:	f005 fcb1 	bl	801b4a8 <__assert_func>
 8015b46:	2200      	movs	r2, #0
 8015b48:	e7ca      	b.n	8015ae0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8015b4a:	2600      	movs	r6, #0
 8015b4c:	4632      	mov	r2, r6
 8015b4e:	e7d0      	b.n	8015af2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015b50:	2600      	movs	r6, #0
 8015b52:	e7ce      	b.n	8015af2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015b54:	4606      	mov	r6, r0
 8015b56:	e7cc      	b.n	8015af2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015b58:	2400      	movs	r4, #0
 8015b5a:	e7d7      	b.n	8015b0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8015b5c:	2300      	movs	r3, #0
 8015b5e:	461c      	mov	r4, r3
 8015b60:	e7de      	b.n	8015b20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015b62:	463b      	mov	r3, r7
 8015b64:	463c      	mov	r4, r7
 8015b66:	e7db      	b.n	8015b20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015b68:	2300      	movs	r3, #0
 8015b6a:	e7d9      	b.n	8015b20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015b6c:	4603      	mov	r3, r0
 8015b6e:	e7d7      	b.n	8015b20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015b70:	b280      	uxth	r0, r0
 8015b72:	b2bf      	uxth	r7, r7
 8015b74:	fb00 fe07 	mul.w	lr, r0, r7
 8015b78:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015b7c:	0100      	lsls	r0, r0, #4
 8015b7e:	eba0 0c0e 	sub.w	ip, r0, lr
 8015b82:	b2bf      	uxth	r7, r7
 8015b84:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8015b88:	fa1f fc8c 	uxth.w	ip, ip
 8015b8c:	1bed      	subs	r5, r5, r7
 8015b8e:	b2ad      	uxth	r5, r5
 8015b90:	fb0c f00a 	mul.w	r0, ip, sl
 8015b94:	fb05 000b 	mla	r0, r5, fp, r0
 8015b98:	fb07 0009 	mla	r0, r7, r9, r0
 8015b9c:	fb0e 0008 	mla	r0, lr, r8, r0
 8015ba0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015ba4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015ba8:	9003      	str	r0, [sp, #12]
 8015baa:	d018      	beq.n	8015bde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8015bac:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015bb0:	fb0b f000 	mul.w	r0, fp, r0
 8015bb4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015bb8:	fb0b fb02 	mul.w	fp, fp, r2
 8015bbc:	0a02      	lsrs	r2, r0, #8
 8015bbe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015bc2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8015bc6:	4402      	add	r2, r0
 8015bc8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8015bcc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8015bd0:	0a12      	lsrs	r2, r2, #8
 8015bd2:	0a00      	lsrs	r0, r0, #8
 8015bd4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015bd8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015bdc:	4302      	orrs	r2, r0
 8015bde:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015be2:	d019      	beq.n	8015c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8015be4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015be8:	fb0a fb0b 	mul.w	fp, sl, fp
 8015bec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015bf0:	fb0a fa06 	mul.w	sl, sl, r6
 8015bf4:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015bf8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015bfc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015c00:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8015c04:	445e      	add	r6, fp
 8015c06:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8015c0a:	0a36      	lsrs	r6, r6, #8
 8015c0c:	0a00      	lsrs	r0, r0, #8
 8015c0e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015c12:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015c16:	4306      	orrs	r6, r0
 8015c18:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015c1c:	d019      	beq.n	8015c52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8015c1e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015c22:	fb09 fa0a 	mul.w	sl, r9, sl
 8015c26:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015c2a:	fb09 f904 	mul.w	r9, r9, r4
 8015c2e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015c32:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015c36:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015c3a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8015c3e:	4454      	add	r4, sl
 8015c40:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8015c44:	0a24      	lsrs	r4, r4, #8
 8015c46:	0a00      	lsrs	r0, r0, #8
 8015c48:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015c4c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015c50:	4304      	orrs	r4, r0
 8015c52:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015c56:	d019      	beq.n	8015c8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8015c58:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8015c5c:	fb08 f909 	mul.w	r9, r8, r9
 8015c60:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c64:	fb08 f803 	mul.w	r8, r8, r3
 8015c68:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8015c6c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015c70:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015c74:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8015c78:	444b      	add	r3, r9
 8015c7a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8015c7e:	0a1b      	lsrs	r3, r3, #8
 8015c80:	0a00      	lsrs	r0, r0, #8
 8015c82:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015c86:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015c8a:	4303      	orrs	r3, r0
 8015c8c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015c90:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015c94:	fb0c f808 	mul.w	r8, ip, r8
 8015c98:	fb05 8800 	mla	r8, r5, r0, r8
 8015c9c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8015ca0:	fb07 8800 	mla	r8, r7, r0, r8
 8015ca4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8015ca8:	fb0e 8000 	mla	r0, lr, r0, r8
 8015cac:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015cb0:	fb0c f606 	mul.w	r6, ip, r6
 8015cb4:	0a00      	lsrs	r0, r0, #8
 8015cb6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015cba:	fb05 6202 	mla	r2, r5, r2, r6
 8015cbe:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8015cc2:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8015cc6:	fb07 2700 	mla	r7, r7, r0, r2
 8015cca:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8015cce:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8015cd2:	9c03      	ldr	r4, [sp, #12]
 8015cd4:	9e01      	ldr	r6, [sp, #4]
 8015cd6:	b29b      	uxth	r3, r3
 8015cd8:	435c      	muls	r4, r3
 8015cda:	fb0e 7000 	mla	r0, lr, r0, r7
 8015cde:	1c62      	adds	r2, r4, #1
 8015ce0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015ce4:	0a00      	lsrs	r0, r0, #8
 8015ce6:	9c00      	ldr	r4, [sp, #0]
 8015ce8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015cec:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8015cf0:	ea48 0000 	orr.w	r0, r8, r0
 8015cf4:	b2d2      	uxtb	r2, r2
 8015cf6:	fb14 f402 	smulbb	r4, r4, r2
 8015cfa:	0c05      	lsrs	r5, r0, #16
 8015cfc:	fb05 4503 	mla	r5, r5, r3, r4
 8015d00:	fb16 f602 	smulbb	r6, r6, r2
 8015d04:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8015d08:	fb04 6403 	mla	r4, r4, r3, r6
 8015d0c:	9e02      	ldr	r6, [sp, #8]
 8015d0e:	b2c0      	uxtb	r0, r0
 8015d10:	fb16 f202 	smulbb	r2, r6, r2
 8015d14:	fb00 2303 	mla	r3, r0, r3, r2
 8015d18:	b2ad      	uxth	r5, r5
 8015d1a:	b298      	uxth	r0, r3
 8015d1c:	1c43      	adds	r3, r0, #1
 8015d1e:	1c6a      	adds	r2, r5, #1
 8015d20:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015d24:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015d28:	b2a4      	uxth	r4, r4
 8015d2a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8015d2e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015d32:	4313      	orrs	r3, r2
 8015d34:	1c62      	adds	r2, r4, #1
 8015d36:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015d3a:	0952      	lsrs	r2, r2, #5
 8015d3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015d40:	4313      	orrs	r3, r2
 8015d42:	800b      	strh	r3, [r1, #0]
 8015d44:	b005      	add	sp, #20
 8015d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d4a:	bf00      	nop
 8015d4c:	0801f576 	.word	0x0801f576
 8015d50:	0801fb42 	.word	0x0801fb42
 8015d54:	0801f5fa 	.word	0x0801f5fa

08015d58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d5c:	ed2d 8b08 	vpush	{d8-d11}
 8015d60:	b09f      	sub	sp, #124	; 0x7c
 8015d62:	eeb0 aa40 	vmov.f32	s20, s0
 8015d66:	921b      	str	r2, [sp, #108]	; 0x6c
 8015d68:	9309      	str	r3, [sp, #36]	; 0x24
 8015d6a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8015d6c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8015d70:	931c      	str	r3, [sp, #112]	; 0x70
 8015d72:	9119      	str	r1, [sp, #100]	; 0x64
 8015d74:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8015d78:	901d      	str	r0, [sp, #116]	; 0x74
 8015d7a:	6850      	ldr	r0, [r2, #4]
 8015d7c:	6812      	ldr	r2, [r2, #0]
 8015d7e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8015d80:	fb00 1303 	mla	r3, r0, r3, r1
 8015d84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015d88:	930c      	str	r3, [sp, #48]	; 0x30
 8015d8a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015d8c:	681b      	ldr	r3, [r3, #0]
 8015d8e:	9312      	str	r3, [sp, #72]	; 0x48
 8015d90:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015d92:	685e      	ldr	r6, [r3, #4]
 8015d94:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8015d98:	930d      	str	r3, [sp, #52]	; 0x34
 8015d9a:	eef0 9a60 	vmov.f32	s19, s1
 8015d9e:	eeb0 9a41 	vmov.f32	s18, s2
 8015da2:	eeb0 8a62 	vmov.f32	s16, s5
 8015da6:	eef0 8a43 	vmov.f32	s17, s6
 8015daa:	eef0 ba44 	vmov.f32	s23, s8
 8015dae:	eeb0 ba64 	vmov.f32	s22, s9
 8015db2:	eef0 aa45 	vmov.f32	s21, s10
 8015db6:	3604      	adds	r6, #4
 8015db8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015dba:	2b00      	cmp	r3, #0
 8015dbc:	dc03      	bgt.n	8015dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015dbe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015dc0:	2b00      	cmp	r3, #0
 8015dc2:	f340 8388 	ble.w	80164d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8015dc6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015dc8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015dcc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015dd0:	1e48      	subs	r0, r1, #1
 8015dd2:	1e57      	subs	r7, r2, #1
 8015dd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015dd6:	2b00      	cmp	r3, #0
 8015dd8:	f340 8195 	ble.w	8016106 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015ddc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015dde:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015de2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015de6:	d406      	bmi.n	8015df6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015de8:	4584      	cmp	ip, r0
 8015dea:	da04      	bge.n	8015df6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015dec:	2b00      	cmp	r3, #0
 8015dee:	db02      	blt.n	8015df6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015df0:	42bb      	cmp	r3, r7
 8015df2:	f2c0 8189 	blt.w	8016108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8015df6:	f11c 0c01 	adds.w	ip, ip, #1
 8015dfa:	f100 8177 	bmi.w	80160ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015dfe:	4561      	cmp	r1, ip
 8015e00:	f2c0 8174 	blt.w	80160ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015e04:	3301      	adds	r3, #1
 8015e06:	f100 8171 	bmi.w	80160ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015e0a:	429a      	cmp	r2, r3
 8015e0c:	f2c0 816e 	blt.w	80160ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015e10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e12:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015e14:	931a      	str	r3, [sp, #104]	; 0x68
 8015e16:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8015e18:	2b00      	cmp	r3, #0
 8015e1a:	f340 8193 	ble.w	8016144 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8015e1e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015e20:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015e24:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015e26:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8015e2a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015e2c:	141b      	asrs	r3, r3, #16
 8015e2e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015e32:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015e36:	f100 81d6 	bmi.w	80161e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015e3a:	f100 38ff 	add.w	r8, r0, #4294967295
 8015e3e:	4543      	cmp	r3, r8
 8015e40:	f280 81d1 	bge.w	80161e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015e44:	f1bc 0f00 	cmp.w	ip, #0
 8015e48:	f2c0 81cd 	blt.w	80161e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015e4c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015e50:	45c4      	cmp	ip, r8
 8015e52:	f280 81c8 	bge.w	80161e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015e56:	b200      	sxth	r0, r0
 8015e58:	fb0c 3300 	mla	r3, ip, r0, r3
 8015e5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015e5e:	eb04 0803 	add.w	r8, r4, r3
 8015e62:	5ce3      	ldrb	r3, [r4, r3]
 8015e64:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8015e68:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8015e6c:	2a00      	cmp	r2, #0
 8015e6e:	f000 81af 	beq.w	80161d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015e72:	f898 c001 	ldrb.w	ip, [r8, #1]
 8015e76:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8015e7a:	940e      	str	r4, [sp, #56]	; 0x38
 8015e7c:	0e24      	lsrs	r4, r4, #24
 8015e7e:	9415      	str	r4, [sp, #84]	; 0x54
 8015e80:	b179      	cbz	r1, 8015ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8015e82:	eb08 0c00 	add.w	ip, r8, r0
 8015e86:	f818 0000 	ldrb.w	r0, [r8, r0]
 8015e8a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015e8e:	900a      	str	r0, [sp, #40]	; 0x28
 8015e90:	0e00      	lsrs	r0, r0, #24
 8015e92:	9013      	str	r0, [sp, #76]	; 0x4c
 8015e94:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015e98:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015e9c:	900f      	str	r0, [sp, #60]	; 0x3c
 8015e9e:	0e00      	lsrs	r0, r0, #24
 8015ea0:	9016      	str	r0, [sp, #88]	; 0x58
 8015ea2:	b292      	uxth	r2, r2
 8015ea4:	b289      	uxth	r1, r1
 8015ea6:	fb02 f901 	mul.w	r9, r2, r1
 8015eaa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015eae:	0112      	lsls	r2, r2, #4
 8015eb0:	eba2 0809 	sub.w	r8, r2, r9
 8015eb4:	b289      	uxth	r1, r1
 8015eb6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8015eba:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015ebc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015ebe:	fa1f f888 	uxth.w	r8, r8
 8015ec2:	1a52      	subs	r2, r2, r1
 8015ec4:	b292      	uxth	r2, r2
 8015ec6:	fb08 f000 	mul.w	r0, r8, r0
 8015eca:	fb02 000e 	mla	r0, r2, lr, r0
 8015ece:	fb01 0004 	mla	r0, r1, r4, r0
 8015ed2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015ed4:	fb09 0004 	mla	r0, r9, r4, r0
 8015ed8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015edc:	2800      	cmp	r0, #0
 8015ede:	f000 80fa 	beq.w	80160d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015ee2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015ee6:	d01b      	beq.n	8015f20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015ee8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015eec:	fb0e fa0a 	mul.w	sl, lr, sl
 8015ef0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015ef4:	fb0e fe03 	mul.w	lr, lr, r3
 8015ef8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015efc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015f00:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015f04:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8015f08:	4453      	add	r3, sl
 8015f0a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8015f0e:	0a1b      	lsrs	r3, r3, #8
 8015f10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015f14:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015f18:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015f1c:	ea43 030c 	orr.w	r3, r3, ip
 8015f20:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015f22:	2cff      	cmp	r4, #255	; 0xff
 8015f24:	d021      	beq.n	8015f6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8015f26:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015f28:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015f2c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015f2e:	fb04 fb0b 	mul.w	fp, r4, fp
 8015f32:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015f34:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015f38:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015f3a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015f3e:	fb04 fa0a 	mul.w	sl, r4, sl
 8015f42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f46:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015f4a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015f4e:	44de      	add	lr, fp
 8015f50:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015f54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015f58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015f5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015f64:	ea4e 040a 	orr.w	r4, lr, sl
 8015f68:	940e      	str	r4, [sp, #56]	; 0x38
 8015f6a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015f6c:	2cff      	cmp	r4, #255	; 0xff
 8015f6e:	d021      	beq.n	8015fb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8015f70:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015f72:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015f76:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015f78:	fb04 fb0b 	mul.w	fp, r4, fp
 8015f7c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015f7e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015f82:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015f84:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015f88:	fb04 fa0a 	mul.w	sl, r4, sl
 8015f8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015f94:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015f98:	44de      	add	lr, fp
 8015f9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015f9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015fa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015fa6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015faa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015fae:	ea4e 040a 	orr.w	r4, lr, sl
 8015fb2:	940a      	str	r4, [sp, #40]	; 0x28
 8015fb4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015fb6:	2cff      	cmp	r4, #255	; 0xff
 8015fb8:	d021      	beq.n	8015ffe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015fba:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015fbc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015fc0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015fc2:	fb04 fb0b 	mul.w	fp, r4, fp
 8015fc6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015fc8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015fcc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015fce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015fd2:	fb04 fa0a 	mul.w	sl, r4, sl
 8015fd6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015fda:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015fde:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015fe2:	44de      	add	lr, fp
 8015fe4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015fe8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015fec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015ff0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015ff4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015ff8:	ea4e 040a 	orr.w	r4, lr, sl
 8015ffc:	940f      	str	r4, [sp, #60]	; 0x3c
 8015ffe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016000:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016004:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016006:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801600a:	fb08 fc0c 	mul.w	ip, r8, ip
 801600e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016012:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016016:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016018:	fb01 cc0e 	mla	ip, r1, lr, ip
 801601c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016020:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016022:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016026:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801602a:	fb08 f80e 	mul.w	r8, r8, lr
 801602e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016032:	fb02 8303 	mla	r3, r2, r3, r8
 8016036:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016038:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801603a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801603e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016040:	fb01 330a 	mla	r3, r1, sl, r3
 8016044:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8016048:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801604a:	fb09 3901 	mla	r9, r9, r1, r3
 801604e:	4342      	muls	r2, r0
 8016050:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016054:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016058:	883b      	ldrh	r3, [r7, #0]
 801605a:	1c50      	adds	r0, r2, #1
 801605c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016060:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016064:	ea4c 0c09 	orr.w	ip, ip, r9
 8016068:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801606c:	1219      	asrs	r1, r3, #8
 801606e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8016072:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016076:	b2c0      	uxtb	r0, r0
 8016078:	fb12 f204 	smulbb	r2, r2, r4
 801607c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016080:	fb01 2100 	mla	r1, r1, r0, r2
 8016084:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8016088:	10da      	asrs	r2, r3, #3
 801608a:	fa5f fc8c 	uxtb.w	ip, ip
 801608e:	00db      	lsls	r3, r3, #3
 8016090:	fb1c fc04 	smulbb	ip, ip, r4
 8016094:	b2db      	uxtb	r3, r3
 8016096:	b289      	uxth	r1, r1
 8016098:	fb03 c300 	mla	r3, r3, r0, ip
 801609c:	fa1f fc83 	uxth.w	ip, r3
 80160a0:	1c4b      	adds	r3, r1, #1
 80160a2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80160a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80160aa:	fb1e fe04 	smulbb	lr, lr, r4
 80160ae:	f10c 0301 	add.w	r3, ip, #1
 80160b2:	fb02 e200 	mla	r2, r2, r0, lr
 80160b6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80160ba:	b292      	uxth	r2, r2
 80160bc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80160c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80160c4:	430b      	orrs	r3, r1
 80160c6:	1c51      	adds	r1, r2, #1
 80160c8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80160cc:	0952      	lsrs	r2, r2, #5
 80160ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80160d2:	4313      	orrs	r3, r2
 80160d4:	803b      	strh	r3, [r7, #0]
 80160d6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80160d8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80160da:	441a      	add	r2, r3
 80160dc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80160de:	9231      	str	r2, [sp, #196]	; 0xc4
 80160e0:	441d      	add	r5, r3
 80160e2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80160e4:	3b01      	subs	r3, #1
 80160e6:	3702      	adds	r7, #2
 80160e8:	931a      	str	r3, [sp, #104]	; 0x68
 80160ea:	e694      	b.n	8015e16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80160ec:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80160ee:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80160f0:	441c      	add	r4, r3
 80160f2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80160f4:	9431      	str	r4, [sp, #196]	; 0xc4
 80160f6:	441d      	add	r5, r3
 80160f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80160fa:	3b01      	subs	r3, #1
 80160fc:	9309      	str	r3, [sp, #36]	; 0x24
 80160fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016100:	3302      	adds	r3, #2
 8016102:	930c      	str	r3, [sp, #48]	; 0x30
 8016104:	e666      	b.n	8015dd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016106:	d024      	beq.n	8016152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8016108:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801610a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801610c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801610e:	3b01      	subs	r3, #1
 8016110:	fb00 4003 	mla	r0, r0, r3, r4
 8016114:	1400      	asrs	r0, r0, #16
 8016116:	f53f ae7b 	bmi.w	8015e10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801611a:	3901      	subs	r1, #1
 801611c:	4288      	cmp	r0, r1
 801611e:	f6bf ae77 	bge.w	8015e10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016122:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8016124:	fb01 5303 	mla	r3, r1, r3, r5
 8016128:	141b      	asrs	r3, r3, #16
 801612a:	f53f ae71 	bmi.w	8015e10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801612e:	3a01      	subs	r2, #1
 8016130:	4293      	cmp	r3, r2
 8016132:	f6bf ae6d 	bge.w	8015e10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016136:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801613a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801613e:	f1bb 0f00 	cmp.w	fp, #0
 8016142:	dc70      	bgt.n	8016226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8016144:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016146:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801614a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801614c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016150:	930c      	str	r3, [sp, #48]	; 0x30
 8016152:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016154:	2b00      	cmp	r3, #0
 8016156:	f340 81be 	ble.w	80164d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801615a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801615e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016162:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016166:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016168:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801616c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016170:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016174:	eef0 6a48 	vmov.f32	s13, s16
 8016178:	ee69 7a27 	vmul.f32	s15, s18, s15
 801617c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016180:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016184:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8016188:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801618c:	eef0 6a68 	vmov.f32	s13, s17
 8016190:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016194:	ee18 2a10 	vmov	r2, s16
 8016198:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801619c:	fb92 f3f3 	sdiv	r3, r2, r3
 80161a0:	ee18 2a90 	vmov	r2, s17
 80161a4:	9333      	str	r3, [sp, #204]	; 0xcc
 80161a6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80161a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80161ac:	9334      	str	r3, [sp, #208]	; 0xd0
 80161ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80161b0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80161b2:	3b01      	subs	r3, #1
 80161b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80161b8:	9319      	str	r3, [sp, #100]	; 0x64
 80161ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80161bc:	bf08      	it	eq
 80161be:	4613      	moveq	r3, r2
 80161c0:	ee16 5a90 	vmov	r5, s13
 80161c4:	9309      	str	r3, [sp, #36]	; 0x24
 80161c6:	eef0 8a67 	vmov.f32	s17, s15
 80161ca:	eeb0 8a47 	vmov.f32	s16, s14
 80161ce:	e5f3      	b.n	8015db8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80161d0:	2900      	cmp	r1, #0
 80161d2:	f43f ae66 	beq.w	8015ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80161d6:	f818 0000 	ldrb.w	r0, [r8, r0]
 80161da:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80161de:	900a      	str	r0, [sp, #40]	; 0x28
 80161e0:	0e00      	lsrs	r0, r0, #24
 80161e2:	9013      	str	r0, [sp, #76]	; 0x4c
 80161e4:	e65d      	b.n	8015ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80161e6:	f113 0801 	adds.w	r8, r3, #1
 80161ea:	f53f af74 	bmi.w	80160d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80161ee:	4540      	cmp	r0, r8
 80161f0:	f6ff af71 	blt.w	80160d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80161f4:	f11c 0801 	adds.w	r8, ip, #1
 80161f8:	f53f af6d 	bmi.w	80160d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80161fc:	45c6      	cmp	lr, r8
 80161fe:	f6ff af6a 	blt.w	80160d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016202:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016204:	9302      	str	r3, [sp, #8]
 8016206:	b200      	sxth	r0, r0
 8016208:	fa0f f38e 	sxth.w	r3, lr
 801620c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016210:	e9cd c203 	strd	ip, r2, [sp, #12]
 8016214:	9301      	str	r3, [sp, #4]
 8016216:	9000      	str	r0, [sp, #0]
 8016218:	4633      	mov	r3, r6
 801621a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801621c:	981d      	ldr	r0, [sp, #116]	; 0x74
 801621e:	4639      	mov	r1, r7
 8016220:	f7ff fc32 	bl	8015a88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8016224:	e757      	b.n	80160d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016226:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016228:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801622a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801622e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016230:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016234:	1427      	asrs	r7, r4, #16
 8016236:	142b      	asrs	r3, r5, #16
 8016238:	fb01 7303 	mla	r3, r1, r3, r7
 801623c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801623e:	18e7      	adds	r7, r4, r3
 8016240:	5ce3      	ldrb	r3, [r4, r3]
 8016242:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016246:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801624a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801624e:	2a00      	cmp	r2, #0
 8016250:	f000 8137 	beq.w	80164c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8016254:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016258:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801625c:	9410      	str	r4, [sp, #64]	; 0x40
 801625e:	0e24      	lsrs	r4, r4, #24
 8016260:	9417      	str	r4, [sp, #92]	; 0x5c
 8016262:	b170      	cbz	r0, 8016282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016264:	eb07 0e01 	add.w	lr, r7, r1
 8016268:	5c79      	ldrb	r1, [r7, r1]
 801626a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801626e:	910b      	str	r1, [sp, #44]	; 0x2c
 8016270:	0e09      	lsrs	r1, r1, #24
 8016272:	9114      	str	r1, [sp, #80]	; 0x50
 8016274:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016278:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801627c:	9111      	str	r1, [sp, #68]	; 0x44
 801627e:	0e09      	lsrs	r1, r1, #24
 8016280:	9118      	str	r1, [sp, #96]	; 0x60
 8016282:	b292      	uxth	r2, r2
 8016284:	b280      	uxth	r0, r0
 8016286:	fb02 f800 	mul.w	r8, r2, r0
 801628a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801628e:	0112      	lsls	r2, r2, #4
 8016290:	eba2 0e08 	sub.w	lr, r2, r8
 8016294:	b280      	uxth	r0, r0
 8016296:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801629a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801629c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801629e:	fa1f fe8e 	uxth.w	lr, lr
 80162a2:	1a12      	subs	r2, r2, r0
 80162a4:	b292      	uxth	r2, r2
 80162a6:	fb0e f101 	mul.w	r1, lr, r1
 80162aa:	fb02 110c 	mla	r1, r2, ip, r1
 80162ae:	fb00 1104 	mla	r1, r0, r4, r1
 80162b2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80162b4:	fb08 1104 	mla	r1, r8, r4, r1
 80162b8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80162bc:	2900      	cmp	r1, #0
 80162be:	f000 80f5 	beq.w	80164ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80162c2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80162c6:	d019      	beq.n	80162fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80162c8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80162cc:	fb0c fa0a 	mul.w	sl, ip, sl
 80162d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80162d4:	fb0c fc03 	mul.w	ip, ip, r3
 80162d8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80162dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80162e0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80162e4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80162e8:	4453      	add	r3, sl
 80162ea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80162ee:	0a1b      	lsrs	r3, r3, #8
 80162f0:	0a3f      	lsrs	r7, r7, #8
 80162f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80162f6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80162fa:	433b      	orrs	r3, r7
 80162fc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80162fe:	2cff      	cmp	r4, #255	; 0xff
 8016300:	d020      	beq.n	8016344 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8016302:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016304:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016308:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801630a:	4367      	muls	r7, r4
 801630c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801630e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016312:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016314:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016318:	fb04 fa0a 	mul.w	sl, r4, sl
 801631c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016320:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016324:	44bc      	add	ip, r7
 8016326:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801632a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801632e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016332:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016336:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801633a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801633e:	ea4c 040a 	orr.w	r4, ip, sl
 8016342:	9410      	str	r4, [sp, #64]	; 0x40
 8016344:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016346:	2cff      	cmp	r4, #255	; 0xff
 8016348:	d020      	beq.n	801638c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801634a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801634c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016350:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016352:	4367      	muls	r7, r4
 8016354:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016356:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801635a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801635c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016360:	fb04 fa0a 	mul.w	sl, r4, sl
 8016364:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016368:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801636c:	44bc      	add	ip, r7
 801636e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016372:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016376:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801637a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801637e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016382:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016386:	ea4c 040a 	orr.w	r4, ip, sl
 801638a:	940b      	str	r4, [sp, #44]	; 0x2c
 801638c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801638e:	2cff      	cmp	r4, #255	; 0xff
 8016390:	d020      	beq.n	80163d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8016392:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016394:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016398:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801639a:	4367      	muls	r7, r4
 801639c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801639e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80163a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80163a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80163a8:	fb04 fa0a 	mul.w	sl, r4, sl
 80163ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80163b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80163b4:	44bc      	add	ip, r7
 80163b6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80163ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80163be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80163c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80163c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80163ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80163ce:	ea4c 040a 	orr.w	r4, ip, sl
 80163d2:	9411      	str	r4, [sp, #68]	; 0x44
 80163d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80163d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80163da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80163dc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80163e0:	fb0e f707 	mul.w	r7, lr, r7
 80163e4:	fb02 770c 	mla	r7, r2, ip, r7
 80163e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80163ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80163ee:	fb00 770c 	mla	r7, r0, ip, r7
 80163f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80163f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80163f8:	fb08 770c 	mla	r7, r8, ip, r7
 80163fc:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016400:	fb0e fe0c 	mul.w	lr, lr, ip
 8016404:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016408:	fb02 e303 	mla	r3, r2, r3, lr
 801640c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801640e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016410:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016414:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016416:	fb00 330a 	mla	r3, r0, sl, r3
 801641a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801641e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016422:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016424:	f8b9 0000 	ldrh.w	r0, [r9]
 8016428:	434b      	muls	r3, r1
 801642a:	0a3f      	lsrs	r7, r7, #8
 801642c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016430:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016434:	1c59      	adds	r1, r3, #1
 8016436:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801643a:	ea47 070c 	orr.w	r7, r7, ip
 801643e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016442:	1202      	asrs	r2, r0, #8
 8016444:	0c3b      	lsrs	r3, r7, #16
 8016446:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801644a:	b2c9      	uxtb	r1, r1
 801644c:	fb13 f304 	smulbb	r3, r3, r4
 8016450:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016454:	fb02 3201 	mla	r2, r2, r1, r3
 8016458:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801645c:	10c3      	asrs	r3, r0, #3
 801645e:	b2ff      	uxtb	r7, r7
 8016460:	00c0      	lsls	r0, r0, #3
 8016462:	b292      	uxth	r2, r2
 8016464:	fb1c fc04 	smulbb	ip, ip, r4
 8016468:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801646c:	b2c0      	uxtb	r0, r0
 801646e:	fb17 f704 	smulbb	r7, r7, r4
 8016472:	fb03 c301 	mla	r3, r3, r1, ip
 8016476:	fb00 7001 	mla	r0, r0, r1, r7
 801647a:	f102 0c01 	add.w	ip, r2, #1
 801647e:	b280      	uxth	r0, r0
 8016480:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016484:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016488:	1c42      	adds	r2, r0, #1
 801648a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801648e:	b29b      	uxth	r3, r3
 8016490:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016494:	ea42 020c 	orr.w	r2, r2, ip
 8016498:	f103 0c01 	add.w	ip, r3, #1
 801649c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80164a0:	095b      	lsrs	r3, r3, #5
 80164a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80164a6:	431a      	orrs	r2, r3
 80164a8:	f8a9 2000 	strh.w	r2, [r9]
 80164ac:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80164ae:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80164b0:	441a      	add	r2, r3
 80164b2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80164b4:	9231      	str	r2, [sp, #196]	; 0xc4
 80164b6:	f109 0902 	add.w	r9, r9, #2
 80164ba:	441d      	add	r5, r3
 80164bc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80164c0:	e63d      	b.n	801613e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80164c2:	2800      	cmp	r0, #0
 80164c4:	f43f aedd 	beq.w	8016282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80164c8:	5c79      	ldrb	r1, [r7, r1]
 80164ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80164ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80164d0:	0e09      	lsrs	r1, r1, #24
 80164d2:	9114      	str	r1, [sp, #80]	; 0x50
 80164d4:	e6d5      	b.n	8016282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80164d6:	b01f      	add	sp, #124	; 0x7c
 80164d8:	ecbd 8b08 	vpop	{d8-d11}
 80164dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080164e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80164e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164e4:	880e      	ldrh	r6, [r1, #0]
 80164e6:	b085      	sub	sp, #20
 80164e8:	ea4f 2826 	mov.w	r8, r6, asr #8
 80164ec:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80164f0:	4691      	mov	r9, r2
 80164f2:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80164f6:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 80164fa:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80164fe:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016502:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8016506:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801650a:	9200      	str	r2, [sp, #0]
 801650c:	00f6      	lsls	r6, r6, #3
 801650e:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8016512:	9201      	str	r2, [sp, #4]
 8016514:	2c00      	cmp	r4, #0
 8016516:	b2f2      	uxtb	r2, r6
 8016518:	fb04 560c 	mla	r6, r4, ip, r5
 801651c:	9202      	str	r2, [sp, #8]
 801651e:	eb09 0806 	add.w	r8, r9, r6
 8016522:	db3f      	blt.n	80165a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016524:	45a6      	cmp	lr, r4
 8016526:	dd3d      	ble.n	80165a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016528:	2d00      	cmp	r5, #0
 801652a:	db39      	blt.n	80165a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 801652c:	45ac      	cmp	ip, r5
 801652e:	dd37      	ble.n	80165a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016530:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016534:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016538:	1c6e      	adds	r6, r5, #1
 801653a:	d436      	bmi.n	80165aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801653c:	45b4      	cmp	ip, r6
 801653e:	dd34      	ble.n	80165aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016540:	b3a8      	cbz	r0, 80165ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8016542:	f898 6001 	ldrb.w	r6, [r8, #1]
 8016546:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801654a:	3401      	adds	r4, #1
 801654c:	d433      	bmi.n	80165b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801654e:	45a6      	cmp	lr, r4
 8016550:	dd31      	ble.n	80165b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016552:	b39f      	cbz	r7, 80165bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8016554:	2d00      	cmp	r5, #0
 8016556:	eb08 0e0c 	add.w	lr, r8, ip
 801655a:	db2a      	blt.n	80165b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801655c:	45ac      	cmp	ip, r5
 801655e:	dd28      	ble.n	80165b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016560:	f818 400c 	ldrb.w	r4, [r8, ip]
 8016564:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016568:	3501      	adds	r5, #1
 801656a:	d42a      	bmi.n	80165c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801656c:	45ac      	cmp	ip, r5
 801656e:	dd28      	ble.n	80165c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016570:	b348      	cbz	r0, 80165c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8016572:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8016576:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801657a:	280f      	cmp	r0, #15
 801657c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016580:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016584:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016588:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801658c:	d801      	bhi.n	8016592 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 801658e:	2f0f      	cmp	r7, #15
 8016590:	d91b      	bls.n	80165ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8016592:	4b7d      	ldr	r3, [pc, #500]	; (8016788 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016594:	4a7d      	ldr	r2, [pc, #500]	; (801678c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016596:	487e      	ldr	r0, [pc, #504]	; (8016790 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016598:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801659c:	f004 ff84 	bl	801b4a8 <__assert_func>
 80165a0:	2200      	movs	r2, #0
 80165a2:	e7c9      	b.n	8016538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 80165a4:	2600      	movs	r6, #0
 80165a6:	4632      	mov	r2, r6
 80165a8:	e7cf      	b.n	801654a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80165aa:	2600      	movs	r6, #0
 80165ac:	e7cd      	b.n	801654a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80165ae:	4606      	mov	r6, r0
 80165b0:	e7cb      	b.n	801654a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80165b2:	2400      	movs	r4, #0
 80165b4:	e7d8      	b.n	8016568 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 80165b6:	2300      	movs	r3, #0
 80165b8:	461c      	mov	r4, r3
 80165ba:	e7de      	b.n	801657a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80165bc:	463b      	mov	r3, r7
 80165be:	463c      	mov	r4, r7
 80165c0:	e7db      	b.n	801657a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80165c2:	2300      	movs	r3, #0
 80165c4:	e7d9      	b.n	801657a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80165c6:	4603      	mov	r3, r0
 80165c8:	e7d7      	b.n	801657a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80165ca:	b280      	uxth	r0, r0
 80165cc:	b2bf      	uxth	r7, r7
 80165ce:	fb00 fe07 	mul.w	lr, r0, r7
 80165d2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80165d6:	0100      	lsls	r0, r0, #4
 80165d8:	eba0 0c0e 	sub.w	ip, r0, lr
 80165dc:	b2bf      	uxth	r7, r7
 80165de:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80165e2:	fa1f fc8c 	uxth.w	ip, ip
 80165e6:	1bed      	subs	r5, r5, r7
 80165e8:	b2ad      	uxth	r5, r5
 80165ea:	fb0c f00a 	mul.w	r0, ip, sl
 80165ee:	fb05 000b 	mla	r0, r5, fp, r0
 80165f2:	fb07 0009 	mla	r0, r7, r9, r0
 80165f6:	fb0e 0008 	mla	r0, lr, r8, r0
 80165fa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80165fe:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016602:	9003      	str	r0, [sp, #12]
 8016604:	d018      	beq.n	8016638 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8016606:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801660a:	fb0b f000 	mul.w	r0, fp, r0
 801660e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016612:	fb0b fb02 	mul.w	fp, fp, r2
 8016616:	0a02      	lsrs	r2, r0, #8
 8016618:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801661c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016620:	4402      	add	r2, r0
 8016622:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016626:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801662a:	0a12      	lsrs	r2, r2, #8
 801662c:	0a00      	lsrs	r0, r0, #8
 801662e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016632:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016636:	4302      	orrs	r2, r0
 8016638:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801663c:	d019      	beq.n	8016672 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 801663e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016642:	fb0a fb0b 	mul.w	fp, sl, fp
 8016646:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801664a:	fb0a fa06 	mul.w	sl, sl, r6
 801664e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016652:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016656:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801665a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801665e:	445e      	add	r6, fp
 8016660:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016664:	0a36      	lsrs	r6, r6, #8
 8016666:	0a00      	lsrs	r0, r0, #8
 8016668:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801666c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016670:	4306      	orrs	r6, r0
 8016672:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016676:	d019      	beq.n	80166ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8016678:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801667c:	fb09 fa0a 	mul.w	sl, r9, sl
 8016680:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016684:	fb09 f904 	mul.w	r9, r9, r4
 8016688:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801668c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016690:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016694:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016698:	4454      	add	r4, sl
 801669a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801669e:	0a24      	lsrs	r4, r4, #8
 80166a0:	0a00      	lsrs	r0, r0, #8
 80166a2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80166a6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80166aa:	4304      	orrs	r4, r0
 80166ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80166b0:	d019      	beq.n	80166e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 80166b2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80166b6:	fb08 f909 	mul.w	r9, r8, r9
 80166ba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80166be:	fb08 f803 	mul.w	r8, r8, r3
 80166c2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80166c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80166ca:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80166ce:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80166d2:	444b      	add	r3, r9
 80166d4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80166d8:	0a1b      	lsrs	r3, r3, #8
 80166da:	0a00      	lsrs	r0, r0, #8
 80166dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80166e0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80166e4:	4303      	orrs	r3, r0
 80166e6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80166ea:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80166ee:	fb0c f808 	mul.w	r8, ip, r8
 80166f2:	fb05 8800 	mla	r8, r5, r0, r8
 80166f6:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80166fa:	fb07 8800 	mla	r8, r7, r0, r8
 80166fe:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8016702:	fb0e 8000 	mla	r0, lr, r0, r8
 8016706:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801670a:	fb0c f606 	mul.w	r6, ip, r6
 801670e:	0a00      	lsrs	r0, r0, #8
 8016710:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016714:	fb05 6202 	mla	r2, r5, r2, r6
 8016718:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801671c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8016720:	fb07 2700 	mla	r7, r7, r0, r2
 8016724:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016728:	9b03      	ldr	r3, [sp, #12]
 801672a:	9d00      	ldr	r5, [sp, #0]
 801672c:	9a02      	ldr	r2, [sp, #8]
 801672e:	fb0e 7000 	mla	r0, lr, r0, r7
 8016732:	43dc      	mvns	r4, r3
 8016734:	9b01      	ldr	r3, [sp, #4]
 8016736:	b2e4      	uxtb	r4, r4
 8016738:	0a00      	lsrs	r0, r0, #8
 801673a:	4363      	muls	r3, r4
 801673c:	4365      	muls	r5, r4
 801673e:	4362      	muls	r2, r4
 8016740:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016744:	ea48 0000 	orr.w	r0, r8, r0
 8016748:	4614      	mov	r4, r2
 801674a:	1c5e      	adds	r6, r3, #1
 801674c:	1c6a      	adds	r2, r5, #1
 801674e:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8016752:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016756:	0a03      	lsrs	r3, r0, #8
 8016758:	0c02      	lsrs	r2, r0, #16
 801675a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801675e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016762:	00db      	lsls	r3, r3, #3
 8016764:	0212      	lsls	r2, r2, #8
 8016766:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801676a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801676e:	4313      	orrs	r3, r2
 8016770:	1c62      	adds	r2, r4, #1
 8016772:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016776:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801677a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801677e:	4318      	orrs	r0, r3
 8016780:	8008      	strh	r0, [r1, #0]
 8016782:	b005      	add	sp, #20
 8016784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016788:	0801f576 	.word	0x0801f576
 801678c:	0801fb42 	.word	0x0801fb42
 8016790:	0801f5fa 	.word	0x0801f5fa

08016794 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016798:	ed2d 8b08 	vpush	{d8-d11}
 801679c:	b09b      	sub	sp, #108	; 0x6c
 801679e:	eeb0 aa40 	vmov.f32	s20, s0
 80167a2:	9218      	str	r2, [sp, #96]	; 0x60
 80167a4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80167a6:	9116      	str	r1, [sp, #88]	; 0x58
 80167a8:	9307      	str	r3, [sp, #28]
 80167aa:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80167ae:	9019      	str	r0, [sp, #100]	; 0x64
 80167b0:	6850      	ldr	r0, [r2, #4]
 80167b2:	6812      	ldr	r2, [r2, #0]
 80167b4:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 80167b6:	fb00 1303 	mla	r3, r0, r3, r1
 80167ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80167be:	930a      	str	r3, [sp, #40]	; 0x28
 80167c0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80167c2:	681b      	ldr	r3, [r3, #0]
 80167c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80167c6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80167c8:	685e      	ldr	r6, [r3, #4]
 80167ca:	eef0 9a60 	vmov.f32	s19, s1
 80167ce:	eeb0 9a41 	vmov.f32	s18, s2
 80167d2:	eeb0 8a62 	vmov.f32	s16, s5
 80167d6:	eef0 8a43 	vmov.f32	s17, s6
 80167da:	eef0 ba44 	vmov.f32	s23, s8
 80167de:	eeb0 ba64 	vmov.f32	s22, s9
 80167e2:	eef0 aa45 	vmov.f32	s21, s10
 80167e6:	3604      	adds	r6, #4
 80167e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80167ea:	2b00      	cmp	r3, #0
 80167ec:	dc03      	bgt.n	80167f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80167ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80167f0:	2b00      	cmp	r3, #0
 80167f2:	f340 8373 	ble.w	8016edc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80167f6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80167f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80167fc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016800:	1e48      	subs	r0, r1, #1
 8016802:	1e57      	subs	r7, r2, #1
 8016804:	9b07      	ldr	r3, [sp, #28]
 8016806:	2b00      	cmp	r3, #0
 8016808:	f340 8190 	ble.w	8016b2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801680c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801680e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016812:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016816:	d406      	bmi.n	8016826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016818:	4584      	cmp	ip, r0
 801681a:	da04      	bge.n	8016826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801681c:	2b00      	cmp	r3, #0
 801681e:	db02      	blt.n	8016826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016820:	42bb      	cmp	r3, r7
 8016822:	f2c0 8184 	blt.w	8016b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8016826:	f11c 0c01 	adds.w	ip, ip, #1
 801682a:	f100 8172 	bmi.w	8016b12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801682e:	4561      	cmp	r1, ip
 8016830:	f2c0 816f 	blt.w	8016b12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016834:	3301      	adds	r3, #1
 8016836:	f100 816c 	bmi.w	8016b12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801683a:	429a      	cmp	r2, r3
 801683c:	f2c0 8169 	blt.w	8016b12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016840:	9b07      	ldr	r3, [sp, #28]
 8016842:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016844:	9317      	str	r3, [sp, #92]	; 0x5c
 8016846:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016848:	2b00      	cmp	r3, #0
 801684a:	f340 818e 	ble.w	8016b6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801684e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016850:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016854:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016856:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801685a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801685c:	141b      	asrs	r3, r3, #16
 801685e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016862:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016866:	f100 81d1 	bmi.w	8016c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801686a:	f101 38ff 	add.w	r8, r1, #4294967295
 801686e:	4543      	cmp	r3, r8
 8016870:	f280 81cc 	bge.w	8016c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016874:	f1bc 0f00 	cmp.w	ip, #0
 8016878:	f2c0 81c8 	blt.w	8016c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801687c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016880:	45c4      	cmp	ip, r8
 8016882:	f280 81c3 	bge.w	8016c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016886:	b209      	sxth	r1, r1
 8016888:	fb0c 3301 	mla	r3, ip, r1, r3
 801688c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801688e:	eb04 0803 	add.w	r8, r4, r3
 8016892:	5ce3      	ldrb	r3, [r4, r3]
 8016894:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016898:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801689c:	2a00      	cmp	r2, #0
 801689e:	f000 81aa 	beq.w	8016bf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 80168a2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80168a6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80168aa:	940b      	str	r4, [sp, #44]	; 0x2c
 80168ac:	0e24      	lsrs	r4, r4, #24
 80168ae:	9412      	str	r4, [sp, #72]	; 0x48
 80168b0:	b178      	cbz	r0, 80168d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80168b2:	eb08 0c01 	add.w	ip, r8, r1
 80168b6:	f818 1001 	ldrb.w	r1, [r8, r1]
 80168ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80168be:	9108      	str	r1, [sp, #32]
 80168c0:	0e09      	lsrs	r1, r1, #24
 80168c2:	9110      	str	r1, [sp, #64]	; 0x40
 80168c4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80168c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80168cc:	910c      	str	r1, [sp, #48]	; 0x30
 80168ce:	0e09      	lsrs	r1, r1, #24
 80168d0:	9113      	str	r1, [sp, #76]	; 0x4c
 80168d2:	b292      	uxth	r2, r2
 80168d4:	b280      	uxth	r0, r0
 80168d6:	fb02 f900 	mul.w	r9, r2, r0
 80168da:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80168de:	0112      	lsls	r2, r2, #4
 80168e0:	eba2 0809 	sub.w	r8, r2, r9
 80168e4:	b280      	uxth	r0, r0
 80168e6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80168ea:	9912      	ldr	r1, [sp, #72]	; 0x48
 80168ec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80168ee:	fa1f f888 	uxth.w	r8, r8
 80168f2:	1a12      	subs	r2, r2, r0
 80168f4:	b292      	uxth	r2, r2
 80168f6:	fb08 f101 	mul.w	r1, r8, r1
 80168fa:	fb02 110e 	mla	r1, r2, lr, r1
 80168fe:	fb00 1104 	mla	r1, r0, r4, r1
 8016902:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016904:	fb09 1104 	mla	r1, r9, r4, r1
 8016908:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801690c:	2900      	cmp	r1, #0
 801690e:	f000 80f5 	beq.w	8016afc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016912:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016916:	d01b      	beq.n	8016950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016918:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801691c:	fb0e fa0a 	mul.w	sl, lr, sl
 8016920:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016924:	fb0e fe03 	mul.w	lr, lr, r3
 8016928:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801692c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016930:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016934:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016938:	4453      	add	r3, sl
 801693a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801693e:	0a1b      	lsrs	r3, r3, #8
 8016940:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016944:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016948:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801694c:	ea43 030c 	orr.w	r3, r3, ip
 8016950:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016952:	2cff      	cmp	r4, #255	; 0xff
 8016954:	d021      	beq.n	801699a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8016956:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016958:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801695c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801695e:	fb04 fb0b 	mul.w	fp, r4, fp
 8016962:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016964:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016968:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801696a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801696e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016972:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016976:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801697a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801697e:	44de      	add	lr, fp
 8016980:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016984:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016988:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801698c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016990:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016994:	ea4e 040a 	orr.w	r4, lr, sl
 8016998:	940b      	str	r4, [sp, #44]	; 0x2c
 801699a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801699c:	2cff      	cmp	r4, #255	; 0xff
 801699e:	d021      	beq.n	80169e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80169a0:	9c08      	ldr	r4, [sp, #32]
 80169a2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80169a6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80169a8:	fb04 fb0b 	mul.w	fp, r4, fp
 80169ac:	9c08      	ldr	r4, [sp, #32]
 80169ae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80169b2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80169b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80169b8:	fb04 fa0a 	mul.w	sl, r4, sl
 80169bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80169c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80169c4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80169c8:	44de      	add	lr, fp
 80169ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80169ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80169d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80169d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80169da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80169de:	ea4e 040a 	orr.w	r4, lr, sl
 80169e2:	9408      	str	r4, [sp, #32]
 80169e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80169e6:	2cff      	cmp	r4, #255	; 0xff
 80169e8:	d021      	beq.n	8016a2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80169ea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80169ec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80169f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80169f2:	fb04 fb0b 	mul.w	fp, r4, fp
 80169f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80169f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80169fc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80169fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016a02:	fb04 fa0a 	mul.w	sl, r4, sl
 8016a06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016a0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016a0e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016a12:	44de      	add	lr, fp
 8016a14:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016a18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016a1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016a20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016a24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016a28:	ea4e 040a 	orr.w	r4, lr, sl
 8016a2c:	940c      	str	r4, [sp, #48]	; 0x30
 8016a2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a30:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016a34:	9c08      	ldr	r4, [sp, #32]
 8016a36:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016a3a:	fb08 fc0c 	mul.w	ip, r8, ip
 8016a3e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016a42:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016a46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016a48:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016a4c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016a50:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a52:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016a56:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8016a5a:	fb08 f80e 	mul.w	r8, r8, lr
 8016a5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016a62:	fb02 8303 	mla	r3, r2, r3, r8
 8016a66:	9a08      	ldr	r2, [sp, #32]
 8016a68:	f8b7 8000 	ldrh.w	r8, [r7]
 8016a6c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016a70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016a72:	fb00 330a 	mla	r3, r0, sl, r3
 8016a76:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016a7a:	fb09 3900 	mla	r9, r9, r0, r3
 8016a7e:	43c9      	mvns	r1, r1
 8016a80:	ea4f 2228 	mov.w	r2, r8, asr #8
 8016a84:	fa5f fe81 	uxtb.w	lr, r1
 8016a88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016a90:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016a94:	fb02 f20e 	mul.w	r2, r2, lr
 8016a98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016a9c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016aa0:	ea4c 0c09 	orr.w	ip, ip, r9
 8016aa4:	1c53      	adds	r3, r2, #1
 8016aa6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8016aaa:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8016aae:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8016ab2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016ab6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016aba:	4a63      	ldr	r2, [pc, #396]	; (8016c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8016abc:	fb00 f00e 	mul.w	r0, r0, lr
 8016ac0:	b2db      	uxtb	r3, r3
 8016ac2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8016ac6:	1c43      	adds	r3, r0, #1
 8016ac8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016acc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016ad0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8016ad4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016ad8:	b2c9      	uxtb	r1, r1
 8016ada:	00db      	lsls	r3, r3, #3
 8016adc:	fb01 f10e 	mul.w	r1, r1, lr
 8016ae0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016ae4:	4313      	orrs	r3, r2
 8016ae6:	1c4a      	adds	r2, r1, #1
 8016ae8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016aec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8016af0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8016af4:	ea4c 0c03 	orr.w	ip, ip, r3
 8016af8:	f8a7 c000 	strh.w	ip, [r7]
 8016afc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016afe:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016b00:	441a      	add	r2, r3
 8016b02:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016b04:	922d      	str	r2, [sp, #180]	; 0xb4
 8016b06:	441d      	add	r5, r3
 8016b08:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016b0a:	3b01      	subs	r3, #1
 8016b0c:	3702      	adds	r7, #2
 8016b0e:	9317      	str	r3, [sp, #92]	; 0x5c
 8016b10:	e699      	b.n	8016846 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016b12:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016b14:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016b16:	441c      	add	r4, r3
 8016b18:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016b1a:	942d      	str	r4, [sp, #180]	; 0xb4
 8016b1c:	441d      	add	r5, r3
 8016b1e:	9b07      	ldr	r3, [sp, #28]
 8016b20:	3b01      	subs	r3, #1
 8016b22:	9307      	str	r3, [sp, #28]
 8016b24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016b26:	3302      	adds	r3, #2
 8016b28:	930a      	str	r3, [sp, #40]	; 0x28
 8016b2a:	e66b      	b.n	8016804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016b2c:	d024      	beq.n	8016b78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8016b2e:	9b07      	ldr	r3, [sp, #28]
 8016b30:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8016b32:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016b34:	3b01      	subs	r3, #1
 8016b36:	fb00 4003 	mla	r0, r0, r3, r4
 8016b3a:	1400      	asrs	r0, r0, #16
 8016b3c:	f53f ae80 	bmi.w	8016840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016b40:	3901      	subs	r1, #1
 8016b42:	4288      	cmp	r0, r1
 8016b44:	f6bf ae7c 	bge.w	8016840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016b48:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8016b4a:	fb01 5303 	mla	r3, r1, r3, r5
 8016b4e:	141b      	asrs	r3, r3, #16
 8016b50:	f53f ae76 	bmi.w	8016840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016b54:	3a01      	subs	r2, #1
 8016b56:	4293      	cmp	r3, r2
 8016b58:	f6bf ae72 	bge.w	8016840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016b5c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016b60:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8016b64:	f1bb 0f00 	cmp.w	fp, #0
 8016b68:	dc70      	bgt.n	8016c4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8016b6a:	9b07      	ldr	r3, [sp, #28]
 8016b6c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016b70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016b72:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016b76:	930a      	str	r3, [sp, #40]	; 0x28
 8016b78:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016b7a:	2b00      	cmp	r3, #0
 8016b7c:	f340 81ae 	ble.w	8016edc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8016b80:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016b84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016b88:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016b8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016b8e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016b92:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016b96:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016b9a:	eef0 6a48 	vmov.f32	s13, s16
 8016b9e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016ba2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016ba6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016baa:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8016bae:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016bb2:	eef0 6a68 	vmov.f32	s13, s17
 8016bb6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016bba:	ee18 2a10 	vmov	r2, s16
 8016bbe:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016bc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016bc6:	ee18 2a90 	vmov	r2, s17
 8016bca:	932f      	str	r3, [sp, #188]	; 0xbc
 8016bcc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016bce:	fb92 f3f3 	sdiv	r3, r2, r3
 8016bd2:	9330      	str	r3, [sp, #192]	; 0xc0
 8016bd4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016bd6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016bd8:	3b01      	subs	r3, #1
 8016bda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016bde:	9316      	str	r3, [sp, #88]	; 0x58
 8016be0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016be2:	bf08      	it	eq
 8016be4:	4613      	moveq	r3, r2
 8016be6:	ee16 5a90 	vmov	r5, s13
 8016bea:	9307      	str	r3, [sp, #28]
 8016bec:	eef0 8a67 	vmov.f32	s17, s15
 8016bf0:	eeb0 8a47 	vmov.f32	s16, s14
 8016bf4:	e5f8      	b.n	80167e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016bf6:	2800      	cmp	r0, #0
 8016bf8:	f43f ae6b 	beq.w	80168d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016bfc:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016c00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016c04:	9108      	str	r1, [sp, #32]
 8016c06:	0e09      	lsrs	r1, r1, #24
 8016c08:	9110      	str	r1, [sp, #64]	; 0x40
 8016c0a:	e662      	b.n	80168d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016c0c:	f113 0801 	adds.w	r8, r3, #1
 8016c10:	f53f af74 	bmi.w	8016afc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016c14:	4541      	cmp	r1, r8
 8016c16:	f6ff af71 	blt.w	8016afc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016c1a:	f11c 0801 	adds.w	r8, ip, #1
 8016c1e:	f53f af6d 	bmi.w	8016afc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016c22:	45c6      	cmp	lr, r8
 8016c24:	f6ff af6a 	blt.w	8016afc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016c28:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8016c2c:	b209      	sxth	r1, r1
 8016c2e:	fa0f f38e 	sxth.w	r3, lr
 8016c32:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8016c36:	9301      	str	r3, [sp, #4]
 8016c38:	9100      	str	r1, [sp, #0]
 8016c3a:	4633      	mov	r3, r6
 8016c3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016c3e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016c40:	4639      	mov	r1, r7
 8016c42:	f7ff fc4d 	bl	80164e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8016c46:	e759      	b.n	8016afc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016c48:	fffff800 	.word	0xfffff800
 8016c4c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016c4e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016c50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016c54:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016c56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016c5a:	1427      	asrs	r7, r4, #16
 8016c5c:	142b      	asrs	r3, r5, #16
 8016c5e:	fb01 7303 	mla	r3, r1, r3, r7
 8016c62:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016c64:	18e7      	adds	r7, r4, r3
 8016c66:	5ce3      	ldrb	r3, [r4, r3]
 8016c68:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016c6c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016c70:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016c74:	2a00      	cmp	r2, #0
 8016c76:	f000 8127 	beq.w	8016ec8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8016c7a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016c7e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8016c82:	940d      	str	r4, [sp, #52]	; 0x34
 8016c84:	0e24      	lsrs	r4, r4, #24
 8016c86:	9414      	str	r4, [sp, #80]	; 0x50
 8016c88:	b170      	cbz	r0, 8016ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8016c8a:	eb07 0e01 	add.w	lr, r7, r1
 8016c8e:	5c79      	ldrb	r1, [r7, r1]
 8016c90:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016c94:	9109      	str	r1, [sp, #36]	; 0x24
 8016c96:	0e09      	lsrs	r1, r1, #24
 8016c98:	9111      	str	r1, [sp, #68]	; 0x44
 8016c9a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016c9e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016ca2:	910e      	str	r1, [sp, #56]	; 0x38
 8016ca4:	0e09      	lsrs	r1, r1, #24
 8016ca6:	9115      	str	r1, [sp, #84]	; 0x54
 8016ca8:	b292      	uxth	r2, r2
 8016caa:	b280      	uxth	r0, r0
 8016cac:	fb02 f800 	mul.w	r8, r2, r0
 8016cb0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016cb4:	0112      	lsls	r2, r2, #4
 8016cb6:	eba2 0e08 	sub.w	lr, r2, r8
 8016cba:	b280      	uxth	r0, r0
 8016cbc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016cc0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016cc2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016cc4:	fa1f fe8e 	uxth.w	lr, lr
 8016cc8:	1a09      	subs	r1, r1, r0
 8016cca:	b289      	uxth	r1, r1
 8016ccc:	fb0e f202 	mul.w	r2, lr, r2
 8016cd0:	fb01 220c 	mla	r2, r1, ip, r2
 8016cd4:	fb00 2204 	mla	r2, r0, r4, r2
 8016cd8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016cda:	fb08 2204 	mla	r2, r8, r4, r2
 8016cde:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016ce2:	2a00      	cmp	r2, #0
 8016ce4:	f000 80e5 	beq.w	8016eb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8016ce8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016cec:	d019      	beq.n	8016d22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8016cee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016cf2:	fb0c fa0a 	mul.w	sl, ip, sl
 8016cf6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016cfa:	fb0c fc03 	mul.w	ip, ip, r3
 8016cfe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016d02:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016d06:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016d0a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016d0e:	4453      	add	r3, sl
 8016d10:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016d14:	0a1b      	lsrs	r3, r3, #8
 8016d16:	0a3f      	lsrs	r7, r7, #8
 8016d18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016d1c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016d20:	433b      	orrs	r3, r7
 8016d22:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016d24:	2cff      	cmp	r4, #255	; 0xff
 8016d26:	d020      	beq.n	8016d6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8016d28:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016d2a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016d2e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016d30:	4367      	muls	r7, r4
 8016d32:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016d34:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016d38:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016d3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016d3e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016d42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016d46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016d4a:	44bc      	add	ip, r7
 8016d4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016d50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016d54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016d58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016d5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016d60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016d64:	ea4c 040a 	orr.w	r4, ip, sl
 8016d68:	940d      	str	r4, [sp, #52]	; 0x34
 8016d6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016d6c:	2cff      	cmp	r4, #255	; 0xff
 8016d6e:	d020      	beq.n	8016db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8016d70:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016d72:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016d76:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016d78:	4367      	muls	r7, r4
 8016d7a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016d7c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016d80:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016d82:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016d86:	fb04 fa0a 	mul.w	sl, r4, sl
 8016d8a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016d8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016d92:	44bc      	add	ip, r7
 8016d94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016d98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016d9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016da0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016da4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016da8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016dac:	ea4c 040a 	orr.w	r4, ip, sl
 8016db0:	9409      	str	r4, [sp, #36]	; 0x24
 8016db2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016db4:	2cff      	cmp	r4, #255	; 0xff
 8016db6:	d020      	beq.n	8016dfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8016db8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016dba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016dbe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016dc0:	4367      	muls	r7, r4
 8016dc2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016dc4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016dc8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016dca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016dce:	fb04 fa0a 	mul.w	sl, r4, sl
 8016dd2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016dd6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016dda:	44bc      	add	ip, r7
 8016ddc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016de0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016de4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016de8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016dec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016df0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016df4:	ea4c 040a 	orr.w	r4, ip, sl
 8016df8:	940e      	str	r4, [sp, #56]	; 0x38
 8016dfa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016dfc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016e00:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016e02:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016e06:	fb0e f707 	mul.w	r7, lr, r7
 8016e0a:	fb01 770c 	mla	r7, r1, ip, r7
 8016e0e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016e12:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016e14:	fb00 770c 	mla	r7, r0, ip, r7
 8016e18:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016e1c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016e1e:	fb08 770c 	mla	r7, r8, ip, r7
 8016e22:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016e26:	fb0e fe0c 	mul.w	lr, lr, ip
 8016e2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016e2e:	fb01 e303 	mla	r3, r1, r3, lr
 8016e32:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016e34:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8016e38:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016e3a:	fb00 330a 	mla	r3, r0, sl, r3
 8016e3e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8016e42:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016e46:	f8b9 3000 	ldrh.w	r3, [r9]
 8016e4a:	43d2      	mvns	r2, r2
 8016e4c:	1218      	asrs	r0, r3, #8
 8016e4e:	b2d2      	uxtb	r2, r2
 8016e50:	10d9      	asrs	r1, r3, #3
 8016e52:	0a3f      	lsrs	r7, r7, #8
 8016e54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016e58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016e5c:	00db      	lsls	r3, r3, #3
 8016e5e:	4350      	muls	r0, r2
 8016e60:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016e64:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016e68:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016e6c:	b2db      	uxtb	r3, r3
 8016e6e:	ea47 070c 	orr.w	r7, r7, ip
 8016e72:	4351      	muls	r1, r2
 8016e74:	4353      	muls	r3, r2
 8016e76:	1c42      	adds	r2, r0, #1
 8016e78:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016e7c:	0c3a      	lsrs	r2, r7, #16
 8016e7e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016e82:	4a19      	ldr	r2, [pc, #100]	; (8016ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8016e84:	b2c0      	uxtb	r0, r0
 8016e86:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016e8a:	1c4a      	adds	r2, r1, #1
 8016e8c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016e90:	0a3a      	lsrs	r2, r7, #8
 8016e92:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016e96:	00c9      	lsls	r1, r1, #3
 8016e98:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016e9c:	4301      	orrs	r1, r0
 8016e9e:	1c58      	adds	r0, r3, #1
 8016ea0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016ea4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8016ea8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8016eac:	4308      	orrs	r0, r1
 8016eae:	f8a9 0000 	strh.w	r0, [r9]
 8016eb2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016eb4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016eb6:	441a      	add	r2, r3
 8016eb8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016eba:	922d      	str	r2, [sp, #180]	; 0xb4
 8016ebc:	f109 0902 	add.w	r9, r9, #2
 8016ec0:	441d      	add	r5, r3
 8016ec2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016ec6:	e64d      	b.n	8016b64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8016ec8:	2800      	cmp	r0, #0
 8016eca:	f43f aeed 	beq.w	8016ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8016ece:	5c79      	ldrb	r1, [r7, r1]
 8016ed0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016ed4:	9109      	str	r1, [sp, #36]	; 0x24
 8016ed6:	0e09      	lsrs	r1, r1, #24
 8016ed8:	9111      	str	r1, [sp, #68]	; 0x44
 8016eda:	e6e5      	b.n	8016ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8016edc:	b01b      	add	sp, #108	; 0x6c
 8016ede:	ecbd 8b08 	vpop	{d8-d11}
 8016ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ee6:	bf00      	nop
 8016ee8:	fffff800 	.word	0xfffff800

08016eec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ef0:	b085      	sub	sp, #20
 8016ef2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8016ef6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8016efa:	9103      	str	r1, [sp, #12]
 8016efc:	fb05 7106 	mla	r1, r5, r6, r7
 8016f00:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8016f04:	2d00      	cmp	r5, #0
 8016f06:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016f0a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016f0e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8016f12:	9401      	str	r4, [sp, #4]
 8016f14:	eb03 0901 	add.w	r9, r3, r1
 8016f18:	f2c0 80c0 	blt.w	801709c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016f1c:	45a8      	cmp	r8, r5
 8016f1e:	f340 80bd 	ble.w	801709c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016f22:	2f00      	cmp	r7, #0
 8016f24:	f2c0 80b6 	blt.w	8017094 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8016f28:	42be      	cmp	r6, r7
 8016f2a:	f340 80b3 	ble.w	8017094 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8016f2e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8016f32:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8016f36:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016f3a:	d019      	beq.n	8016f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8016f3c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8016f40:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016f44:	435a      	muls	r2, r3
 8016f46:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8016f4a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8016f4e:	fb0c f403 	mul.w	r4, ip, r3
 8016f52:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8016f56:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016f5a:	441a      	add	r2, r3
 8016f5c:	f104 0320 	add.w	r3, r4, #32
 8016f60:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8016f64:	0a1b      	lsrs	r3, r3, #8
 8016f66:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8016f6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f6e:	4319      	orrs	r1, r3
 8016f70:	b289      	uxth	r1, r1
 8016f72:	1c7b      	adds	r3, r7, #1
 8016f74:	f100 8097 	bmi.w	80170a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8016f78:	429e      	cmp	r6, r3
 8016f7a:	f340 8094 	ble.w	80170a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8016f7e:	2800      	cmp	r0, #0
 8016f80:	f000 8094 	beq.w	80170ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8016f84:	f899 4001 	ldrb.w	r4, [r9, #1]
 8016f88:	9b01      	ldr	r3, [sp, #4]
 8016f8a:	2cff      	cmp	r4, #255	; 0xff
 8016f8c:	885b      	ldrh	r3, [r3, #2]
 8016f8e:	d01b      	beq.n	8016fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8016f90:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8016f94:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016f98:	fb0a f202 	mul.w	r2, sl, r2
 8016f9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016fa0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016fa4:	fb04 fa03 	mul.w	sl, r4, r3
 8016fa8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016fac:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016fb0:	441a      	add	r2, r3
 8016fb2:	f10a 0320 	add.w	r3, sl, #32
 8016fb6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016fba:	0a1b      	lsrs	r3, r3, #8
 8016fbc:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016fc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016fc4:	ea4b 0303 	orr.w	r3, fp, r3
 8016fc8:	b29b      	uxth	r3, r3
 8016fca:	3501      	adds	r5, #1
 8016fcc:	d474      	bmi.n	80170b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8016fce:	45a8      	cmp	r8, r5
 8016fd0:	dd72      	ble.n	80170b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8016fd2:	f1be 0f00 	cmp.w	lr, #0
 8016fd6:	f000 8120 	beq.w	801721a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8016fda:	2f00      	cmp	r7, #0
 8016fdc:	db69      	blt.n	80170b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8016fde:	42be      	cmp	r6, r7
 8016fe0:	dd67      	ble.n	80170b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8016fe2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8016fe6:	9a01      	ldr	r2, [sp, #4]
 8016fe8:	2dff      	cmp	r5, #255	; 0xff
 8016fea:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8016fee:	d01c      	beq.n	801702a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8016ff0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8016ff4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016ff8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016ffc:	fb05 fa0b 	mul.w	sl, r5, fp
 8017000:	fb08 f802 	mul.w	r8, r8, r2
 8017004:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017008:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801700c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017010:	4490      	add	r8, r2
 8017012:	f10a 0220 	add.w	r2, sl, #32
 8017016:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801701a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801701e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8017022:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017026:	ea4b 0b0a 	orr.w	fp, fp, sl
 801702a:	fa1f fb8b 	uxth.w	fp, fp
 801702e:	3701      	adds	r7, #1
 8017030:	d447      	bmi.n	80170c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017032:	42be      	cmp	r6, r7
 8017034:	dd45      	ble.n	80170c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017036:	2800      	cmp	r0, #0
 8017038:	d046      	beq.n	80170c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801703a:	3601      	adds	r6, #1
 801703c:	9a01      	ldr	r2, [sp, #4]
 801703e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017042:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8017046:	2fff      	cmp	r7, #255	; 0xff
 8017048:	d01a      	beq.n	8017080 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801704a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801704e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017052:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017056:	fb07 f902 	mul.w	r9, r7, r2
 801705a:	fb08 f806 	mul.w	r8, r8, r6
 801705e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017062:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017066:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801706a:	44b0      	add	r8, r6
 801706c:	f109 0620 	add.w	r6, r9, #32
 8017070:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017074:	0a36      	lsrs	r6, r6, #8
 8017076:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801707a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801707e:	4332      	orrs	r2, r6
 8017080:	b292      	uxth	r2, r2
 8017082:	280f      	cmp	r0, #15
 8017084:	d922      	bls.n	80170cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8017086:	4b69      	ldr	r3, [pc, #420]	; (801722c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8017088:	4a69      	ldr	r2, [pc, #420]	; (8017230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801708a:	486a      	ldr	r0, [pc, #424]	; (8017234 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801708c:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8017090:	f004 fa0a 	bl	801b4a8 <__assert_func>
 8017094:	f04f 0c00 	mov.w	ip, #0
 8017098:	4661      	mov	r1, ip
 801709a:	e76a      	b.n	8016f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801709c:	2400      	movs	r4, #0
 801709e:	46a4      	mov	ip, r4
 80170a0:	4623      	mov	r3, r4
 80170a2:	4621      	mov	r1, r4
 80170a4:	e791      	b.n	8016fca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80170a6:	2400      	movs	r4, #0
 80170a8:	4623      	mov	r3, r4
 80170aa:	e78e      	b.n	8016fca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80170ac:	4604      	mov	r4, r0
 80170ae:	4603      	mov	r3, r0
 80170b0:	e78b      	b.n	8016fca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80170b2:	2500      	movs	r5, #0
 80170b4:	46ab      	mov	fp, r5
 80170b6:	e7ba      	b.n	801702e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 80170b8:	2700      	movs	r7, #0
 80170ba:	463d      	mov	r5, r7
 80170bc:	463a      	mov	r2, r7
 80170be:	46bb      	mov	fp, r7
 80170c0:	e7df      	b.n	8017082 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80170c2:	2700      	movs	r7, #0
 80170c4:	463a      	mov	r2, r7
 80170c6:	e7dc      	b.n	8017082 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80170c8:	4607      	mov	r7, r0
 80170ca:	4602      	mov	r2, r0
 80170cc:	f1be 0f0f 	cmp.w	lr, #15
 80170d0:	d8d9      	bhi.n	8017086 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80170d2:	b286      	uxth	r6, r0
 80170d4:	fa1f f98e 	uxth.w	r9, lr
 80170d8:	fb06 f809 	mul.w	r8, r6, r9
 80170dc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80170e0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80170e4:	0136      	lsls	r6, r6, #4
 80170e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80170ea:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80170ee:	9601      	str	r6, [sp, #4]
 80170f0:	ea4a 0101 	orr.w	r1, sl, r1
 80170f4:	fa1f f689 	uxth.w	r6, r9
 80170f8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80170fc:	fb10 f90e 	smulbb	r9, r0, lr
 8017100:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017104:	9602      	str	r6, [sp, #8]
 8017106:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801710a:	460e      	mov	r6, r1
 801710c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017110:	f1ce 0110 	rsb	r1, lr, #16
 8017114:	1a09      	subs	r1, r1, r0
 8017116:	ea4a 0303 	orr.w	r3, sl, r3
 801711a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801711e:	4343      	muls	r3, r0
 8017120:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017124:	9801      	ldr	r0, [sp, #4]
 8017126:	fb01 3106 	mla	r1, r1, r6, r3
 801712a:	9e02      	ldr	r6, [sp, #8]
 801712c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8017130:	1b80      	subs	r0, r0, r6
 8017132:	9e01      	ldr	r6, [sp, #4]
 8017134:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017138:	eba6 0608 	sub.w	r6, r6, r8
 801713c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017140:	b2b6      	uxth	r6, r6
 8017142:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017146:	ea4a 0202 	orr.w	r2, sl, r2
 801714a:	b280      	uxth	r0, r0
 801714c:	4374      	muls	r4, r6
 801714e:	fb09 1302 	mla	r3, r9, r2, r1
 8017152:	fb0c 4400 	mla	r4, ip, r0, r4
 8017156:	9a03      	ldr	r2, [sp, #12]
 8017158:	9802      	ldr	r0, [sp, #8]
 801715a:	8811      	ldrh	r1, [r2, #0]
 801715c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8017160:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017164:	fb00 4505 	mla	r5, r0, r5, r4
 8017168:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801716c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017170:	fb08 5707 	mla	r7, r8, r7, r5
 8017174:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017178:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801717c:	b292      	uxth	r2, r2
 801717e:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017182:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017186:	4357      	muls	r7, r2
 8017188:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801718c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017190:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017194:	f107 0801 	add.w	r8, r7, #1
 8017198:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801719c:	ea43 0e0e 	orr.w	lr, r3, lr
 80171a0:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80171a4:	fa1f f38e 	uxth.w	r3, lr
 80171a8:	1208      	asrs	r0, r1, #8
 80171aa:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80171ae:	b2ff      	uxtb	r7, r7
 80171b0:	121c      	asrs	r4, r3, #8
 80171b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80171b6:	fb10 f007 	smulbb	r0, r0, r7
 80171ba:	10cd      	asrs	r5, r1, #3
 80171bc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80171c0:	fb04 0402 	mla	r4, r4, r2, r0
 80171c4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80171c8:	10d8      	asrs	r0, r3, #3
 80171ca:	fb15 f507 	smulbb	r5, r5, r7
 80171ce:	00db      	lsls	r3, r3, #3
 80171d0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80171d4:	fb00 5002 	mla	r0, r0, r2, r5
 80171d8:	b2dd      	uxtb	r5, r3
 80171da:	00cb      	lsls	r3, r1, #3
 80171dc:	b2db      	uxtb	r3, r3
 80171de:	fb13 f307 	smulbb	r3, r3, r7
 80171e2:	fb05 3202 	mla	r2, r5, r2, r3
 80171e6:	b2a4      	uxth	r4, r4
 80171e8:	b292      	uxth	r2, r2
 80171ea:	1c63      	adds	r3, r4, #1
 80171ec:	b280      	uxth	r0, r0
 80171ee:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80171f2:	1c53      	adds	r3, r2, #1
 80171f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80171f8:	1c42      	adds	r2, r0, #1
 80171fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80171fe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017202:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017206:	0940      	lsrs	r0, r0, #5
 8017208:	4323      	orrs	r3, r4
 801720a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801720e:	9a03      	ldr	r2, [sp, #12]
 8017210:	4303      	orrs	r3, r0
 8017212:	8013      	strh	r3, [r2, #0]
 8017214:	b005      	add	sp, #20
 8017216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801721a:	280f      	cmp	r0, #15
 801721c:	f63f af33 	bhi.w	8017086 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8017220:	4677      	mov	r7, lr
 8017222:	4675      	mov	r5, lr
 8017224:	4672      	mov	r2, lr
 8017226:	46f3      	mov	fp, lr
 8017228:	e753      	b.n	80170d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801722a:	bf00      	nop
 801722c:	0801f576 	.word	0x0801f576
 8017230:	0801fb42 	.word	0x0801fb42
 8017234:	0801f5fa 	.word	0x0801f5fa

08017238 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801723c:	ed2d 8b08 	vpush	{d8-d11}
 8017240:	b097      	sub	sp, #92	; 0x5c
 8017242:	eeb0 aa40 	vmov.f32	s20, s0
 8017246:	9214      	str	r2, [sp, #80]	; 0x50
 8017248:	9308      	str	r3, [sp, #32]
 801724a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801724c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017250:	9312      	str	r3, [sp, #72]	; 0x48
 8017252:	9111      	str	r1, [sp, #68]	; 0x44
 8017254:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017258:	9015      	str	r0, [sp, #84]	; 0x54
 801725a:	6850      	ldr	r0, [r2, #4]
 801725c:	6812      	ldr	r2, [r2, #0]
 801725e:	fb00 1303 	mla	r3, r0, r3, r1
 8017262:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017266:	9309      	str	r3, [sp, #36]	; 0x24
 8017268:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801726a:	681b      	ldr	r3, [r3, #0]
 801726c:	930b      	str	r3, [sp, #44]	; 0x2c
 801726e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017270:	685b      	ldr	r3, [r3, #4]
 8017272:	930c      	str	r3, [sp, #48]	; 0x30
 8017274:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017278:	930a      	str	r3, [sp, #40]	; 0x28
 801727a:	eef0 9a60 	vmov.f32	s19, s1
 801727e:	eeb0 9a41 	vmov.f32	s18, s2
 8017282:	eeb0 8a62 	vmov.f32	s16, s5
 8017286:	eef0 8a43 	vmov.f32	s17, s6
 801728a:	eef0 ba44 	vmov.f32	s23, s8
 801728e:	eeb0 ba64 	vmov.f32	s22, s9
 8017292:	eef0 aa45 	vmov.f32	s21, s10
 8017296:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017298:	2b00      	cmp	r3, #0
 801729a:	dc03      	bgt.n	80172a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801729c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801729e:	2b00      	cmp	r3, #0
 80172a0:	f340 83cb 	ble.w	8017a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80172a4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80172a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80172aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80172ae:	1e48      	subs	r0, r1, #1
 80172b0:	1e55      	subs	r5, r2, #1
 80172b2:	9b08      	ldr	r3, [sp, #32]
 80172b4:	2b00      	cmp	r3, #0
 80172b6:	f340 81a3 	ble.w	8017600 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80172ba:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80172bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80172be:	1436      	asrs	r6, r6, #16
 80172c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80172c4:	d406      	bmi.n	80172d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80172c6:	4286      	cmp	r6, r0
 80172c8:	da04      	bge.n	80172d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80172ca:	2b00      	cmp	r3, #0
 80172cc:	db02      	blt.n	80172d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80172ce:	42ab      	cmp	r3, r5
 80172d0:	f2c0 8197 	blt.w	8017602 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80172d4:	3601      	adds	r6, #1
 80172d6:	f100 8184 	bmi.w	80175e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80172da:	42b1      	cmp	r1, r6
 80172dc:	f2c0 8181 	blt.w	80175e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80172e0:	3301      	adds	r3, #1
 80172e2:	f100 817e 	bmi.w	80175e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80172e6:	429a      	cmp	r2, r3
 80172e8:	f2c0 817b 	blt.w	80175e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80172ec:	9b08      	ldr	r3, [sp, #32]
 80172ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80172f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80172f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80172f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80172f8:	2b00      	cmp	r3, #0
 80172fa:	f340 81a4 	ble.w	8017646 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80172fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017300:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017302:	1418      	asrs	r0, r3, #16
 8017304:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017306:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801730a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801730c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017310:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017312:	142d      	asrs	r5, r5, #16
 8017314:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017318:	f100 81f8 	bmi.w	801770c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801731c:	f102 3eff 	add.w	lr, r2, #4294967295
 8017320:	4575      	cmp	r5, lr
 8017322:	f280 81f3 	bge.w	801770c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017326:	2800      	cmp	r0, #0
 8017328:	f2c0 81f0 	blt.w	801770c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801732c:	f103 3eff 	add.w	lr, r3, #4294967295
 8017330:	4570      	cmp	r0, lr
 8017332:	f280 81eb 	bge.w	801770c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017336:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017338:	b212      	sxth	r2, r2
 801733a:	fb00 5002 	mla	r0, r0, r2, r5
 801733e:	fa1f fe81 	uxth.w	lr, r1
 8017342:	eb03 0a00 	add.w	sl, r3, r0
 8017346:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801734a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801734e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017352:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017356:	b29b      	uxth	r3, r3
 8017358:	f1bc 0f00 	cmp.w	ip, #0
 801735c:	f000 81b9 	beq.w	80176d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017360:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017364:	940d      	str	r4, [sp, #52]	; 0x34
 8017366:	eb0a 0b02 	add.w	fp, sl, r2
 801736a:	fa1f fa8c 	uxth.w	sl, ip
 801736e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017372:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017376:	fa1f fa8a 	uxth.w	sl, sl
 801737a:	eba5 050e 	sub.w	r5, r5, lr
 801737e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017382:	940e      	str	r4, [sp, #56]	; 0x38
 8017384:	eba3 030a 	sub.w	r3, r3, sl
 8017388:	b2ad      	uxth	r5, r5
 801738a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801738c:	b29b      	uxth	r3, r3
 801738e:	fb08 f505 	mul.w	r5, r8, r5
 8017392:	fb09 5303 	mla	r3, r9, r3, r5
 8017396:	fb0a 3304 	mla	r3, sl, r4, r3
 801739a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801739c:	fb0e 3304 	mla	r3, lr, r4, r3
 80173a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80173a4:	2b00      	cmp	r3, #0
 80173a6:	f000 810f 	beq.w	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80173aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80173ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80173b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80173b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80173b8:	f000 8190 	beq.w	80176dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80173bc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80173c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80173c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80173c8:	fb09 f000 	mul.w	r0, r9, r0
 80173cc:	fb0a fe0e 	mul.w	lr, sl, lr
 80173d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80173d4:	f100 0b20 	add.w	fp, r0, #32
 80173d8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80173dc:	44ce      	add	lr, r9
 80173de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80173e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80173e6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80173ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80173ee:	ea4e 0909 	orr.w	r9, lr, r9
 80173f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80173f6:	8868      	ldrh	r0, [r5, #2]
 80173f8:	d019      	beq.n	801742e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80173fa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80173fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017402:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017406:	fb08 f800 	mul.w	r8, r8, r0
 801740a:	fb0a fe0e 	mul.w	lr, sl, lr
 801740e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017412:	f108 0b20 	add.w	fp, r8, #32
 8017416:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801741a:	4486      	add	lr, r0
 801741c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017420:	0a00      	lsrs	r0, r0, #8
 8017422:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017426:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801742a:	ea4e 0000 	orr.w	r0, lr, r0
 801742e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017432:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017436:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801743a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801743e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017442:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017446:	ea4e 0909 	orr.w	r9, lr, r9
 801744a:	ea4a 0000 	orr.w	r0, sl, r0
 801744e:	f1bc 0f00 	cmp.w	ip, #0
 8017452:	f000 8145 	beq.w	80176e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8017456:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801745a:	3a01      	subs	r2, #1
 801745c:	0052      	lsls	r2, r2, #1
 801745e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017460:	3202      	adds	r2, #2
 8017462:	2cff      	cmp	r4, #255	; 0xff
 8017464:	eb05 0e02 	add.w	lr, r5, r2
 8017468:	5aaa      	ldrh	r2, [r5, r2]
 801746a:	d018      	beq.n	801749e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801746c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017470:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017474:	fb04 fa02 	mul.w	sl, r4, r2
 8017478:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801747c:	fb08 f805 	mul.w	r8, r8, r5
 8017480:	f10a 0520 	add.w	r5, sl, #32
 8017484:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017488:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801748c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017490:	4442      	add	r2, r8
 8017492:	0a2d      	lsrs	r5, r5, #8
 8017494:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017498:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801749c:	432a      	orrs	r2, r5
 801749e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80174a0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80174a4:	2cff      	cmp	r4, #255	; 0xff
 80174a6:	d01a      	beq.n	80174de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80174a8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80174ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80174b0:	fb04 fa05 	mul.w	sl, r4, r5
 80174b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80174b8:	fb08 f80e 	mul.w	r8, r8, lr
 80174bc:	f10a 0e20 	add.w	lr, sl, #32
 80174c0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80174c4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80174c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80174cc:	4445      	add	r5, r8
 80174ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80174d2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80174d6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80174da:	ea45 050e 	orr.w	r5, r5, lr
 80174de:	fb1c fe01 	smulbb	lr, ip, r1
 80174e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80174e6:	f1cc 0810 	rsb	r8, ip, #16
 80174ea:	eba8 0801 	sub.w	r8, r8, r1
 80174ee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80174f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80174f6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80174fa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80174fe:	4341      	muls	r1, r0
 8017500:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017504:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017508:	ea4a 0202 	orr.w	r2, sl, r2
 801750c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017510:	fb09 1108 	mla	r1, r9, r8, r1
 8017514:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017518:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801751c:	fb0c 1102 	mla	r1, ip, r2, r1
 8017520:	ea4b 0505 	orr.w	r5, fp, r5
 8017524:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017528:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801752c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017530:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017534:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017538:	ea42 0e0e 	orr.w	lr, r2, lr
 801753c:	fa1f f28e 	uxth.w	r2, lr
 8017540:	2bff      	cmp	r3, #255	; 0xff
 8017542:	d103      	bne.n	801754c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017544:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017546:	29ff      	cmp	r1, #255	; 0xff
 8017548:	f000 80de 	beq.w	8017708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 801754c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801754e:	8838      	ldrh	r0, [r7, #0]
 8017550:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017552:	434b      	muls	r3, r1
 8017554:	f103 0c01 	add.w	ip, r3, #1
 8017558:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801755c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017560:	fa5f fc83 	uxtb.w	ip, r3
 8017564:	1203      	asrs	r3, r0, #8
 8017566:	1215      	asrs	r5, r2, #8
 8017568:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801756c:	fb13 f30c 	smulbb	r3, r3, ip
 8017570:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017574:	fb05 3501 	mla	r5, r5, r1, r3
 8017578:	10c3      	asrs	r3, r0, #3
 801757a:	10d1      	asrs	r1, r2, #3
 801757c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017580:	fb13 f30c 	smulbb	r3, r3, ip
 8017584:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017588:	fb01 3104 	mla	r1, r1, r4, r3
 801758c:	00c3      	lsls	r3, r0, #3
 801758e:	00d2      	lsls	r2, r2, #3
 8017590:	b2db      	uxtb	r3, r3
 8017592:	b2d2      	uxtb	r2, r2
 8017594:	fb13 f30c 	smulbb	r3, r3, ip
 8017598:	b2ad      	uxth	r5, r5
 801759a:	fb02 3304 	mla	r3, r2, r4, r3
 801759e:	b29a      	uxth	r2, r3
 80175a0:	1c6b      	adds	r3, r5, #1
 80175a2:	b289      	uxth	r1, r1
 80175a4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80175a8:	1c53      	adds	r3, r2, #1
 80175aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80175ae:	1c4a      	adds	r2, r1, #1
 80175b0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80175b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80175b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80175bc:	0949      	lsrs	r1, r1, #5
 80175be:	432b      	orrs	r3, r5
 80175c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80175c4:	430b      	orrs	r3, r1
 80175c6:	803b      	strh	r3, [r7, #0]
 80175c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80175ca:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80175cc:	4413      	add	r3, r2
 80175ce:	9329      	str	r3, [sp, #164]	; 0xa4
 80175d0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80175d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80175d4:	441a      	add	r2, r3
 80175d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80175d8:	922a      	str	r2, [sp, #168]	; 0xa8
 80175da:	3b01      	subs	r3, #1
 80175dc:	3702      	adds	r7, #2
 80175de:	9313      	str	r3, [sp, #76]	; 0x4c
 80175e0:	e689      	b.n	80172f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80175e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80175e4:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80175e6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 80175e8:	4433      	add	r3, r6
 80175ea:	9329      	str	r3, [sp, #164]	; 0xa4
 80175ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80175ee:	441c      	add	r4, r3
 80175f0:	9b08      	ldr	r3, [sp, #32]
 80175f2:	942a      	str	r4, [sp, #168]	; 0xa8
 80175f4:	3b01      	subs	r3, #1
 80175f6:	9308      	str	r3, [sp, #32]
 80175f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80175fa:	3302      	adds	r3, #2
 80175fc:	9309      	str	r3, [sp, #36]	; 0x24
 80175fe:	e658      	b.n	80172b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017600:	d028      	beq.n	8017654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8017602:	9b08      	ldr	r3, [sp, #32]
 8017604:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017606:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017608:	3b01      	subs	r3, #1
 801760a:	fb00 5003 	mla	r0, r0, r3, r5
 801760e:	1400      	asrs	r0, r0, #16
 8017610:	f53f ae6c 	bmi.w	80172ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017614:	3901      	subs	r1, #1
 8017616:	4288      	cmp	r0, r1
 8017618:	f6bf ae68 	bge.w	80172ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801761c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801761e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8017620:	fb01 0303 	mla	r3, r1, r3, r0
 8017624:	141b      	asrs	r3, r3, #16
 8017626:	f53f ae61 	bmi.w	80172ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801762a:	3a01      	subs	r2, #1
 801762c:	4293      	cmp	r3, r2
 801762e:	f6bf ae5d 	bge.w	80172ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017632:	9b08      	ldr	r3, [sp, #32]
 8017634:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017638:	9313      	str	r3, [sp, #76]	; 0x4c
 801763a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801763e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017640:	2b00      	cmp	r3, #0
 8017642:	f300 8082 	bgt.w	801774a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017646:	9b08      	ldr	r3, [sp, #32]
 8017648:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801764c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801764e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017652:	9309      	str	r3, [sp, #36]	; 0x24
 8017654:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017656:	2b00      	cmp	r3, #0
 8017658:	f340 81ef 	ble.w	8017a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801765c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017660:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017664:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017668:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801766a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801766e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017672:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017676:	eef0 6a48 	vmov.f32	s13, s16
 801767a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801767e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017682:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017686:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801768a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801768e:	eef0 6a68 	vmov.f32	s13, s17
 8017692:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017696:	ee18 2a10 	vmov	r2, s16
 801769a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801769e:	fb92 f3f3 	sdiv	r3, r2, r3
 80176a2:	ee18 2a90 	vmov	r2, s17
 80176a6:	932b      	str	r3, [sp, #172]	; 0xac
 80176a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80176aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80176ae:	932c      	str	r3, [sp, #176]	; 0xb0
 80176b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80176b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80176b4:	3b01      	subs	r3, #1
 80176b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80176ba:	9311      	str	r3, [sp, #68]	; 0x44
 80176bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80176be:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80176c2:	bf08      	it	eq
 80176c4:	4613      	moveq	r3, r2
 80176c6:	9308      	str	r3, [sp, #32]
 80176c8:	eef0 8a67 	vmov.f32	s17, s15
 80176cc:	eeb0 8a47 	vmov.f32	s16, s14
 80176d0:	e5e1      	b.n	8017296 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80176d2:	fb08 f505 	mul.w	r5, r8, r5
 80176d6:	fb09 5303 	mla	r3, r9, r3, r5
 80176da:	e661      	b.n	80173a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 80176dc:	4681      	mov	r9, r0
 80176de:	e688      	b.n	80173f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80176e0:	f1c1 0210 	rsb	r2, r1, #16
 80176e4:	4341      	muls	r1, r0
 80176e6:	fb09 1902 	mla	r9, r9, r2, r1
 80176ea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80176ee:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80176f2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80176f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80176fa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80176fe:	ea42 0909 	orr.w	r9, r2, r9
 8017702:	fa1f f289 	uxth.w	r2, r9
 8017706:	e71b      	b.n	8017540 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8017708:	803a      	strh	r2, [r7, #0]
 801770a:	e75d      	b.n	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801770c:	f115 0e01 	adds.w	lr, r5, #1
 8017710:	f53f af5a 	bmi.w	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017714:	4572      	cmp	r2, lr
 8017716:	f6ff af57 	blt.w	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801771a:	f110 0e01 	adds.w	lr, r0, #1
 801771e:	f53f af53 	bmi.w	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017722:	4573      	cmp	r3, lr
 8017724:	f6ff af50 	blt.w	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017728:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801772a:	9502      	str	r5, [sp, #8]
 801772c:	b21b      	sxth	r3, r3
 801772e:	b212      	sxth	r2, r2
 8017730:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017734:	9301      	str	r3, [sp, #4]
 8017736:	9200      	str	r2, [sp, #0]
 8017738:	e9cd c405 	strd	ip, r4, [sp, #20]
 801773c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017740:	4639      	mov	r1, r7
 8017742:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017744:	f7ff fbd2 	bl	8016eec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017748:	e73e      	b.n	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801774a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801774c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017750:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017752:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017756:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017758:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801775c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801775e:	141f      	asrs	r7, r3, #16
 8017760:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017762:	141b      	asrs	r3, r3, #16
 8017764:	fb01 3707 	mla	r7, r1, r7, r3
 8017768:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801776a:	fa1f fc82 	uxth.w	ip, r2
 801776e:	eb03 0a07 	add.w	sl, r3, r7
 8017772:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017776:	f813 9007 	ldrb.w	r9, [r3, r7]
 801777a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801777e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017782:	b29b      	uxth	r3, r3
 8017784:	2d00      	cmp	r5, #0
 8017786:	f000 813d 	beq.w	8017a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801778a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801778e:	940f      	str	r4, [sp, #60]	; 0x3c
 8017790:	eb0a 0b01 	add.w	fp, sl, r1
 8017794:	fa1f fa85 	uxth.w	sl, r5
 8017798:	fb0a fc0c 	mul.w	ip, sl, ip
 801779c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80177a0:	fa1f fa8a 	uxth.w	sl, sl
 80177a4:	eba0 000c 	sub.w	r0, r0, ip
 80177a8:	eba3 030a 	sub.w	r3, r3, sl
 80177ac:	b280      	uxth	r0, r0
 80177ae:	fb08 f000 	mul.w	r0, r8, r0
 80177b2:	b29b      	uxth	r3, r3
 80177b4:	fb09 0303 	mla	r3, r9, r3, r0
 80177b8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80177ba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80177be:	9410      	str	r4, [sp, #64]	; 0x40
 80177c0:	fb0a 3300 	mla	r3, sl, r0, r3
 80177c4:	fb0c 3304 	mla	r3, ip, r4, r3
 80177c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80177cc:	2b00      	cmp	r3, #0
 80177ce:	f000 810b 	beq.w	80179e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80177d2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80177d4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80177d6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80177da:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80177de:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80177e2:	f000 8114 	beq.w	8017a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 80177e6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80177ea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80177ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80177f2:	fb09 f707 	mul.w	r7, r9, r7
 80177f6:	fb0a fc0c 	mul.w	ip, sl, ip
 80177fa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80177fe:	f107 0b20 	add.w	fp, r7, #32
 8017802:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017806:	44cc      	add	ip, r9
 8017808:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801780c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017810:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017814:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017818:	ea4c 0909 	orr.w	r9, ip, r9
 801781c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017820:	8847      	ldrh	r7, [r0, #2]
 8017822:	d019      	beq.n	8017858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8017824:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017828:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801782c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017830:	fb08 f807 	mul.w	r8, r8, r7
 8017834:	fb0a fc0c 	mul.w	ip, sl, ip
 8017838:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801783c:	f108 0b20 	add.w	fp, r8, #32
 8017840:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017844:	44bc      	add	ip, r7
 8017846:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801784a:	0a3f      	lsrs	r7, r7, #8
 801784c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017850:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017854:	ea4c 0707 	orr.w	r7, ip, r7
 8017858:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801785c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017860:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017864:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017868:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801786c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017870:	ea4c 0909 	orr.w	r9, ip, r9
 8017874:	ea4a 0707 	orr.w	r7, sl, r7
 8017878:	2d00      	cmp	r5, #0
 801787a:	f000 80ca 	beq.w	8017a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801787e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017882:	3901      	subs	r1, #1
 8017884:	0049      	lsls	r1, r1, #1
 8017886:	3102      	adds	r1, #2
 8017888:	eb00 0c01 	add.w	ip, r0, r1
 801788c:	5a41      	ldrh	r1, [r0, r1]
 801788e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017890:	28ff      	cmp	r0, #255	; 0xff
 8017892:	d019      	beq.n	80178c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8017894:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017896:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801789a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801789e:	fb04 fa01 	mul.w	sl, r4, r1
 80178a2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80178a6:	fb08 f800 	mul.w	r8, r8, r0
 80178aa:	f10a 0020 	add.w	r0, sl, #32
 80178ae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80178b2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80178b6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80178ba:	4441      	add	r1, r8
 80178bc:	0a00      	lsrs	r0, r0, #8
 80178be:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80178c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80178c6:	4301      	orrs	r1, r0
 80178c8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80178ca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80178ce:	2cff      	cmp	r4, #255	; 0xff
 80178d0:	d01a      	beq.n	8017908 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 80178d2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80178d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80178da:	fb04 fa00 	mul.w	sl, r4, r0
 80178de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80178e2:	fb08 f80c 	mul.w	r8, r8, ip
 80178e6:	f10a 0c20 	add.w	ip, sl, #32
 80178ea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80178ee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80178f2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80178f6:	4440      	add	r0, r8
 80178f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80178fc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017900:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017904:	ea40 000c 	orr.w	r0, r0, ip
 8017908:	fb15 fc02 	smulbb	ip, r5, r2
 801790c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017910:	f1c5 0810 	rsb	r8, r5, #16
 8017914:	eba8 0802 	sub.w	r8, r8, r2
 8017918:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801791c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017920:	437a      	muls	r2, r7
 8017922:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017926:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801792a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801792e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017932:	fb09 2208 	mla	r2, r9, r8, r2
 8017936:	ea4a 0101 	orr.w	r1, sl, r1
 801793a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801793e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017942:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017946:	fb05 2201 	mla	r2, r5, r1, r2
 801794a:	ea4b 0000 	orr.w	r0, fp, r0
 801794e:	fb0c 2200 	mla	r2, ip, r0, r2
 8017952:	0d57      	lsrs	r7, r2, #21
 8017954:	0952      	lsrs	r2, r2, #5
 8017956:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801795a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801795e:	433a      	orrs	r2, r7
 8017960:	2bff      	cmp	r3, #255	; 0xff
 8017962:	b292      	uxth	r2, r2
 8017964:	d102      	bne.n	801796c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017966:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017968:	29ff      	cmp	r1, #255	; 0xff
 801796a:	d063      	beq.n	8017a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 801796c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801796e:	f8be 1000 	ldrh.w	r1, [lr]
 8017972:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017974:	4343      	muls	r3, r0
 8017976:	1c58      	adds	r0, r3, #1
 8017978:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801797c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017980:	1208      	asrs	r0, r1, #8
 8017982:	b2db      	uxtb	r3, r3
 8017984:	1215      	asrs	r5, r2, #8
 8017986:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801798a:	fb10 f003 	smulbb	r0, r0, r3
 801798e:	10cf      	asrs	r7, r1, #3
 8017990:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017994:	00c9      	lsls	r1, r1, #3
 8017996:	fb05 0504 	mla	r5, r5, r4, r0
 801799a:	b2c9      	uxtb	r1, r1
 801799c:	10d0      	asrs	r0, r2, #3
 801799e:	00d2      	lsls	r2, r2, #3
 80179a0:	fb11 f103 	smulbb	r1, r1, r3
 80179a4:	b2d2      	uxtb	r2, r2
 80179a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80179aa:	fb02 1204 	mla	r2, r2, r4, r1
 80179ae:	fb17 f703 	smulbb	r7, r7, r3
 80179b2:	b2ad      	uxth	r5, r5
 80179b4:	b292      	uxth	r2, r2
 80179b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80179ba:	fb00 7004 	mla	r0, r0, r4, r7
 80179be:	1c6b      	adds	r3, r5, #1
 80179c0:	1c57      	adds	r7, r2, #1
 80179c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80179c6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80179ca:	b280      	uxth	r0, r0
 80179cc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80179d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80179d4:	433d      	orrs	r5, r7
 80179d6:	1c47      	adds	r7, r0, #1
 80179d8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80179dc:	097f      	lsrs	r7, r7, #5
 80179de:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80179e2:	433d      	orrs	r5, r7
 80179e4:	f8ae 5000 	strh.w	r5, [lr]
 80179e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80179ea:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80179ec:	4413      	add	r3, r2
 80179ee:	9329      	str	r3, [sp, #164]	; 0xa4
 80179f0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80179f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80179f4:	441a      	add	r2, r3
 80179f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80179f8:	922a      	str	r2, [sp, #168]	; 0xa8
 80179fa:	3b01      	subs	r3, #1
 80179fc:	f10e 0e02 	add.w	lr, lr, #2
 8017a00:	9313      	str	r3, [sp, #76]	; 0x4c
 8017a02:	e61c      	b.n	801763e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8017a04:	fb08 f000 	mul.w	r0, r8, r0
 8017a08:	fb09 0303 	mla	r3, r9, r3, r0
 8017a0c:	e6dc      	b.n	80177c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8017a0e:	46b9      	mov	r9, r7
 8017a10:	e704      	b.n	801781c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8017a12:	f1c2 0110 	rsb	r1, r2, #16
 8017a16:	437a      	muls	r2, r7
 8017a18:	fb09 2901 	mla	r9, r9, r1, r2
 8017a1c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017a20:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017a24:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017a28:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017a2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017a30:	4302      	orrs	r2, r0
 8017a32:	e795      	b.n	8017960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8017a34:	f8ae 2000 	strh.w	r2, [lr]
 8017a38:	e7d6      	b.n	80179e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017a3a:	b017      	add	sp, #92	; 0x5c
 8017a3c:	ecbd 8b08 	vpop	{d8-d11}
 8017a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a48:	b085      	sub	sp, #20
 8017a4a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8017a4e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017a52:	9103      	str	r1, [sp, #12]
 8017a54:	fb05 7106 	mla	r1, r5, r6, r7
 8017a58:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8017a5c:	2d00      	cmp	r5, #0
 8017a5e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017a62:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017a66:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8017a6a:	9401      	str	r4, [sp, #4]
 8017a6c:	eb02 0901 	add.w	r9, r2, r1
 8017a70:	f2c0 80c0 	blt.w	8017bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017a74:	45a8      	cmp	r8, r5
 8017a76:	f340 80bd 	ble.w	8017bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017a7a:	2f00      	cmp	r7, #0
 8017a7c:	f2c0 80b6 	blt.w	8017bec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017a80:	42be      	cmp	r6, r7
 8017a82:	f340 80b3 	ble.w	8017bec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017a86:	f812 c001 	ldrb.w	ip, [r2, r1]
 8017a8a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8017a8e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017a92:	d019      	beq.n	8017ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8017a94:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017a98:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017a9c:	435a      	muls	r2, r3
 8017a9e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8017aa2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8017aa6:	fb0c f403 	mul.w	r4, ip, r3
 8017aaa:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8017aae:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017ab2:	441a      	add	r2, r3
 8017ab4:	f104 0320 	add.w	r3, r4, #32
 8017ab8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017abc:	0a1b      	lsrs	r3, r3, #8
 8017abe:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8017ac2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017ac6:	4319      	orrs	r1, r3
 8017ac8:	b289      	uxth	r1, r1
 8017aca:	1c7b      	adds	r3, r7, #1
 8017acc:	f100 8097 	bmi.w	8017bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017ad0:	429e      	cmp	r6, r3
 8017ad2:	f340 8094 	ble.w	8017bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017ad6:	2800      	cmp	r0, #0
 8017ad8:	f000 8094 	beq.w	8017c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8017adc:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017ae0:	9b01      	ldr	r3, [sp, #4]
 8017ae2:	2cff      	cmp	r4, #255	; 0xff
 8017ae4:	885b      	ldrh	r3, [r3, #2]
 8017ae6:	d01b      	beq.n	8017b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8017ae8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017aec:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017af0:	fb0a f202 	mul.w	r2, sl, r2
 8017af4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017af8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017afc:	fb04 fa03 	mul.w	sl, r4, r3
 8017b00:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017b04:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017b08:	441a      	add	r2, r3
 8017b0a:	f10a 0320 	add.w	r3, sl, #32
 8017b0e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017b12:	0a1b      	lsrs	r3, r3, #8
 8017b14:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017b18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b1c:	ea4b 0303 	orr.w	r3, fp, r3
 8017b20:	b29b      	uxth	r3, r3
 8017b22:	3501      	adds	r5, #1
 8017b24:	d474      	bmi.n	8017c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017b26:	45a8      	cmp	r8, r5
 8017b28:	dd72      	ble.n	8017c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017b2a:	f1be 0f00 	cmp.w	lr, #0
 8017b2e:	f000 8110 	beq.w	8017d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8017b32:	2f00      	cmp	r7, #0
 8017b34:	db69      	blt.n	8017c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017b36:	42be      	cmp	r6, r7
 8017b38:	dd67      	ble.n	8017c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017b3a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8017b3e:	9a01      	ldr	r2, [sp, #4]
 8017b40:	2dff      	cmp	r5, #255	; 0xff
 8017b42:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8017b46:	d01c      	beq.n	8017b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8017b48:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8017b4c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017b50:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017b54:	fb05 fa0b 	mul.w	sl, r5, fp
 8017b58:	fb08 f802 	mul.w	r8, r8, r2
 8017b5c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017b60:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8017b64:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017b68:	4490      	add	r8, r2
 8017b6a:	f10a 0220 	add.w	r2, sl, #32
 8017b6e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8017b72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017b76:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8017b7a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017b7e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8017b82:	fa1f fb8b 	uxth.w	fp, fp
 8017b86:	3701      	adds	r7, #1
 8017b88:	d447      	bmi.n	8017c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8017b8a:	42be      	cmp	r6, r7
 8017b8c:	dd45      	ble.n	8017c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8017b8e:	2800      	cmp	r0, #0
 8017b90:	d046      	beq.n	8017c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8017b92:	3601      	adds	r6, #1
 8017b94:	9a01      	ldr	r2, [sp, #4]
 8017b96:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017b9a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8017b9e:	2fff      	cmp	r7, #255	; 0xff
 8017ba0:	d01a      	beq.n	8017bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8017ba2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8017ba6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017baa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017bae:	fb07 f902 	mul.w	r9, r7, r2
 8017bb2:	fb08 f806 	mul.w	r8, r8, r6
 8017bb6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017bba:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017bbe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017bc2:	44b0      	add	r8, r6
 8017bc4:	f109 0620 	add.w	r6, r9, #32
 8017bc8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017bcc:	0a36      	lsrs	r6, r6, #8
 8017bce:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8017bd2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017bd6:	4332      	orrs	r2, r6
 8017bd8:	b292      	uxth	r2, r2
 8017bda:	280f      	cmp	r0, #15
 8017bdc:	d922      	bls.n	8017c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8017bde:	4b61      	ldr	r3, [pc, #388]	; (8017d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8017be0:	4a61      	ldr	r2, [pc, #388]	; (8017d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8017be2:	4862      	ldr	r0, [pc, #392]	; (8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8017be4:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8017be8:	f003 fc5e 	bl	801b4a8 <__assert_func>
 8017bec:	f04f 0c00 	mov.w	ip, #0
 8017bf0:	4661      	mov	r1, ip
 8017bf2:	e76a      	b.n	8017aca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8017bf4:	2400      	movs	r4, #0
 8017bf6:	46a4      	mov	ip, r4
 8017bf8:	4623      	mov	r3, r4
 8017bfa:	4621      	mov	r1, r4
 8017bfc:	e791      	b.n	8017b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017bfe:	2400      	movs	r4, #0
 8017c00:	4623      	mov	r3, r4
 8017c02:	e78e      	b.n	8017b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017c04:	4604      	mov	r4, r0
 8017c06:	4603      	mov	r3, r0
 8017c08:	e78b      	b.n	8017b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017c0a:	2500      	movs	r5, #0
 8017c0c:	46ab      	mov	fp, r5
 8017c0e:	e7ba      	b.n	8017b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8017c10:	2700      	movs	r7, #0
 8017c12:	463d      	mov	r5, r7
 8017c14:	463a      	mov	r2, r7
 8017c16:	46bb      	mov	fp, r7
 8017c18:	e7df      	b.n	8017bda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017c1a:	2700      	movs	r7, #0
 8017c1c:	463a      	mov	r2, r7
 8017c1e:	e7dc      	b.n	8017bda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017c20:	4607      	mov	r7, r0
 8017c22:	4602      	mov	r2, r0
 8017c24:	f1be 0f0f 	cmp.w	lr, #15
 8017c28:	d8d9      	bhi.n	8017bde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017c2a:	b286      	uxth	r6, r0
 8017c2c:	fa1f f98e 	uxth.w	r9, lr
 8017c30:	fb06 f809 	mul.w	r8, r6, r9
 8017c34:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017c38:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8017c3c:	0136      	lsls	r6, r6, #4
 8017c3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017c42:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017c46:	9601      	str	r6, [sp, #4]
 8017c48:	ea4a 0101 	orr.w	r1, sl, r1
 8017c4c:	fa1f f689 	uxth.w	r6, r9
 8017c50:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017c54:	fb10 f90e 	smulbb	r9, r0, lr
 8017c58:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017c5c:	9602      	str	r6, [sp, #8]
 8017c5e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017c62:	460e      	mov	r6, r1
 8017c64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017c68:	f1ce 0110 	rsb	r1, lr, #16
 8017c6c:	1a09      	subs	r1, r1, r0
 8017c6e:	ea4a 0303 	orr.w	r3, sl, r3
 8017c72:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8017c76:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017c7a:	4343      	muls	r3, r0
 8017c7c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017c80:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017c84:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017c88:	fb01 3106 	mla	r1, r1, r6, r3
 8017c8c:	ea4a 0202 	orr.w	r2, sl, r2
 8017c90:	fb09 1302 	mla	r3, r9, r2, r1
 8017c94:	9a03      	ldr	r2, [sp, #12]
 8017c96:	9802      	ldr	r0, [sp, #8]
 8017c98:	8811      	ldrh	r1, [r2, #0]
 8017c9a:	9a01      	ldr	r2, [sp, #4]
 8017c9c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017ca0:	1a12      	subs	r2, r2, r0
 8017ca2:	9801      	ldr	r0, [sp, #4]
 8017ca4:	eba0 0608 	sub.w	r6, r0, r8
 8017ca8:	b2b6      	uxth	r6, r6
 8017caa:	b292      	uxth	r2, r2
 8017cac:	4374      	muls	r4, r6
 8017cae:	fb0c 4402 	mla	r4, ip, r2, r4
 8017cb2:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017cb6:	9a02      	ldr	r2, [sp, #8]
 8017cb8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017cbc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017cc0:	fb02 4505 	mla	r5, r2, r5, r4
 8017cc4:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017cc8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017ccc:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017cd0:	fb08 5707 	mla	r7, r8, r7, r5
 8017cd4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017cd8:	120a      	asrs	r2, r1, #8
 8017cda:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017cde:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8017ce2:	b2ff      	uxtb	r7, r7
 8017ce4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017ce8:	10c8      	asrs	r0, r1, #3
 8017cea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017cee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017cf2:	00c9      	lsls	r1, r1, #3
 8017cf4:	437a      	muls	r2, r7
 8017cf6:	ea43 0e0e 	orr.w	lr, r3, lr
 8017cfa:	b2c9      	uxtb	r1, r1
 8017cfc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017d00:	fa1f f38e 	uxth.w	r3, lr
 8017d04:	4378      	muls	r0, r7
 8017d06:	434f      	muls	r7, r1
 8017d08:	1c51      	adds	r1, r2, #1
 8017d0a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8017d0e:	121a      	asrs	r2, r3, #8
 8017d10:	f022 0207 	bic.w	r2, r2, #7
 8017d14:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8017d18:	1c41      	adds	r1, r0, #1
 8017d1a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8017d1e:	10d9      	asrs	r1, r3, #3
 8017d20:	f021 0103 	bic.w	r1, r1, #3
 8017d24:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017d28:	0212      	lsls	r2, r2, #8
 8017d2a:	00c9      	lsls	r1, r1, #3
 8017d2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017d30:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8017d34:	430a      	orrs	r2, r1
 8017d36:	1c79      	adds	r1, r7, #1
 8017d38:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8017d3c:	00db      	lsls	r3, r3, #3
 8017d3e:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8017d42:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8017d46:	4313      	orrs	r3, r2
 8017d48:	9a03      	ldr	r2, [sp, #12]
 8017d4a:	8013      	strh	r3, [r2, #0]
 8017d4c:	b005      	add	sp, #20
 8017d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d52:	280f      	cmp	r0, #15
 8017d54:	f63f af43 	bhi.w	8017bde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017d58:	4677      	mov	r7, lr
 8017d5a:	4675      	mov	r5, lr
 8017d5c:	4672      	mov	r2, lr
 8017d5e:	46f3      	mov	fp, lr
 8017d60:	e763      	b.n	8017c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8017d62:	bf00      	nop
 8017d64:	0801f576 	.word	0x0801f576
 8017d68:	0801fb42 	.word	0x0801fb42
 8017d6c:	0801f5fa 	.word	0x0801f5fa

08017d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d74:	ed2d 8b08 	vpush	{d8-d11}
 8017d78:	b093      	sub	sp, #76	; 0x4c
 8017d7a:	eeb0 aa40 	vmov.f32	s20, s0
 8017d7e:	9210      	str	r2, [sp, #64]	; 0x40
 8017d80:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017d82:	910e      	str	r1, [sp, #56]	; 0x38
 8017d84:	9306      	str	r3, [sp, #24]
 8017d86:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8017d8a:	9011      	str	r0, [sp, #68]	; 0x44
 8017d8c:	6850      	ldr	r0, [r2, #4]
 8017d8e:	6812      	ldr	r2, [r2, #0]
 8017d90:	fb00 1303 	mla	r3, r0, r3, r1
 8017d94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017d98:	9307      	str	r3, [sp, #28]
 8017d9a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017d9c:	681b      	ldr	r3, [r3, #0]
 8017d9e:	9308      	str	r3, [sp, #32]
 8017da0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017da2:	685b      	ldr	r3, [r3, #4]
 8017da4:	9309      	str	r3, [sp, #36]	; 0x24
 8017da6:	eef0 9a60 	vmov.f32	s19, s1
 8017daa:	eeb0 9a41 	vmov.f32	s18, s2
 8017dae:	eeb0 8a62 	vmov.f32	s16, s5
 8017db2:	eef0 8a43 	vmov.f32	s17, s6
 8017db6:	eef0 ba44 	vmov.f32	s23, s8
 8017dba:	eeb0 ba64 	vmov.f32	s22, s9
 8017dbe:	eef0 aa45 	vmov.f32	s21, s10
 8017dc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017dc4:	2b00      	cmp	r3, #0
 8017dc6:	dc03      	bgt.n	8017dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017dc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017dca:	2b00      	cmp	r3, #0
 8017dcc:	f340 83b7 	ble.w	801853e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8017dd0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017dd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017dd6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017dda:	1e48      	subs	r0, r1, #1
 8017ddc:	1e55      	subs	r5, r2, #1
 8017dde:	9b06      	ldr	r3, [sp, #24]
 8017de0:	2b00      	cmp	r3, #0
 8017de2:	f340 819a 	ble.w	801811a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017de6:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8017de8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017dea:	1436      	asrs	r6, r6, #16
 8017dec:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017df0:	d406      	bmi.n	8017e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017df2:	4286      	cmp	r6, r0
 8017df4:	da04      	bge.n	8017e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017df6:	2b00      	cmp	r3, #0
 8017df8:	db02      	blt.n	8017e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017dfa:	42ab      	cmp	r3, r5
 8017dfc:	f2c0 818e 	blt.w	801811c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8017e00:	3601      	adds	r6, #1
 8017e02:	f100 817b 	bmi.w	80180fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017e06:	42b1      	cmp	r1, r6
 8017e08:	f2c0 8178 	blt.w	80180fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017e0c:	3301      	adds	r3, #1
 8017e0e:	f100 8175 	bmi.w	80180fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017e12:	429a      	cmp	r2, r3
 8017e14:	f2c0 8172 	blt.w	80180fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017e18:	9b06      	ldr	r3, [sp, #24]
 8017e1a:	9f07      	ldr	r7, [sp, #28]
 8017e1c:	930f      	str	r3, [sp, #60]	; 0x3c
 8017e1e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017e22:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017e24:	2b00      	cmp	r3, #0
 8017e26:	f340 819b 	ble.w	8018160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8017e2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017e2c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8017e2e:	1418      	asrs	r0, r3, #16
 8017e30:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017e32:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017e36:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017e38:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017e3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e3e:	142d      	asrs	r5, r5, #16
 8017e40:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017e44:	f100 81ef 	bmi.w	8018226 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8017e48:	f102 3eff 	add.w	lr, r2, #4294967295
 8017e4c:	4575      	cmp	r5, lr
 8017e4e:	f280 81ea 	bge.w	8018226 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8017e52:	2800      	cmp	r0, #0
 8017e54:	f2c0 81e7 	blt.w	8018226 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8017e58:	f103 3eff 	add.w	lr, r3, #4294967295
 8017e5c:	4570      	cmp	r0, lr
 8017e5e:	f280 81e2 	bge.w	8018226 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8017e62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017e64:	b212      	sxth	r2, r2
 8017e66:	fb00 5002 	mla	r0, r0, r2, r5
 8017e6a:	fa1f fe81 	uxth.w	lr, r1
 8017e6e:	eb03 0a00 	add.w	sl, r3, r0
 8017e72:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017e76:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017e7a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017e7e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017e82:	b29b      	uxth	r3, r3
 8017e84:	f1bc 0f00 	cmp.w	ip, #0
 8017e88:	f000 81b0 	beq.w	80181ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8017e8c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017e90:	940a      	str	r4, [sp, #40]	; 0x28
 8017e92:	eb0a 0b02 	add.w	fp, sl, r2
 8017e96:	fa1f fa8c 	uxth.w	sl, ip
 8017e9a:	fb0a fe0e 	mul.w	lr, sl, lr
 8017e9e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017ea2:	fa1f fa8a 	uxth.w	sl, sl
 8017ea6:	eba5 050e 	sub.w	r5, r5, lr
 8017eaa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017eae:	940b      	str	r4, [sp, #44]	; 0x2c
 8017eb0:	eba3 030a 	sub.w	r3, r3, sl
 8017eb4:	b2ad      	uxth	r5, r5
 8017eb6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017eb8:	b29b      	uxth	r3, r3
 8017eba:	fb08 f505 	mul.w	r5, r8, r5
 8017ebe:	fb09 5303 	mla	r3, r9, r3, r5
 8017ec2:	fb0a 3304 	mla	r3, sl, r4, r3
 8017ec6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017ec8:	fb0e 3304 	mla	r3, lr, r4, r3
 8017ecc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017ed0:	2b00      	cmp	r3, #0
 8017ed2:	f000 8106 	beq.w	80180e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8017ed6:	9c08      	ldr	r4, [sp, #32]
 8017ed8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017edc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017ee0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017ee4:	f000 8187 	beq.w	80181f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8017ee8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017eec:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017ef0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017ef4:	fb09 f000 	mul.w	r0, r9, r0
 8017ef8:	fb0a fe0e 	mul.w	lr, sl, lr
 8017efc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017f00:	f100 0b20 	add.w	fp, r0, #32
 8017f04:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017f08:	44ce      	add	lr, r9
 8017f0a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017f0e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017f12:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017f16:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017f1a:	ea4e 0909 	orr.w	r9, lr, r9
 8017f1e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017f22:	8868      	ldrh	r0, [r5, #2]
 8017f24:	d019      	beq.n	8017f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8017f26:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017f2a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017f2e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017f32:	fb08 f800 	mul.w	r8, r8, r0
 8017f36:	fb0a fe0e 	mul.w	lr, sl, lr
 8017f3a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017f3e:	f108 0b20 	add.w	fp, r8, #32
 8017f42:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017f46:	4486      	add	lr, r0
 8017f48:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017f4c:	0a00      	lsrs	r0, r0, #8
 8017f4e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017f52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017f56:	ea4e 0000 	orr.w	r0, lr, r0
 8017f5a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017f5e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017f62:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017f66:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017f6a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017f6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017f72:	ea4e 0909 	orr.w	r9, lr, r9
 8017f76:	ea4a 0000 	orr.w	r0, sl, r0
 8017f7a:	f1bc 0f00 	cmp.w	ip, #0
 8017f7e:	f000 813c 	beq.w	80181fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48a>
 8017f82:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017f86:	3a01      	subs	r2, #1
 8017f88:	0052      	lsls	r2, r2, #1
 8017f8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017f8c:	3202      	adds	r2, #2
 8017f8e:	2cff      	cmp	r4, #255	; 0xff
 8017f90:	eb05 0e02 	add.w	lr, r5, r2
 8017f94:	5aaa      	ldrh	r2, [r5, r2]
 8017f96:	d018      	beq.n	8017fca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8017f98:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017f9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017fa0:	fb04 fa02 	mul.w	sl, r4, r2
 8017fa4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017fa8:	fb08 f805 	mul.w	r8, r8, r5
 8017fac:	f10a 0520 	add.w	r5, sl, #32
 8017fb0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017fb4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017fb8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017fbc:	4442      	add	r2, r8
 8017fbe:	0a2d      	lsrs	r5, r5, #8
 8017fc0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017fc4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017fc8:	432a      	orrs	r2, r5
 8017fca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017fcc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017fd0:	2cff      	cmp	r4, #255	; 0xff
 8017fd2:	d01a      	beq.n	801800a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017fd4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017fd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017fdc:	fb04 fa05 	mul.w	sl, r4, r5
 8017fe0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017fe4:	fb08 f80e 	mul.w	r8, r8, lr
 8017fe8:	f10a 0e20 	add.w	lr, sl, #32
 8017fec:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017ff0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017ff4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017ff8:	4445      	add	r5, r8
 8017ffa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017ffe:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018002:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018006:	ea45 050e 	orr.w	r5, r5, lr
 801800a:	fb1c fe01 	smulbb	lr, ip, r1
 801800e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018012:	f1cc 0810 	rsb	r8, ip, #16
 8018016:	eba8 0801 	sub.w	r8, r8, r1
 801801a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801801e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018022:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018026:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801802a:	4341      	muls	r1, r0
 801802c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018030:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018034:	ea4a 0202 	orr.w	r2, sl, r2
 8018038:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801803c:	fb09 1108 	mla	r1, r9, r8, r1
 8018040:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018044:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018048:	fb0c 1102 	mla	r1, ip, r2, r1
 801804c:	ea4b 0505 	orr.w	r5, fp, r5
 8018050:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018054:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018058:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801805c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018060:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018064:	ea42 0e0e 	orr.w	lr, r2, lr
 8018068:	fa1f f28e 	uxth.w	r2, lr
 801806c:	2bff      	cmp	r3, #255	; 0xff
 801806e:	f000 80d8 	beq.w	8018222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8018072:	f8b7 c000 	ldrh.w	ip, [r7]
 8018076:	43db      	mvns	r3, r3
 8018078:	ea4f 202c 	mov.w	r0, ip, asr #8
 801807c:	fa5f fe83 	uxtb.w	lr, r3
 8018080:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018084:	fb00 f00e 	mul.w	r0, r0, lr
 8018088:	1c41      	adds	r1, r0, #1
 801808a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801808e:	1211      	asrs	r1, r2, #8
 8018090:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018094:	f021 0107 	bic.w	r1, r1, #7
 8018098:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801809c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80180a0:	486f      	ldr	r0, [pc, #444]	; (8018260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 80180a2:	fb05 f50e 	mul.w	r5, r5, lr
 80180a6:	b2c9      	uxtb	r1, r1
 80180a8:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80180ac:	1c69      	adds	r1, r5, #1
 80180ae:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80180b2:	10d1      	asrs	r1, r2, #3
 80180b4:	f021 0103 	bic.w	r1, r1, #3
 80180b8:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80180bc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80180c0:	b2db      	uxtb	r3, r3
 80180c2:	00c9      	lsls	r1, r1, #3
 80180c4:	fb03 f30e 	mul.w	r3, r3, lr
 80180c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80180cc:	4301      	orrs	r1, r0
 80180ce:	1c58      	adds	r0, r3, #1
 80180d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80180d4:	00d3      	lsls	r3, r2, #3
 80180d6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80180da:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80180de:	4319      	orrs	r1, r3
 80180e0:	8039      	strh	r1, [r7, #0]
 80180e2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80180e4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80180e6:	4413      	add	r3, r2
 80180e8:	9325      	str	r3, [sp, #148]	; 0x94
 80180ea:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80180ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80180ee:	441a      	add	r2, r3
 80180f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80180f2:	9226      	str	r2, [sp, #152]	; 0x98
 80180f4:	3b01      	subs	r3, #1
 80180f6:	3702      	adds	r7, #2
 80180f8:	930f      	str	r3, [sp, #60]	; 0x3c
 80180fa:	e692      	b.n	8017e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80180fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80180fe:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8018100:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8018102:	4433      	add	r3, r6
 8018104:	9325      	str	r3, [sp, #148]	; 0x94
 8018106:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018108:	441c      	add	r4, r3
 801810a:	9b06      	ldr	r3, [sp, #24]
 801810c:	9426      	str	r4, [sp, #152]	; 0x98
 801810e:	3b01      	subs	r3, #1
 8018110:	9306      	str	r3, [sp, #24]
 8018112:	9b07      	ldr	r3, [sp, #28]
 8018114:	3302      	adds	r3, #2
 8018116:	9307      	str	r3, [sp, #28]
 8018118:	e661      	b.n	8017dde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801811a:	d028      	beq.n	801816e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 801811c:	9b06      	ldr	r3, [sp, #24]
 801811e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018120:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8018122:	3b01      	subs	r3, #1
 8018124:	fb00 5003 	mla	r0, r0, r3, r5
 8018128:	1400      	asrs	r0, r0, #16
 801812a:	f53f ae75 	bmi.w	8017e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801812e:	3901      	subs	r1, #1
 8018130:	4288      	cmp	r0, r1
 8018132:	f6bf ae71 	bge.w	8017e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018136:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018138:	9826      	ldr	r0, [sp, #152]	; 0x98
 801813a:	fb01 0303 	mla	r3, r1, r3, r0
 801813e:	141b      	asrs	r3, r3, #16
 8018140:	f53f ae6a 	bmi.w	8017e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018144:	3a01      	subs	r2, #1
 8018146:	4293      	cmp	r3, r2
 8018148:	f6bf ae66 	bge.w	8017e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801814c:	9b06      	ldr	r3, [sp, #24]
 801814e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018152:	930f      	str	r3, [sp, #60]	; 0x3c
 8018154:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018158:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801815a:	2b00      	cmp	r3, #0
 801815c:	f300 8082 	bgt.w	8018264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8018160:	9b06      	ldr	r3, [sp, #24]
 8018162:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018166:	9b07      	ldr	r3, [sp, #28]
 8018168:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801816c:	9307      	str	r3, [sp, #28]
 801816e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018170:	2b00      	cmp	r3, #0
 8018172:	f340 81e4 	ble.w	801853e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8018176:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801817a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801817e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018182:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018184:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018188:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801818c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018190:	eef0 6a48 	vmov.f32	s13, s16
 8018194:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018198:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801819c:	ee37 8a48 	vsub.f32	s16, s14, s16
 80181a0:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80181a4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80181a8:	eef0 6a68 	vmov.f32	s13, s17
 80181ac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80181b0:	ee18 2a10 	vmov	r2, s16
 80181b4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80181b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80181bc:	ee18 2a90 	vmov	r2, s17
 80181c0:	9327      	str	r3, [sp, #156]	; 0x9c
 80181c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80181c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80181c8:	9328      	str	r3, [sp, #160]	; 0xa0
 80181ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80181cc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80181ce:	3b01      	subs	r3, #1
 80181d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80181d4:	930e      	str	r3, [sp, #56]	; 0x38
 80181d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80181d8:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80181dc:	bf08      	it	eq
 80181de:	4613      	moveq	r3, r2
 80181e0:	9306      	str	r3, [sp, #24]
 80181e2:	eef0 8a67 	vmov.f32	s17, s15
 80181e6:	eeb0 8a47 	vmov.f32	s16, s14
 80181ea:	e5ea      	b.n	8017dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80181ec:	fb08 f505 	mul.w	r5, r8, r5
 80181f0:	fb09 5303 	mla	r3, r9, r3, r5
 80181f4:	e66a      	b.n	8017ecc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80181f6:	4681      	mov	r9, r0
 80181f8:	e691      	b.n	8017f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80181fa:	f1c1 0210 	rsb	r2, r1, #16
 80181fe:	4341      	muls	r1, r0
 8018200:	fb09 1902 	mla	r9, r9, r2, r1
 8018204:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018208:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801820c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018210:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018214:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018218:	ea42 0909 	orr.w	r9, r2, r9
 801821c:	fa1f f289 	uxth.w	r2, r9
 8018220:	e724      	b.n	801806c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018222:	803a      	strh	r2, [r7, #0]
 8018224:	e75d      	b.n	80180e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018226:	f115 0e01 	adds.w	lr, r5, #1
 801822a:	f53f af5a 	bmi.w	80180e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801822e:	4572      	cmp	r2, lr
 8018230:	f6ff af57 	blt.w	80180e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018234:	f110 0e01 	adds.w	lr, r0, #1
 8018238:	f53f af53 	bmi.w	80180e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801823c:	4573      	cmp	r3, lr
 801823e:	f6ff af50 	blt.w	80180e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018242:	b21b      	sxth	r3, r3
 8018244:	b212      	sxth	r2, r2
 8018246:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801824a:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801824e:	9301      	str	r3, [sp, #4]
 8018250:	9200      	str	r2, [sp, #0]
 8018252:	4639      	mov	r1, r7
 8018254:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8018258:	9811      	ldr	r0, [sp, #68]	; 0x44
 801825a:	f7ff fbf3 	bl	8017a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801825e:	e740      	b.n	80180e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018260:	fffff800 	.word	0xfffff800
 8018264:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018266:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801826a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801826c:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8018270:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018272:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018276:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018278:	141f      	asrs	r7, r3, #16
 801827a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801827c:	141b      	asrs	r3, r3, #16
 801827e:	fb01 3707 	mla	r7, r1, r7, r3
 8018282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018284:	fa1f fc82 	uxth.w	ip, r2
 8018288:	eb03 0a07 	add.w	sl, r3, r7
 801828c:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018290:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018294:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018298:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801829c:	b29b      	uxth	r3, r3
 801829e:	2d00      	cmp	r5, #0
 80182a0:	f000 8132 	beq.w	8018508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x798>
 80182a4:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80182a8:	940c      	str	r4, [sp, #48]	; 0x30
 80182aa:	eb0a 0b01 	add.w	fp, sl, r1
 80182ae:	fa1f fa85 	uxth.w	sl, r5
 80182b2:	fb0a fc0c 	mul.w	ip, sl, ip
 80182b6:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80182ba:	fa1f fa8a 	uxth.w	sl, sl
 80182be:	eba0 000c 	sub.w	r0, r0, ip
 80182c2:	eba3 030a 	sub.w	r3, r3, sl
 80182c6:	b280      	uxth	r0, r0
 80182c8:	fb08 f000 	mul.w	r0, r8, r0
 80182cc:	b29b      	uxth	r3, r3
 80182ce:	fb09 0303 	mla	r3, r9, r3, r0
 80182d2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80182d4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80182d8:	940d      	str	r4, [sp, #52]	; 0x34
 80182da:	fb0a 3300 	mla	r3, sl, r0, r3
 80182de:	fb0c 3304 	mla	r3, ip, r4, r3
 80182e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80182e6:	2b00      	cmp	r3, #0
 80182e8:	f000 8100 	beq.w	80184ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 80182ec:	9808      	ldr	r0, [sp, #32]
 80182ee:	9c08      	ldr	r4, [sp, #32]
 80182f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80182f4:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80182f8:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80182fc:	f000 8109 	beq.w	8018512 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a2>
 8018300:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018304:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018308:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801830c:	fb09 f707 	mul.w	r7, r9, r7
 8018310:	fb0a fc0c 	mul.w	ip, sl, ip
 8018314:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018318:	f107 0b20 	add.w	fp, r7, #32
 801831c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018320:	44cc      	add	ip, r9
 8018322:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018326:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801832a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801832e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018332:	ea4c 0909 	orr.w	r9, ip, r9
 8018336:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801833a:	8847      	ldrh	r7, [r0, #2]
 801833c:	d019      	beq.n	8018372 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 801833e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018342:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018346:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801834a:	fb08 f807 	mul.w	r8, r8, r7
 801834e:	fb0a fc0c 	mul.w	ip, sl, ip
 8018352:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018356:	f108 0b20 	add.w	fp, r8, #32
 801835a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801835e:	44bc      	add	ip, r7
 8018360:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018364:	0a3f      	lsrs	r7, r7, #8
 8018366:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801836a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801836e:	ea4c 0707 	orr.w	r7, ip, r7
 8018372:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018376:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801837a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801837e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018382:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018386:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801838a:	ea4c 0909 	orr.w	r9, ip, r9
 801838e:	ea4a 0707 	orr.w	r7, sl, r7
 8018392:	2d00      	cmp	r5, #0
 8018394:	f000 80bf 	beq.w	8018516 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a6>
 8018398:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801839c:	3901      	subs	r1, #1
 801839e:	0049      	lsls	r1, r1, #1
 80183a0:	3102      	adds	r1, #2
 80183a2:	eb00 0c01 	add.w	ip, r0, r1
 80183a6:	5a41      	ldrh	r1, [r0, r1]
 80183a8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80183aa:	28ff      	cmp	r0, #255	; 0xff
 80183ac:	d019      	beq.n	80183e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 80183ae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80183b0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80183b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80183b8:	fb04 fa01 	mul.w	sl, r4, r1
 80183bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80183c0:	fb08 f800 	mul.w	r8, r8, r0
 80183c4:	f10a 0020 	add.w	r0, sl, #32
 80183c8:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80183cc:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80183d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80183d4:	4441      	add	r1, r8
 80183d6:	0a00      	lsrs	r0, r0, #8
 80183d8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80183dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80183e0:	4301      	orrs	r1, r0
 80183e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80183e4:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80183e8:	2cff      	cmp	r4, #255	; 0xff
 80183ea:	d01a      	beq.n	8018422 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 80183ec:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80183f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80183f4:	fb04 fa00 	mul.w	sl, r4, r0
 80183f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80183fc:	fb08 f80c 	mul.w	r8, r8, ip
 8018400:	f10a 0c20 	add.w	ip, sl, #32
 8018404:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018408:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801840c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018410:	4440      	add	r0, r8
 8018412:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018416:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801841a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801841e:	ea40 000c 	orr.w	r0, r0, ip
 8018422:	fb15 fc02 	smulbb	ip, r5, r2
 8018426:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801842a:	f1c5 0810 	rsb	r8, r5, #16
 801842e:	eba8 0802 	sub.w	r8, r8, r2
 8018432:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018436:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801843a:	437a      	muls	r2, r7
 801843c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018440:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018444:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018448:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801844c:	fb09 2208 	mla	r2, r9, r8, r2
 8018450:	ea4a 0101 	orr.w	r1, sl, r1
 8018454:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018458:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801845c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018460:	fb05 2201 	mla	r2, r5, r1, r2
 8018464:	ea4b 0000 	orr.w	r0, fp, r0
 8018468:	fb0c 2200 	mla	r2, ip, r0, r2
 801846c:	0d57      	lsrs	r7, r2, #21
 801846e:	0952      	lsrs	r2, r2, #5
 8018470:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018474:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018478:	433a      	orrs	r2, r7
 801847a:	2bff      	cmp	r3, #255	; 0xff
 801847c:	b292      	uxth	r2, r2
 801847e:	d05b      	beq.n	8018538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8018480:	f8be 7000 	ldrh.w	r7, [lr]
 8018484:	4c30      	ldr	r4, [pc, #192]	; (8018548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 8018486:	43db      	mvns	r3, r3
 8018488:	1238      	asrs	r0, r7, #8
 801848a:	fa5f fc83 	uxtb.w	ip, r3
 801848e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018492:	10fd      	asrs	r5, r7, #3
 8018494:	fb00 f00c 	mul.w	r0, r0, ip
 8018498:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801849c:	fb05 f10c 	mul.w	r1, r5, ip
 80184a0:	1c45      	adds	r5, r0, #1
 80184a2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80184a6:	1215      	asrs	r5, r2, #8
 80184a8:	f025 0507 	bic.w	r5, r5, #7
 80184ac:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80184b0:	1c4d      	adds	r5, r1, #1
 80184b2:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80184b6:	10d1      	asrs	r1, r2, #3
 80184b8:	f021 0103 	bic.w	r1, r1, #3
 80184bc:	00fb      	lsls	r3, r7, #3
 80184be:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80184c2:	b2db      	uxtb	r3, r3
 80184c4:	b2c0      	uxtb	r0, r0
 80184c6:	00c9      	lsls	r1, r1, #3
 80184c8:	fb03 f30c 	mul.w	r3, r3, ip
 80184cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80184d0:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80184d4:	4308      	orrs	r0, r1
 80184d6:	1c59      	adds	r1, r3, #1
 80184d8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80184dc:	00d2      	lsls	r2, r2, #3
 80184de:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80184e2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80184e6:	4318      	orrs	r0, r3
 80184e8:	f8ae 0000 	strh.w	r0, [lr]
 80184ec:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80184ee:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80184f0:	4413      	add	r3, r2
 80184f2:	9325      	str	r3, [sp, #148]	; 0x94
 80184f4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80184f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80184f8:	441a      	add	r2, r3
 80184fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80184fc:	9226      	str	r2, [sp, #152]	; 0x98
 80184fe:	3b01      	subs	r3, #1
 8018500:	f10e 0e02 	add.w	lr, lr, #2
 8018504:	930f      	str	r3, [sp, #60]	; 0x3c
 8018506:	e627      	b.n	8018158 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 8018508:	fb08 f000 	mul.w	r0, r8, r0
 801850c:	fb09 0303 	mla	r3, r9, r3, r0
 8018510:	e6e7      	b.n	80182e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 8018512:	46b9      	mov	r9, r7
 8018514:	e70f      	b.n	8018336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8018516:	f1c2 0110 	rsb	r1, r2, #16
 801851a:	437a      	muls	r2, r7
 801851c:	fb09 2901 	mla	r9, r9, r1, r2
 8018520:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018524:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018528:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801852c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018530:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018534:	4302      	orrs	r2, r0
 8018536:	e7a0      	b.n	801847a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8018538:	f8ae 2000 	strh.w	r2, [lr]
 801853c:	e7d6      	b.n	80184ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 801853e:	b013      	add	sp, #76	; 0x4c
 8018540:	ecbd 8b08 	vpop	{d8-d11}
 8018544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018548:	fffff800 	.word	0xfffff800

0801854c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801854c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018550:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018554:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018558:	f1bc 0f00 	cmp.w	ip, #0
 801855c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018560:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018564:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018568:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801856c:	8808      	ldrh	r0, [r1, #0]
 801856e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018572:	db2f      	blt.n	80185d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018574:	45e2      	cmp	sl, ip
 8018576:	dd2d      	ble.n	80185d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018578:	2c00      	cmp	r4, #0
 801857a:	db29      	blt.n	80185d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801857c:	42a3      	cmp	r3, r4
 801857e:	dd27      	ble.n	80185d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018580:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018584:	1c62      	adds	r2, r4, #1
 8018586:	d428      	bmi.n	80185da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018588:	4293      	cmp	r3, r2
 801858a:	dd26      	ble.n	80185da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801858c:	b32f      	cbz	r7, 80185da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801858e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018592:	f11c 0c01 	adds.w	ip, ip, #1
 8018596:	d424      	bmi.n	80185e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018598:	45e2      	cmp	sl, ip
 801859a:	dd22      	ble.n	80185e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801859c:	2e00      	cmp	r6, #0
 801859e:	f000 809d 	beq.w	80186dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 80185a2:	2c00      	cmp	r4, #0
 80185a4:	db1b      	blt.n	80185de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80185a6:	42a3      	cmp	r3, r4
 80185a8:	dd19      	ble.n	80185de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80185aa:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80185ae:	3401      	adds	r4, #1
 80185b0:	d41a      	bmi.n	80185e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80185b2:	42a3      	cmp	r3, r4
 80185b4:	dd18      	ble.n	80185e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80185b6:	b1cf      	cbz	r7, 80185ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80185b8:	3301      	adds	r3, #1
 80185ba:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80185be:	2f0f      	cmp	r7, #15
 80185c0:	d915      	bls.n	80185ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80185c2:	4b49      	ldr	r3, [pc, #292]	; (80186e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80185c4:	4a49      	ldr	r2, [pc, #292]	; (80186ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80185c6:	484a      	ldr	r0, [pc, #296]	; (80186f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80185c8:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 80185cc:	f002 ff6c 	bl	801b4a8 <__assert_func>
 80185d0:	4681      	mov	r9, r0
 80185d2:	e7d7      	b.n	8018584 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80185d4:	4686      	mov	lr, r0
 80185d6:	4681      	mov	r9, r0
 80185d8:	e7db      	b.n	8018592 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80185da:	4686      	mov	lr, r0
 80185dc:	e7d9      	b.n	8018592 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80185de:	4684      	mov	ip, r0
 80185e0:	e7e5      	b.n	80185ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80185e2:	4603      	mov	r3, r0
 80185e4:	4684      	mov	ip, r0
 80185e6:	e7ea      	b.n	80185be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80185e8:	4603      	mov	r3, r0
 80185ea:	e7e8      	b.n	80185be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80185ec:	4603      	mov	r3, r0
 80185ee:	2e0f      	cmp	r6, #15
 80185f0:	d8e7      	bhi.n	80185c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80185f2:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80185f6:	fb17 f806 	smulbb	r8, r7, r6
 80185fa:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80185fe:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018602:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018606:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801860a:	ea44 0909 	orr.w	r9, r4, r9
 801860e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018612:	f1c6 0410 	rsb	r4, r6, #16
 8018616:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801861a:	1be4      	subs	r4, r4, r7
 801861c:	041a      	lsls	r2, r3, #16
 801861e:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018622:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018626:	fb07 fe0e 	mul.w	lr, r7, lr
 801862a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801862e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018632:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018636:	fb04 e409 	mla	r4, r4, r9, lr
 801863a:	4313      	orrs	r3, r2
 801863c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018640:	fb08 4303 	mla	r3, r8, r3, r4
 8018644:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018648:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801864c:	4322      	orrs	r2, r4
 801864e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018652:	fb06 3202 	mla	r2, r6, r2, r3
 8018656:	0d53      	lsrs	r3, r2, #21
 8018658:	0952      	lsrs	r2, r2, #5
 801865a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801865e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018662:	431a      	orrs	r2, r3
 8018664:	b293      	uxth	r3, r2
 8018666:	b2af      	uxth	r7, r5
 8018668:	1202      	asrs	r2, r0, #8
 801866a:	43ed      	mvns	r5, r5
 801866c:	b2ed      	uxtb	r5, r5
 801866e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018672:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018676:	fb12 f205 	smulbb	r2, r2, r5
 801867a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801867e:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018682:	00dc      	lsls	r4, r3, #3
 8018684:	10da      	asrs	r2, r3, #3
 8018686:	10c6      	asrs	r6, r0, #3
 8018688:	00c3      	lsls	r3, r0, #3
 801868a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801868e:	b2db      	uxtb	r3, r3
 8018690:	fb16 f605 	smulbb	r6, r6, r5
 8018694:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018698:	b2e4      	uxtb	r4, r4
 801869a:	fb13 f305 	smulbb	r3, r3, r5
 801869e:	fa1f fc8c 	uxth.w	ip, ip
 80186a2:	fb02 6207 	mla	r2, r2, r7, r6
 80186a6:	fb04 3307 	mla	r3, r4, r7, r3
 80186aa:	b296      	uxth	r6, r2
 80186ac:	b29a      	uxth	r2, r3
 80186ae:	f10c 0301 	add.w	r3, ip, #1
 80186b2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80186b6:	1c53      	adds	r3, r2, #1
 80186b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80186bc:	1c72      	adds	r2, r6, #1
 80186be:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80186c2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80186c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80186ca:	0952      	lsrs	r2, r2, #5
 80186cc:	ea43 030c 	orr.w	r3, r3, ip
 80186d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80186d4:	4313      	orrs	r3, r2
 80186d6:	800b      	strh	r3, [r1, #0]
 80186d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80186dc:	2f0f      	cmp	r7, #15
 80186de:	f63f af70 	bhi.w	80185c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80186e2:	4603      	mov	r3, r0
 80186e4:	4684      	mov	ip, r0
 80186e6:	e784      	b.n	80185f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80186e8:	0801f576 	.word	0x0801f576
 80186ec:	0801fbeb 	.word	0x0801fbeb
 80186f0:	0801f5fa 	.word	0x0801f5fa

080186f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80186f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186f8:	ed2d 8b08 	vpush	{d8-d11}
 80186fc:	b093      	sub	sp, #76	; 0x4c
 80186fe:	461d      	mov	r5, r3
 8018700:	9210      	str	r2, [sp, #64]	; 0x40
 8018702:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018704:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8018708:	920b      	str	r2, [sp, #44]	; 0x2c
 801870a:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 801870e:	910a      	str	r1, [sp, #40]	; 0x28
 8018710:	6859      	ldr	r1, [r3, #4]
 8018712:	681b      	ldr	r3, [r3, #0]
 8018714:	9011      	str	r0, [sp, #68]	; 0x44
 8018716:	fb01 2707 	mla	r7, r1, r7, r2
 801871a:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801871e:	9307      	str	r3, [sp, #28]
 8018720:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018722:	681b      	ldr	r3, [r3, #0]
 8018724:	9309      	str	r3, [sp, #36]	; 0x24
 8018726:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018728:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801872c:	43db      	mvns	r3, r3
 801872e:	b2db      	uxtb	r3, r3
 8018730:	eeb0 aa40 	vmov.f32	s20, s0
 8018734:	eef0 9a60 	vmov.f32	s19, s1
 8018738:	eeb0 9a41 	vmov.f32	s18, s2
 801873c:	eeb0 8a62 	vmov.f32	s16, s5
 8018740:	eef0 8a43 	vmov.f32	s17, s6
 8018744:	eef0 ba44 	vmov.f32	s23, s8
 8018748:	eeb0 ba64 	vmov.f32	s22, s9
 801874c:	eef0 aa45 	vmov.f32	s21, s10
 8018750:	9308      	str	r3, [sp, #32]
 8018752:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018754:	2b00      	cmp	r3, #0
 8018756:	dc03      	bgt.n	8018760 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018758:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801875a:	2b00      	cmp	r3, #0
 801875c:	f340 8203 	ble.w	8018b66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018760:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018762:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018766:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801876a:	1e48      	subs	r0, r1, #1
 801876c:	f102 3cff 	add.w	ip, r2, #4294967295
 8018770:	2d00      	cmp	r5, #0
 8018772:	f340 80da 	ble.w	801892a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018776:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801877a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801877e:	d406      	bmi.n	801878e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018780:	4586      	cmp	lr, r0
 8018782:	da04      	bge.n	801878e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018784:	2b00      	cmp	r3, #0
 8018786:	db02      	blt.n	801878e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018788:	4563      	cmp	r3, ip
 801878a:	f2c0 80cf 	blt.w	801892c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801878e:	f11e 0e01 	adds.w	lr, lr, #1
 8018792:	f100 80c1 	bmi.w	8018918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018796:	4571      	cmp	r1, lr
 8018798:	f2c0 80be 	blt.w	8018918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801879c:	3301      	adds	r3, #1
 801879e:	f100 80bb 	bmi.w	8018918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80187a2:	429a      	cmp	r2, r3
 80187a4:	f2c0 80b8 	blt.w	8018918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80187a8:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80187ac:	46a9      	mov	r9, r5
 80187ae:	f1b9 0f00 	cmp.w	r9, #0
 80187b2:	f340 80d8 	ble.w	8018966 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80187b6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80187b8:	1421      	asrs	r1, r4, #16
 80187ba:	ea4f 4026 	mov.w	r0, r6, asr #16
 80187be:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80187c2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80187c6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80187ca:	f100 8111 	bmi.w	80189f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80187ce:	f10e 3aff 	add.w	sl, lr, #4294967295
 80187d2:	4551      	cmp	r1, sl
 80187d4:	f280 810c 	bge.w	80189f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80187d8:	2800      	cmp	r0, #0
 80187da:	f2c0 8109 	blt.w	80189f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80187de:	f103 3aff 	add.w	sl, r3, #4294967295
 80187e2:	4550      	cmp	r0, sl
 80187e4:	f280 8104 	bge.w	80189f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80187e8:	fa0f f38e 	sxth.w	r3, lr
 80187ec:	fb00 1103 	mla	r1, r0, r3, r1
 80187f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80187f2:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80187f6:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80187fa:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80187fe:	f1bc 0f00 	cmp.w	ip, #0
 8018802:	d007      	beq.n	8018814 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8018804:	005b      	lsls	r3, r3, #1
 8018806:	eb0a 0003 	add.w	r0, sl, r3
 801880a:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801880e:	930c      	str	r3, [sp, #48]	; 0x30
 8018810:	8843      	ldrh	r3, [r0, #2]
 8018812:	930d      	str	r3, [sp, #52]	; 0x34
 8018814:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8018818:	fb12 f30c 	smulbb	r3, r2, ip
 801881c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018820:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018824:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018828:	10db      	asrs	r3, r3, #3
 801882a:	ea40 000e 	orr.w	r0, r0, lr
 801882e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018832:	f1cc 0e10 	rsb	lr, ip, #16
 8018836:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801883a:	ebae 0e02 	sub.w	lr, lr, r2
 801883e:	ea4a 0101 	orr.w	r1, sl, r1
 8018842:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018846:	4351      	muls	r1, r2
 8018848:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801884a:	9f08      	ldr	r7, [sp, #32]
 801884c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018850:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018854:	0410      	lsls	r0, r2, #16
 8018856:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801885a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801885e:	4310      	orrs	r0, r2
 8018860:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018862:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018864:	0412      	lsls	r2, r2, #16
 8018866:	fb03 e000 	mla	r0, r3, r0, lr
 801886a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801886e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018872:	ea42 020e 	orr.w	r2, r2, lr
 8018876:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801887a:	fb03 0302 	mla	r3, r3, r2, r0
 801887e:	0d5a      	lsrs	r2, r3, #21
 8018880:	095b      	lsrs	r3, r3, #5
 8018882:	f8b8 0000 	ldrh.w	r0, [r8]
 8018886:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801888a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801888e:	4313      	orrs	r3, r2
 8018890:	b29b      	uxth	r3, r3
 8018892:	1201      	asrs	r1, r0, #8
 8018894:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018898:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801889c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80188a0:	fb11 f107 	smulbb	r1, r1, r7
 80188a4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80188a8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80188ac:	00c0      	lsls	r0, r0, #3
 80188ae:	fb0c 1c02 	mla	ip, ip, r2, r1
 80188b2:	b2c0      	uxtb	r0, r0
 80188b4:	10d9      	asrs	r1, r3, #3
 80188b6:	00db      	lsls	r3, r3, #3
 80188b8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80188bc:	b2db      	uxtb	r3, r3
 80188be:	fb10 f007 	smulbb	r0, r0, r7
 80188c2:	fa1f fc8c 	uxth.w	ip, ip
 80188c6:	fb03 0302 	mla	r3, r3, r2, r0
 80188ca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80188ce:	fb1e fe07 	smulbb	lr, lr, r7
 80188d2:	fb01 e102 	mla	r1, r1, r2, lr
 80188d6:	b29a      	uxth	r2, r3
 80188d8:	f10c 0301 	add.w	r3, ip, #1
 80188dc:	b289      	uxth	r1, r1
 80188de:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80188e2:	1c53      	adds	r3, r2, #1
 80188e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80188e8:	1c4a      	adds	r2, r1, #1
 80188ea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80188ee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80188f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80188f6:	0949      	lsrs	r1, r1, #5
 80188f8:	ea43 030c 	orr.w	r3, r3, ip
 80188fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018900:	430b      	orrs	r3, r1
 8018902:	f8a8 3000 	strh.w	r3, [r8]
 8018906:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018908:	441c      	add	r4, r3
 801890a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801890c:	f108 0802 	add.w	r8, r8, #2
 8018910:	441e      	add	r6, r3
 8018912:	f109 39ff 	add.w	r9, r9, #4294967295
 8018916:	e74a      	b.n	80187ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8018918:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801891a:	441c      	add	r4, r3
 801891c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801891e:	441e      	add	r6, r3
 8018920:	9b07      	ldr	r3, [sp, #28]
 8018922:	3302      	adds	r3, #2
 8018924:	3d01      	subs	r5, #1
 8018926:	9307      	str	r3, [sp, #28]
 8018928:	e722      	b.n	8018770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801892a:	d022      	beq.n	8018972 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801892c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801892e:	1e6b      	subs	r3, r5, #1
 8018930:	fb00 4003 	mla	r0, r0, r3, r4
 8018934:	1400      	asrs	r0, r0, #16
 8018936:	f53f af37 	bmi.w	80187a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801893a:	3901      	subs	r1, #1
 801893c:	4288      	cmp	r0, r1
 801893e:	f6bf af33 	bge.w	80187a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018942:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018944:	fb01 6303 	mla	r3, r1, r3, r6
 8018948:	141b      	asrs	r3, r3, #16
 801894a:	f53f af2d 	bmi.w	80187a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801894e:	3a01      	subs	r2, #1
 8018950:	4293      	cmp	r3, r2
 8018952:	f6bf af29 	bge.w	80187a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018956:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801895a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801895e:	46a8      	mov	r8, r5
 8018960:	f1b8 0f00 	cmp.w	r8, #0
 8018964:	dc5e      	bgt.n	8018a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8018966:	9b07      	ldr	r3, [sp, #28]
 8018968:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801896c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018970:	9307      	str	r3, [sp, #28]
 8018972:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018974:	2b00      	cmp	r3, #0
 8018976:	f340 80f6 	ble.w	8018b66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801897a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801897e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018982:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018986:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018988:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801898c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018990:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018994:	eef0 6a48 	vmov.f32	s13, s16
 8018998:	ee69 7a27 	vmul.f32	s15, s18, s15
 801899c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80189a0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80189a4:	ee16 4a90 	vmov	r4, s13
 80189a8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80189ac:	eef0 6a68 	vmov.f32	s13, s17
 80189b0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80189b4:	ee18 2a10 	vmov	r2, s16
 80189b8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80189bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80189c0:	ee18 2a90 	vmov	r2, s17
 80189c4:	9327      	str	r3, [sp, #156]	; 0x9c
 80189c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80189c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80189cc:	9328      	str	r3, [sp, #160]	; 0xa0
 80189ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80189d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80189d2:	3b01      	subs	r3, #1
 80189d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80189d8:	930a      	str	r3, [sp, #40]	; 0x28
 80189da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80189dc:	ee16 6a90 	vmov	r6, s13
 80189e0:	bf14      	ite	ne
 80189e2:	461d      	movne	r5, r3
 80189e4:	4615      	moveq	r5, r2
 80189e6:	eef0 8a67 	vmov.f32	s17, s15
 80189ea:	eeb0 8a47 	vmov.f32	s16, s14
 80189ee:	e6b0      	b.n	8018752 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80189f0:	f111 0a01 	adds.w	sl, r1, #1
 80189f4:	d487      	bmi.n	8018906 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80189f6:	45d6      	cmp	lr, sl
 80189f8:	db85      	blt.n	8018906 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80189fa:	f110 0a01 	adds.w	sl, r0, #1
 80189fe:	d482      	bmi.n	8018906 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018a00:	4553      	cmp	r3, sl
 8018a02:	db80      	blt.n	8018906 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018a04:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8018a06:	9101      	str	r1, [sp, #4]
 8018a08:	b21b      	sxth	r3, r3
 8018a0a:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8018a0e:	9300      	str	r3, [sp, #0]
 8018a10:	e9cd c704 	strd	ip, r7, [sp, #16]
 8018a14:	fa0f f38e 	sxth.w	r3, lr
 8018a18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018a1a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018a1c:	4641      	mov	r1, r8
 8018a1e:	f7ff fd95 	bl	801854c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018a22:	e770      	b.n	8018906 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018a24:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018a26:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018a28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018a2c:	1430      	asrs	r0, r6, #16
 8018a2e:	1423      	asrs	r3, r4, #16
 8018a30:	fb01 3000 	mla	r0, r1, r0, r3
 8018a34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a36:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8018a3a:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018a3e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018a42:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018a46:	8858      	ldrh	r0, [r3, #2]
 8018a48:	f1be 0f00 	cmp.w	lr, #0
 8018a4c:	d00b      	beq.n	8018a66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018a4e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018a52:	3901      	subs	r1, #1
 8018a54:	0049      	lsls	r1, r1, #1
 8018a56:	3102      	adds	r1, #2
 8018a58:	eb03 0b01 	add.w	fp, r3, r1
 8018a5c:	5a5b      	ldrh	r3, [r3, r1]
 8018a5e:	930e      	str	r3, [sp, #56]	; 0x38
 8018a60:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018a64:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a66:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8018a6a:	fb12 f30e 	smulbb	r3, r2, lr
 8018a6e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018a72:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018a76:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8018a7a:	10db      	asrs	r3, r3, #3
 8018a7c:	ea41 010c 	orr.w	r1, r1, ip
 8018a80:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018a84:	f1ce 0c10 	rsb	ip, lr, #16
 8018a88:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018a8c:	ebac 0c02 	sub.w	ip, ip, r2
 8018a90:	ea4b 0000 	orr.w	r0, fp, r0
 8018a94:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018a98:	4350      	muls	r0, r2
 8018a9a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018a9c:	9f08      	ldr	r7, [sp, #32]
 8018a9e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018aa2:	fb0c 0c01 	mla	ip, ip, r1, r0
 8018aa6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018aaa:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8018aae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018ab0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018ab2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018ab6:	0412      	lsls	r2, r2, #16
 8018ab8:	ea4b 0101 	orr.w	r1, fp, r1
 8018abc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018ac0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018ac4:	fb03 c101 	mla	r1, r3, r1, ip
 8018ac8:	4302      	orrs	r2, r0
 8018aca:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018ace:	fb03 1202 	mla	r2, r3, r2, r1
 8018ad2:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8018ad6:	0952      	lsrs	r2, r2, #5
 8018ad8:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8018adc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018ae0:	f8b9 2000 	ldrh.w	r2, [r9]
 8018ae4:	ea4b 0303 	orr.w	r3, fp, r3
 8018ae8:	b29b      	uxth	r3, r3
 8018aea:	1211      	asrs	r1, r2, #8
 8018aec:	1218      	asrs	r0, r3, #8
 8018aee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018af2:	fb11 f107 	smulbb	r1, r1, r7
 8018af6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8018afa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018afe:	00d2      	lsls	r2, r2, #3
 8018b00:	fb00 100a 	mla	r0, r0, sl, r1
 8018b04:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018b08:	10d9      	asrs	r1, r3, #3
 8018b0a:	b2d2      	uxtb	r2, r2
 8018b0c:	00db      	lsls	r3, r3, #3
 8018b0e:	fb1c fc07 	smulbb	ip, ip, r7
 8018b12:	fb12 f207 	smulbb	r2, r2, r7
 8018b16:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018b1a:	b2db      	uxtb	r3, r3
 8018b1c:	b280      	uxth	r0, r0
 8018b1e:	fb01 c10a 	mla	r1, r1, sl, ip
 8018b22:	fb03 230a 	mla	r3, r3, sl, r2
 8018b26:	b29b      	uxth	r3, r3
 8018b28:	b289      	uxth	r1, r1
 8018b2a:	1c42      	adds	r2, r0, #1
 8018b2c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018b30:	f101 0c01 	add.w	ip, r1, #1
 8018b34:	1c5a      	adds	r2, r3, #1
 8018b36:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018b3a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018b3e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018b40:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018b44:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018b48:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018b4c:	4310      	orrs	r0, r2
 8018b4e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018b52:	441c      	add	r4, r3
 8018b54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b56:	ea40 000c 	orr.w	r0, r0, ip
 8018b5a:	f829 0b02 	strh.w	r0, [r9], #2
 8018b5e:	441e      	add	r6, r3
 8018b60:	f108 38ff 	add.w	r8, r8, #4294967295
 8018b64:	e6fc      	b.n	8018960 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8018b66:	b013      	add	sp, #76	; 0x4c
 8018b68:	ecbd 8b08 	vpop	{d8-d11}
 8018b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8018b70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018b74:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8018b78:	fb06 5c03 	mla	ip, r6, r3, r5
 8018b7c:	2e00      	cmp	r6, #0
 8018b7e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8018b82:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8018b86:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8018b8a:	8808      	ldrh	r0, [r1, #0]
 8018b8c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018b90:	db2e      	blt.n	8018bf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018b92:	45b0      	cmp	r8, r6
 8018b94:	dd2c      	ble.n	8018bf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018b96:	2d00      	cmp	r5, #0
 8018b98:	db28      	blt.n	8018bec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018b9a:	42ab      	cmp	r3, r5
 8018b9c:	dd26      	ble.n	8018bec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018b9e:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8018ba2:	1c6a      	adds	r2, r5, #1
 8018ba4:	d427      	bmi.n	8018bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018ba6:	4293      	cmp	r3, r2
 8018ba8:	dd25      	ble.n	8018bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018baa:	b324      	cbz	r4, 8018bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018bac:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8018bb0:	3601      	adds	r6, #1
 8018bb2:	d424      	bmi.n	8018bfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018bb4:	45b0      	cmp	r8, r6
 8018bb6:	dd22      	ble.n	8018bfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018bb8:	b31f      	cbz	r7, 8018c02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8018bba:	2d00      	cmp	r5, #0
 8018bbc:	db1d      	blt.n	8018bfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018bbe:	42ab      	cmp	r3, r5
 8018bc0:	dd1b      	ble.n	8018bfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018bc2:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8018bc6:	3501      	adds	r5, #1
 8018bc8:	d405      	bmi.n	8018bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018bca:	42ab      	cmp	r3, r5
 8018bcc:	dd03      	ble.n	8018bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018bce:	b124      	cbz	r4, 8018bda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8018bd0:	3301      	adds	r3, #1
 8018bd2:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8018bd6:	2c0f      	cmp	r4, #15
 8018bd8:	d801      	bhi.n	8018bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018bda:	2f0f      	cmp	r7, #15
 8018bdc:	d914      	bls.n	8018c08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8018bde:	4b27      	ldr	r3, [pc, #156]	; (8018c7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8018be0:	4a27      	ldr	r2, [pc, #156]	; (8018c80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8018be2:	4828      	ldr	r0, [pc, #160]	; (8018c84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8018be4:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8018be8:	f002 fc5e 	bl	801b4a8 <__assert_func>
 8018bec:	4684      	mov	ip, r0
 8018bee:	e7d8      	b.n	8018ba2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8018bf0:	4602      	mov	r2, r0
 8018bf2:	4684      	mov	ip, r0
 8018bf4:	e7dc      	b.n	8018bb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018bf6:	4602      	mov	r2, r0
 8018bf8:	e7da      	b.n	8018bb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018bfa:	4606      	mov	r6, r0
 8018bfc:	e7e3      	b.n	8018bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8018bfe:	4606      	mov	r6, r0
 8018c00:	e7e9      	b.n	8018bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018c02:	2c0f      	cmp	r4, #15
 8018c04:	d8eb      	bhi.n	8018bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018c06:	4606      	mov	r6, r0
 8018c08:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8018c0c:	fb14 f307 	smulbb	r3, r4, r7
 8018c10:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018c14:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8018c18:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018c1c:	10db      	asrs	r3, r3, #3
 8018c1e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018c22:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018c26:	f1c7 0510 	rsb	r5, r7, #16
 8018c2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c2e:	1b2d      	subs	r5, r5, r4
 8018c30:	ea4e 0202 	orr.w	r2, lr, r2
 8018c34:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018c38:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018c3c:	4354      	muls	r4, r2
 8018c3e:	fb05 450c 	mla	r5, r5, ip, r4
 8018c42:	0404      	lsls	r4, r0, #16
 8018c44:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018c48:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018c4c:	4320      	orrs	r0, r4
 8018c4e:	fb03 5400 	mla	r4, r3, r0, r5
 8018c52:	0430      	lsls	r0, r6, #16
 8018c54:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018c58:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8018c5c:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8018c60:	4330      	orrs	r0, r6
 8018c62:	fb07 4000 	mla	r0, r7, r0, r4
 8018c66:	0d43      	lsrs	r3, r0, #21
 8018c68:	0940      	lsrs	r0, r0, #5
 8018c6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018c6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018c72:	4318      	orrs	r0, r3
 8018c74:	8008      	strh	r0, [r1, #0]
 8018c76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018c7a:	bf00      	nop
 8018c7c:	0801f576 	.word	0x0801f576
 8018c80:	0801fbeb 	.word	0x0801fbeb
 8018c84:	0801f5fa 	.word	0x0801f5fa

08018c88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c8c:	ed2d 8b08 	vpush	{d8-d11}
 8018c90:	b08f      	sub	sp, #60	; 0x3c
 8018c92:	461d      	mov	r5, r3
 8018c94:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018c96:	920c      	str	r2, [sp, #48]	; 0x30
 8018c98:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8018c9c:	9107      	str	r1, [sp, #28]
 8018c9e:	6859      	ldr	r1, [r3, #4]
 8018ca0:	681b      	ldr	r3, [r3, #0]
 8018ca2:	900d      	str	r0, [sp, #52]	; 0x34
 8018ca4:	fb01 2707 	mla	r7, r1, r7, r2
 8018ca8:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8018cac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018cae:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8018cb2:	f8d3 8000 	ldr.w	r8, [r3]
 8018cb6:	eeb0 aa40 	vmov.f32	s20, s0
 8018cba:	eef0 9a60 	vmov.f32	s19, s1
 8018cbe:	eeb0 9a41 	vmov.f32	s18, s2
 8018cc2:	eeb0 8a62 	vmov.f32	s16, s5
 8018cc6:	eef0 8a43 	vmov.f32	s17, s6
 8018cca:	eef0 ba44 	vmov.f32	s23, s8
 8018cce:	eeb0 ba64 	vmov.f32	s22, s9
 8018cd2:	eef0 aa45 	vmov.f32	s21, s10
 8018cd6:	9b07      	ldr	r3, [sp, #28]
 8018cd8:	2b00      	cmp	r3, #0
 8018cda:	dc03      	bgt.n	8018ce4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018cdc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018cde:	2b00      	cmp	r3, #0
 8018ce0:	f340 8181 	ble.w	8018fe6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018ce4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018ce6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018cea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018cee:	1e48      	subs	r0, r1, #1
 8018cf0:	f102 3cff 	add.w	ip, r2, #4294967295
 8018cf4:	2d00      	cmp	r5, #0
 8018cf6:	f340 809b 	ble.w	8018e30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8018cfa:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018cfe:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018d02:	d406      	bmi.n	8018d12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018d04:	4586      	cmp	lr, r0
 8018d06:	da04      	bge.n	8018d12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018d08:	2b00      	cmp	r3, #0
 8018d0a:	db02      	blt.n	8018d12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018d0c:	4563      	cmp	r3, ip
 8018d0e:	f2c0 8090 	blt.w	8018e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018d12:	f11e 0e01 	adds.w	lr, lr, #1
 8018d16:	f100 8084 	bmi.w	8018e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018d1a:	4571      	cmp	r1, lr
 8018d1c:	f2c0 8081 	blt.w	8018e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018d20:	3301      	adds	r3, #1
 8018d22:	d47e      	bmi.n	8018e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018d24:	429a      	cmp	r2, r3
 8018d26:	db7c      	blt.n	8018e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018d28:	46aa      	mov	sl, r5
 8018d2a:	46b9      	mov	r9, r7
 8018d2c:	f1ba 0f00 	cmp.w	sl, #0
 8018d30:	f340 8099 	ble.w	8018e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018d34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018d36:	1421      	asrs	r1, r4, #16
 8018d38:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018d3c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018d40:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018d44:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018d48:	f100 80d0 	bmi.w	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018d4c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8018d50:	4559      	cmp	r1, fp
 8018d52:	f280 80cb 	bge.w	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018d56:	2800      	cmp	r0, #0
 8018d58:	f2c0 80c8 	blt.w	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018d5c:	f103 3bff 	add.w	fp, r3, #4294967295
 8018d60:	4558      	cmp	r0, fp
 8018d62:	f280 80c3 	bge.w	8018eec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018d66:	fa0f fe8e 	sxth.w	lr, lr
 8018d6a:	fb00 110e 	mla	r1, r0, lr, r1
 8018d6e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018d72:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8018d76:	8841      	ldrh	r1, [r0, #2]
 8018d78:	f1bc 0f00 	cmp.w	ip, #0
 8018d7c:	d00b      	beq.n	8018d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018d7e:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8018d82:	3b01      	subs	r3, #1
 8018d84:	005b      	lsls	r3, r3, #1
 8018d86:	3302      	adds	r3, #2
 8018d88:	eb00 0e03 	add.w	lr, r0, r3
 8018d8c:	5ac3      	ldrh	r3, [r0, r3]
 8018d8e:	9308      	str	r3, [sp, #32]
 8018d90:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8018d94:	9309      	str	r3, [sp, #36]	; 0x24
 8018d96:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8018d9a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d9e:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018da2:	ea40 000b 	orr.w	r0, r0, fp
 8018da6:	fb12 f30c 	smulbb	r3, r2, ip
 8018daa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018dae:	10db      	asrs	r3, r3, #3
 8018db0:	f1cc 0e10 	rsb	lr, ip, #16
 8018db4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018db8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018dbc:	ebae 0e02 	sub.w	lr, lr, r2
 8018dc0:	ea4b 0101 	orr.w	r1, fp, r1
 8018dc4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018dc8:	4351      	muls	r1, r2
 8018dca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018dcc:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018dd0:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018dd4:	0410      	lsls	r0, r2, #16
 8018dd6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018dda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018dde:	4310      	orrs	r0, r2
 8018de0:	9a08      	ldr	r2, [sp, #32]
 8018de2:	9908      	ldr	r1, [sp, #32]
 8018de4:	0412      	lsls	r2, r2, #16
 8018de6:	fb03 e000 	mla	r0, r3, r0, lr
 8018dea:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018dee:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018df2:	ea42 020e 	orr.w	r2, r2, lr
 8018df6:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018dfa:	fb03 0302 	mla	r3, r3, r2, r0
 8018dfe:	0d5a      	lsrs	r2, r3, #21
 8018e00:	095b      	lsrs	r3, r3, #5
 8018e02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018e0a:	4313      	orrs	r3, r2
 8018e0c:	f8a9 3000 	strh.w	r3, [r9]
 8018e10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018e12:	441c      	add	r4, r3
 8018e14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018e16:	f109 0902 	add.w	r9, r9, #2
 8018e1a:	441e      	add	r6, r3
 8018e1c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018e20:	e784      	b.n	8018d2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8018e22:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018e24:	441c      	add	r4, r3
 8018e26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018e28:	3d01      	subs	r5, #1
 8018e2a:	441e      	add	r6, r3
 8018e2c:	3702      	adds	r7, #2
 8018e2e:	e761      	b.n	8018cf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018e30:	d01d      	beq.n	8018e6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018e32:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018e34:	1e6b      	subs	r3, r5, #1
 8018e36:	fb00 4003 	mla	r0, r0, r3, r4
 8018e3a:	1400      	asrs	r0, r0, #16
 8018e3c:	f53f af74 	bmi.w	8018d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018e40:	3901      	subs	r1, #1
 8018e42:	4288      	cmp	r0, r1
 8018e44:	f6bf af70 	bge.w	8018d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018e48:	9924      	ldr	r1, [sp, #144]	; 0x90
 8018e4a:	fb01 6303 	mla	r3, r1, r3, r6
 8018e4e:	141b      	asrs	r3, r3, #16
 8018e50:	f53f af6a 	bmi.w	8018d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018e54:	3a01      	subs	r2, #1
 8018e56:	4293      	cmp	r3, r2
 8018e58:	f6bf af66 	bge.w	8018d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018e5c:	46a9      	mov	r9, r5
 8018e5e:	46ba      	mov	sl, r7
 8018e60:	f1b9 0f00 	cmp.w	r9, #0
 8018e64:	dc5a      	bgt.n	8018f1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e66:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018e6a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8018e6e:	9b07      	ldr	r3, [sp, #28]
 8018e70:	2b00      	cmp	r3, #0
 8018e72:	f340 80b8 	ble.w	8018fe6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018e76:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018e7a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018e7e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018e82:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018e84:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018e88:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018e8c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018e90:	eef0 6a48 	vmov.f32	s13, s16
 8018e94:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018e98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e9c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018ea0:	ee16 4a90 	vmov	r4, s13
 8018ea4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018ea8:	eef0 6a68 	vmov.f32	s13, s17
 8018eac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018eb0:	ee18 2a10 	vmov	r2, s16
 8018eb4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018eb8:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ebc:	ee18 2a90 	vmov	r2, s17
 8018ec0:	9323      	str	r3, [sp, #140]	; 0x8c
 8018ec2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018ec4:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ec8:	9324      	str	r3, [sp, #144]	; 0x90
 8018eca:	9b07      	ldr	r3, [sp, #28]
 8018ecc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018ece:	3b01      	subs	r3, #1
 8018ed0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ed4:	9307      	str	r3, [sp, #28]
 8018ed6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018ed8:	ee16 6a90 	vmov	r6, s13
 8018edc:	bf14      	ite	ne
 8018ede:	461d      	movne	r5, r3
 8018ee0:	4615      	moveq	r5, r2
 8018ee2:	eef0 8a67 	vmov.f32	s17, s15
 8018ee6:	eeb0 8a47 	vmov.f32	s16, s14
 8018eea:	e6f4      	b.n	8018cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8018eec:	f111 0b01 	adds.w	fp, r1, #1
 8018ef0:	d48e      	bmi.n	8018e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018ef2:	45de      	cmp	lr, fp
 8018ef4:	db8c      	blt.n	8018e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018ef6:	f110 0b01 	adds.w	fp, r0, #1
 8018efa:	d489      	bmi.n	8018e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018efc:	455b      	cmp	r3, fp
 8018efe:	db87      	blt.n	8018e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018f00:	b21b      	sxth	r3, r3
 8018f02:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8018f06:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8018f0a:	9300      	str	r3, [sp, #0]
 8018f0c:	4642      	mov	r2, r8
 8018f0e:	fa0f f38e 	sxth.w	r3, lr
 8018f12:	4649      	mov	r1, r9
 8018f14:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018f16:	f7ff fe2b 	bl	8018b70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8018f1a:	e779      	b.n	8018e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018f1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f1e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018f22:	1420      	asrs	r0, r4, #16
 8018f24:	1431      	asrs	r1, r6, #16
 8018f26:	fb03 0101 	mla	r1, r3, r1, r0
 8018f2a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018f2e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018f32:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8018f36:	8841      	ldrh	r1, [r0, #2]
 8018f38:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018f3c:	f1be 0f00 	cmp.w	lr, #0
 8018f40:	d00b      	beq.n	8018f5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8018f42:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8018f46:	3b01      	subs	r3, #1
 8018f48:	005b      	lsls	r3, r3, #1
 8018f4a:	3302      	adds	r3, #2
 8018f4c:	eb00 0b03 	add.w	fp, r0, r3
 8018f50:	5ac3      	ldrh	r3, [r0, r3]
 8018f52:	930a      	str	r3, [sp, #40]	; 0x28
 8018f54:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018f58:	930b      	str	r3, [sp, #44]	; 0x2c
 8018f5a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018f5e:	fb12 f30e 	smulbb	r3, r2, lr
 8018f62:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018f66:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018f6a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018f6e:	10db      	asrs	r3, r3, #3
 8018f70:	ea40 000c 	orr.w	r0, r0, ip
 8018f74:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018f78:	f1ce 0c10 	rsb	ip, lr, #16
 8018f7c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018f80:	ebac 0c02 	sub.w	ip, ip, r2
 8018f84:	ea4b 0101 	orr.w	r1, fp, r1
 8018f88:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018f8c:	4351      	muls	r1, r2
 8018f8e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018f90:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018f94:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018f98:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018f9c:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8018fa0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018fa2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018fa4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018fa8:	0412      	lsls	r2, r2, #16
 8018faa:	ea4b 0000 	orr.w	r0, fp, r0
 8018fae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018fb2:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8018fb6:	fb03 c000 	mla	r0, r3, r0, ip
 8018fba:	ea42 0b0b 	orr.w	fp, r2, fp
 8018fbe:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018fc2:	fb03 000b 	mla	r0, r3, fp, r0
 8018fc6:	0d43      	lsrs	r3, r0, #21
 8018fc8:	0940      	lsrs	r0, r0, #5
 8018fca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018fce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018fd2:	4318      	orrs	r0, r3
 8018fd4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018fd6:	f82a 0b02 	strh.w	r0, [sl], #2
 8018fda:	441c      	add	r4, r3
 8018fdc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018fde:	f109 39ff 	add.w	r9, r9, #4294967295
 8018fe2:	441e      	add	r6, r3
 8018fe4:	e73c      	b.n	8018e60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8018fe6:	b00f      	add	sp, #60	; 0x3c
 8018fe8:	ecbd 8b08 	vpop	{d8-d11}
 8018fec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8018ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ff4:	880e      	ldrh	r6, [r1, #0]
 8018ff6:	b085      	sub	sp, #20
 8018ff8:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8018ffc:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8019000:	4690      	mov	r8, r2
 8019002:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 8019006:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801900a:	9200      	str	r2, [sp, #0]
 801900c:	00f6      	lsls	r6, r6, #3
 801900e:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 8019012:	9201      	str	r2, [sp, #4]
 8019014:	2c00      	cmp	r4, #0
 8019016:	b2f2      	uxtb	r2, r6
 8019018:	fb04 5603 	mla	r6, r4, r3, r5
 801901c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8019020:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8019024:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019028:	9202      	str	r2, [sp, #8]
 801902a:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801902e:	db36      	blt.n	801909e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8019030:	45a6      	cmp	lr, r4
 8019032:	dd34      	ble.n	801909e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8019034:	2d00      	cmp	r5, #0
 8019036:	db30      	blt.n	801909a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8019038:	42ab      	cmp	r3, r5
 801903a:	dd2e      	ble.n	801909a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801903c:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8019040:	1c6e      	adds	r6, r5, #1
 8019042:	d42f      	bmi.n	80190a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8019044:	42b3      	cmp	r3, r6
 8019046:	dd2d      	ble.n	80190a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8019048:	b370      	cbz	r0, 80190a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 801904a:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801904e:	3401      	adds	r4, #1
 8019050:	d42e      	bmi.n	80190b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8019052:	45a6      	cmp	lr, r4
 8019054:	dd2c      	ble.n	80190b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8019056:	b377      	cbz	r7, 80190b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 8019058:	2d00      	cmp	r5, #0
 801905a:	db27      	blt.n	80190ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801905c:	42ab      	cmp	r3, r5
 801905e:	dd25      	ble.n	80190ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8019060:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019064:	3501      	adds	r5, #1
 8019066:	d429      	bmi.n	80190bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8019068:	42ab      	cmp	r3, r5
 801906a:	dd27      	ble.n	80190bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801906c:	b340      	cbz	r0, 80190c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801906e:	3301      	adds	r3, #1
 8019070:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8019074:	280f      	cmp	r0, #15
 8019076:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801907a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801907e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019082:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019086:	d801      	bhi.n	801908c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8019088:	2f0f      	cmp	r7, #15
 801908a:	d91b      	bls.n	80190c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801908c:	4b84      	ldr	r3, [pc, #528]	; (80192a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 801908e:	4a85      	ldr	r2, [pc, #532]	; (80192a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8019090:	4885      	ldr	r0, [pc, #532]	; (80192a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8019092:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8019096:	f002 fa07 	bl	801b4a8 <__assert_func>
 801909a:	2200      	movs	r2, #0
 801909c:	e7d0      	b.n	8019040 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801909e:	2600      	movs	r6, #0
 80190a0:	4632      	mov	r2, r6
 80190a2:	e7d4      	b.n	801904e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 80190a4:	2600      	movs	r6, #0
 80190a6:	e7d2      	b.n	801904e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 80190a8:	4606      	mov	r6, r0
 80190aa:	e7d0      	b.n	801904e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 80190ac:	2400      	movs	r4, #0
 80190ae:	e7d9      	b.n	8019064 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80190b0:	2300      	movs	r3, #0
 80190b2:	461c      	mov	r4, r3
 80190b4:	e7de      	b.n	8019074 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 80190b6:	463b      	mov	r3, r7
 80190b8:	463c      	mov	r4, r7
 80190ba:	e7db      	b.n	8019074 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 80190bc:	2300      	movs	r3, #0
 80190be:	e7d9      	b.n	8019074 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 80190c0:	4603      	mov	r3, r0
 80190c2:	e7d7      	b.n	8019074 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 80190c4:	b280      	uxth	r0, r0
 80190c6:	b2bf      	uxth	r7, r7
 80190c8:	fb00 fe07 	mul.w	lr, r0, r7
 80190cc:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80190d0:	0100      	lsls	r0, r0, #4
 80190d2:	eba0 0c0e 	sub.w	ip, r0, lr
 80190d6:	b2bf      	uxth	r7, r7
 80190d8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80190dc:	fa1f fc8c 	uxth.w	ip, ip
 80190e0:	1bed      	subs	r5, r5, r7
 80190e2:	b2ad      	uxth	r5, r5
 80190e4:	fb0c f00a 	mul.w	r0, ip, sl
 80190e8:	fb05 000b 	mla	r0, r5, fp, r0
 80190ec:	fb07 0009 	mla	r0, r7, r9, r0
 80190f0:	fb0e 0008 	mla	r0, lr, r8, r0
 80190f4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80190f8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80190fc:	9003      	str	r0, [sp, #12]
 80190fe:	d018      	beq.n	8019132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8019100:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019104:	fb0b f000 	mul.w	r0, fp, r0
 8019108:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801910c:	fb0b fb02 	mul.w	fp, fp, r2
 8019110:	0a02      	lsrs	r2, r0, #8
 8019112:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019116:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801911a:	4402      	add	r2, r0
 801911c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019120:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019124:	0a12      	lsrs	r2, r2, #8
 8019126:	0a00      	lsrs	r0, r0, #8
 8019128:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801912c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019130:	4302      	orrs	r2, r0
 8019132:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019136:	d019      	beq.n	801916c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8019138:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801913c:	fb0a fb0b 	mul.w	fp, sl, fp
 8019140:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019144:	fb0a fa06 	mul.w	sl, sl, r6
 8019148:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801914c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019150:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019154:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019158:	445e      	add	r6, fp
 801915a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801915e:	0a36      	lsrs	r6, r6, #8
 8019160:	0a00      	lsrs	r0, r0, #8
 8019162:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019166:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801916a:	4306      	orrs	r6, r0
 801916c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019170:	d019      	beq.n	80191a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8019172:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019176:	fb09 fa0a 	mul.w	sl, r9, sl
 801917a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801917e:	fb09 f904 	mul.w	r9, r9, r4
 8019182:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019186:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801918a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801918e:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019192:	4454      	add	r4, sl
 8019194:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019198:	0a24      	lsrs	r4, r4, #8
 801919a:	0a00      	lsrs	r0, r0, #8
 801919c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80191a0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80191a4:	4304      	orrs	r4, r0
 80191a6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80191aa:	d019      	beq.n	80191e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 80191ac:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80191b0:	fb08 f909 	mul.w	r9, r8, r9
 80191b4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80191b8:	fb08 f803 	mul.w	r8, r8, r3
 80191bc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80191c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80191c4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80191c8:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80191cc:	444b      	add	r3, r9
 80191ce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80191d2:	0a1b      	lsrs	r3, r3, #8
 80191d4:	0a00      	lsrs	r0, r0, #8
 80191d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80191da:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80191de:	4303      	orrs	r3, r0
 80191e0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80191e4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80191e8:	fb0c f808 	mul.w	r8, ip, r8
 80191ec:	fb05 8800 	mla	r8, r5, r0, r8
 80191f0:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80191f4:	fb07 8800 	mla	r8, r7, r0, r8
 80191f8:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 80191fc:	fb0e 8000 	mla	r0, lr, r0, r8
 8019200:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019204:	fb0c f606 	mul.w	r6, ip, r6
 8019208:	0a00      	lsrs	r0, r0, #8
 801920a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801920e:	fb05 6202 	mla	r2, r5, r2, r6
 8019212:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8019216:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801921a:	fb07 2700 	mla	r7, r7, r0, r2
 801921e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019222:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8019226:	9c03      	ldr	r4, [sp, #12]
 8019228:	9e01      	ldr	r6, [sp, #4]
 801922a:	b29b      	uxth	r3, r3
 801922c:	435c      	muls	r4, r3
 801922e:	fb0e 7000 	mla	r0, lr, r0, r7
 8019232:	1c62      	adds	r2, r4, #1
 8019234:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019238:	0a00      	lsrs	r0, r0, #8
 801923a:	9c00      	ldr	r4, [sp, #0]
 801923c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019240:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8019244:	ea48 0000 	orr.w	r0, r8, r0
 8019248:	b2d2      	uxtb	r2, r2
 801924a:	fb14 f402 	smulbb	r4, r4, r2
 801924e:	0c05      	lsrs	r5, r0, #16
 8019250:	fb05 4503 	mla	r5, r5, r3, r4
 8019254:	fb16 f602 	smulbb	r6, r6, r2
 8019258:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801925c:	fb04 6403 	mla	r4, r4, r3, r6
 8019260:	9e02      	ldr	r6, [sp, #8]
 8019262:	b2c0      	uxtb	r0, r0
 8019264:	fb16 f202 	smulbb	r2, r6, r2
 8019268:	fb00 2303 	mla	r3, r0, r3, r2
 801926c:	b2ad      	uxth	r5, r5
 801926e:	b298      	uxth	r0, r3
 8019270:	1c43      	adds	r3, r0, #1
 8019272:	1c6a      	adds	r2, r5, #1
 8019274:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019278:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801927c:	b2a4      	uxth	r4, r4
 801927e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019282:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019286:	4313      	orrs	r3, r2
 8019288:	1c62      	adds	r2, r4, #1
 801928a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801928e:	0952      	lsrs	r2, r2, #5
 8019290:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019294:	4313      	orrs	r3, r2
 8019296:	800b      	strh	r3, [r1, #0]
 8019298:	b005      	add	sp, #20
 801929a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801929e:	bf00      	nop
 80192a0:	0801f576 	.word	0x0801f576
 80192a4:	0801fb42 	.word	0x0801fb42
 80192a8:	0801f5fa 	.word	0x0801f5fa

080192ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80192ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192b0:	ed2d 8b08 	vpush	{d8-d11}
 80192b4:	b09d      	sub	sp, #116	; 0x74
 80192b6:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80192ba:	9219      	str	r2, [sp, #100]	; 0x64
 80192bc:	9307      	str	r3, [sp, #28]
 80192be:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80192c0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80192c4:	931a      	str	r3, [sp, #104]	; 0x68
 80192c6:	9117      	str	r1, [sp, #92]	; 0x5c
 80192c8:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80192cc:	901b      	str	r0, [sp, #108]	; 0x6c
 80192ce:	6850      	ldr	r0, [r2, #4]
 80192d0:	6812      	ldr	r2, [r2, #0]
 80192d2:	fb00 1303 	mla	r3, r0, r3, r1
 80192d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80192da:	930a      	str	r3, [sp, #40]	; 0x28
 80192dc:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80192de:	681b      	ldr	r3, [r3, #0]
 80192e0:	9310      	str	r3, [sp, #64]	; 0x40
 80192e2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80192e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80192e8:	eeb0 aa40 	vmov.f32	s20, s0
 80192ec:	eef0 9a60 	vmov.f32	s19, s1
 80192f0:	eeb0 9a41 	vmov.f32	s18, s2
 80192f4:	eeb0 8a62 	vmov.f32	s16, s5
 80192f8:	eef0 8a43 	vmov.f32	s17, s6
 80192fc:	eef0 ba44 	vmov.f32	s23, s8
 8019300:	eeb0 ba64 	vmov.f32	s22, s9
 8019304:	eef0 aa45 	vmov.f32	s21, s10
 8019308:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801930a:	2b00      	cmp	r3, #0
 801930c:	dc03      	bgt.n	8019316 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801930e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019310:	2b00      	cmp	r3, #0
 8019312:	f340 8375 	ble.w	8019a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019316:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019318:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801931c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019320:	1e48      	subs	r0, r1, #1
 8019322:	1e57      	subs	r7, r2, #1
 8019324:	9b07      	ldr	r3, [sp, #28]
 8019326:	2b00      	cmp	r3, #0
 8019328:	f340 818e 	ble.w	8019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801932c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019330:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019334:	d406      	bmi.n	8019344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019336:	4584      	cmp	ip, r0
 8019338:	da04      	bge.n	8019344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801933a:	2b00      	cmp	r3, #0
 801933c:	db02      	blt.n	8019344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801933e:	42bb      	cmp	r3, r7
 8019340:	f2c0 8183 	blt.w	801964a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019344:	f11c 0c01 	adds.w	ip, ip, #1
 8019348:	f100 8173 	bmi.w	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801934c:	4561      	cmp	r1, ip
 801934e:	f2c0 8170 	blt.w	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019352:	3301      	adds	r3, #1
 8019354:	f100 816d 	bmi.w	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019358:	429a      	cmp	r2, r3
 801935a:	f2c0 816a 	blt.w	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801935e:	9b07      	ldr	r3, [sp, #28]
 8019360:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019362:	9318      	str	r3, [sp, #96]	; 0x60
 8019364:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019366:	2b00      	cmp	r3, #0
 8019368:	f340 818c 	ble.w	8019684 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801936c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801936e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019370:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019374:	689b      	ldr	r3, [r3, #8]
 8019376:	1422      	asrs	r2, r4, #16
 8019378:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801937c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019380:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019384:	f100 81cd 	bmi.w	8019722 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019388:	f103 38ff 	add.w	r8, r3, #4294967295
 801938c:	4542      	cmp	r2, r8
 801938e:	f280 81c8 	bge.w	8019722 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019392:	f1bc 0f00 	cmp.w	ip, #0
 8019396:	f2c0 81c4 	blt.w	8019722 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801939a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801939e:	45c4      	cmp	ip, r8
 80193a0:	f280 81bf 	bge.w	8019722 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80193a4:	b21b      	sxth	r3, r3
 80193a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80193aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80193ac:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80193b0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80193b4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80193b8:	2800      	cmp	r0, #0
 80193ba:	f000 81a9 	beq.w	8019710 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 80193be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80193c2:	950c      	str	r5, [sp, #48]	; 0x30
 80193c4:	0e2d      	lsrs	r5, r5, #24
 80193c6:	9513      	str	r5, [sp, #76]	; 0x4c
 80193c8:	b181      	cbz	r1, 80193ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80193ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80193ce:	3b01      	subs	r3, #1
 80193d0:	009b      	lsls	r3, r3, #2
 80193d2:	3304      	adds	r3, #4
 80193d4:	eb08 0c03 	add.w	ip, r8, r3
 80193d8:	f858 3003 	ldr.w	r3, [r8, r3]
 80193dc:	9308      	str	r3, [sp, #32]
 80193de:	0e1b      	lsrs	r3, r3, #24
 80193e0:	9311      	str	r3, [sp, #68]	; 0x44
 80193e2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80193e6:	930d      	str	r3, [sp, #52]	; 0x34
 80193e8:	0e1b      	lsrs	r3, r3, #24
 80193ea:	9314      	str	r3, [sp, #80]	; 0x50
 80193ec:	b280      	uxth	r0, r0
 80193ee:	b289      	uxth	r1, r1
 80193f0:	fb00 f901 	mul.w	r9, r0, r1
 80193f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80193f8:	0100      	lsls	r0, r0, #4
 80193fa:	eba0 0809 	sub.w	r8, r0, r9
 80193fe:	b289      	uxth	r1, r1
 8019400:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019404:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019406:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019408:	fa1f f888 	uxth.w	r8, r8
 801940c:	1a5b      	subs	r3, r3, r1
 801940e:	b29b      	uxth	r3, r3
 8019410:	fb08 f000 	mul.w	r0, r8, r0
 8019414:	fb03 000e 	mla	r0, r3, lr, r0
 8019418:	fb01 0005 	mla	r0, r1, r5, r0
 801941c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801941e:	fb09 0005 	mla	r0, r9, r5, r0
 8019422:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019426:	2800      	cmp	r0, #0
 8019428:	f000 80fa 	beq.w	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801942c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019430:	d01b      	beq.n	801946a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8019432:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019436:	fb0e fa0a 	mul.w	sl, lr, sl
 801943a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801943e:	fb0e fe02 	mul.w	lr, lr, r2
 8019442:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019446:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801944a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801944e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019452:	4452      	add	r2, sl
 8019454:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019458:	0a12      	lsrs	r2, r2, #8
 801945a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801945e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019462:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019466:	ea42 020c 	orr.w	r2, r2, ip
 801946a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801946c:	2dff      	cmp	r5, #255	; 0xff
 801946e:	d021      	beq.n	80194b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019470:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019472:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019476:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019478:	fb05 fb0b 	mul.w	fp, r5, fp
 801947c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801947e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019482:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019484:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019488:	fb05 fa0a 	mul.w	sl, r5, sl
 801948c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019490:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019494:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019498:	44de      	add	lr, fp
 801949a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801949e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80194a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80194a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80194aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80194ae:	ea4e 050a 	orr.w	r5, lr, sl
 80194b2:	950c      	str	r5, [sp, #48]	; 0x30
 80194b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80194b6:	2dff      	cmp	r5, #255	; 0xff
 80194b8:	d021      	beq.n	80194fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80194ba:	9d08      	ldr	r5, [sp, #32]
 80194bc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80194c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80194c2:	fb05 fb0b 	mul.w	fp, r5, fp
 80194c6:	9d08      	ldr	r5, [sp, #32]
 80194c8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80194cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80194ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80194d2:	fb05 fa0a 	mul.w	sl, r5, sl
 80194d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80194da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80194de:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80194e2:	44de      	add	lr, fp
 80194e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80194e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80194ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80194f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80194f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80194f8:	ea4e 050a 	orr.w	r5, lr, sl
 80194fc:	9508      	str	r5, [sp, #32]
 80194fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019500:	2dff      	cmp	r5, #255	; 0xff
 8019502:	d021      	beq.n	8019548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019504:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019506:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801950a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801950c:	fb05 fb0b 	mul.w	fp, r5, fp
 8019510:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019512:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019516:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019518:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801951c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019520:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019524:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019528:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801952c:	44de      	add	lr, fp
 801952e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019532:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019536:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801953a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801953e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019542:	ea4e 050a 	orr.w	r5, lr, sl
 8019546:	950d      	str	r5, [sp, #52]	; 0x34
 8019548:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801954a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801954e:	9d08      	ldr	r5, [sp, #32]
 8019550:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019554:	fb08 fc0c 	mul.w	ip, r8, ip
 8019558:	fb03 cc0e 	mla	ip, r3, lr, ip
 801955c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019560:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019562:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019566:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801956a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801956c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019570:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019574:	fb08 f80e 	mul.w	r8, r8, lr
 8019578:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801957c:	fb03 8202 	mla	r2, r3, r2, r8
 8019580:	9b08      	ldr	r3, [sp, #32]
 8019582:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019584:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019588:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801958a:	fb01 220a 	mla	r2, r1, sl, r2
 801958e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019592:	fb09 2901 	mla	r9, r9, r1, r2
 8019596:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019598:	883b      	ldrh	r3, [r7, #0]
 801959a:	4342      	muls	r2, r0
 801959c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80195a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80195a4:	1c50      	adds	r0, r2, #1
 80195a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80195aa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80195ae:	ea4c 0c09 	orr.w	ip, ip, r9
 80195b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80195b6:	1219      	asrs	r1, r3, #8
 80195b8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80195bc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80195c0:	b2c0      	uxtb	r0, r0
 80195c2:	fb12 f205 	smulbb	r2, r2, r5
 80195c6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80195ca:	fb01 2100 	mla	r1, r1, r0, r2
 80195ce:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80195d2:	10da      	asrs	r2, r3, #3
 80195d4:	fa5f fc8c 	uxtb.w	ip, ip
 80195d8:	00db      	lsls	r3, r3, #3
 80195da:	fb1c fc05 	smulbb	ip, ip, r5
 80195de:	b2db      	uxtb	r3, r3
 80195e0:	b289      	uxth	r1, r1
 80195e2:	fb03 c300 	mla	r3, r3, r0, ip
 80195e6:	fa1f fc83 	uxth.w	ip, r3
 80195ea:	1c4b      	adds	r3, r1, #1
 80195ec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80195f0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80195f4:	fb1e fe05 	smulbb	lr, lr, r5
 80195f8:	f10c 0301 	add.w	r3, ip, #1
 80195fc:	fb02 e200 	mla	r2, r2, r0, lr
 8019600:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019604:	b292      	uxth	r2, r2
 8019606:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801960a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801960e:	430b      	orrs	r3, r1
 8019610:	1c51      	adds	r1, r2, #1
 8019612:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019616:	0952      	lsrs	r2, r2, #5
 8019618:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801961c:	4313      	orrs	r3, r2
 801961e:	803b      	strh	r3, [r7, #0]
 8019620:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019622:	441c      	add	r4, r3
 8019624:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019626:	441e      	add	r6, r3
 8019628:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801962a:	3b01      	subs	r3, #1
 801962c:	3702      	adds	r7, #2
 801962e:	9318      	str	r3, [sp, #96]	; 0x60
 8019630:	e698      	b.n	8019364 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019632:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019634:	441c      	add	r4, r3
 8019636:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019638:	441e      	add	r6, r3
 801963a:	9b07      	ldr	r3, [sp, #28]
 801963c:	3b01      	subs	r3, #1
 801963e:	9307      	str	r3, [sp, #28]
 8019640:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019642:	3302      	adds	r3, #2
 8019644:	930a      	str	r3, [sp, #40]	; 0x28
 8019646:	e66d      	b.n	8019324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019648:	d023      	beq.n	8019692 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801964a:	9b07      	ldr	r3, [sp, #28]
 801964c:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801964e:	3b01      	subs	r3, #1
 8019650:	fb00 4003 	mla	r0, r0, r3, r4
 8019654:	1400      	asrs	r0, r0, #16
 8019656:	f53f ae82 	bmi.w	801935e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801965a:	3901      	subs	r1, #1
 801965c:	4288      	cmp	r0, r1
 801965e:	f6bf ae7e 	bge.w	801935e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019662:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019664:	fb01 6303 	mla	r3, r1, r3, r6
 8019668:	141b      	asrs	r3, r3, #16
 801966a:	f53f ae78 	bmi.w	801935e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801966e:	3a01      	subs	r2, #1
 8019670:	4293      	cmp	r3, r2
 8019672:	f6bf ae74 	bge.w	801935e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019676:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801967a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801967e:	f1bb 0f00 	cmp.w	fp, #0
 8019682:	dc6c      	bgt.n	801975e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8019684:	9b07      	ldr	r3, [sp, #28]
 8019686:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801968a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801968c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019690:	930a      	str	r3, [sp, #40]	; 0x28
 8019692:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019694:	2b00      	cmp	r3, #0
 8019696:	f340 81b3 	ble.w	8019a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801969a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801969e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80196a2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80196a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80196a8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80196ac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80196b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80196b4:	eef0 6a48 	vmov.f32	s13, s16
 80196b8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80196bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80196c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80196c4:	ee16 4a90 	vmov	r4, s13
 80196c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80196cc:	eef0 6a68 	vmov.f32	s13, s17
 80196d0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80196d4:	ee18 2a10 	vmov	r2, s16
 80196d8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80196dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80196e0:	ee18 2a90 	vmov	r2, s17
 80196e4:	9331      	str	r3, [sp, #196]	; 0xc4
 80196e6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80196e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80196ec:	9332      	str	r3, [sp, #200]	; 0xc8
 80196ee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80196f0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80196f2:	3b01      	subs	r3, #1
 80196f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80196f8:	9317      	str	r3, [sp, #92]	; 0x5c
 80196fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80196fc:	bf08      	it	eq
 80196fe:	4613      	moveq	r3, r2
 8019700:	ee16 6a90 	vmov	r6, s13
 8019704:	9307      	str	r3, [sp, #28]
 8019706:	eef0 8a67 	vmov.f32	s17, s15
 801970a:	eeb0 8a47 	vmov.f32	s16, s14
 801970e:	e5fb      	b.n	8019308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019710:	2900      	cmp	r1, #0
 8019712:	f43f ae6b 	beq.w	80193ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019716:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801971a:	9308      	str	r3, [sp, #32]
 801971c:	0e1b      	lsrs	r3, r3, #24
 801971e:	9311      	str	r3, [sp, #68]	; 0x44
 8019720:	e664      	b.n	80193ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019722:	f112 0801 	adds.w	r8, r2, #1
 8019726:	f53f af7b 	bmi.w	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801972a:	4543      	cmp	r3, r8
 801972c:	f6ff af78 	blt.w	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019730:	f11c 0801 	adds.w	r8, ip, #1
 8019734:	f53f af74 	bmi.w	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019738:	45c6      	cmp	lr, r8
 801973a:	f6ff af71 	blt.w	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801973e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019740:	9201      	str	r2, [sp, #4]
 8019742:	fa0f f28e 	sxth.w	r2, lr
 8019746:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801974a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801974e:	9200      	str	r2, [sp, #0]
 8019750:	b21b      	sxth	r3, r3
 8019752:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019754:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019756:	4639      	mov	r1, r7
 8019758:	f7ff fc4a 	bl	8018ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801975c:	e760      	b.n	8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801975e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019760:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019762:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019766:	1427      	asrs	r7, r4, #16
 8019768:	1433      	asrs	r3, r6, #16
 801976a:	fb01 7303 	mla	r3, r1, r3, r7
 801976e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019772:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019776:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801977a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801977e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019782:	2a00      	cmp	r2, #0
 8019784:	f000 8133 	beq.w	80199ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8019788:	687d      	ldr	r5, [r7, #4]
 801978a:	950e      	str	r5, [sp, #56]	; 0x38
 801978c:	0e2d      	lsrs	r5, r5, #24
 801978e:	9515      	str	r5, [sp, #84]	; 0x54
 8019790:	b178      	cbz	r0, 80197b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019792:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019796:	3901      	subs	r1, #1
 8019798:	0089      	lsls	r1, r1, #2
 801979a:	3104      	adds	r1, #4
 801979c:	eb07 0e01 	add.w	lr, r7, r1
 80197a0:	5879      	ldr	r1, [r7, r1]
 80197a2:	9109      	str	r1, [sp, #36]	; 0x24
 80197a4:	0e09      	lsrs	r1, r1, #24
 80197a6:	9112      	str	r1, [sp, #72]	; 0x48
 80197a8:	f8de 1004 	ldr.w	r1, [lr, #4]
 80197ac:	910f      	str	r1, [sp, #60]	; 0x3c
 80197ae:	0e09      	lsrs	r1, r1, #24
 80197b0:	9116      	str	r1, [sp, #88]	; 0x58
 80197b2:	b292      	uxth	r2, r2
 80197b4:	b280      	uxth	r0, r0
 80197b6:	fb02 f800 	mul.w	r8, r2, r0
 80197ba:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80197be:	0112      	lsls	r2, r2, #4
 80197c0:	eba2 0e08 	sub.w	lr, r2, r8
 80197c4:	b280      	uxth	r0, r0
 80197c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80197ca:	9915      	ldr	r1, [sp, #84]	; 0x54
 80197cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80197ce:	fa1f fe8e 	uxth.w	lr, lr
 80197d2:	1a12      	subs	r2, r2, r0
 80197d4:	b292      	uxth	r2, r2
 80197d6:	fb0e f101 	mul.w	r1, lr, r1
 80197da:	fb02 110c 	mla	r1, r2, ip, r1
 80197de:	fb00 1105 	mla	r1, r0, r5, r1
 80197e2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80197e4:	fb08 1105 	mla	r1, r8, r5, r1
 80197e8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80197ec:	2900      	cmp	r1, #0
 80197ee:	f000 80f5 	beq.w	80199dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80197f2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80197f6:	d019      	beq.n	801982c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80197f8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80197fc:	fb0c fa0a 	mul.w	sl, ip, sl
 8019800:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019804:	fb0c fc03 	mul.w	ip, ip, r3
 8019808:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801980c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019810:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019814:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019818:	4453      	add	r3, sl
 801981a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801981e:	0a1b      	lsrs	r3, r3, #8
 8019820:	0a3f      	lsrs	r7, r7, #8
 8019822:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019826:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801982a:	433b      	orrs	r3, r7
 801982c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801982e:	2dff      	cmp	r5, #255	; 0xff
 8019830:	d020      	beq.n	8019874 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8019832:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019834:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019838:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801983a:	436f      	muls	r7, r5
 801983c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801983e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019842:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019844:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019848:	fb05 fa0a 	mul.w	sl, r5, sl
 801984c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019850:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019854:	44bc      	add	ip, r7
 8019856:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801985a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801985e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019862:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019866:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801986a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801986e:	ea4c 050a 	orr.w	r5, ip, sl
 8019872:	950e      	str	r5, [sp, #56]	; 0x38
 8019874:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019876:	2dff      	cmp	r5, #255	; 0xff
 8019878:	d020      	beq.n	80198bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801987a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801987c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019880:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019882:	436f      	muls	r7, r5
 8019884:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019886:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801988a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801988c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019890:	fb05 fa0a 	mul.w	sl, r5, sl
 8019894:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019898:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801989c:	44bc      	add	ip, r7
 801989e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80198a2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80198a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80198aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80198ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80198b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80198b6:	ea4c 050a 	orr.w	r5, ip, sl
 80198ba:	9509      	str	r5, [sp, #36]	; 0x24
 80198bc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80198be:	2dff      	cmp	r5, #255	; 0xff
 80198c0:	d020      	beq.n	8019904 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80198c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80198c4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80198c8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80198ca:	436f      	muls	r7, r5
 80198cc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80198ce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80198d2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80198d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80198d8:	fb05 fa0a 	mul.w	sl, r5, sl
 80198dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80198e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80198e4:	44bc      	add	ip, r7
 80198e6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80198ea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80198ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80198f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80198f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80198fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80198fe:	ea4c 050a 	orr.w	r5, ip, sl
 8019902:	950f      	str	r5, [sp, #60]	; 0x3c
 8019904:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019906:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801990a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801990c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019910:	fb0e f707 	mul.w	r7, lr, r7
 8019914:	fb02 770c 	mla	r7, r2, ip, r7
 8019918:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801991c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801991e:	fb00 770c 	mla	r7, r0, ip, r7
 8019922:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019926:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019928:	fb08 770c 	mla	r7, r8, ip, r7
 801992c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019930:	fb0e fe0c 	mul.w	lr, lr, ip
 8019934:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019938:	fb02 e303 	mla	r3, r2, r3, lr
 801993c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801993e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019940:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019944:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019946:	fb00 330a 	mla	r3, r0, sl, r3
 801994a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801994e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019952:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019954:	f8b9 0000 	ldrh.w	r0, [r9]
 8019958:	4359      	muls	r1, r3
 801995a:	0a3f      	lsrs	r7, r7, #8
 801995c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019960:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019964:	1c4b      	adds	r3, r1, #1
 8019966:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801996a:	ea47 070c 	orr.w	r7, r7, ip
 801996e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019972:	1202      	asrs	r2, r0, #8
 8019974:	0c3b      	lsrs	r3, r7, #16
 8019976:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801997a:	b2c9      	uxtb	r1, r1
 801997c:	fb13 f305 	smulbb	r3, r3, r5
 8019980:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019984:	fb02 3201 	mla	r2, r2, r1, r3
 8019988:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801998c:	10c3      	asrs	r3, r0, #3
 801998e:	b2ff      	uxtb	r7, r7
 8019990:	00c0      	lsls	r0, r0, #3
 8019992:	b2c0      	uxtb	r0, r0
 8019994:	fb17 f705 	smulbb	r7, r7, r5
 8019998:	fb00 7001 	mla	r0, r0, r1, r7
 801999c:	b292      	uxth	r2, r2
 801999e:	fb1c fc05 	smulbb	ip, ip, r5
 80199a2:	b280      	uxth	r0, r0
 80199a4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80199a8:	fb03 c301 	mla	r3, r3, r1, ip
 80199ac:	1c51      	adds	r1, r2, #1
 80199ae:	f100 0c01 	add.w	ip, r0, #1
 80199b2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80199b6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80199ba:	b29b      	uxth	r3, r3
 80199bc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80199c0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80199c4:	ea4c 0202 	orr.w	r2, ip, r2
 80199c8:	f103 0c01 	add.w	ip, r3, #1
 80199cc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80199d0:	095b      	lsrs	r3, r3, #5
 80199d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80199d6:	431a      	orrs	r2, r3
 80199d8:	f8a9 2000 	strh.w	r2, [r9]
 80199dc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80199de:	441c      	add	r4, r3
 80199e0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80199e2:	f109 0902 	add.w	r9, r9, #2
 80199e6:	441e      	add	r6, r3
 80199e8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80199ec:	e647      	b.n	801967e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 80199ee:	2800      	cmp	r0, #0
 80199f0:	f43f aedf 	beq.w	80197b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80199f4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80199f8:	9109      	str	r1, [sp, #36]	; 0x24
 80199fa:	0e09      	lsrs	r1, r1, #24
 80199fc:	9112      	str	r1, [sp, #72]	; 0x48
 80199fe:	e6d8      	b.n	80197b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019a00:	b01d      	add	sp, #116	; 0x74
 8019a02:	ecbd 8b08 	vpop	{d8-d11}
 8019a06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a10:	880e      	ldrh	r6, [r1, #0]
 8019a12:	b085      	sub	sp, #20
 8019a14:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8019a18:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8019a1c:	4690      	mov	r8, r2
 8019a1e:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8019a22:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8019a26:	9200      	str	r2, [sp, #0]
 8019a28:	00f6      	lsls	r6, r6, #3
 8019a2a:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8019a2e:	9201      	str	r2, [sp, #4]
 8019a30:	2c00      	cmp	r4, #0
 8019a32:	b2f2      	uxtb	r2, r6
 8019a34:	fb04 5603 	mla	r6, r4, r3, r5
 8019a38:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019a3c:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8019a40:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019a44:	9202      	str	r2, [sp, #8]
 8019a46:	eb08 0e86 	add.w	lr, r8, r6, lsl #2
 8019a4a:	db37      	blt.n	8019abc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019a4c:	45a4      	cmp	ip, r4
 8019a4e:	dd35      	ble.n	8019abc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019a50:	2d00      	cmp	r5, #0
 8019a52:	db31      	blt.n	8019ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 8019a54:	42ab      	cmp	r3, r5
 8019a56:	dd2f      	ble.n	8019ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 8019a58:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8019a5c:	1c6e      	adds	r6, r5, #1
 8019a5e:	d430      	bmi.n	8019ac2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8019a60:	42b3      	cmp	r3, r6
 8019a62:	dd2e      	ble.n	8019ac2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8019a64:	b378      	cbz	r0, 8019ac6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xba>
 8019a66:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019a6a:	3401      	adds	r4, #1
 8019a6c:	d42f      	bmi.n	8019ace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019a6e:	45a4      	cmp	ip, r4
 8019a70:	dd2d      	ble.n	8019ace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019a72:	b37f      	cbz	r7, 8019ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019a74:	2d00      	cmp	r5, #0
 8019a76:	eb0e 0c83 	add.w	ip, lr, r3, lsl #2
 8019a7a:	db26      	blt.n	8019aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019a7c:	42ab      	cmp	r3, r5
 8019a7e:	dd24      	ble.n	8019aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019a80:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8019a84:	3501      	adds	r5, #1
 8019a86:	d428      	bmi.n	8019ada <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 8019a88:	42ab      	cmp	r3, r5
 8019a8a:	dd26      	ble.n	8019ada <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 8019a8c:	b338      	cbz	r0, 8019ade <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd2>
 8019a8e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019a92:	280f      	cmp	r0, #15
 8019a94:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019a98:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019a9c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019aa0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019aa4:	d801      	bhi.n	8019aaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8019aa6:	2f0f      	cmp	r7, #15
 8019aa8:	d91b      	bls.n	8019ae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd6>
 8019aaa:	4b7d      	ldr	r3, [pc, #500]	; (8019ca0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 8019aac:	4a7d      	ldr	r2, [pc, #500]	; (8019ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 8019aae:	487e      	ldr	r0, [pc, #504]	; (8019ca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8019ab0:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8019ab4:	f001 fcf8 	bl	801b4a8 <__assert_func>
 8019ab8:	2200      	movs	r2, #0
 8019aba:	e7cf      	b.n	8019a5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 8019abc:	2600      	movs	r6, #0
 8019abe:	4632      	mov	r2, r6
 8019ac0:	e7d3      	b.n	8019a6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019ac2:	2600      	movs	r6, #0
 8019ac4:	e7d1      	b.n	8019a6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019ac6:	4606      	mov	r6, r0
 8019ac8:	e7cf      	b.n	8019a6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019aca:	2400      	movs	r4, #0
 8019acc:	e7da      	b.n	8019a84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8019ace:	2300      	movs	r3, #0
 8019ad0:	461c      	mov	r4, r3
 8019ad2:	e7de      	b.n	8019a92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019ad4:	463b      	mov	r3, r7
 8019ad6:	463c      	mov	r4, r7
 8019ad8:	e7db      	b.n	8019a92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019ada:	2300      	movs	r3, #0
 8019adc:	e7d9      	b.n	8019a92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019ade:	4603      	mov	r3, r0
 8019ae0:	e7d7      	b.n	8019a92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019ae2:	b280      	uxth	r0, r0
 8019ae4:	b2bf      	uxth	r7, r7
 8019ae6:	fb00 fe07 	mul.w	lr, r0, r7
 8019aea:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019aee:	0100      	lsls	r0, r0, #4
 8019af0:	eba0 0c0e 	sub.w	ip, r0, lr
 8019af4:	b2bf      	uxth	r7, r7
 8019af6:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019afa:	fa1f fc8c 	uxth.w	ip, ip
 8019afe:	1bed      	subs	r5, r5, r7
 8019b00:	b2ad      	uxth	r5, r5
 8019b02:	fb0c f00a 	mul.w	r0, ip, sl
 8019b06:	fb05 000b 	mla	r0, r5, fp, r0
 8019b0a:	fb07 0009 	mla	r0, r7, r9, r0
 8019b0e:	fb0e 0008 	mla	r0, lr, r8, r0
 8019b12:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019b16:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019b1a:	9003      	str	r0, [sp, #12]
 8019b1c:	d018      	beq.n	8019b50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x144>
 8019b1e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019b22:	fb0b f000 	mul.w	r0, fp, r0
 8019b26:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019b2a:	fb0b fb02 	mul.w	fp, fp, r2
 8019b2e:	0a02      	lsrs	r2, r0, #8
 8019b30:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019b34:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019b38:	4402      	add	r2, r0
 8019b3a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019b3e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019b42:	0a12      	lsrs	r2, r2, #8
 8019b44:	0a00      	lsrs	r0, r0, #8
 8019b46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019b4a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019b4e:	4302      	orrs	r2, r0
 8019b50:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019b54:	d019      	beq.n	8019b8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17e>
 8019b56:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019b5a:	fb0a fb0b 	mul.w	fp, sl, fp
 8019b5e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019b62:	fb0a fa06 	mul.w	sl, sl, r6
 8019b66:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019b6a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019b6e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019b72:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019b76:	445e      	add	r6, fp
 8019b78:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019b7c:	0a36      	lsrs	r6, r6, #8
 8019b7e:	0a00      	lsrs	r0, r0, #8
 8019b80:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019b84:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019b88:	4306      	orrs	r6, r0
 8019b8a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019b8e:	d019      	beq.n	8019bc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b8>
 8019b90:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019b94:	fb09 fa0a 	mul.w	sl, r9, sl
 8019b98:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019b9c:	fb09 f904 	mul.w	r9, r9, r4
 8019ba0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019ba4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019ba8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019bac:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019bb0:	4454      	add	r4, sl
 8019bb2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019bb6:	0a24      	lsrs	r4, r4, #8
 8019bb8:	0a00      	lsrs	r0, r0, #8
 8019bba:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019bbe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019bc2:	4304      	orrs	r4, r0
 8019bc4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019bc8:	d019      	beq.n	8019bfe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f2>
 8019bca:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019bce:	fb08 f909 	mul.w	r9, r8, r9
 8019bd2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019bd6:	fb08 f803 	mul.w	r8, r8, r3
 8019bda:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019bde:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019be2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019be6:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8019bea:	444b      	add	r3, r9
 8019bec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019bf0:	0a1b      	lsrs	r3, r3, #8
 8019bf2:	0a00      	lsrs	r0, r0, #8
 8019bf4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019bf8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019bfc:	4303      	orrs	r3, r0
 8019bfe:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019c02:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019c06:	fb0c f808 	mul.w	r8, ip, r8
 8019c0a:	fb05 8800 	mla	r8, r5, r0, r8
 8019c0e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019c12:	fb07 8800 	mla	r8, r7, r0, r8
 8019c16:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019c1a:	fb0e 8000 	mla	r0, lr, r0, r8
 8019c1e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019c22:	fb0c f606 	mul.w	r6, ip, r6
 8019c26:	0a00      	lsrs	r0, r0, #8
 8019c28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019c2c:	fb05 6202 	mla	r2, r5, r2, r6
 8019c30:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8019c34:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8019c38:	fb07 2700 	mla	r7, r7, r0, r2
 8019c3c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019c40:	9b03      	ldr	r3, [sp, #12]
 8019c42:	9d00      	ldr	r5, [sp, #0]
 8019c44:	9a02      	ldr	r2, [sp, #8]
 8019c46:	fb0e 7000 	mla	r0, lr, r0, r7
 8019c4a:	43dc      	mvns	r4, r3
 8019c4c:	9b01      	ldr	r3, [sp, #4]
 8019c4e:	b2e4      	uxtb	r4, r4
 8019c50:	0a00      	lsrs	r0, r0, #8
 8019c52:	4363      	muls	r3, r4
 8019c54:	4365      	muls	r5, r4
 8019c56:	4362      	muls	r2, r4
 8019c58:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c5c:	ea48 0000 	orr.w	r0, r8, r0
 8019c60:	4614      	mov	r4, r2
 8019c62:	1c5e      	adds	r6, r3, #1
 8019c64:	1c6a      	adds	r2, r5, #1
 8019c66:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8019c6a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8019c6e:	0a03      	lsrs	r3, r0, #8
 8019c70:	0c02      	lsrs	r2, r0, #16
 8019c72:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8019c76:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8019c7a:	00db      	lsls	r3, r3, #3
 8019c7c:	0212      	lsls	r2, r2, #8
 8019c7e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019c82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019c86:	4313      	orrs	r3, r2
 8019c88:	1c62      	adds	r2, r4, #1
 8019c8a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8019c8e:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8019c92:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019c96:	4318      	orrs	r0, r3
 8019c98:	8008      	strh	r0, [r1, #0]
 8019c9a:	b005      	add	sp, #20
 8019c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ca0:	0801f576 	.word	0x0801f576
 8019ca4:	0801fb42 	.word	0x0801fb42
 8019ca8:	0801f5fa 	.word	0x0801f5fa

08019cac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cb0:	ed2d 8b08 	vpush	{d8-d11}
 8019cb4:	b09b      	sub	sp, #108	; 0x6c
 8019cb6:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8019cba:	9218      	str	r2, [sp, #96]	; 0x60
 8019cbc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8019cbe:	9116      	str	r1, [sp, #88]	; 0x58
 8019cc0:	9307      	str	r3, [sp, #28]
 8019cc2:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8019cc6:	9019      	str	r0, [sp, #100]	; 0x64
 8019cc8:	6850      	ldr	r0, [r2, #4]
 8019cca:	6812      	ldr	r2, [r2, #0]
 8019ccc:	fb00 1303 	mla	r3, r0, r3, r1
 8019cd0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019cd4:	930a      	str	r3, [sp, #40]	; 0x28
 8019cd6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019cd8:	681b      	ldr	r3, [r3, #0]
 8019cda:	930f      	str	r3, [sp, #60]	; 0x3c
 8019cdc:	eeb0 aa40 	vmov.f32	s20, s0
 8019ce0:	eef0 9a60 	vmov.f32	s19, s1
 8019ce4:	eeb0 9a41 	vmov.f32	s18, s2
 8019ce8:	eeb0 8a62 	vmov.f32	s16, s5
 8019cec:	eef0 8a43 	vmov.f32	s17, s6
 8019cf0:	eef0 ba44 	vmov.f32	s23, s8
 8019cf4:	eeb0 ba64 	vmov.f32	s22, s9
 8019cf8:	eef0 aa45 	vmov.f32	s21, s10
 8019cfc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019cfe:	2b00      	cmp	r3, #0
 8019d00:	dc03      	bgt.n	8019d0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019d02:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019d04:	2b00      	cmp	r3, #0
 8019d06:	f340 8389 	ble.w	801a41c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 8019d0a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019d0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019d10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019d14:	1e48      	subs	r0, r1, #1
 8019d16:	1e57      	subs	r7, r2, #1
 8019d18:	9b07      	ldr	r3, [sp, #28]
 8019d1a:	2b00      	cmp	r3, #0
 8019d1c:	f340 818b 	ble.w	801a036 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019d20:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019d24:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019d28:	d406      	bmi.n	8019d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019d2a:	4584      	cmp	ip, r0
 8019d2c:	da04      	bge.n	8019d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019d2e:	2b00      	cmp	r3, #0
 8019d30:	db02      	blt.n	8019d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019d32:	42bb      	cmp	r3, r7
 8019d34:	f2c0 8180 	blt.w	801a038 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8019d38:	f11c 0c01 	adds.w	ip, ip, #1
 8019d3c:	f100 8170 	bmi.w	801a020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d40:	4561      	cmp	r1, ip
 8019d42:	f2c0 816d 	blt.w	801a020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d46:	3301      	adds	r3, #1
 8019d48:	f100 816a 	bmi.w	801a020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d4c:	429a      	cmp	r2, r3
 8019d4e:	f2c0 8167 	blt.w	801a020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d52:	9b07      	ldr	r3, [sp, #28]
 8019d54:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019d56:	9317      	str	r3, [sp, #92]	; 0x5c
 8019d58:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019d5a:	2b00      	cmp	r3, #0
 8019d5c:	f340 8189 	ble.w	801a072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8019d60:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8019d62:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019d64:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019d68:	689b      	ldr	r3, [r3, #8]
 8019d6a:	1422      	asrs	r2, r4, #16
 8019d6c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019d70:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019d74:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019d78:	f100 81d4 	bmi.w	801a124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019d7c:	f103 38ff 	add.w	r8, r3, #4294967295
 8019d80:	4542      	cmp	r2, r8
 8019d82:	f280 81cf 	bge.w	801a124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019d86:	f1bc 0f00 	cmp.w	ip, #0
 8019d8a:	f2c0 81cb 	blt.w	801a124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019d8e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019d92:	45c4      	cmp	ip, r8
 8019d94:	f280 81c6 	bge.w	801a124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019d98:	b21b      	sxth	r3, r3
 8019d9a:	fb0c 2203 	mla	r2, ip, r3, r2
 8019d9e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019da0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019da4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019da8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019dac:	2900      	cmp	r1, #0
 8019dae:	f000 81a6 	beq.w	801a0fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019db2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019db6:	950b      	str	r5, [sp, #44]	; 0x2c
 8019db8:	0e2d      	lsrs	r5, r5, #24
 8019dba:	9512      	str	r5, [sp, #72]	; 0x48
 8019dbc:	b180      	cbz	r0, 8019de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8019dbe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019dc2:	3b01      	subs	r3, #1
 8019dc4:	009b      	lsls	r3, r3, #2
 8019dc6:	3304      	adds	r3, #4
 8019dc8:	eb08 0c03 	add.w	ip, r8, r3
 8019dcc:	f858 3003 	ldr.w	r3, [r8, r3]
 8019dd0:	9308      	str	r3, [sp, #32]
 8019dd2:	0e1b      	lsrs	r3, r3, #24
 8019dd4:	9310      	str	r3, [sp, #64]	; 0x40
 8019dd6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019dda:	930c      	str	r3, [sp, #48]	; 0x30
 8019ddc:	0e1b      	lsrs	r3, r3, #24
 8019dde:	9313      	str	r3, [sp, #76]	; 0x4c
 8019de0:	b289      	uxth	r1, r1
 8019de2:	b280      	uxth	r0, r0
 8019de4:	fb01 f900 	mul.w	r9, r1, r0
 8019de8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019dec:	0109      	lsls	r1, r1, #4
 8019dee:	eba1 0809 	sub.w	r8, r1, r9
 8019df2:	b280      	uxth	r0, r0
 8019df4:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8019df8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019dfa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019dfc:	fa1f f888 	uxth.w	r8, r8
 8019e00:	1a09      	subs	r1, r1, r0
 8019e02:	b289      	uxth	r1, r1
 8019e04:	fb08 f303 	mul.w	r3, r8, r3
 8019e08:	fb01 330e 	mla	r3, r1, lr, r3
 8019e0c:	fb00 3305 	mla	r3, r0, r5, r3
 8019e10:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019e12:	fb09 3305 	mla	r3, r9, r5, r3
 8019e16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019e1a:	2b00      	cmp	r3, #0
 8019e1c:	f000 80f7 	beq.w	801a00e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019e20:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019e24:	d01b      	beq.n	8019e5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8019e26:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019e2a:	fb0e fa0a 	mul.w	sl, lr, sl
 8019e2e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019e32:	fb0e fe02 	mul.w	lr, lr, r2
 8019e36:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019e3a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019e3e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019e42:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019e46:	4452      	add	r2, sl
 8019e48:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019e4c:	0a12      	lsrs	r2, r2, #8
 8019e4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e52:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019e56:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019e5a:	ea42 020c 	orr.w	r2, r2, ip
 8019e5e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e60:	2dff      	cmp	r5, #255	; 0xff
 8019e62:	d021      	beq.n	8019ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019e64:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019e66:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019e6a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e6c:	fb05 fb0b 	mul.w	fp, r5, fp
 8019e70:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019e72:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019e76:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019e7c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019e80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019e84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019e88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019e8c:	44de      	add	lr, fp
 8019e8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019e92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019e96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019e9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ea2:	ea4e 050a 	orr.w	r5, lr, sl
 8019ea6:	950b      	str	r5, [sp, #44]	; 0x2c
 8019ea8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019eaa:	2dff      	cmp	r5, #255	; 0xff
 8019eac:	d021      	beq.n	8019ef2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8019eae:	9d08      	ldr	r5, [sp, #32]
 8019eb0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019eb4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019eb6:	fb05 fb0b 	mul.w	fp, r5, fp
 8019eba:	9d08      	ldr	r5, [sp, #32]
 8019ebc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019ec0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019ec2:	fb05 fa0e 	mul.w	sl, r5, lr
 8019ec6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019eca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ece:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019ed2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019ed6:	44de      	add	lr, fp
 8019ed8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019edc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019ee0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ee4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ee8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019eec:	ea4e 050a 	orr.w	r5, lr, sl
 8019ef0:	9508      	str	r5, [sp, #32]
 8019ef2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019ef4:	2dff      	cmp	r5, #255	; 0xff
 8019ef6:	d021      	beq.n	8019f3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019ef8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019efa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019efe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019f00:	fb05 fb0b 	mul.w	fp, r5, fp
 8019f04:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019f06:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019f0a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019f0c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019f10:	fb05 fa0a 	mul.w	sl, r5, sl
 8019f14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f18:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019f1c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019f20:	44de      	add	lr, fp
 8019f22:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019f26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019f2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019f36:	ea4e 050a 	orr.w	r5, lr, sl
 8019f3a:	950c      	str	r5, [sp, #48]	; 0x30
 8019f3c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019f3e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019f42:	9d08      	ldr	r5, [sp, #32]
 8019f44:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019f48:	fb08 fc0c 	mul.w	ip, r8, ip
 8019f4c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019f50:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019f54:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019f56:	fb00 cc0e 	mla	ip, r0, lr, ip
 8019f5a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019f5e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019f60:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019f64:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019f68:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019f6c:	fb08 f80e 	mul.w	r8, r8, lr
 8019f70:	fb01 8202 	mla	r2, r1, r2, r8
 8019f74:	9908      	ldr	r1, [sp, #32]
 8019f76:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8019f7a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019f7c:	fb00 220a 	mla	r2, r0, sl, r2
 8019f80:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8019f84:	fb09 2900 	mla	r9, r9, r0, r2
 8019f88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019f90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f94:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019f98:	ea4c 0c09 	orr.w	ip, ip, r9
 8019f9c:	2bff      	cmp	r3, #255	; 0xff
 8019f9e:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8019fa2:	f000 80b5 	beq.w	801a110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8019fa6:	8839      	ldrh	r1, [r7, #0]
 8019fa8:	43db      	mvns	r3, r3
 8019faa:	ea4f 2821 	mov.w	r8, r1, asr #8
 8019fae:	fa5f f983 	uxtb.w	r9, r3
 8019fb2:	10ca      	asrs	r2, r1, #3
 8019fb4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8019fb8:	fb08 f809 	mul.w	r8, r8, r9
 8019fbc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019fc0:	fb02 fe09 	mul.w	lr, r2, r9
 8019fc4:	f108 0201 	add.w	r2, r8, #1
 8019fc8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8019fcc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019fd0:	00cb      	lsls	r3, r1, #3
 8019fd2:	eb02 2218 	add.w	r2, r2, r8, lsr #8
 8019fd6:	4961      	ldr	r1, [pc, #388]	; (801a15c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8019fd8:	b2d2      	uxtb	r2, r2
 8019fda:	ea01 2102 	and.w	r1, r1, r2, lsl #8
 8019fde:	f10e 0201 	add.w	r2, lr, #1
 8019fe2:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 8019fe6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019fea:	b2db      	uxtb	r3, r3
 8019fec:	00d2      	lsls	r2, r2, #3
 8019fee:	fb03 f309 	mul.w	r3, r3, r9
 8019ff2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019ff6:	430a      	orrs	r2, r1
 8019ff8:	1c59      	adds	r1, r3, #1
 8019ffa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019ffe:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a002:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a006:	ea42 0c0c 	orr.w	ip, r2, ip
 801a00a:	f8a7 c000 	strh.w	ip, [r7]
 801a00e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a010:	441c      	add	r4, r3
 801a012:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a014:	441e      	add	r6, r3
 801a016:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a018:	3b01      	subs	r3, #1
 801a01a:	3702      	adds	r7, #2
 801a01c:	9317      	str	r3, [sp, #92]	; 0x5c
 801a01e:	e69b      	b.n	8019d58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a020:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a022:	441c      	add	r4, r3
 801a024:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a026:	441e      	add	r6, r3
 801a028:	9b07      	ldr	r3, [sp, #28]
 801a02a:	3b01      	subs	r3, #1
 801a02c:	9307      	str	r3, [sp, #28]
 801a02e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a030:	3302      	adds	r3, #2
 801a032:	930a      	str	r3, [sp, #40]	; 0x28
 801a034:	e670      	b.n	8019d18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a036:	d023      	beq.n	801a080 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801a038:	9b07      	ldr	r3, [sp, #28]
 801a03a:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a03c:	3b01      	subs	r3, #1
 801a03e:	fb00 4003 	mla	r0, r0, r3, r4
 801a042:	1400      	asrs	r0, r0, #16
 801a044:	f53f ae85 	bmi.w	8019d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a048:	3901      	subs	r1, #1
 801a04a:	4288      	cmp	r0, r1
 801a04c:	f6bf ae81 	bge.w	8019d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a050:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a052:	fb01 6303 	mla	r3, r1, r3, r6
 801a056:	141b      	asrs	r3, r3, #16
 801a058:	f53f ae7b 	bmi.w	8019d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a05c:	3a01      	subs	r2, #1
 801a05e:	4293      	cmp	r3, r2
 801a060:	f6bf ae77 	bge.w	8019d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a064:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a068:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a06c:	f1bb 0f00 	cmp.w	fp, #0
 801a070:	dc76      	bgt.n	801a160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a072:	9b07      	ldr	r3, [sp, #28]
 801a074:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a078:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a07a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a07e:	930a      	str	r3, [sp, #40]	; 0x28
 801a080:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a082:	2b00      	cmp	r3, #0
 801a084:	f340 81ca 	ble.w	801a41c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 801a088:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a08c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a090:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a094:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a096:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a09a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a09e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a0a2:	eef0 6a48 	vmov.f32	s13, s16
 801a0a6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a0aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0ae:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a0b2:	ee16 4a90 	vmov	r4, s13
 801a0b6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a0ba:	eef0 6a68 	vmov.f32	s13, s17
 801a0be:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a0c2:	ee18 2a10 	vmov	r2, s16
 801a0c6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a0ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0ce:	ee18 2a90 	vmov	r2, s17
 801a0d2:	932f      	str	r3, [sp, #188]	; 0xbc
 801a0d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a0d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0da:	9330      	str	r3, [sp, #192]	; 0xc0
 801a0dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a0de:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a0e0:	3b01      	subs	r3, #1
 801a0e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0e6:	9316      	str	r3, [sp, #88]	; 0x58
 801a0e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a0ea:	bf08      	it	eq
 801a0ec:	4613      	moveq	r3, r2
 801a0ee:	ee16 6a90 	vmov	r6, s13
 801a0f2:	9307      	str	r3, [sp, #28]
 801a0f4:	eef0 8a67 	vmov.f32	s17, s15
 801a0f8:	eeb0 8a47 	vmov.f32	s16, s14
 801a0fc:	e5fe      	b.n	8019cfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a0fe:	2800      	cmp	r0, #0
 801a100:	f43f ae6e 	beq.w	8019de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a104:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a108:	9308      	str	r3, [sp, #32]
 801a10a:	0e1b      	lsrs	r3, r3, #24
 801a10c:	9310      	str	r3, [sp, #64]	; 0x40
 801a10e:	e667      	b.n	8019de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a110:	ea4f 125c 	mov.w	r2, ip, lsr #5
 801a114:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 801a118:	f420 62ff 	bic.w	r2, r0, #2040	; 0x7f8
 801a11c:	f022 0207 	bic.w	r2, r2, #7
 801a120:	431a      	orrs	r2, r3
 801a122:	e76e      	b.n	801a002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a124:	f112 0801 	adds.w	r8, r2, #1
 801a128:	f53f af71 	bmi.w	801a00e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a12c:	4543      	cmp	r3, r8
 801a12e:	f6ff af6e 	blt.w	801a00e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a132:	f11c 0801 	adds.w	r8, ip, #1
 801a136:	f53f af6a 	bmi.w	801a00e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a13a:	45c6      	cmp	lr, r8
 801a13c:	f6ff af67 	blt.w	801a00e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a140:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a144:	fa0f f28e 	sxth.w	r2, lr
 801a148:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a14c:	9200      	str	r2, [sp, #0]
 801a14e:	b21b      	sxth	r3, r3
 801a150:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a152:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a154:	4639      	mov	r1, r7
 801a156:	f7ff fc59 	bl	8019a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a15a:	e758      	b.n	801a00e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a15c:	fffff800 	.word	0xfffff800
 801a160:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a162:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a164:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a168:	1421      	asrs	r1, r4, #16
 801a16a:	1433      	asrs	r3, r6, #16
 801a16c:	fb07 1303 	mla	r3, r7, r3, r1
 801a170:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a172:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a176:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a17a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a17e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a182:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a186:	2a00      	cmp	r2, #0
 801a188:	f000 8131 	beq.w	801a3ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801a18c:	684d      	ldr	r5, [r1, #4]
 801a18e:	950d      	str	r5, [sp, #52]	; 0x34
 801a190:	0e2d      	lsrs	r5, r5, #24
 801a192:	9514      	str	r5, [sp, #80]	; 0x50
 801a194:	b178      	cbz	r0, 801a1b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801a196:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a19a:	3f01      	subs	r7, #1
 801a19c:	00bf      	lsls	r7, r7, #2
 801a19e:	3704      	adds	r7, #4
 801a1a0:	eb01 0e07 	add.w	lr, r1, r7
 801a1a4:	59c9      	ldr	r1, [r1, r7]
 801a1a6:	9109      	str	r1, [sp, #36]	; 0x24
 801a1a8:	0e09      	lsrs	r1, r1, #24
 801a1aa:	9111      	str	r1, [sp, #68]	; 0x44
 801a1ac:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a1b0:	910e      	str	r1, [sp, #56]	; 0x38
 801a1b2:	0e09      	lsrs	r1, r1, #24
 801a1b4:	9115      	str	r1, [sp, #84]	; 0x54
 801a1b6:	b292      	uxth	r2, r2
 801a1b8:	b280      	uxth	r0, r0
 801a1ba:	fb02 f900 	mul.w	r9, r2, r0
 801a1be:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a1c2:	0112      	lsls	r2, r2, #4
 801a1c4:	eba2 0e09 	sub.w	lr, r2, r9
 801a1c8:	b280      	uxth	r0, r0
 801a1ca:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a1ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a1d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a1d2:	fa1f fe8e 	uxth.w	lr, lr
 801a1d6:	1a09      	subs	r1, r1, r0
 801a1d8:	b289      	uxth	r1, r1
 801a1da:	fb0e f202 	mul.w	r2, lr, r2
 801a1de:	fb01 220c 	mla	r2, r1, ip, r2
 801a1e2:	fb00 2205 	mla	r2, r0, r5, r2
 801a1e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a1e8:	fb09 2205 	mla	r2, r9, r5, r2
 801a1ec:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a1f0:	2a00      	cmp	r2, #0
 801a1f2:	f000 80f3 	beq.w	801a3dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a1f6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a1fa:	d019      	beq.n	801a230 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 801a1fc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a200:	fb0c fa0a 	mul.w	sl, ip, sl
 801a204:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a208:	fb0c fc03 	mul.w	ip, ip, r3
 801a20c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a210:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a214:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a218:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a21c:	4453      	add	r3, sl
 801a21e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a222:	0a1b      	lsrs	r3, r3, #8
 801a224:	0a3f      	lsrs	r7, r7, #8
 801a226:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a22a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a22e:	433b      	orrs	r3, r7
 801a230:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a232:	2dff      	cmp	r5, #255	; 0xff
 801a234:	d020      	beq.n	801a278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5cc>
 801a236:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a238:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a23c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a23e:	436f      	muls	r7, r5
 801a240:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a242:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a246:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a248:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a24c:	fb05 fa0a 	mul.w	sl, r5, sl
 801a250:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a254:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a258:	44bc      	add	ip, r7
 801a25a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a25e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a262:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a266:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a26a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a26e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a272:	ea4c 050a 	orr.w	r5, ip, sl
 801a276:	950d      	str	r5, [sp, #52]	; 0x34
 801a278:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a27a:	2dff      	cmp	r5, #255	; 0xff
 801a27c:	d020      	beq.n	801a2c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x614>
 801a27e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a280:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a284:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a286:	436f      	muls	r7, r5
 801a288:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a28a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a28e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a290:	fb05 fa0c 	mul.w	sl, r5, ip
 801a294:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a298:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a29c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a2a0:	44bc      	add	ip, r7
 801a2a2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a2a6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a2aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a2ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a2b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a2b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a2ba:	ea4c 050a 	orr.w	r5, ip, sl
 801a2be:	9509      	str	r5, [sp, #36]	; 0x24
 801a2c0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a2c2:	2dff      	cmp	r5, #255	; 0xff
 801a2c4:	d020      	beq.n	801a308 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65c>
 801a2c6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a2c8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a2cc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a2ce:	436f      	muls	r7, r5
 801a2d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a2d2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a2d6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a2d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a2dc:	fb05 fa0a 	mul.w	sl, r5, sl
 801a2e0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a2e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a2e8:	44bc      	add	ip, r7
 801a2ea:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a2ee:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a2f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a2f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a2fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a2fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a302:	ea4c 050a 	orr.w	r5, ip, sl
 801a306:	950e      	str	r5, [sp, #56]	; 0x38
 801a308:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a30a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a30e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a310:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a314:	fb0e f707 	mul.w	r7, lr, r7
 801a318:	fb01 770c 	mla	r7, r1, ip, r7
 801a31c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a320:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a322:	fb00 770c 	mla	r7, r0, ip, r7
 801a326:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a32a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a32c:	fb09 770c 	mla	r7, r9, ip, r7
 801a330:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a334:	fb0e fe0c 	mul.w	lr, lr, ip
 801a338:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a33c:	fb01 e303 	mla	r3, r1, r3, lr
 801a340:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a342:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a346:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a348:	fb00 330a 	mla	r3, r0, sl, r3
 801a34c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a350:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a354:	0a3f      	lsrs	r7, r7, #8
 801a356:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a35a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a35e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a362:	ea47 070c 	orr.w	r7, r7, ip
 801a366:	2aff      	cmp	r2, #255	; 0xff
 801a368:	ea4f 2017 	mov.w	r0, r7, lsr #8
 801a36c:	d048      	beq.n	801a400 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801a36e:	f8b8 1000 	ldrh.w	r1, [r8]
 801a372:	43d2      	mvns	r2, r2
 801a374:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a378:	fa5f f982 	uxtb.w	r9, r2
 801a37c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a380:	fb0e fe09 	mul.w	lr, lr, r9
 801a384:	f10e 0301 	add.w	r3, lr, #1
 801a388:	ea4f 0ce1 	mov.w	ip, r1, asr #3
 801a38c:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801a390:	0c3b      	lsrs	r3, r7, #16
 801a392:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801a396:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a39a:	4b23      	ldr	r3, [pc, #140]	; (801a428 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801a39c:	fb0c fc09 	mul.w	ip, ip, r9
 801a3a0:	00ca      	lsls	r2, r1, #3
 801a3a2:	fa5f fe8e 	uxtb.w	lr, lr
 801a3a6:	ea03 2e0e 	and.w	lr, r3, lr, lsl #8
 801a3aa:	b2d2      	uxtb	r2, r2
 801a3ac:	f10c 0301 	add.w	r3, ip, #1
 801a3b0:	fb02 f209 	mul.w	r2, r2, r9
 801a3b4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801a3b8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a3bc:	1c51      	adds	r1, r2, #1
 801a3be:	00db      	lsls	r3, r3, #3
 801a3c0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a3c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a3c8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a3cc:	ea4e 0e03 	orr.w	lr, lr, r3
 801a3d0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a3d4:	ea47 0e0e 	orr.w	lr, r7, lr
 801a3d8:	f8a8 e000 	strh.w	lr, [r8]
 801a3dc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a3de:	441c      	add	r4, r3
 801a3e0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a3e2:	f108 0802 	add.w	r8, r8, #2
 801a3e6:	441e      	add	r6, r3
 801a3e8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a3ec:	e63e      	b.n	801a06c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801a3ee:	2800      	cmp	r0, #0
 801a3f0:	f43f aee1 	beq.w	801a1b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801a3f4:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a3f8:	9109      	str	r1, [sp, #36]	; 0x24
 801a3fa:	0e09      	lsrs	r1, r1, #24
 801a3fc:	9111      	str	r1, [sp, #68]	; 0x44
 801a3fe:	e6da      	b.n	801a1b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801a400:	097a      	lsrs	r2, r7, #5
 801a402:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 801a406:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a40a:	f020 0007 	bic.w	r0, r0, #7
 801a40e:	4310      	orrs	r0, r2
 801a410:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a414:	4307      	orrs	r7, r0
 801a416:	f8a8 7000 	strh.w	r7, [r8]
 801a41a:	e7df      	b.n	801a3dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a41c:	b01b      	add	sp, #108	; 0x6c
 801a41e:	ecbd 8b08 	vpop	{d8-d11}
 801a422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a426:	bf00      	nop
 801a428:	fffff800 	.word	0xfffff800

0801a42c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a42c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a430:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a434:	2c00      	cmp	r4, #0
 801a436:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a43a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a43e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a442:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a446:	fb04 ce03 	mla	lr, r4, r3, ip
 801a44a:	db60      	blt.n	801a50e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a44c:	45a1      	cmp	r9, r4
 801a44e:	dd5e      	ble.n	801a50e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a450:	f1bc 0f00 	cmp.w	ip, #0
 801a454:	db59      	blt.n	801a50a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a456:	45e0      	cmp	r8, ip
 801a458:	dd57      	ble.n	801a50a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a45a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a45e:	f01e 0f01 	tst.w	lr, #1
 801a462:	5c16      	ldrb	r6, [r2, r0]
 801a464:	bf0c      	ite	eq
 801a466:	f006 060f 	andeq.w	r6, r6, #15
 801a46a:	1136      	asrne	r6, r6, #4
 801a46c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a470:	b2f6      	uxtb	r6, r6
 801a472:	f11c 0001 	adds.w	r0, ip, #1
 801a476:	d44d      	bmi.n	801a514 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a478:	4580      	cmp	r8, r0
 801a47a:	dd4b      	ble.n	801a514 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a47c:	2d00      	cmp	r5, #0
 801a47e:	d04b      	beq.n	801a518 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a480:	f10e 0a01 	add.w	sl, lr, #1
 801a484:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a488:	f01a 0f01 	tst.w	sl, #1
 801a48c:	5c10      	ldrb	r0, [r2, r0]
 801a48e:	bf0c      	ite	eq
 801a490:	f000 000f 	andeq.w	r0, r0, #15
 801a494:	1100      	asrne	r0, r0, #4
 801a496:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a49a:	b2c0      	uxtb	r0, r0
 801a49c:	3401      	adds	r4, #1
 801a49e:	d43f      	bmi.n	801a520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a4a0:	45a1      	cmp	r9, r4
 801a4a2:	dd3d      	ble.n	801a520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a4a4:	2f00      	cmp	r7, #0
 801a4a6:	f000 809b 	beq.w	801a5e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b4>
 801a4aa:	f1bc 0f00 	cmp.w	ip, #0
 801a4ae:	db35      	blt.n	801a51c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a4b0:	45e0      	cmp	r8, ip
 801a4b2:	dd33      	ble.n	801a51c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a4b4:	eb03 090e 	add.w	r9, r3, lr
 801a4b8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a4bc:	f019 0f01 	tst.w	r9, #1
 801a4c0:	5d14      	ldrb	r4, [r2, r4]
 801a4c2:	bf0c      	ite	eq
 801a4c4:	f004 040f 	andeq.w	r4, r4, #15
 801a4c8:	1124      	asrne	r4, r4, #4
 801a4ca:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a4ce:	b2e4      	uxtb	r4, r4
 801a4d0:	f11c 0c01 	adds.w	ip, ip, #1
 801a4d4:	d427      	bmi.n	801a526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a4d6:	45e0      	cmp	r8, ip
 801a4d8:	dd25      	ble.n	801a526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a4da:	b335      	cbz	r5, 801a52a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a4dc:	3301      	adds	r3, #1
 801a4de:	449e      	add	lr, r3
 801a4e0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a4e4:	f01e 0f01 	tst.w	lr, #1
 801a4e8:	5cd2      	ldrb	r2, [r2, r3]
 801a4ea:	bf0c      	ite	eq
 801a4ec:	f002 020f 	andeq.w	r2, r2, #15
 801a4f0:	1112      	asrne	r2, r2, #4
 801a4f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a4f6:	b2d3      	uxtb	r3, r2
 801a4f8:	2d0f      	cmp	r5, #15
 801a4fa:	d917      	bls.n	801a52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a4fc:	4b3b      	ldr	r3, [pc, #236]	; (801a5ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c0>)
 801a4fe:	4a3c      	ldr	r2, [pc, #240]	; (801a5f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801a500:	483c      	ldr	r0, [pc, #240]	; (801a5f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a502:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801a506:	f000 ffcf 	bl	801b4a8 <__assert_func>
 801a50a:	2600      	movs	r6, #0
 801a50c:	e7b1      	b.n	801a472 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801a50e:	2000      	movs	r0, #0
 801a510:	4606      	mov	r6, r0
 801a512:	e7c3      	b.n	801a49c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a514:	2000      	movs	r0, #0
 801a516:	e7c1      	b.n	801a49c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a518:	4628      	mov	r0, r5
 801a51a:	e7bf      	b.n	801a49c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a51c:	2400      	movs	r4, #0
 801a51e:	e7d7      	b.n	801a4d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801a520:	2300      	movs	r3, #0
 801a522:	461c      	mov	r4, r3
 801a524:	e7e8      	b.n	801a4f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a526:	2300      	movs	r3, #0
 801a528:	e7e6      	b.n	801a4f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a52a:	462b      	mov	r3, r5
 801a52c:	2f0f      	cmp	r7, #15
 801a52e:	d8e5      	bhi.n	801a4fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a530:	b2ad      	uxth	r5, r5
 801a532:	b2bf      	uxth	r7, r7
 801a534:	fb05 fc07 	mul.w	ip, r5, r7
 801a538:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a53c:	012d      	lsls	r5, r5, #4
 801a53e:	b2bf      	uxth	r7, r7
 801a540:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a544:	eba5 050c 	sub.w	r5, r5, ip
 801a548:	1bd2      	subs	r2, r2, r7
 801a54a:	b2ad      	uxth	r5, r5
 801a54c:	b292      	uxth	r2, r2
 801a54e:	4368      	muls	r0, r5
 801a550:	fb06 0002 	mla	r0, r6, r2, r0
 801a554:	fb07 0404 	mla	r4, r7, r4, r0
 801a558:	fb0c 4303 	mla	r3, ip, r3, r4
 801a55c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a560:	2b00      	cmp	r3, #0
 801a562:	d03b      	beq.n	801a5dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b0>
 801a564:	4a24      	ldr	r2, [pc, #144]	; (801a5f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a566:	880e      	ldrh	r6, [r1, #0]
 801a568:	6815      	ldr	r5, [r2, #0]
 801a56a:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801a56e:	435a      	muls	r2, r3
 801a570:	1c53      	adds	r3, r2, #1
 801a572:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a576:	121b      	asrs	r3, r3, #8
 801a578:	b29a      	uxth	r2, r3
 801a57a:	1234      	asrs	r4, r6, #8
 801a57c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801a580:	43db      	mvns	r3, r3
 801a582:	b2db      	uxtb	r3, r3
 801a584:	fb10 f002 	smulbb	r0, r0, r2
 801a588:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a58c:	fb04 0403 	mla	r4, r4, r3, r0
 801a590:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801a594:	10f0      	asrs	r0, r6, #3
 801a596:	b2ed      	uxtb	r5, r5
 801a598:	00f6      	lsls	r6, r6, #3
 801a59a:	fb17 f702 	smulbb	r7, r7, r2
 801a59e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a5a2:	fb15 f202 	smulbb	r2, r5, r2
 801a5a6:	b2f6      	uxtb	r6, r6
 801a5a8:	b2a4      	uxth	r4, r4
 801a5aa:	fb00 7003 	mla	r0, r0, r3, r7
 801a5ae:	fb06 2303 	mla	r3, r6, r3, r2
 801a5b2:	b29a      	uxth	r2, r3
 801a5b4:	1c63      	adds	r3, r4, #1
 801a5b6:	b280      	uxth	r0, r0
 801a5b8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a5bc:	1c53      	adds	r3, r2, #1
 801a5be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a5c2:	1c42      	adds	r2, r0, #1
 801a5c4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a5c8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a5cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a5d0:	0940      	lsrs	r0, r0, #5
 801a5d2:	4323      	orrs	r3, r4
 801a5d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a5d8:	4303      	orrs	r3, r0
 801a5da:	800b      	strh	r3, [r1, #0]
 801a5dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a5e0:	2d0f      	cmp	r5, #15
 801a5e2:	d88b      	bhi.n	801a4fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a5e4:	463b      	mov	r3, r7
 801a5e6:	463c      	mov	r4, r7
 801a5e8:	e7a2      	b.n	801a530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801a5ea:	bf00      	nop
 801a5ec:	0801f576 	.word	0x0801f576
 801a5f0:	0801fb42 	.word	0x0801fb42
 801a5f4:	0801f5fa 	.word	0x0801f5fa
 801a5f8:	2000a32c 	.word	0x2000a32c

0801a5fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a600:	ed2d 8b08 	vpush	{d8-d11}
 801a604:	b097      	sub	sp, #92	; 0x5c
 801a606:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801a60a:	9214      	str	r2, [sp, #80]	; 0x50
 801a60c:	9309      	str	r3, [sp, #36]	; 0x24
 801a60e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a610:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801a614:	910e      	str	r1, [sp, #56]	; 0x38
 801a616:	930f      	str	r3, [sp, #60]	; 0x3c
 801a618:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a61c:	9015      	str	r0, [sp, #84]	; 0x54
 801a61e:	6850      	ldr	r0, [r2, #4]
 801a620:	6812      	ldr	r2, [r2, #0]
 801a622:	fb00 1303 	mla	r3, r0, r3, r1
 801a626:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a62a:	930a      	str	r3, [sp, #40]	; 0x28
 801a62c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a62e:	689b      	ldr	r3, [r3, #8]
 801a630:	3301      	adds	r3, #1
 801a632:	f023 0301 	bic.w	r3, r3, #1
 801a636:	930b      	str	r3, [sp, #44]	; 0x2c
 801a638:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a63a:	681f      	ldr	r7, [r3, #0]
 801a63c:	eeb0 aa40 	vmov.f32	s20, s0
 801a640:	eef0 9a60 	vmov.f32	s19, s1
 801a644:	eeb0 9a41 	vmov.f32	s18, s2
 801a648:	eeb0 8a62 	vmov.f32	s16, s5
 801a64c:	eef0 8a43 	vmov.f32	s17, s6
 801a650:	eef0 ba44 	vmov.f32	s23, s8
 801a654:	eeb0 ba64 	vmov.f32	s22, s9
 801a658:	eef0 aa45 	vmov.f32	s21, s10
 801a65c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a65e:	2b00      	cmp	r3, #0
 801a660:	dc03      	bgt.n	801a66a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a662:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a664:	2b00      	cmp	r3, #0
 801a666:	f340 8257 	ble.w	801ab18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801a66a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a66c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a670:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a674:	1e48      	subs	r0, r1, #1
 801a676:	f102 3cff 	add.w	ip, r2, #4294967295
 801a67a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a67c:	2b00      	cmp	r3, #0
 801a67e:	f340 80eb 	ble.w	801a858 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801a682:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a686:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a68a:	d406      	bmi.n	801a69a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a68c:	4586      	cmp	lr, r0
 801a68e:	da04      	bge.n	801a69a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a690:	2b00      	cmp	r3, #0
 801a692:	db02      	blt.n	801a69a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a694:	4563      	cmp	r3, ip
 801a696:	f2c0 80e0 	blt.w	801a85a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801a69a:	f11e 0e01 	adds.w	lr, lr, #1
 801a69e:	f100 80d0 	bmi.w	801a842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a6a2:	4571      	cmp	r1, lr
 801a6a4:	f2c0 80cd 	blt.w	801a842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a6a8:	3301      	adds	r3, #1
 801a6aa:	f100 80ca 	bmi.w	801a842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a6ae:	429a      	cmp	r2, r3
 801a6b0:	f2c0 80c7 	blt.w	801a842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a6b4:	e9dd 9809 	ldrd	r9, r8, [sp, #36]	; 0x24
 801a6b8:	f9bd a02c 	ldrsh.w	sl, [sp, #44]	; 0x2c
 801a6bc:	f1b9 0f00 	cmp.w	r9, #0
 801a6c0:	f340 80e8 	ble.w	801a894 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a6c4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a6c6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a6ca:	1423      	asrs	r3, r4, #16
 801a6cc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a6d0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a6d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a6d8:	f100 8133 	bmi.w	801a942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801a6dc:	f10c 3bff 	add.w	fp, ip, #4294967295
 801a6e0:	455b      	cmp	r3, fp
 801a6e2:	f280 812e 	bge.w	801a942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801a6e6:	2800      	cmp	r0, #0
 801a6e8:	f2c0 812b 	blt.w	801a942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801a6ec:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a6f0:	4558      	cmp	r0, fp
 801a6f2:	f280 8126 	bge.w	801a942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801a6f6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a6f8:	fb00 3305 	mla	r3, r0, r5, r3
 801a6fc:	0858      	lsrs	r0, r3, #1
 801a6fe:	07dd      	lsls	r5, r3, #31
 801a700:	f817 c000 	ldrb.w	ip, [r7, r0]
 801a704:	bf54      	ite	pl
 801a706:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a70a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a70e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a712:	fa5f fc8c 	uxtb.w	ip, ip
 801a716:	2a00      	cmp	r2, #0
 801a718:	f000 8102 	beq.w	801a920 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801a71c:	1c58      	adds	r0, r3, #1
 801a71e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801a722:	07c0      	lsls	r0, r0, #31
 801a724:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a728:	bf54      	ite	pl
 801a72a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801a72e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801a732:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801a736:	fa5f f08e 	uxtb.w	r0, lr
 801a73a:	9010      	str	r0, [sp, #64]	; 0x40
 801a73c:	b1c9      	cbz	r1, 801a772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a73e:	4453      	add	r3, sl
 801a740:	0858      	lsrs	r0, r3, #1
 801a742:	07dd      	lsls	r5, r3, #31
 801a744:	5c38      	ldrb	r0, [r7, r0]
 801a746:	bf54      	ite	pl
 801a748:	f000 000f 	andpl.w	r0, r0, #15
 801a74c:	1100      	asrmi	r0, r0, #4
 801a74e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a752:	3301      	adds	r3, #1
 801a754:	b2c0      	uxtb	r0, r0
 801a756:	900c      	str	r0, [sp, #48]	; 0x30
 801a758:	0858      	lsrs	r0, r3, #1
 801a75a:	07dd      	lsls	r5, r3, #31
 801a75c:	f817 e000 	ldrb.w	lr, [r7, r0]
 801a760:	bf54      	ite	pl
 801a762:	f00e 030f 	andpl.w	r3, lr, #15
 801a766:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801a76a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a76e:	b2db      	uxtb	r3, r3
 801a770:	9311      	str	r3, [sp, #68]	; 0x44
 801a772:	b292      	uxth	r2, r2
 801a774:	b289      	uxth	r1, r1
 801a776:	fb02 f301 	mul.w	r3, r2, r1
 801a77a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a77e:	0112      	lsls	r2, r2, #4
 801a780:	b289      	uxth	r1, r1
 801a782:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801a786:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a788:	1ad2      	subs	r2, r2, r3
 801a78a:	1a40      	subs	r0, r0, r1
 801a78c:	b292      	uxth	r2, r2
 801a78e:	436a      	muls	r2, r5
 801a790:	b280      	uxth	r0, r0
 801a792:	fb0c 2c00 	mla	ip, ip, r0, r2
 801a796:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a798:	fb01 c102 	mla	r1, r1, r2, ip
 801a79c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a79e:	fb03 1302 	mla	r3, r3, r2, r1
 801a7a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a7a6:	2b00      	cmp	r3, #0
 801a7a8:	d042      	beq.n	801a830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a7aa:	4a76      	ldr	r2, [pc, #472]	; (801a984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>)
 801a7ac:	f8b8 c000 	ldrh.w	ip, [r8]
 801a7b0:	6810      	ldr	r0, [r2, #0]
 801a7b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a7b4:	4353      	muls	r3, r2
 801a7b6:	1c5a      	adds	r2, r3, #1
 801a7b8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a7bc:	121b      	asrs	r3, r3, #8
 801a7be:	fa1f fe83 	uxth.w	lr, r3
 801a7c2:	ea4f 212c 	mov.w	r1, ip, asr #8
 801a7c6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801a7ca:	43db      	mvns	r3, r3
 801a7cc:	b2db      	uxtb	r3, r3
 801a7ce:	fb12 f20e 	smulbb	r2, r2, lr
 801a7d2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a7d6:	fb01 2103 	mla	r1, r1, r3, r2
 801a7da:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801a7de:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a7e2:	b2c0      	uxtb	r0, r0
 801a7e4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a7e8:	fb1b fb0e 	smulbb	fp, fp, lr
 801a7ec:	b289      	uxth	r1, r1
 801a7ee:	fb10 fe0e 	smulbb	lr, r0, lr
 801a7f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a7f6:	fa5f fc8c 	uxtb.w	ip, ip
 801a7fa:	fb02 b203 	mla	r2, r2, r3, fp
 801a7fe:	1c48      	adds	r0, r1, #1
 801a800:	fb0c e303 	mla	r3, ip, r3, lr
 801a804:	b292      	uxth	r2, r2
 801a806:	b29b      	uxth	r3, r3
 801a808:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801a80c:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801a810:	f102 0b01 	add.w	fp, r2, #1
 801a814:	1c59      	adds	r1, r3, #1
 801a816:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a81a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801a81e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a822:	0952      	lsrs	r2, r2, #5
 801a824:	4301      	orrs	r1, r0
 801a826:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a82a:	4311      	orrs	r1, r2
 801a82c:	f8a8 1000 	strh.w	r1, [r8]
 801a830:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a832:	441c      	add	r4, r3
 801a834:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a836:	f108 0802 	add.w	r8, r8, #2
 801a83a:	441e      	add	r6, r3
 801a83c:	f109 39ff 	add.w	r9, r9, #4294967295
 801a840:	e73c      	b.n	801a6bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801a842:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a844:	441c      	add	r4, r3
 801a846:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a848:	441e      	add	r6, r3
 801a84a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a84c:	3b01      	subs	r3, #1
 801a84e:	9309      	str	r3, [sp, #36]	; 0x24
 801a850:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a852:	3302      	adds	r3, #2
 801a854:	930a      	str	r3, [sp, #40]	; 0x28
 801a856:	e710      	b.n	801a67a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a858:	d023      	beq.n	801a8a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a85a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a85c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801a85e:	3b01      	subs	r3, #1
 801a860:	fb00 4003 	mla	r0, r0, r3, r4
 801a864:	1400      	asrs	r0, r0, #16
 801a866:	f53f af25 	bmi.w	801a6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a86a:	3901      	subs	r1, #1
 801a86c:	4288      	cmp	r0, r1
 801a86e:	f6bf af21 	bge.w	801a6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a872:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801a874:	fb01 6303 	mla	r3, r1, r3, r6
 801a878:	141b      	asrs	r3, r3, #16
 801a87a:	f53f af1b 	bmi.w	801a6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a87e:	3a01      	subs	r2, #1
 801a880:	4293      	cmp	r3, r2
 801a882:	f6bf af17 	bge.w	801a6b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a886:	e9dd 8e09 	ldrd	r8, lr, [sp, #36]	; 0x24
 801a88a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801a88e:	f1b8 0f00 	cmp.w	r8, #0
 801a892:	dc79      	bgt.n	801a988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a894:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a896:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a89a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a89c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a8a0:	930a      	str	r3, [sp, #40]	; 0x28
 801a8a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a8a4:	2b00      	cmp	r3, #0
 801a8a6:	f340 8137 	ble.w	801ab18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801a8aa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a8ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a8b2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a8b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a8b8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a8bc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a8c0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a8c4:	eef0 6a48 	vmov.f32	s13, s16
 801a8c8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a8cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a8d0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a8d4:	ee16 4a90 	vmov	r4, s13
 801a8d8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a8dc:	eef0 6a68 	vmov.f32	s13, s17
 801a8e0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a8e4:	ee18 2a10 	vmov	r2, s16
 801a8e8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a8ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8f0:	ee18 2a90 	vmov	r2, s17
 801a8f4:	932b      	str	r3, [sp, #172]	; 0xac
 801a8f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a8f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8fc:	932c      	str	r3, [sp, #176]	; 0xb0
 801a8fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a900:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a902:	3b01      	subs	r3, #1
 801a904:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a908:	930e      	str	r3, [sp, #56]	; 0x38
 801a90a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a90c:	bf08      	it	eq
 801a90e:	4613      	moveq	r3, r2
 801a910:	ee16 6a90 	vmov	r6, s13
 801a914:	9309      	str	r3, [sp, #36]	; 0x24
 801a916:	eef0 8a67 	vmov.f32	s17, s15
 801a91a:	eeb0 8a47 	vmov.f32	s16, s14
 801a91e:	e69d      	b.n	801a65c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a920:	2900      	cmp	r1, #0
 801a922:	f43f af26 	beq.w	801a772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a926:	eb0a 0003 	add.w	r0, sl, r3
 801a92a:	0843      	lsrs	r3, r0, #1
 801a92c:	07c0      	lsls	r0, r0, #31
 801a92e:	5cfb      	ldrb	r3, [r7, r3]
 801a930:	bf54      	ite	pl
 801a932:	f003 030f 	andpl.w	r3, r3, #15
 801a936:	111b      	asrmi	r3, r3, #4
 801a938:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a93c:	b2db      	uxtb	r3, r3
 801a93e:	930c      	str	r3, [sp, #48]	; 0x30
 801a940:	e717      	b.n	801a772 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a942:	f113 0b01 	adds.w	fp, r3, #1
 801a946:	f53f af73 	bmi.w	801a830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a94a:	45dc      	cmp	ip, fp
 801a94c:	f6ff af70 	blt.w	801a830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a950:	f110 0b01 	adds.w	fp, r0, #1
 801a954:	f53f af6c 	bmi.w	801a830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a958:	45de      	cmp	lr, fp
 801a95a:	f6ff af69 	blt.w	801a830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a95e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a960:	9302      	str	r3, [sp, #8]
 801a962:	fa0f f38e 	sxth.w	r3, lr
 801a966:	9301      	str	r3, [sp, #4]
 801a968:	fa0f f38c 	sxth.w	r3, ip
 801a96c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801a970:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a974:	9300      	str	r3, [sp, #0]
 801a976:	463a      	mov	r2, r7
 801a978:	4653      	mov	r3, sl
 801a97a:	4641      	mov	r1, r8
 801a97c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a97e:	f7ff fd55 	bl	801a42c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801a982:	e755      	b.n	801a830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a984:	2000a32c 	.word	0x2000a32c
 801a988:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a98a:	1422      	asrs	r2, r4, #16
 801a98c:	1433      	asrs	r3, r6, #16
 801a98e:	fb05 2303 	mla	r3, r5, r3, r2
 801a992:	085a      	lsrs	r2, r3, #1
 801a994:	07dd      	lsls	r5, r3, #31
 801a996:	5cba      	ldrb	r2, [r7, r2]
 801a998:	bf54      	ite	pl
 801a99a:	f002 020f 	andpl.w	r2, r2, #15
 801a99e:	1112      	asrmi	r2, r2, #4
 801a9a0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a9a4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a9a8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a9ac:	b2d2      	uxtb	r2, r2
 801a9ae:	2900      	cmp	r1, #0
 801a9b0:	f000 809f 	beq.w	801aaf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801a9b4:	f103 0901 	add.w	r9, r3, #1
 801a9b8:	ea4f 0c59 	mov.w	ip, r9, lsr #1
 801a9bc:	f019 0f01 	tst.w	r9, #1
 801a9c0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a9c4:	bf0c      	ite	eq
 801a9c6:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a9ca:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a9ce:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a9d2:	fa5f f58c 	uxtb.w	r5, ip
 801a9d6:	9512      	str	r5, [sp, #72]	; 0x48
 801a9d8:	b1f8      	cbz	r0, 801aa1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801a9da:	445b      	add	r3, fp
 801a9dc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a9e0:	07dd      	lsls	r5, r3, #31
 801a9e2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a9e6:	bf54      	ite	pl
 801a9e8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a9ec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a9f0:	3301      	adds	r3, #1
 801a9f2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a9f6:	fa5f f58c 	uxtb.w	r5, ip
 801a9fa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a9fe:	950d      	str	r5, [sp, #52]	; 0x34
 801aa00:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aa04:	07dd      	lsls	r5, r3, #31
 801aa06:	bf54      	ite	pl
 801aa08:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aa0c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aa10:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aa14:	fa5f f38c 	uxtb.w	r3, ip
 801aa18:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa1a:	b289      	uxth	r1, r1
 801aa1c:	b280      	uxth	r0, r0
 801aa1e:	fb01 f300 	mul.w	r3, r1, r0
 801aa22:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801aa26:	0109      	lsls	r1, r1, #4
 801aa28:	b280      	uxth	r0, r0
 801aa2a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801aa2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801aa30:	1ac9      	subs	r1, r1, r3
 801aa32:	ebac 0c00 	sub.w	ip, ip, r0
 801aa36:	b289      	uxth	r1, r1
 801aa38:	4369      	muls	r1, r5
 801aa3a:	fa1f fc8c 	uxth.w	ip, ip
 801aa3e:	fb02 120c 	mla	r2, r2, ip, r1
 801aa42:	990d      	ldr	r1, [sp, #52]	; 0x34
 801aa44:	fb00 2001 	mla	r0, r0, r1, r2
 801aa48:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa4a:	fb03 0302 	mla	r3, r3, r2, r0
 801aa4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aa52:	2b00      	cmp	r3, #0
 801aa54:	d044      	beq.n	801aae0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801aa56:	4a33      	ldr	r2, [pc, #204]	; (801ab24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>)
 801aa58:	f8be c000 	ldrh.w	ip, [lr]
 801aa5c:	6810      	ldr	r0, [r2, #0]
 801aa5e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aa60:	4353      	muls	r3, r2
 801aa62:	1c5a      	adds	r2, r3, #1
 801aa64:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801aa68:	121b      	asrs	r3, r3, #8
 801aa6a:	fa1f f983 	uxth.w	r9, r3
 801aa6e:	ea4f 212c 	mov.w	r1, ip, asr #8
 801aa72:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801aa76:	43db      	mvns	r3, r3
 801aa78:	b2db      	uxtb	r3, r3
 801aa7a:	fb12 f209 	smulbb	r2, r2, r9
 801aa7e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801aa82:	fb01 2103 	mla	r1, r1, r3, r2
 801aa86:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801aa8a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801aa8e:	b2c0      	uxtb	r0, r0
 801aa90:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aa94:	fa5f fc8c 	uxtb.w	ip, ip
 801aa98:	fb10 f009 	smulbb	r0, r0, r9
 801aa9c:	fb0c 0003 	mla	r0, ip, r3, r0
 801aaa0:	b289      	uxth	r1, r1
 801aaa2:	fb1a fa09 	smulbb	sl, sl, r9
 801aaa6:	b280      	uxth	r0, r0
 801aaa8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801aaac:	fb02 a203 	mla	r2, r2, r3, sl
 801aab0:	1c4b      	adds	r3, r1, #1
 801aab2:	f100 0a01 	add.w	sl, r0, #1
 801aab6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801aaba:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801aabe:	b292      	uxth	r2, r2
 801aac0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aac4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801aac8:	ea4a 0101 	orr.w	r1, sl, r1
 801aacc:	f102 0a01 	add.w	sl, r2, #1
 801aad0:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801aad4:	0952      	lsrs	r2, r2, #5
 801aad6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aada:	4311      	orrs	r1, r2
 801aadc:	f8ae 1000 	strh.w	r1, [lr]
 801aae0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801aae2:	441c      	add	r4, r3
 801aae4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801aae6:	f10e 0e02 	add.w	lr, lr, #2
 801aaea:	441e      	add	r6, r3
 801aaec:	f108 38ff 	add.w	r8, r8, #4294967295
 801aaf0:	e6cd      	b.n	801a88e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801aaf2:	2800      	cmp	r0, #0
 801aaf4:	d091      	beq.n	801aa1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801aaf6:	445b      	add	r3, fp
 801aaf8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aafc:	07db      	lsls	r3, r3, #31
 801aafe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ab02:	bf54      	ite	pl
 801ab04:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ab08:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ab0c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ab10:	fa5f f38c 	uxtb.w	r3, ip
 801ab14:	930d      	str	r3, [sp, #52]	; 0x34
 801ab16:	e780      	b.n	801aa1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801ab18:	b017      	add	sp, #92	; 0x5c
 801ab1a:	ecbd 8b08 	vpop	{d8-d11}
 801ab1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab22:	bf00      	nop
 801ab24:	2000a32c 	.word	0x2000a32c

0801ab28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801ab28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ab2c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801ab30:	2c00      	cmp	r4, #0
 801ab32:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ab36:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ab3a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ab3e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801ab42:	fb04 ce03 	mla	lr, r4, r3, ip
 801ab46:	db60      	blt.n	801ac0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801ab48:	45a1      	cmp	r9, r4
 801ab4a:	dd5e      	ble.n	801ac0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801ab4c:	f1bc 0f00 	cmp.w	ip, #0
 801ab50:	db59      	blt.n	801ac06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ab52:	45e0      	cmp	r8, ip
 801ab54:	dd57      	ble.n	801ac06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ab56:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801ab5a:	f01e 0f01 	tst.w	lr, #1
 801ab5e:	5c16      	ldrb	r6, [r2, r0]
 801ab60:	bf0c      	ite	eq
 801ab62:	f006 060f 	andeq.w	r6, r6, #15
 801ab66:	1136      	asrne	r6, r6, #4
 801ab68:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ab6c:	b2f6      	uxtb	r6, r6
 801ab6e:	f11c 0001 	adds.w	r0, ip, #1
 801ab72:	d44d      	bmi.n	801ac10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ab74:	4580      	cmp	r8, r0
 801ab76:	dd4b      	ble.n	801ac10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ab78:	2d00      	cmp	r5, #0
 801ab7a:	d04b      	beq.n	801ac14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801ab7c:	f10e 0a01 	add.w	sl, lr, #1
 801ab80:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801ab84:	f01a 0f01 	tst.w	sl, #1
 801ab88:	5c10      	ldrb	r0, [r2, r0]
 801ab8a:	bf0c      	ite	eq
 801ab8c:	f000 000f 	andeq.w	r0, r0, #15
 801ab90:	1100      	asrne	r0, r0, #4
 801ab92:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ab96:	b2c0      	uxtb	r0, r0
 801ab98:	3401      	adds	r4, #1
 801ab9a:	d43f      	bmi.n	801ac1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ab9c:	45a1      	cmp	r9, r4
 801ab9e:	dd3d      	ble.n	801ac1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801aba0:	2f00      	cmp	r7, #0
 801aba2:	f000 8093 	beq.w	801accc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801aba6:	f1bc 0f00 	cmp.w	ip, #0
 801abaa:	db35      	blt.n	801ac18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801abac:	45e0      	cmp	r8, ip
 801abae:	dd33      	ble.n	801ac18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801abb0:	eb03 090e 	add.w	r9, r3, lr
 801abb4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801abb8:	f019 0f01 	tst.w	r9, #1
 801abbc:	5d14      	ldrb	r4, [r2, r4]
 801abbe:	bf0c      	ite	eq
 801abc0:	f004 040f 	andeq.w	r4, r4, #15
 801abc4:	1124      	asrne	r4, r4, #4
 801abc6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801abca:	b2e4      	uxtb	r4, r4
 801abcc:	f11c 0c01 	adds.w	ip, ip, #1
 801abd0:	d427      	bmi.n	801ac22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801abd2:	45e0      	cmp	r8, ip
 801abd4:	dd25      	ble.n	801ac22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801abd6:	b335      	cbz	r5, 801ac26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801abd8:	3301      	adds	r3, #1
 801abda:	449e      	add	lr, r3
 801abdc:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801abe0:	f01e 0f01 	tst.w	lr, #1
 801abe4:	5cd2      	ldrb	r2, [r2, r3]
 801abe6:	bf0c      	ite	eq
 801abe8:	f002 020f 	andeq.w	r2, r2, #15
 801abec:	1112      	asrne	r2, r2, #4
 801abee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801abf2:	b2d3      	uxtb	r3, r2
 801abf4:	2d0f      	cmp	r5, #15
 801abf6:	d917      	bls.n	801ac28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801abf8:	4b37      	ldr	r3, [pc, #220]	; (801acd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801abfa:	4a38      	ldr	r2, [pc, #224]	; (801acdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801abfc:	4838      	ldr	r0, [pc, #224]	; (801ace0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801abfe:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801ac02:	f000 fc51 	bl	801b4a8 <__assert_func>
 801ac06:	2600      	movs	r6, #0
 801ac08:	e7b1      	b.n	801ab6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801ac0a:	2000      	movs	r0, #0
 801ac0c:	4606      	mov	r6, r0
 801ac0e:	e7c3      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ac10:	2000      	movs	r0, #0
 801ac12:	e7c1      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ac14:	4628      	mov	r0, r5
 801ac16:	e7bf      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ac18:	2400      	movs	r4, #0
 801ac1a:	e7d7      	b.n	801abcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801ac1c:	2300      	movs	r3, #0
 801ac1e:	461c      	mov	r4, r3
 801ac20:	e7e8      	b.n	801abf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ac22:	2300      	movs	r3, #0
 801ac24:	e7e6      	b.n	801abf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ac26:	462b      	mov	r3, r5
 801ac28:	2f0f      	cmp	r7, #15
 801ac2a:	d8e5      	bhi.n	801abf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ac2c:	b2ad      	uxth	r5, r5
 801ac2e:	b2bf      	uxth	r7, r7
 801ac30:	fb05 fc07 	mul.w	ip, r5, r7
 801ac34:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ac38:	012d      	lsls	r5, r5, #4
 801ac3a:	b2bf      	uxth	r7, r7
 801ac3c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ac40:	eba5 050c 	sub.w	r5, r5, ip
 801ac44:	1bd2      	subs	r2, r2, r7
 801ac46:	b2ad      	uxth	r5, r5
 801ac48:	b292      	uxth	r2, r2
 801ac4a:	4368      	muls	r0, r5
 801ac4c:	fb06 0002 	mla	r0, r6, r2, r0
 801ac50:	fb07 0404 	mla	r4, r7, r4, r0
 801ac54:	fb0c 4303 	mla	r3, ip, r3, r4
 801ac58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ac5c:	b3a3      	cbz	r3, 801acc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ac5e:	4a21      	ldr	r2, [pc, #132]	; (801ace4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801ac60:	880e      	ldrh	r6, [r1, #0]
 801ac62:	6815      	ldr	r5, [r2, #0]
 801ac64:	1234      	asrs	r4, r6, #8
 801ac66:	b29a      	uxth	r2, r3
 801ac68:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801ac6c:	43db      	mvns	r3, r3
 801ac6e:	b2db      	uxtb	r3, r3
 801ac70:	fb10 f002 	smulbb	r0, r0, r2
 801ac74:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ac78:	fb04 0403 	mla	r4, r4, r3, r0
 801ac7c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801ac80:	10f0      	asrs	r0, r6, #3
 801ac82:	b2ed      	uxtb	r5, r5
 801ac84:	00f6      	lsls	r6, r6, #3
 801ac86:	fb17 f702 	smulbb	r7, r7, r2
 801ac8a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ac8e:	fb15 f202 	smulbb	r2, r5, r2
 801ac92:	b2f6      	uxtb	r6, r6
 801ac94:	b2a4      	uxth	r4, r4
 801ac96:	fb00 7003 	mla	r0, r0, r3, r7
 801ac9a:	fb06 2303 	mla	r3, r6, r3, r2
 801ac9e:	b29a      	uxth	r2, r3
 801aca0:	1c63      	adds	r3, r4, #1
 801aca2:	b280      	uxth	r0, r0
 801aca4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801aca8:	1c53      	adds	r3, r2, #1
 801acaa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801acae:	1c42      	adds	r2, r0, #1
 801acb0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801acb4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801acb8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801acbc:	0940      	lsrs	r0, r0, #5
 801acbe:	4323      	orrs	r3, r4
 801acc0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801acc4:	4303      	orrs	r3, r0
 801acc6:	800b      	strh	r3, [r1, #0]
 801acc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801accc:	2d0f      	cmp	r5, #15
 801acce:	d893      	bhi.n	801abf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801acd0:	463b      	mov	r3, r7
 801acd2:	463c      	mov	r4, r7
 801acd4:	e7aa      	b.n	801ac2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801acd6:	bf00      	nop
 801acd8:	0801f576 	.word	0x0801f576
 801acdc:	0801fb42 	.word	0x0801fb42
 801ace0:	0801f5fa 	.word	0x0801f5fa
 801ace4:	2000a32c 	.word	0x2000a32c

0801ace8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ace8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acec:	ed2d 8b08 	vpush	{d8-d11}
 801acf0:	b093      	sub	sp, #76	; 0x4c
 801acf2:	461d      	mov	r5, r3
 801acf4:	920c      	str	r2, [sp, #48]	; 0x30
 801acf6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801acf8:	9107      	str	r1, [sp, #28]
 801acfa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801acfe:	9011      	str	r0, [sp, #68]	; 0x44
 801ad00:	6850      	ldr	r0, [r2, #4]
 801ad02:	6812      	ldr	r2, [r2, #0]
 801ad04:	fb00 1303 	mla	r3, r0, r3, r1
 801ad08:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ad0c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad0e:	689b      	ldr	r3, [r3, #8]
 801ad10:	3301      	adds	r3, #1
 801ad12:	f023 0301 	bic.w	r3, r3, #1
 801ad16:	9306      	str	r3, [sp, #24]
 801ad18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad1a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ad1e:	681f      	ldr	r7, [r3, #0]
 801ad20:	eeb0 aa40 	vmov.f32	s20, s0
 801ad24:	eef0 9a60 	vmov.f32	s19, s1
 801ad28:	eeb0 9a41 	vmov.f32	s18, s2
 801ad2c:	eeb0 8a62 	vmov.f32	s16, s5
 801ad30:	eef0 8a43 	vmov.f32	s17, s6
 801ad34:	eef0 ba44 	vmov.f32	s23, s8
 801ad38:	eeb0 ba64 	vmov.f32	s22, s9
 801ad3c:	eef0 aa45 	vmov.f32	s21, s10
 801ad40:	9b07      	ldr	r3, [sp, #28]
 801ad42:	2b00      	cmp	r3, #0
 801ad44:	dc03      	bgt.n	801ad4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ad48:	2b00      	cmp	r3, #0
 801ad4a:	f340 8267 	ble.w	801b21c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801ad4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ad54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ad58:	1e48      	subs	r0, r1, #1
 801ad5a:	f102 3cff 	add.w	ip, r2, #4294967295
 801ad5e:	2d00      	cmp	r5, #0
 801ad60:	f340 80eb 	ble.w	801af3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ad64:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ad68:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ad6c:	d406      	bmi.n	801ad7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ad6e:	4586      	cmp	lr, r0
 801ad70:	da04      	bge.n	801ad7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ad72:	2b00      	cmp	r3, #0
 801ad74:	db02      	blt.n	801ad7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ad76:	4563      	cmp	r3, ip
 801ad78:	f2c0 80e0 	blt.w	801af3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801ad7c:	f11e 0e01 	adds.w	lr, lr, #1
 801ad80:	f100 80d3 	bmi.w	801af2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ad84:	4571      	cmp	r1, lr
 801ad86:	f2c0 80d0 	blt.w	801af2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ad8a:	3301      	adds	r3, #1
 801ad8c:	f100 80cd 	bmi.w	801af2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ad90:	429a      	cmp	r2, r3
 801ad92:	f2c0 80ca 	blt.w	801af2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ad96:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801ad9a:	9509      	str	r5, [sp, #36]	; 0x24
 801ad9c:	46c8      	mov	r8, r9
 801ad9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ada0:	2b00      	cmp	r3, #0
 801ada2:	f340 80e9 	ble.w	801af78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ada6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801adaa:	9308      	str	r3, [sp, #32]
 801adac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801adae:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801adb2:	1423      	asrs	r3, r4, #16
 801adb4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801adb8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801adbc:	f100 813d 	bmi.w	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801adc0:	f10c 3bff 	add.w	fp, ip, #4294967295
 801adc4:	455b      	cmp	r3, fp
 801adc6:	f280 8138 	bge.w	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801adca:	2800      	cmp	r0, #0
 801adcc:	f2c0 8135 	blt.w	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801add0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801add4:	4558      	cmp	r0, fp
 801add6:	f280 8130 	bge.w	801b03a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801adda:	9a06      	ldr	r2, [sp, #24]
 801addc:	fb00 3302 	mla	r3, r0, r2, r3
 801ade0:	0858      	lsrs	r0, r3, #1
 801ade2:	07da      	lsls	r2, r3, #31
 801ade4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ade8:	9a08      	ldr	r2, [sp, #32]
 801adea:	bf54      	ite	pl
 801adec:	f00c 0c0f 	andpl.w	ip, ip, #15
 801adf0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801adf4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801adf8:	fa5f fc8c 	uxtb.w	ip, ip
 801adfc:	2a00      	cmp	r2, #0
 801adfe:	f000 80fe 	beq.w	801affe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801ae02:	1c58      	adds	r0, r3, #1
 801ae04:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ae08:	07c0      	lsls	r0, r0, #31
 801ae0a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ae0e:	bf54      	ite	pl
 801ae10:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ae14:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ae18:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ae1c:	fa5f fe8e 	uxtb.w	lr, lr
 801ae20:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801ae24:	b1b9      	cbz	r1, 801ae56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ae26:	4453      	add	r3, sl
 801ae28:	0858      	lsrs	r0, r3, #1
 801ae2a:	07da      	lsls	r2, r3, #31
 801ae2c:	5c38      	ldrb	r0, [r7, r0]
 801ae2e:	bf54      	ite	pl
 801ae30:	f000 000f 	andpl.w	r0, r0, #15
 801ae34:	1100      	asrmi	r0, r0, #4
 801ae36:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ae3a:	b2c0      	uxtb	r0, r0
 801ae3c:	900a      	str	r0, [sp, #40]	; 0x28
 801ae3e:	1c58      	adds	r0, r3, #1
 801ae40:	0843      	lsrs	r3, r0, #1
 801ae42:	07c2      	lsls	r2, r0, #31
 801ae44:	5cfb      	ldrb	r3, [r7, r3]
 801ae46:	bf54      	ite	pl
 801ae48:	f003 030f 	andpl.w	r3, r3, #15
 801ae4c:	111b      	asrmi	r3, r3, #4
 801ae4e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ae52:	b2db      	uxtb	r3, r3
 801ae54:	930e      	str	r3, [sp, #56]	; 0x38
 801ae56:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ae5a:	b289      	uxth	r1, r1
 801ae5c:	fb02 f301 	mul.w	r3, r2, r1
 801ae60:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ae64:	0112      	lsls	r2, r2, #4
 801ae66:	b289      	uxth	r1, r1
 801ae68:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ae6c:	1a40      	subs	r0, r0, r1
 801ae6e:	fa1f fe80 	uxth.w	lr, r0
 801ae72:	1ad2      	subs	r2, r2, r3
 801ae74:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ae76:	b292      	uxth	r2, r2
 801ae78:	4342      	muls	r2, r0
 801ae7a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801ae7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ae80:	fb01 c102 	mla	r1, r1, r2, ip
 801ae84:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ae86:	fb03 1302 	mla	r3, r3, r2, r1
 801ae8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ae8e:	2b00      	cmp	r3, #0
 801ae90:	d041      	beq.n	801af16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801ae92:	4a7a      	ldr	r2, [pc, #488]	; (801b07c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>)
 801ae94:	6810      	ldr	r0, [r2, #0]
 801ae96:	2bff      	cmp	r3, #255	; 0xff
 801ae98:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801ae9c:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801aea0:	fa5f fe80 	uxtb.w	lr, r0
 801aea4:	f000 80bc 	beq.w	801b020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801aea8:	f8b8 c000 	ldrh.w	ip, [r8]
 801aeac:	fa1f fb83 	uxth.w	fp, r3
 801aeb0:	ea4f 202c 	mov.w	r0, ip, asr #8
 801aeb4:	43db      	mvns	r3, r3
 801aeb6:	b2d2      	uxtb	r2, r2
 801aeb8:	b2db      	uxtb	r3, r3
 801aeba:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aebe:	fb12 f20b 	smulbb	r2, r2, fp
 801aec2:	fb00 2203 	mla	r2, r0, r3, r2
 801aec6:	b2c9      	uxtb	r1, r1
 801aec8:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801aecc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aed0:	b292      	uxth	r2, r2
 801aed2:	fb11 f10b 	smulbb	r1, r1, fp
 801aed6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801aeda:	fa5f fc8c 	uxtb.w	ip, ip
 801aede:	fb1e fe0b 	smulbb	lr, lr, fp
 801aee2:	fb00 1003 	mla	r0, r0, r3, r1
 801aee6:	1c51      	adds	r1, r2, #1
 801aee8:	fb0c e303 	mla	r3, ip, r3, lr
 801aeec:	b29b      	uxth	r3, r3
 801aeee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801aef2:	f402 4178 	and.w	r1, r2, #63488	; 0xf800
 801aef6:	1c5a      	adds	r2, r3, #1
 801aef8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801aefc:	b280      	uxth	r0, r0
 801aefe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801af02:	430a      	orrs	r2, r1
 801af04:	1c41      	adds	r1, r0, #1
 801af06:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801af0a:	0940      	lsrs	r0, r0, #5
 801af0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801af10:	4302      	orrs	r2, r0
 801af12:	f8a8 2000 	strh.w	r2, [r8]
 801af16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801af18:	441c      	add	r4, r3
 801af1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af1c:	441e      	add	r6, r3
 801af1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af20:	3b01      	subs	r3, #1
 801af22:	f108 0802 	add.w	r8, r8, #2
 801af26:	9309      	str	r3, [sp, #36]	; 0x24
 801af28:	e739      	b.n	801ad9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801af2a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801af2c:	441c      	add	r4, r3
 801af2e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af30:	3d01      	subs	r5, #1
 801af32:	441e      	add	r6, r3
 801af34:	f109 0902 	add.w	r9, r9, #2
 801af38:	e711      	b.n	801ad5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801af3a:	d021      	beq.n	801af80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801af3c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801af3e:	1e6b      	subs	r3, r5, #1
 801af40:	fb00 4003 	mla	r0, r0, r3, r4
 801af44:	1400      	asrs	r0, r0, #16
 801af46:	f53f af26 	bmi.w	801ad96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801af4a:	3901      	subs	r1, #1
 801af4c:	4288      	cmp	r0, r1
 801af4e:	f6bf af22 	bge.w	801ad96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801af52:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801af54:	fb01 6303 	mla	r3, r1, r3, r6
 801af58:	141b      	asrs	r3, r3, #16
 801af5a:	f53f af1c 	bmi.w	801ad96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801af5e:	3a01      	subs	r2, #1
 801af60:	4293      	cmp	r3, r2
 801af62:	f6bf af18 	bge.w	801ad96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801af66:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801af6a:	9308      	str	r3, [sp, #32]
 801af6c:	46aa      	mov	sl, r5
 801af6e:	46c8      	mov	r8, r9
 801af70:	f1ba 0f00 	cmp.w	sl, #0
 801af74:	f300 8086 	bgt.w	801b084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801af78:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801af7c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801af80:	9b07      	ldr	r3, [sp, #28]
 801af82:	2b00      	cmp	r3, #0
 801af84:	f340 814a 	ble.w	801b21c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801af88:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801af8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801af90:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801af94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801af96:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801af9a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801af9e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801afa2:	eef0 6a48 	vmov.f32	s13, s16
 801afa6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801afaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afae:	ee37 8a48 	vsub.f32	s16, s14, s16
 801afb2:	ee16 4a90 	vmov	r4, s13
 801afb6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801afba:	eef0 6a68 	vmov.f32	s13, s17
 801afbe:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801afc2:	ee18 2a10 	vmov	r2, s16
 801afc6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801afca:	fb92 f3f3 	sdiv	r3, r2, r3
 801afce:	ee18 2a90 	vmov	r2, s17
 801afd2:	9327      	str	r3, [sp, #156]	; 0x9c
 801afd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801afd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801afda:	9328      	str	r3, [sp, #160]	; 0xa0
 801afdc:	9b07      	ldr	r3, [sp, #28]
 801afde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801afe0:	3b01      	subs	r3, #1
 801afe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afe6:	9307      	str	r3, [sp, #28]
 801afe8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801afea:	ee16 6a90 	vmov	r6, s13
 801afee:	bf14      	ite	ne
 801aff0:	461d      	movne	r5, r3
 801aff2:	4615      	moveq	r5, r2
 801aff4:	eef0 8a67 	vmov.f32	s17, s15
 801aff8:	eeb0 8a47 	vmov.f32	s16, s14
 801affc:	e6a0      	b.n	801ad40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801affe:	2900      	cmp	r1, #0
 801b000:	f43f af29 	beq.w	801ae56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b004:	eb0a 0003 	add.w	r0, sl, r3
 801b008:	0843      	lsrs	r3, r0, #1
 801b00a:	07c0      	lsls	r0, r0, #31
 801b00c:	5cfb      	ldrb	r3, [r7, r3]
 801b00e:	bf54      	ite	pl
 801b010:	f003 030f 	andpl.w	r3, r3, #15
 801b014:	111b      	asrmi	r3, r3, #4
 801b016:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b01a:	b2db      	uxtb	r3, r3
 801b01c:	930a      	str	r3, [sp, #40]	; 0x28
 801b01e:	e71a      	b.n	801ae56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b020:	4b17      	ldr	r3, [pc, #92]	; (801b080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801b022:	00c9      	lsls	r1, r1, #3
 801b024:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801b028:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801b02c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b030:	ea4e 0e01 	orr.w	lr, lr, r1
 801b034:	f8a8 e000 	strh.w	lr, [r8]
 801b038:	e76d      	b.n	801af16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b03a:	f113 0b01 	adds.w	fp, r3, #1
 801b03e:	f53f af6a 	bmi.w	801af16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b042:	45dc      	cmp	ip, fp
 801b044:	f6ff af67 	blt.w	801af16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b048:	f110 0b01 	adds.w	fp, r0, #1
 801b04c:	f53f af63 	bmi.w	801af16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b050:	45de      	cmp	lr, fp
 801b052:	f6ff af60 	blt.w	801af16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b056:	9a08      	ldr	r2, [sp, #32]
 801b058:	9302      	str	r3, [sp, #8]
 801b05a:	fa0f f38e 	sxth.w	r3, lr
 801b05e:	9301      	str	r3, [sp, #4]
 801b060:	fa0f f38c 	sxth.w	r3, ip
 801b064:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b068:	9105      	str	r1, [sp, #20]
 801b06a:	9300      	str	r3, [sp, #0]
 801b06c:	463a      	mov	r2, r7
 801b06e:	4653      	mov	r3, sl
 801b070:	4641      	mov	r1, r8
 801b072:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b074:	f7ff fd58 	bl	801ab28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b078:	e74d      	b.n	801af16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b07a:	bf00      	nop
 801b07c:	2000a32c 	.word	0x2000a32c
 801b080:	fffff800 	.word	0xfffff800
 801b084:	9906      	ldr	r1, [sp, #24]
 801b086:	1422      	asrs	r2, r4, #16
 801b088:	1433      	asrs	r3, r6, #16
 801b08a:	fb01 2303 	mla	r3, r1, r3, r2
 801b08e:	085a      	lsrs	r2, r3, #1
 801b090:	07d9      	lsls	r1, r3, #31
 801b092:	5cba      	ldrb	r2, [r7, r2]
 801b094:	bf54      	ite	pl
 801b096:	f002 020f 	andpl.w	r2, r2, #15
 801b09a:	1112      	asrmi	r2, r2, #4
 801b09c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b0a0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b0a4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b0a8:	b2d2      	uxtb	r2, r2
 801b0aa:	2800      	cmp	r0, #0
 801b0ac:	f000 8098 	beq.w	801b1e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 801b0b0:	f103 0e01 	add.w	lr, r3, #1
 801b0b4:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801b0b8:	f01e 0f01 	tst.w	lr, #1
 801b0bc:	5c79      	ldrb	r1, [r7, r1]
 801b0be:	bf0c      	ite	eq
 801b0c0:	f001 010f 	andeq.w	r1, r1, #15
 801b0c4:	1109      	asrne	r1, r1, #4
 801b0c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b0ca:	b2c9      	uxtb	r1, r1
 801b0cc:	910f      	str	r1, [sp, #60]	; 0x3c
 801b0ce:	f1bc 0f00 	cmp.w	ip, #0
 801b0d2:	d019      	beq.n	801b108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801b0d4:	9908      	ldr	r1, [sp, #32]
 801b0d6:	440b      	add	r3, r1
 801b0d8:	0859      	lsrs	r1, r3, #1
 801b0da:	f013 0f01 	tst.w	r3, #1
 801b0de:	5c79      	ldrb	r1, [r7, r1]
 801b0e0:	bf0c      	ite	eq
 801b0e2:	f001 010f 	andeq.w	r1, r1, #15
 801b0e6:	1109      	asrne	r1, r1, #4
 801b0e8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b0ec:	b2c9      	uxtb	r1, r1
 801b0ee:	3301      	adds	r3, #1
 801b0f0:	910b      	str	r1, [sp, #44]	; 0x2c
 801b0f2:	0859      	lsrs	r1, r3, #1
 801b0f4:	07db      	lsls	r3, r3, #31
 801b0f6:	5c79      	ldrb	r1, [r7, r1]
 801b0f8:	bf54      	ite	pl
 801b0fa:	f001 010f 	andpl.w	r1, r1, #15
 801b0fe:	1109      	asrmi	r1, r1, #4
 801b100:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b104:	b2c9      	uxtb	r1, r1
 801b106:	9110      	str	r1, [sp, #64]	; 0x40
 801b108:	b280      	uxth	r0, r0
 801b10a:	fa1f fc8c 	uxth.w	ip, ip
 801b10e:	fb00 f30c 	mul.w	r3, r0, ip
 801b112:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b116:	0100      	lsls	r0, r0, #4
 801b118:	fa1f fc8c 	uxth.w	ip, ip
 801b11c:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b120:	eba1 010c 	sub.w	r1, r1, ip
 801b124:	fa1f fe81 	uxth.w	lr, r1
 801b128:	1ac0      	subs	r0, r0, r3
 801b12a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b12c:	b280      	uxth	r0, r0
 801b12e:	4348      	muls	r0, r1
 801b130:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b132:	fb02 020e 	mla	r2, r2, lr, r0
 801b136:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b13a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b13c:	fb03 c302 	mla	r3, r3, r2, ip
 801b140:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b144:	2b00      	cmp	r3, #0
 801b146:	d042      	beq.n	801b1ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801b148:	4a37      	ldr	r2, [pc, #220]	; (801b228 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801b14a:	6810      	ldr	r0, [r2, #0]
 801b14c:	2bff      	cmp	r3, #255	; 0xff
 801b14e:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801b152:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801b156:	fa5f fe80 	uxtb.w	lr, r0
 801b15a:	d052      	beq.n	801b202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 801b15c:	f8b8 c000 	ldrh.w	ip, [r8]
 801b160:	fa1f fb83 	uxth.w	fp, r3
 801b164:	ea4f 202c 	mov.w	r0, ip, asr #8
 801b168:	43db      	mvns	r3, r3
 801b16a:	b2d2      	uxtb	r2, r2
 801b16c:	b2db      	uxtb	r3, r3
 801b16e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b172:	fb12 f20b 	smulbb	r2, r2, fp
 801b176:	fb00 2203 	mla	r2, r0, r3, r2
 801b17a:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801b17e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b182:	fa5f fc8c 	uxtb.w	ip, ip
 801b186:	fb1e fe0b 	smulbb	lr, lr, fp
 801b18a:	fb0c ee03 	mla	lr, ip, r3, lr
 801b18e:	b2c9      	uxtb	r1, r1
 801b190:	b292      	uxth	r2, r2
 801b192:	fb11 f10b 	smulbb	r1, r1, fp
 801b196:	fa1f fe8e 	uxth.w	lr, lr
 801b19a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b19e:	fb00 1003 	mla	r0, r0, r3, r1
 801b1a2:	1c53      	adds	r3, r2, #1
 801b1a4:	f10e 0101 	add.w	r1, lr, #1
 801b1a8:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b1ac:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801b1b0:	b280      	uxth	r0, r0
 801b1b2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b1b6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b1ba:	430a      	orrs	r2, r1
 801b1bc:	1c41      	adds	r1, r0, #1
 801b1be:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b1c2:	0940      	lsrs	r0, r0, #5
 801b1c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b1c8:	4302      	orrs	r2, r0
 801b1ca:	f8a8 2000 	strh.w	r2, [r8]
 801b1ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b1d0:	441c      	add	r4, r3
 801b1d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b1d4:	f108 0802 	add.w	r8, r8, #2
 801b1d8:	441e      	add	r6, r3
 801b1da:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b1de:	e6c7      	b.n	801af70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b1e0:	f1bc 0f00 	cmp.w	ip, #0
 801b1e4:	d090      	beq.n	801b108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801b1e6:	9908      	ldr	r1, [sp, #32]
 801b1e8:	440b      	add	r3, r1
 801b1ea:	0859      	lsrs	r1, r3, #1
 801b1ec:	07db      	lsls	r3, r3, #31
 801b1ee:	5c79      	ldrb	r1, [r7, r1]
 801b1f0:	bf54      	ite	pl
 801b1f2:	f001 010f 	andpl.w	r1, r1, #15
 801b1f6:	1109      	asrmi	r1, r1, #4
 801b1f8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b1fc:	b2c9      	uxtb	r1, r1
 801b1fe:	910b      	str	r1, [sp, #44]	; 0x2c
 801b200:	e782      	b.n	801b108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801b202:	4b0a      	ldr	r3, [pc, #40]	; (801b22c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x544>)
 801b204:	00c9      	lsls	r1, r1, #3
 801b206:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801b20a:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801b20e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b212:	ea4e 0e01 	orr.w	lr, lr, r1
 801b216:	f8a8 e000 	strh.w	lr, [r8]
 801b21a:	e7d8      	b.n	801b1ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801b21c:	b013      	add	sp, #76	; 0x4c
 801b21e:	ecbd 8b08 	vpop	{d8-d11}
 801b222:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b226:	bf00      	nop
 801b228:	2000a32c 	.word	0x2000a32c
 801b22c:	fffff800 	.word	0xfffff800

0801b230 <CRC_Lock>:
 801b230:	b530      	push	{r4, r5, lr}
 801b232:	4a20      	ldr	r2, [pc, #128]	; (801b2b4 <CRC_Lock+0x84>)
 801b234:	6813      	ldr	r3, [r2, #0]
 801b236:	f023 0301 	bic.w	r3, r3, #1
 801b23a:	6013      	str	r3, [r2, #0]
 801b23c:	4b1e      	ldr	r3, [pc, #120]	; (801b2b8 <CRC_Lock+0x88>)
 801b23e:	681a      	ldr	r2, [r3, #0]
 801b240:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b244:	4022      	ands	r2, r4
 801b246:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b24a:	42aa      	cmp	r2, r5
 801b24c:	d005      	beq.n	801b25a <CRC_Lock+0x2a>
 801b24e:	681b      	ldr	r3, [r3, #0]
 801b250:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b254:	4023      	ands	r3, r4
 801b256:	4293      	cmp	r3, r2
 801b258:	d124      	bne.n	801b2a4 <CRC_Lock+0x74>
 801b25a:	4b18      	ldr	r3, [pc, #96]	; (801b2bc <CRC_Lock+0x8c>)
 801b25c:	681b      	ldr	r3, [r3, #0]
 801b25e:	bb0b      	cbnz	r3, 801b2a4 <CRC_Lock+0x74>
 801b260:	4b17      	ldr	r3, [pc, #92]	; (801b2c0 <CRC_Lock+0x90>)
 801b262:	681a      	ldr	r2, [r3, #0]
 801b264:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b268:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801b26c:	d00d      	beq.n	801b28a <CRC_Lock+0x5a>
 801b26e:	681a      	ldr	r2, [r3, #0]
 801b270:	f240 4483 	movw	r4, #1155	; 0x483
 801b274:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b278:	42a2      	cmp	r2, r4
 801b27a:	d006      	beq.n	801b28a <CRC_Lock+0x5a>
 801b27c:	681b      	ldr	r3, [r3, #0]
 801b27e:	f240 4285 	movw	r2, #1157	; 0x485
 801b282:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b286:	4293      	cmp	r3, r2
 801b288:	d10c      	bne.n	801b2a4 <CRC_Lock+0x74>
 801b28a:	4b0e      	ldr	r3, [pc, #56]	; (801b2c4 <CRC_Lock+0x94>)
 801b28c:	2201      	movs	r2, #1
 801b28e:	601a      	str	r2, [r3, #0]
 801b290:	681a      	ldr	r2, [r3, #0]
 801b292:	2a00      	cmp	r2, #0
 801b294:	d1fc      	bne.n	801b290 <CRC_Lock+0x60>
 801b296:	4b0c      	ldr	r3, [pc, #48]	; (801b2c8 <CRC_Lock+0x98>)
 801b298:	6018      	str	r0, [r3, #0]
 801b29a:	6818      	ldr	r0, [r3, #0]
 801b29c:	1a43      	subs	r3, r0, r1
 801b29e:	4258      	negs	r0, r3
 801b2a0:	4158      	adcs	r0, r3
 801b2a2:	bd30      	pop	{r4, r5, pc}
 801b2a4:	4b09      	ldr	r3, [pc, #36]	; (801b2cc <CRC_Lock+0x9c>)
 801b2a6:	2201      	movs	r2, #1
 801b2a8:	601a      	str	r2, [r3, #0]
 801b2aa:	681a      	ldr	r2, [r3, #0]
 801b2ac:	2a00      	cmp	r2, #0
 801b2ae:	d1fc      	bne.n	801b2aa <CRC_Lock+0x7a>
 801b2b0:	4b07      	ldr	r3, [pc, #28]	; (801b2d0 <CRC_Lock+0xa0>)
 801b2b2:	e7f1      	b.n	801b298 <CRC_Lock+0x68>
 801b2b4:	e0002000 	.word	0xe0002000
 801b2b8:	e000ed00 	.word	0xe000ed00
 801b2bc:	e0042000 	.word	0xe0042000
 801b2c0:	5c001000 	.word	0x5c001000
 801b2c4:	58024c08 	.word	0x58024c08
 801b2c8:	58024c00 	.word	0x58024c00
 801b2cc:	40023008 	.word	0x40023008
 801b2d0:	40023000 	.word	0x40023000

0801b2d4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b2d4:	6101      	str	r1, [r0, #16]
 801b2d6:	4770      	bx	lr

0801b2d8 <_ZN8touchgfx8Gestures4tickEv>:
 801b2d8:	7b83      	ldrb	r3, [r0, #14]
 801b2da:	b14b      	cbz	r3, 801b2f0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b2dc:	8903      	ldrh	r3, [r0, #8]
 801b2de:	3301      	adds	r3, #1
 801b2e0:	b29b      	uxth	r3, r3
 801b2e2:	2b07      	cmp	r3, #7
 801b2e4:	8103      	strh	r3, [r0, #8]
 801b2e6:	bf81      	itttt	hi
 801b2e8:	2300      	movhi	r3, #0
 801b2ea:	8143      	strhhi	r3, [r0, #10]
 801b2ec:	8183      	strhhi	r3, [r0, #12]
 801b2ee:	7383      	strbhi	r3, [r0, #14]
 801b2f0:	4770      	bx	lr
	...

0801b2f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b2f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b2f8:	4604      	mov	r4, r0
 801b2fa:	8880      	ldrh	r0, [r0, #4]
 801b2fc:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b300:	4698      	mov	r8, r3
 801b302:	eba8 0000 	sub.w	r0, r8, r0
 801b306:	4b1c      	ldr	r3, [pc, #112]	; (801b378 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b308:	9300      	str	r3, [sp, #0]
 801b30a:	b280      	uxth	r0, r0
 801b30c:	2300      	movs	r3, #0
 801b30e:	f88d 3004 	strb.w	r3, [sp, #4]
 801b312:	b203      	sxth	r3, r0
 801b314:	2b00      	cmp	r3, #0
 801b316:	bfb8      	it	lt
 801b318:	4240      	neglt	r0, r0
 801b31a:	4617      	mov	r7, r2
 801b31c:	8aa2      	ldrh	r2, [r4, #20]
 801b31e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b322:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b326:	bfb8      	it	lt
 801b328:	b203      	sxthlt	r3, r0
 801b32a:	460e      	mov	r6, r1
 801b32c:	4293      	cmp	r3, r2
 801b32e:	88e1      	ldrh	r1, [r4, #6]
 801b330:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b334:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b338:	dc08      	bgt.n	801b34c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b33a:	1a69      	subs	r1, r5, r1
 801b33c:	b289      	uxth	r1, r1
 801b33e:	b20b      	sxth	r3, r1
 801b340:	2b00      	cmp	r3, #0
 801b342:	bfbc      	itt	lt
 801b344:	4249      	neglt	r1, r1
 801b346:	b20b      	sxthlt	r3, r1
 801b348:	429a      	cmp	r2, r3
 801b34a:	da13      	bge.n	801b374 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b34c:	6920      	ldr	r0, [r4, #16]
 801b34e:	6803      	ldr	r3, [r0, #0]
 801b350:	4669      	mov	r1, sp
 801b352:	685b      	ldr	r3, [r3, #4]
 801b354:	4798      	blx	r3
 801b356:	eba8 0606 	sub.w	r6, r8, r6
 801b35a:	2300      	movs	r3, #0
 801b35c:	1bef      	subs	r7, r5, r7
 801b35e:	2001      	movs	r0, #1
 801b360:	8123      	strh	r3, [r4, #8]
 801b362:	8166      	strh	r6, [r4, #10]
 801b364:	81a7      	strh	r7, [r4, #12]
 801b366:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b36a:	80e5      	strh	r5, [r4, #6]
 801b36c:	73a0      	strb	r0, [r4, #14]
 801b36e:	b004      	add	sp, #16
 801b370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b374:	2000      	movs	r0, #0
 801b376:	e7fa      	b.n	801b36e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b378:	0801ea0c 	.word	0x0801ea0c

0801b37c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b37c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b37e:	461e      	mov	r6, r3
 801b380:	1e4b      	subs	r3, r1, #1
 801b382:	2b01      	cmp	r3, #1
 801b384:	b085      	sub	sp, #20
 801b386:	4604      	mov	r4, r0
 801b388:	460d      	mov	r5, r1
 801b38a:	4617      	mov	r7, r2
 801b38c:	d84b      	bhi.n	801b426 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b38e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b392:	1cd3      	adds	r3, r2, #3
 801b394:	b29b      	uxth	r3, r3
 801b396:	2b06      	cmp	r3, #6
 801b398:	d916      	bls.n	801b3c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b39a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801b43c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b39e:	f8cd c004 	str.w	ip, [sp, #4]
 801b3a2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b3a6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b3aa:	6900      	ldr	r0, [r0, #16]
 801b3ac:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b3b0:	f04f 0c00 	mov.w	ip, #0
 801b3b4:	f88d c008 	strb.w	ip, [sp, #8]
 801b3b8:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b3bc:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b3c0:	6803      	ldr	r3, [r0, #0]
 801b3c2:	a901      	add	r1, sp, #4
 801b3c4:	689b      	ldr	r3, [r3, #8]
 801b3c6:	4798      	blx	r3
 801b3c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b3cc:	1cd3      	adds	r3, r2, #3
 801b3ce:	b29b      	uxth	r3, r3
 801b3d0:	2b06      	cmp	r3, #6
 801b3d2:	d916      	bls.n	801b402 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b3d4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801b43c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b3d8:	f8cd c004 	str.w	ip, [sp, #4]
 801b3dc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b3e0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b3e4:	6920      	ldr	r0, [r4, #16]
 801b3e6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b3ea:	f04f 0c01 	mov.w	ip, #1
 801b3ee:	f88d c008 	strb.w	ip, [sp, #8]
 801b3f2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b3f6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b3fa:	6803      	ldr	r3, [r0, #0]
 801b3fc:	a901      	add	r1, sp, #4
 801b3fe:	689b      	ldr	r3, [r3, #8]
 801b400:	4798      	blx	r3
 801b402:	4b0d      	ldr	r3, [pc, #52]	; (801b438 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801b404:	9301      	str	r3, [sp, #4]
 801b406:	6920      	ldr	r0, [r4, #16]
 801b408:	f88d 5008 	strb.w	r5, [sp, #8]
 801b40c:	2300      	movs	r3, #0
 801b40e:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b412:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b416:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b41a:	6803      	ldr	r3, [r0, #0]
 801b41c:	a901      	add	r1, sp, #4
 801b41e:	681b      	ldr	r3, [r3, #0]
 801b420:	4798      	blx	r3
 801b422:	b005      	add	sp, #20
 801b424:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b426:	2900      	cmp	r1, #0
 801b428:	d1eb      	bne.n	801b402 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b42a:	80a2      	strh	r2, [r4, #4]
 801b42c:	80c6      	strh	r6, [r0, #6]
 801b42e:	60a1      	str	r1, [r4, #8]
 801b430:	81a1      	strh	r1, [r4, #12]
 801b432:	73a1      	strb	r1, [r4, #14]
 801b434:	e7e5      	b.n	801b402 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b436:	bf00      	nop
 801b438:	0801e9f8 	.word	0x0801e9f8
 801b43c:	0801ea20 	.word	0x0801ea20

0801b440 <__aeabi_atexit>:
 801b440:	460b      	mov	r3, r1
 801b442:	4601      	mov	r1, r0
 801b444:	4618      	mov	r0, r3
 801b446:	f000 b853 	b.w	801b4f0 <__cxa_atexit>

0801b44a <_ZdlPvj>:
 801b44a:	f000 b812 	b.w	801b472 <_ZdlPv>

0801b44e <__cxa_guard_acquire>:
 801b44e:	6803      	ldr	r3, [r0, #0]
 801b450:	07db      	lsls	r3, r3, #31
 801b452:	d406      	bmi.n	801b462 <__cxa_guard_acquire+0x14>
 801b454:	7843      	ldrb	r3, [r0, #1]
 801b456:	b103      	cbz	r3, 801b45a <__cxa_guard_acquire+0xc>
 801b458:	deff      	udf	#255	; 0xff
 801b45a:	2301      	movs	r3, #1
 801b45c:	7043      	strb	r3, [r0, #1]
 801b45e:	4618      	mov	r0, r3
 801b460:	4770      	bx	lr
 801b462:	2000      	movs	r0, #0
 801b464:	4770      	bx	lr

0801b466 <__cxa_guard_release>:
 801b466:	2301      	movs	r3, #1
 801b468:	6003      	str	r3, [r0, #0]
 801b46a:	4770      	bx	lr

0801b46c <__cxa_pure_virtual>:
 801b46c:	b508      	push	{r3, lr}
 801b46e:	f000 f80f 	bl	801b490 <_ZSt9terminatev>

0801b472 <_ZdlPv>:
 801b472:	f000 b989 	b.w	801b788 <free>

0801b476 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b476:	b508      	push	{r3, lr}
 801b478:	4780      	blx	r0
 801b47a:	f000 f80e 	bl	801b49a <abort>
	...

0801b480 <_ZSt13get_terminatev>:
 801b480:	4b02      	ldr	r3, [pc, #8]	; (801b48c <_ZSt13get_terminatev+0xc>)
 801b482:	6818      	ldr	r0, [r3, #0]
 801b484:	f3bf 8f5b 	dmb	ish
 801b488:	4770      	bx	lr
 801b48a:	bf00      	nop
 801b48c:	200000d4 	.word	0x200000d4

0801b490 <_ZSt9terminatev>:
 801b490:	b508      	push	{r3, lr}
 801b492:	f7ff fff5 	bl	801b480 <_ZSt13get_terminatev>
 801b496:	f7ff ffee 	bl	801b476 <_ZN10__cxxabiv111__terminateEPFvvE>

0801b49a <abort>:
 801b49a:	b508      	push	{r3, lr}
 801b49c:	2006      	movs	r0, #6
 801b49e:	f000 fdcb 	bl	801c038 <raise>
 801b4a2:	2001      	movs	r0, #1
 801b4a4:	f7e6 fda0 	bl	8001fe8 <_exit>

0801b4a8 <__assert_func>:
 801b4a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b4aa:	4614      	mov	r4, r2
 801b4ac:	461a      	mov	r2, r3
 801b4ae:	4b09      	ldr	r3, [pc, #36]	; (801b4d4 <__assert_func+0x2c>)
 801b4b0:	681b      	ldr	r3, [r3, #0]
 801b4b2:	4605      	mov	r5, r0
 801b4b4:	68d8      	ldr	r0, [r3, #12]
 801b4b6:	b14c      	cbz	r4, 801b4cc <__assert_func+0x24>
 801b4b8:	4b07      	ldr	r3, [pc, #28]	; (801b4d8 <__assert_func+0x30>)
 801b4ba:	9100      	str	r1, [sp, #0]
 801b4bc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801b4c0:	4906      	ldr	r1, [pc, #24]	; (801b4dc <__assert_func+0x34>)
 801b4c2:	462b      	mov	r3, r5
 801b4c4:	f000 f8fe 	bl	801b6c4 <fiprintf>
 801b4c8:	f7ff ffe7 	bl	801b49a <abort>
 801b4cc:	4b04      	ldr	r3, [pc, #16]	; (801b4e0 <__assert_func+0x38>)
 801b4ce:	461c      	mov	r4, r3
 801b4d0:	e7f3      	b.n	801b4ba <__assert_func+0x12>
 801b4d2:	bf00      	nop
 801b4d4:	200000d8 	.word	0x200000d8
 801b4d8:	0801fd7d 	.word	0x0801fd7d
 801b4dc:	0801fd8a 	.word	0x0801fd8a
 801b4e0:	0801fdb8 	.word	0x0801fdb8

0801b4e4 <atexit>:
 801b4e4:	2300      	movs	r3, #0
 801b4e6:	4601      	mov	r1, r0
 801b4e8:	461a      	mov	r2, r3
 801b4ea:	4618      	mov	r0, r3
 801b4ec:	f000 bed6 	b.w	801c29c <__register_exitproc>

0801b4f0 <__cxa_atexit>:
 801b4f0:	b510      	push	{r4, lr}
 801b4f2:	4c05      	ldr	r4, [pc, #20]	; (801b508 <__cxa_atexit+0x18>)
 801b4f4:	4613      	mov	r3, r2
 801b4f6:	b12c      	cbz	r4, 801b504 <__cxa_atexit+0x14>
 801b4f8:	460a      	mov	r2, r1
 801b4fa:	4601      	mov	r1, r0
 801b4fc:	2002      	movs	r0, #2
 801b4fe:	f000 fecd 	bl	801c29c <__register_exitproc>
 801b502:	bd10      	pop	{r4, pc}
 801b504:	4620      	mov	r0, r4
 801b506:	e7fc      	b.n	801b502 <__cxa_atexit+0x12>
 801b508:	0801c29d 	.word	0x0801c29d

0801b50c <__errno>:
 801b50c:	4b01      	ldr	r3, [pc, #4]	; (801b514 <__errno+0x8>)
 801b50e:	6818      	ldr	r0, [r3, #0]
 801b510:	4770      	bx	lr
 801b512:	bf00      	nop
 801b514:	200000d8 	.word	0x200000d8

0801b518 <std>:
 801b518:	2300      	movs	r3, #0
 801b51a:	b510      	push	{r4, lr}
 801b51c:	4604      	mov	r4, r0
 801b51e:	e9c0 3300 	strd	r3, r3, [r0]
 801b522:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801b526:	6083      	str	r3, [r0, #8]
 801b528:	8181      	strh	r1, [r0, #12]
 801b52a:	6643      	str	r3, [r0, #100]	; 0x64
 801b52c:	81c2      	strh	r2, [r0, #14]
 801b52e:	6183      	str	r3, [r0, #24]
 801b530:	4619      	mov	r1, r3
 801b532:	2208      	movs	r2, #8
 801b534:	305c      	adds	r0, #92	; 0x5c
 801b536:	f000 f93d 	bl	801b7b4 <memset>
 801b53a:	4b05      	ldr	r3, [pc, #20]	; (801b550 <std+0x38>)
 801b53c:	6263      	str	r3, [r4, #36]	; 0x24
 801b53e:	4b05      	ldr	r3, [pc, #20]	; (801b554 <std+0x3c>)
 801b540:	62a3      	str	r3, [r4, #40]	; 0x28
 801b542:	4b05      	ldr	r3, [pc, #20]	; (801b558 <std+0x40>)
 801b544:	62e3      	str	r3, [r4, #44]	; 0x2c
 801b546:	4b05      	ldr	r3, [pc, #20]	; (801b55c <std+0x44>)
 801b548:	6224      	str	r4, [r4, #32]
 801b54a:	6323      	str	r3, [r4, #48]	; 0x30
 801b54c:	bd10      	pop	{r4, pc}
 801b54e:	bf00      	nop
 801b550:	0801c071 	.word	0x0801c071
 801b554:	0801c093 	.word	0x0801c093
 801b558:	0801c0cb 	.word	0x0801c0cb
 801b55c:	0801c0ef 	.word	0x0801c0ef

0801b560 <_cleanup_r>:
 801b560:	4901      	ldr	r1, [pc, #4]	; (801b568 <_cleanup_r+0x8>)
 801b562:	f000 b8c1 	b.w	801b6e8 <_fwalk_reent>
 801b566:	bf00      	nop
 801b568:	0801c48d 	.word	0x0801c48d

0801b56c <__sfmoreglue>:
 801b56c:	b570      	push	{r4, r5, r6, lr}
 801b56e:	1e4a      	subs	r2, r1, #1
 801b570:	2568      	movs	r5, #104	; 0x68
 801b572:	4355      	muls	r5, r2
 801b574:	460e      	mov	r6, r1
 801b576:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801b57a:	f000 f973 	bl	801b864 <_malloc_r>
 801b57e:	4604      	mov	r4, r0
 801b580:	b140      	cbz	r0, 801b594 <__sfmoreglue+0x28>
 801b582:	2100      	movs	r1, #0
 801b584:	e9c0 1600 	strd	r1, r6, [r0]
 801b588:	300c      	adds	r0, #12
 801b58a:	60a0      	str	r0, [r4, #8]
 801b58c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801b590:	f000 f910 	bl	801b7b4 <memset>
 801b594:	4620      	mov	r0, r4
 801b596:	bd70      	pop	{r4, r5, r6, pc}

0801b598 <__sfp_lock_acquire>:
 801b598:	4801      	ldr	r0, [pc, #4]	; (801b5a0 <__sfp_lock_acquire+0x8>)
 801b59a:	f000 b8ea 	b.w	801b772 <__retarget_lock_acquire_recursive>
 801b59e:	bf00      	nop
 801b5a0:	2000a8b0 	.word	0x2000a8b0

0801b5a4 <__sfp_lock_release>:
 801b5a4:	4801      	ldr	r0, [pc, #4]	; (801b5ac <__sfp_lock_release+0x8>)
 801b5a6:	f000 b8e6 	b.w	801b776 <__retarget_lock_release_recursive>
 801b5aa:	bf00      	nop
 801b5ac:	2000a8b0 	.word	0x2000a8b0

0801b5b0 <__sinit_lock_acquire>:
 801b5b0:	4801      	ldr	r0, [pc, #4]	; (801b5b8 <__sinit_lock_acquire+0x8>)
 801b5b2:	f000 b8de 	b.w	801b772 <__retarget_lock_acquire_recursive>
 801b5b6:	bf00      	nop
 801b5b8:	2000a8ab 	.word	0x2000a8ab

0801b5bc <__sinit_lock_release>:
 801b5bc:	4801      	ldr	r0, [pc, #4]	; (801b5c4 <__sinit_lock_release+0x8>)
 801b5be:	f000 b8da 	b.w	801b776 <__retarget_lock_release_recursive>
 801b5c2:	bf00      	nop
 801b5c4:	2000a8ab 	.word	0x2000a8ab

0801b5c8 <__sinit>:
 801b5c8:	b510      	push	{r4, lr}
 801b5ca:	4604      	mov	r4, r0
 801b5cc:	f7ff fff0 	bl	801b5b0 <__sinit_lock_acquire>
 801b5d0:	69a3      	ldr	r3, [r4, #24]
 801b5d2:	b11b      	cbz	r3, 801b5dc <__sinit+0x14>
 801b5d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b5d8:	f7ff bff0 	b.w	801b5bc <__sinit_lock_release>
 801b5dc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801b5e0:	6523      	str	r3, [r4, #80]	; 0x50
 801b5e2:	4b13      	ldr	r3, [pc, #76]	; (801b630 <__sinit+0x68>)
 801b5e4:	4a13      	ldr	r2, [pc, #76]	; (801b634 <__sinit+0x6c>)
 801b5e6:	681b      	ldr	r3, [r3, #0]
 801b5e8:	62a2      	str	r2, [r4, #40]	; 0x28
 801b5ea:	42a3      	cmp	r3, r4
 801b5ec:	bf04      	itt	eq
 801b5ee:	2301      	moveq	r3, #1
 801b5f0:	61a3      	streq	r3, [r4, #24]
 801b5f2:	4620      	mov	r0, r4
 801b5f4:	f000 f820 	bl	801b638 <__sfp>
 801b5f8:	6060      	str	r0, [r4, #4]
 801b5fa:	4620      	mov	r0, r4
 801b5fc:	f000 f81c 	bl	801b638 <__sfp>
 801b600:	60a0      	str	r0, [r4, #8]
 801b602:	4620      	mov	r0, r4
 801b604:	f000 f818 	bl	801b638 <__sfp>
 801b608:	2200      	movs	r2, #0
 801b60a:	60e0      	str	r0, [r4, #12]
 801b60c:	2104      	movs	r1, #4
 801b60e:	6860      	ldr	r0, [r4, #4]
 801b610:	f7ff ff82 	bl	801b518 <std>
 801b614:	68a0      	ldr	r0, [r4, #8]
 801b616:	2201      	movs	r2, #1
 801b618:	2109      	movs	r1, #9
 801b61a:	f7ff ff7d 	bl	801b518 <std>
 801b61e:	68e0      	ldr	r0, [r4, #12]
 801b620:	2202      	movs	r2, #2
 801b622:	2112      	movs	r1, #18
 801b624:	f7ff ff78 	bl	801b518 <std>
 801b628:	2301      	movs	r3, #1
 801b62a:	61a3      	str	r3, [r4, #24]
 801b62c:	e7d2      	b.n	801b5d4 <__sinit+0xc>
 801b62e:	bf00      	nop
 801b630:	0801fe1c 	.word	0x0801fe1c
 801b634:	0801b561 	.word	0x0801b561

0801b638 <__sfp>:
 801b638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b63a:	4607      	mov	r7, r0
 801b63c:	f7ff ffac 	bl	801b598 <__sfp_lock_acquire>
 801b640:	4b1e      	ldr	r3, [pc, #120]	; (801b6bc <__sfp+0x84>)
 801b642:	681e      	ldr	r6, [r3, #0]
 801b644:	69b3      	ldr	r3, [r6, #24]
 801b646:	b913      	cbnz	r3, 801b64e <__sfp+0x16>
 801b648:	4630      	mov	r0, r6
 801b64a:	f7ff ffbd 	bl	801b5c8 <__sinit>
 801b64e:	3648      	adds	r6, #72	; 0x48
 801b650:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801b654:	3b01      	subs	r3, #1
 801b656:	d503      	bpl.n	801b660 <__sfp+0x28>
 801b658:	6833      	ldr	r3, [r6, #0]
 801b65a:	b30b      	cbz	r3, 801b6a0 <__sfp+0x68>
 801b65c:	6836      	ldr	r6, [r6, #0]
 801b65e:	e7f7      	b.n	801b650 <__sfp+0x18>
 801b660:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801b664:	b9d5      	cbnz	r5, 801b69c <__sfp+0x64>
 801b666:	4b16      	ldr	r3, [pc, #88]	; (801b6c0 <__sfp+0x88>)
 801b668:	60e3      	str	r3, [r4, #12]
 801b66a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801b66e:	6665      	str	r5, [r4, #100]	; 0x64
 801b670:	f000 f87e 	bl	801b770 <__retarget_lock_init_recursive>
 801b674:	f7ff ff96 	bl	801b5a4 <__sfp_lock_release>
 801b678:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801b67c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801b680:	6025      	str	r5, [r4, #0]
 801b682:	61a5      	str	r5, [r4, #24]
 801b684:	2208      	movs	r2, #8
 801b686:	4629      	mov	r1, r5
 801b688:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801b68c:	f000 f892 	bl	801b7b4 <memset>
 801b690:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801b694:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801b698:	4620      	mov	r0, r4
 801b69a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b69c:	3468      	adds	r4, #104	; 0x68
 801b69e:	e7d9      	b.n	801b654 <__sfp+0x1c>
 801b6a0:	2104      	movs	r1, #4
 801b6a2:	4638      	mov	r0, r7
 801b6a4:	f7ff ff62 	bl	801b56c <__sfmoreglue>
 801b6a8:	4604      	mov	r4, r0
 801b6aa:	6030      	str	r0, [r6, #0]
 801b6ac:	2800      	cmp	r0, #0
 801b6ae:	d1d5      	bne.n	801b65c <__sfp+0x24>
 801b6b0:	f7ff ff78 	bl	801b5a4 <__sfp_lock_release>
 801b6b4:	230c      	movs	r3, #12
 801b6b6:	603b      	str	r3, [r7, #0]
 801b6b8:	e7ee      	b.n	801b698 <__sfp+0x60>
 801b6ba:	bf00      	nop
 801b6bc:	0801fe1c 	.word	0x0801fe1c
 801b6c0:	ffff0001 	.word	0xffff0001

0801b6c4 <fiprintf>:
 801b6c4:	b40e      	push	{r1, r2, r3}
 801b6c6:	b503      	push	{r0, r1, lr}
 801b6c8:	4601      	mov	r1, r0
 801b6ca:	ab03      	add	r3, sp, #12
 801b6cc:	4805      	ldr	r0, [pc, #20]	; (801b6e4 <fiprintf+0x20>)
 801b6ce:	f853 2b04 	ldr.w	r2, [r3], #4
 801b6d2:	6800      	ldr	r0, [r0, #0]
 801b6d4:	9301      	str	r3, [sp, #4]
 801b6d6:	f000 f949 	bl	801b96c <_vfiprintf_r>
 801b6da:	b002      	add	sp, #8
 801b6dc:	f85d eb04 	ldr.w	lr, [sp], #4
 801b6e0:	b003      	add	sp, #12
 801b6e2:	4770      	bx	lr
 801b6e4:	200000d8 	.word	0x200000d8

0801b6e8 <_fwalk_reent>:
 801b6e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b6ec:	4606      	mov	r6, r0
 801b6ee:	4688      	mov	r8, r1
 801b6f0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801b6f4:	2700      	movs	r7, #0
 801b6f6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801b6fa:	f1b9 0901 	subs.w	r9, r9, #1
 801b6fe:	d505      	bpl.n	801b70c <_fwalk_reent+0x24>
 801b700:	6824      	ldr	r4, [r4, #0]
 801b702:	2c00      	cmp	r4, #0
 801b704:	d1f7      	bne.n	801b6f6 <_fwalk_reent+0xe>
 801b706:	4638      	mov	r0, r7
 801b708:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b70c:	89ab      	ldrh	r3, [r5, #12]
 801b70e:	2b01      	cmp	r3, #1
 801b710:	d907      	bls.n	801b722 <_fwalk_reent+0x3a>
 801b712:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801b716:	3301      	adds	r3, #1
 801b718:	d003      	beq.n	801b722 <_fwalk_reent+0x3a>
 801b71a:	4629      	mov	r1, r5
 801b71c:	4630      	mov	r0, r6
 801b71e:	47c0      	blx	r8
 801b720:	4307      	orrs	r7, r0
 801b722:	3568      	adds	r5, #104	; 0x68
 801b724:	e7e9      	b.n	801b6fa <_fwalk_reent+0x12>
	...

0801b728 <__libc_init_array>:
 801b728:	b570      	push	{r4, r5, r6, lr}
 801b72a:	4d0d      	ldr	r5, [pc, #52]	; (801b760 <__libc_init_array+0x38>)
 801b72c:	4c0d      	ldr	r4, [pc, #52]	; (801b764 <__libc_init_array+0x3c>)
 801b72e:	1b64      	subs	r4, r4, r5
 801b730:	10a4      	asrs	r4, r4, #2
 801b732:	2600      	movs	r6, #0
 801b734:	42a6      	cmp	r6, r4
 801b736:	d109      	bne.n	801b74c <__libc_init_array+0x24>
 801b738:	4d0b      	ldr	r5, [pc, #44]	; (801b768 <__libc_init_array+0x40>)
 801b73a:	4c0c      	ldr	r4, [pc, #48]	; (801b76c <__libc_init_array+0x44>)
 801b73c:	f000 ff98 	bl	801c670 <_init>
 801b740:	1b64      	subs	r4, r4, r5
 801b742:	10a4      	asrs	r4, r4, #2
 801b744:	2600      	movs	r6, #0
 801b746:	42a6      	cmp	r6, r4
 801b748:	d105      	bne.n	801b756 <__libc_init_array+0x2e>
 801b74a:	bd70      	pop	{r4, r5, r6, pc}
 801b74c:	f855 3b04 	ldr.w	r3, [r5], #4
 801b750:	4798      	blx	r3
 801b752:	3601      	adds	r6, #1
 801b754:	e7ee      	b.n	801b734 <__libc_init_array+0xc>
 801b756:	f855 3b04 	ldr.w	r3, [r5], #4
 801b75a:	4798      	blx	r3
 801b75c:	3601      	adds	r6, #1
 801b75e:	e7f2      	b.n	801b746 <__libc_init_array+0x1e>
 801b760:	0801fe74 	.word	0x0801fe74
 801b764:	0801fe74 	.word	0x0801fe74
 801b768:	0801fe74 	.word	0x0801fe74
 801b76c:	0801fe8c 	.word	0x0801fe8c

0801b770 <__retarget_lock_init_recursive>:
 801b770:	4770      	bx	lr

0801b772 <__retarget_lock_acquire_recursive>:
 801b772:	4770      	bx	lr

0801b774 <__retarget_lock_release>:
 801b774:	4770      	bx	lr

0801b776 <__retarget_lock_release_recursive>:
 801b776:	4770      	bx	lr

0801b778 <malloc>:
 801b778:	4b02      	ldr	r3, [pc, #8]	; (801b784 <malloc+0xc>)
 801b77a:	4601      	mov	r1, r0
 801b77c:	6818      	ldr	r0, [r3, #0]
 801b77e:	f000 b871 	b.w	801b864 <_malloc_r>
 801b782:	bf00      	nop
 801b784:	200000d8 	.word	0x200000d8

0801b788 <free>:
 801b788:	4b02      	ldr	r3, [pc, #8]	; (801b794 <free+0xc>)
 801b78a:	4601      	mov	r1, r0
 801b78c:	6818      	ldr	r0, [r3, #0]
 801b78e:	f000 b819 	b.w	801b7c4 <_free_r>
 801b792:	bf00      	nop
 801b794:	200000d8 	.word	0x200000d8

0801b798 <memcpy>:
 801b798:	440a      	add	r2, r1
 801b79a:	4291      	cmp	r1, r2
 801b79c:	f100 33ff 	add.w	r3, r0, #4294967295
 801b7a0:	d100      	bne.n	801b7a4 <memcpy+0xc>
 801b7a2:	4770      	bx	lr
 801b7a4:	b510      	push	{r4, lr}
 801b7a6:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b7aa:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b7ae:	4291      	cmp	r1, r2
 801b7b0:	d1f9      	bne.n	801b7a6 <memcpy+0xe>
 801b7b2:	bd10      	pop	{r4, pc}

0801b7b4 <memset>:
 801b7b4:	4402      	add	r2, r0
 801b7b6:	4603      	mov	r3, r0
 801b7b8:	4293      	cmp	r3, r2
 801b7ba:	d100      	bne.n	801b7be <memset+0xa>
 801b7bc:	4770      	bx	lr
 801b7be:	f803 1b01 	strb.w	r1, [r3], #1
 801b7c2:	e7f9      	b.n	801b7b8 <memset+0x4>

0801b7c4 <_free_r>:
 801b7c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801b7c6:	2900      	cmp	r1, #0
 801b7c8:	d048      	beq.n	801b85c <_free_r+0x98>
 801b7ca:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b7ce:	9001      	str	r0, [sp, #4]
 801b7d0:	2b00      	cmp	r3, #0
 801b7d2:	f1a1 0404 	sub.w	r4, r1, #4
 801b7d6:	bfb8      	it	lt
 801b7d8:	18e4      	addlt	r4, r4, r3
 801b7da:	f000 ff09 	bl	801c5f0 <__malloc_lock>
 801b7de:	4a20      	ldr	r2, [pc, #128]	; (801b860 <_free_r+0x9c>)
 801b7e0:	9801      	ldr	r0, [sp, #4]
 801b7e2:	6813      	ldr	r3, [r2, #0]
 801b7e4:	4615      	mov	r5, r2
 801b7e6:	b933      	cbnz	r3, 801b7f6 <_free_r+0x32>
 801b7e8:	6063      	str	r3, [r4, #4]
 801b7ea:	6014      	str	r4, [r2, #0]
 801b7ec:	b003      	add	sp, #12
 801b7ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801b7f2:	f000 bf03 	b.w	801c5fc <__malloc_unlock>
 801b7f6:	42a3      	cmp	r3, r4
 801b7f8:	d90b      	bls.n	801b812 <_free_r+0x4e>
 801b7fa:	6821      	ldr	r1, [r4, #0]
 801b7fc:	1862      	adds	r2, r4, r1
 801b7fe:	4293      	cmp	r3, r2
 801b800:	bf04      	itt	eq
 801b802:	681a      	ldreq	r2, [r3, #0]
 801b804:	685b      	ldreq	r3, [r3, #4]
 801b806:	6063      	str	r3, [r4, #4]
 801b808:	bf04      	itt	eq
 801b80a:	1852      	addeq	r2, r2, r1
 801b80c:	6022      	streq	r2, [r4, #0]
 801b80e:	602c      	str	r4, [r5, #0]
 801b810:	e7ec      	b.n	801b7ec <_free_r+0x28>
 801b812:	461a      	mov	r2, r3
 801b814:	685b      	ldr	r3, [r3, #4]
 801b816:	b10b      	cbz	r3, 801b81c <_free_r+0x58>
 801b818:	42a3      	cmp	r3, r4
 801b81a:	d9fa      	bls.n	801b812 <_free_r+0x4e>
 801b81c:	6811      	ldr	r1, [r2, #0]
 801b81e:	1855      	adds	r5, r2, r1
 801b820:	42a5      	cmp	r5, r4
 801b822:	d10b      	bne.n	801b83c <_free_r+0x78>
 801b824:	6824      	ldr	r4, [r4, #0]
 801b826:	4421      	add	r1, r4
 801b828:	1854      	adds	r4, r2, r1
 801b82a:	42a3      	cmp	r3, r4
 801b82c:	6011      	str	r1, [r2, #0]
 801b82e:	d1dd      	bne.n	801b7ec <_free_r+0x28>
 801b830:	681c      	ldr	r4, [r3, #0]
 801b832:	685b      	ldr	r3, [r3, #4]
 801b834:	6053      	str	r3, [r2, #4]
 801b836:	4421      	add	r1, r4
 801b838:	6011      	str	r1, [r2, #0]
 801b83a:	e7d7      	b.n	801b7ec <_free_r+0x28>
 801b83c:	d902      	bls.n	801b844 <_free_r+0x80>
 801b83e:	230c      	movs	r3, #12
 801b840:	6003      	str	r3, [r0, #0]
 801b842:	e7d3      	b.n	801b7ec <_free_r+0x28>
 801b844:	6825      	ldr	r5, [r4, #0]
 801b846:	1961      	adds	r1, r4, r5
 801b848:	428b      	cmp	r3, r1
 801b84a:	bf04      	itt	eq
 801b84c:	6819      	ldreq	r1, [r3, #0]
 801b84e:	685b      	ldreq	r3, [r3, #4]
 801b850:	6063      	str	r3, [r4, #4]
 801b852:	bf04      	itt	eq
 801b854:	1949      	addeq	r1, r1, r5
 801b856:	6021      	streq	r1, [r4, #0]
 801b858:	6054      	str	r4, [r2, #4]
 801b85a:	e7c7      	b.n	801b7ec <_free_r+0x28>
 801b85c:	b003      	add	sp, #12
 801b85e:	bd30      	pop	{r4, r5, pc}
 801b860:	2000a420 	.word	0x2000a420

0801b864 <_malloc_r>:
 801b864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b866:	1ccd      	adds	r5, r1, #3
 801b868:	f025 0503 	bic.w	r5, r5, #3
 801b86c:	3508      	adds	r5, #8
 801b86e:	2d0c      	cmp	r5, #12
 801b870:	bf38      	it	cc
 801b872:	250c      	movcc	r5, #12
 801b874:	2d00      	cmp	r5, #0
 801b876:	4606      	mov	r6, r0
 801b878:	db01      	blt.n	801b87e <_malloc_r+0x1a>
 801b87a:	42a9      	cmp	r1, r5
 801b87c:	d903      	bls.n	801b886 <_malloc_r+0x22>
 801b87e:	230c      	movs	r3, #12
 801b880:	6033      	str	r3, [r6, #0]
 801b882:	2000      	movs	r0, #0
 801b884:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b886:	f000 feb3 	bl	801c5f0 <__malloc_lock>
 801b88a:	4921      	ldr	r1, [pc, #132]	; (801b910 <_malloc_r+0xac>)
 801b88c:	680a      	ldr	r2, [r1, #0]
 801b88e:	4614      	mov	r4, r2
 801b890:	b99c      	cbnz	r4, 801b8ba <_malloc_r+0x56>
 801b892:	4f20      	ldr	r7, [pc, #128]	; (801b914 <_malloc_r+0xb0>)
 801b894:	683b      	ldr	r3, [r7, #0]
 801b896:	b923      	cbnz	r3, 801b8a2 <_malloc_r+0x3e>
 801b898:	4621      	mov	r1, r4
 801b89a:	4630      	mov	r0, r6
 801b89c:	f000 fb94 	bl	801bfc8 <_sbrk_r>
 801b8a0:	6038      	str	r0, [r7, #0]
 801b8a2:	4629      	mov	r1, r5
 801b8a4:	4630      	mov	r0, r6
 801b8a6:	f000 fb8f 	bl	801bfc8 <_sbrk_r>
 801b8aa:	1c43      	adds	r3, r0, #1
 801b8ac:	d123      	bne.n	801b8f6 <_malloc_r+0x92>
 801b8ae:	230c      	movs	r3, #12
 801b8b0:	6033      	str	r3, [r6, #0]
 801b8b2:	4630      	mov	r0, r6
 801b8b4:	f000 fea2 	bl	801c5fc <__malloc_unlock>
 801b8b8:	e7e3      	b.n	801b882 <_malloc_r+0x1e>
 801b8ba:	6823      	ldr	r3, [r4, #0]
 801b8bc:	1b5b      	subs	r3, r3, r5
 801b8be:	d417      	bmi.n	801b8f0 <_malloc_r+0x8c>
 801b8c0:	2b0b      	cmp	r3, #11
 801b8c2:	d903      	bls.n	801b8cc <_malloc_r+0x68>
 801b8c4:	6023      	str	r3, [r4, #0]
 801b8c6:	441c      	add	r4, r3
 801b8c8:	6025      	str	r5, [r4, #0]
 801b8ca:	e004      	b.n	801b8d6 <_malloc_r+0x72>
 801b8cc:	6863      	ldr	r3, [r4, #4]
 801b8ce:	42a2      	cmp	r2, r4
 801b8d0:	bf0c      	ite	eq
 801b8d2:	600b      	streq	r3, [r1, #0]
 801b8d4:	6053      	strne	r3, [r2, #4]
 801b8d6:	4630      	mov	r0, r6
 801b8d8:	f000 fe90 	bl	801c5fc <__malloc_unlock>
 801b8dc:	f104 000b 	add.w	r0, r4, #11
 801b8e0:	1d23      	adds	r3, r4, #4
 801b8e2:	f020 0007 	bic.w	r0, r0, #7
 801b8e6:	1ac2      	subs	r2, r0, r3
 801b8e8:	d0cc      	beq.n	801b884 <_malloc_r+0x20>
 801b8ea:	1a1b      	subs	r3, r3, r0
 801b8ec:	50a3      	str	r3, [r4, r2]
 801b8ee:	e7c9      	b.n	801b884 <_malloc_r+0x20>
 801b8f0:	4622      	mov	r2, r4
 801b8f2:	6864      	ldr	r4, [r4, #4]
 801b8f4:	e7cc      	b.n	801b890 <_malloc_r+0x2c>
 801b8f6:	1cc4      	adds	r4, r0, #3
 801b8f8:	f024 0403 	bic.w	r4, r4, #3
 801b8fc:	42a0      	cmp	r0, r4
 801b8fe:	d0e3      	beq.n	801b8c8 <_malloc_r+0x64>
 801b900:	1a21      	subs	r1, r4, r0
 801b902:	4630      	mov	r0, r6
 801b904:	f000 fb60 	bl	801bfc8 <_sbrk_r>
 801b908:	3001      	adds	r0, #1
 801b90a:	d1dd      	bne.n	801b8c8 <_malloc_r+0x64>
 801b90c:	e7cf      	b.n	801b8ae <_malloc_r+0x4a>
 801b90e:	bf00      	nop
 801b910:	2000a420 	.word	0x2000a420
 801b914:	2000a424 	.word	0x2000a424

0801b918 <__sfputc_r>:
 801b918:	6893      	ldr	r3, [r2, #8]
 801b91a:	3b01      	subs	r3, #1
 801b91c:	2b00      	cmp	r3, #0
 801b91e:	b410      	push	{r4}
 801b920:	6093      	str	r3, [r2, #8]
 801b922:	da08      	bge.n	801b936 <__sfputc_r+0x1e>
 801b924:	6994      	ldr	r4, [r2, #24]
 801b926:	42a3      	cmp	r3, r4
 801b928:	db01      	blt.n	801b92e <__sfputc_r+0x16>
 801b92a:	290a      	cmp	r1, #10
 801b92c:	d103      	bne.n	801b936 <__sfputc_r+0x1e>
 801b92e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b932:	f000 bbe1 	b.w	801c0f8 <__swbuf_r>
 801b936:	6813      	ldr	r3, [r2, #0]
 801b938:	1c58      	adds	r0, r3, #1
 801b93a:	6010      	str	r0, [r2, #0]
 801b93c:	7019      	strb	r1, [r3, #0]
 801b93e:	4608      	mov	r0, r1
 801b940:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b944:	4770      	bx	lr

0801b946 <__sfputs_r>:
 801b946:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b948:	4606      	mov	r6, r0
 801b94a:	460f      	mov	r7, r1
 801b94c:	4614      	mov	r4, r2
 801b94e:	18d5      	adds	r5, r2, r3
 801b950:	42ac      	cmp	r4, r5
 801b952:	d101      	bne.n	801b958 <__sfputs_r+0x12>
 801b954:	2000      	movs	r0, #0
 801b956:	e007      	b.n	801b968 <__sfputs_r+0x22>
 801b958:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b95c:	463a      	mov	r2, r7
 801b95e:	4630      	mov	r0, r6
 801b960:	f7ff ffda 	bl	801b918 <__sfputc_r>
 801b964:	1c43      	adds	r3, r0, #1
 801b966:	d1f3      	bne.n	801b950 <__sfputs_r+0xa>
 801b968:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801b96c <_vfiprintf_r>:
 801b96c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b970:	460d      	mov	r5, r1
 801b972:	b09d      	sub	sp, #116	; 0x74
 801b974:	4614      	mov	r4, r2
 801b976:	4698      	mov	r8, r3
 801b978:	4606      	mov	r6, r0
 801b97a:	b118      	cbz	r0, 801b984 <_vfiprintf_r+0x18>
 801b97c:	6983      	ldr	r3, [r0, #24]
 801b97e:	b90b      	cbnz	r3, 801b984 <_vfiprintf_r+0x18>
 801b980:	f7ff fe22 	bl	801b5c8 <__sinit>
 801b984:	4b89      	ldr	r3, [pc, #548]	; (801bbac <_vfiprintf_r+0x240>)
 801b986:	429d      	cmp	r5, r3
 801b988:	d11b      	bne.n	801b9c2 <_vfiprintf_r+0x56>
 801b98a:	6875      	ldr	r5, [r6, #4]
 801b98c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b98e:	07d9      	lsls	r1, r3, #31
 801b990:	d405      	bmi.n	801b99e <_vfiprintf_r+0x32>
 801b992:	89ab      	ldrh	r3, [r5, #12]
 801b994:	059a      	lsls	r2, r3, #22
 801b996:	d402      	bmi.n	801b99e <_vfiprintf_r+0x32>
 801b998:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b99a:	f7ff feea 	bl	801b772 <__retarget_lock_acquire_recursive>
 801b99e:	89ab      	ldrh	r3, [r5, #12]
 801b9a0:	071b      	lsls	r3, r3, #28
 801b9a2:	d501      	bpl.n	801b9a8 <_vfiprintf_r+0x3c>
 801b9a4:	692b      	ldr	r3, [r5, #16]
 801b9a6:	b9eb      	cbnz	r3, 801b9e4 <_vfiprintf_r+0x78>
 801b9a8:	4629      	mov	r1, r5
 801b9aa:	4630      	mov	r0, r6
 801b9ac:	f000 fc08 	bl	801c1c0 <__swsetup_r>
 801b9b0:	b1c0      	cbz	r0, 801b9e4 <_vfiprintf_r+0x78>
 801b9b2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b9b4:	07dc      	lsls	r4, r3, #31
 801b9b6:	d50e      	bpl.n	801b9d6 <_vfiprintf_r+0x6a>
 801b9b8:	f04f 30ff 	mov.w	r0, #4294967295
 801b9bc:	b01d      	add	sp, #116	; 0x74
 801b9be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9c2:	4b7b      	ldr	r3, [pc, #492]	; (801bbb0 <_vfiprintf_r+0x244>)
 801b9c4:	429d      	cmp	r5, r3
 801b9c6:	d101      	bne.n	801b9cc <_vfiprintf_r+0x60>
 801b9c8:	68b5      	ldr	r5, [r6, #8]
 801b9ca:	e7df      	b.n	801b98c <_vfiprintf_r+0x20>
 801b9cc:	4b79      	ldr	r3, [pc, #484]	; (801bbb4 <_vfiprintf_r+0x248>)
 801b9ce:	429d      	cmp	r5, r3
 801b9d0:	bf08      	it	eq
 801b9d2:	68f5      	ldreq	r5, [r6, #12]
 801b9d4:	e7da      	b.n	801b98c <_vfiprintf_r+0x20>
 801b9d6:	89ab      	ldrh	r3, [r5, #12]
 801b9d8:	0598      	lsls	r0, r3, #22
 801b9da:	d4ed      	bmi.n	801b9b8 <_vfiprintf_r+0x4c>
 801b9dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b9de:	f7ff feca 	bl	801b776 <__retarget_lock_release_recursive>
 801b9e2:	e7e9      	b.n	801b9b8 <_vfiprintf_r+0x4c>
 801b9e4:	2300      	movs	r3, #0
 801b9e6:	9309      	str	r3, [sp, #36]	; 0x24
 801b9e8:	2320      	movs	r3, #32
 801b9ea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b9ee:	f8cd 800c 	str.w	r8, [sp, #12]
 801b9f2:	2330      	movs	r3, #48	; 0x30
 801b9f4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801bbb8 <_vfiprintf_r+0x24c>
 801b9f8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b9fc:	f04f 0901 	mov.w	r9, #1
 801ba00:	4623      	mov	r3, r4
 801ba02:	469a      	mov	sl, r3
 801ba04:	f813 2b01 	ldrb.w	r2, [r3], #1
 801ba08:	b10a      	cbz	r2, 801ba0e <_vfiprintf_r+0xa2>
 801ba0a:	2a25      	cmp	r2, #37	; 0x25
 801ba0c:	d1f9      	bne.n	801ba02 <_vfiprintf_r+0x96>
 801ba0e:	ebba 0b04 	subs.w	fp, sl, r4
 801ba12:	d00b      	beq.n	801ba2c <_vfiprintf_r+0xc0>
 801ba14:	465b      	mov	r3, fp
 801ba16:	4622      	mov	r2, r4
 801ba18:	4629      	mov	r1, r5
 801ba1a:	4630      	mov	r0, r6
 801ba1c:	f7ff ff93 	bl	801b946 <__sfputs_r>
 801ba20:	3001      	adds	r0, #1
 801ba22:	f000 80aa 	beq.w	801bb7a <_vfiprintf_r+0x20e>
 801ba26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ba28:	445a      	add	r2, fp
 801ba2a:	9209      	str	r2, [sp, #36]	; 0x24
 801ba2c:	f89a 3000 	ldrb.w	r3, [sl]
 801ba30:	2b00      	cmp	r3, #0
 801ba32:	f000 80a2 	beq.w	801bb7a <_vfiprintf_r+0x20e>
 801ba36:	2300      	movs	r3, #0
 801ba38:	f04f 32ff 	mov.w	r2, #4294967295
 801ba3c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ba40:	f10a 0a01 	add.w	sl, sl, #1
 801ba44:	9304      	str	r3, [sp, #16]
 801ba46:	9307      	str	r3, [sp, #28]
 801ba48:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ba4c:	931a      	str	r3, [sp, #104]	; 0x68
 801ba4e:	4654      	mov	r4, sl
 801ba50:	2205      	movs	r2, #5
 801ba52:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ba56:	4858      	ldr	r0, [pc, #352]	; (801bbb8 <_vfiprintf_r+0x24c>)
 801ba58:	f7e4 fbd2 	bl	8000200 <memchr>
 801ba5c:	9a04      	ldr	r2, [sp, #16]
 801ba5e:	b9d8      	cbnz	r0, 801ba98 <_vfiprintf_r+0x12c>
 801ba60:	06d1      	lsls	r1, r2, #27
 801ba62:	bf44      	itt	mi
 801ba64:	2320      	movmi	r3, #32
 801ba66:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ba6a:	0713      	lsls	r3, r2, #28
 801ba6c:	bf44      	itt	mi
 801ba6e:	232b      	movmi	r3, #43	; 0x2b
 801ba70:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ba74:	f89a 3000 	ldrb.w	r3, [sl]
 801ba78:	2b2a      	cmp	r3, #42	; 0x2a
 801ba7a:	d015      	beq.n	801baa8 <_vfiprintf_r+0x13c>
 801ba7c:	9a07      	ldr	r2, [sp, #28]
 801ba7e:	4654      	mov	r4, sl
 801ba80:	2000      	movs	r0, #0
 801ba82:	f04f 0c0a 	mov.w	ip, #10
 801ba86:	4621      	mov	r1, r4
 801ba88:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ba8c:	3b30      	subs	r3, #48	; 0x30
 801ba8e:	2b09      	cmp	r3, #9
 801ba90:	d94e      	bls.n	801bb30 <_vfiprintf_r+0x1c4>
 801ba92:	b1b0      	cbz	r0, 801bac2 <_vfiprintf_r+0x156>
 801ba94:	9207      	str	r2, [sp, #28]
 801ba96:	e014      	b.n	801bac2 <_vfiprintf_r+0x156>
 801ba98:	eba0 0308 	sub.w	r3, r0, r8
 801ba9c:	fa09 f303 	lsl.w	r3, r9, r3
 801baa0:	4313      	orrs	r3, r2
 801baa2:	9304      	str	r3, [sp, #16]
 801baa4:	46a2      	mov	sl, r4
 801baa6:	e7d2      	b.n	801ba4e <_vfiprintf_r+0xe2>
 801baa8:	9b03      	ldr	r3, [sp, #12]
 801baaa:	1d19      	adds	r1, r3, #4
 801baac:	681b      	ldr	r3, [r3, #0]
 801baae:	9103      	str	r1, [sp, #12]
 801bab0:	2b00      	cmp	r3, #0
 801bab2:	bfbb      	ittet	lt
 801bab4:	425b      	neglt	r3, r3
 801bab6:	f042 0202 	orrlt.w	r2, r2, #2
 801baba:	9307      	strge	r3, [sp, #28]
 801babc:	9307      	strlt	r3, [sp, #28]
 801babe:	bfb8      	it	lt
 801bac0:	9204      	strlt	r2, [sp, #16]
 801bac2:	7823      	ldrb	r3, [r4, #0]
 801bac4:	2b2e      	cmp	r3, #46	; 0x2e
 801bac6:	d10c      	bne.n	801bae2 <_vfiprintf_r+0x176>
 801bac8:	7863      	ldrb	r3, [r4, #1]
 801baca:	2b2a      	cmp	r3, #42	; 0x2a
 801bacc:	d135      	bne.n	801bb3a <_vfiprintf_r+0x1ce>
 801bace:	9b03      	ldr	r3, [sp, #12]
 801bad0:	1d1a      	adds	r2, r3, #4
 801bad2:	681b      	ldr	r3, [r3, #0]
 801bad4:	9203      	str	r2, [sp, #12]
 801bad6:	2b00      	cmp	r3, #0
 801bad8:	bfb8      	it	lt
 801bada:	f04f 33ff 	movlt.w	r3, #4294967295
 801bade:	3402      	adds	r4, #2
 801bae0:	9305      	str	r3, [sp, #20]
 801bae2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801bbc8 <_vfiprintf_r+0x25c>
 801bae6:	7821      	ldrb	r1, [r4, #0]
 801bae8:	2203      	movs	r2, #3
 801baea:	4650      	mov	r0, sl
 801baec:	f7e4 fb88 	bl	8000200 <memchr>
 801baf0:	b140      	cbz	r0, 801bb04 <_vfiprintf_r+0x198>
 801baf2:	2340      	movs	r3, #64	; 0x40
 801baf4:	eba0 000a 	sub.w	r0, r0, sl
 801baf8:	fa03 f000 	lsl.w	r0, r3, r0
 801bafc:	9b04      	ldr	r3, [sp, #16]
 801bafe:	4303      	orrs	r3, r0
 801bb00:	3401      	adds	r4, #1
 801bb02:	9304      	str	r3, [sp, #16]
 801bb04:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bb08:	482c      	ldr	r0, [pc, #176]	; (801bbbc <_vfiprintf_r+0x250>)
 801bb0a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801bb0e:	2206      	movs	r2, #6
 801bb10:	f7e4 fb76 	bl	8000200 <memchr>
 801bb14:	2800      	cmp	r0, #0
 801bb16:	d03f      	beq.n	801bb98 <_vfiprintf_r+0x22c>
 801bb18:	4b29      	ldr	r3, [pc, #164]	; (801bbc0 <_vfiprintf_r+0x254>)
 801bb1a:	bb1b      	cbnz	r3, 801bb64 <_vfiprintf_r+0x1f8>
 801bb1c:	9b03      	ldr	r3, [sp, #12]
 801bb1e:	3307      	adds	r3, #7
 801bb20:	f023 0307 	bic.w	r3, r3, #7
 801bb24:	3308      	adds	r3, #8
 801bb26:	9303      	str	r3, [sp, #12]
 801bb28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb2a:	443b      	add	r3, r7
 801bb2c:	9309      	str	r3, [sp, #36]	; 0x24
 801bb2e:	e767      	b.n	801ba00 <_vfiprintf_r+0x94>
 801bb30:	fb0c 3202 	mla	r2, ip, r2, r3
 801bb34:	460c      	mov	r4, r1
 801bb36:	2001      	movs	r0, #1
 801bb38:	e7a5      	b.n	801ba86 <_vfiprintf_r+0x11a>
 801bb3a:	2300      	movs	r3, #0
 801bb3c:	3401      	adds	r4, #1
 801bb3e:	9305      	str	r3, [sp, #20]
 801bb40:	4619      	mov	r1, r3
 801bb42:	f04f 0c0a 	mov.w	ip, #10
 801bb46:	4620      	mov	r0, r4
 801bb48:	f810 2b01 	ldrb.w	r2, [r0], #1
 801bb4c:	3a30      	subs	r2, #48	; 0x30
 801bb4e:	2a09      	cmp	r2, #9
 801bb50:	d903      	bls.n	801bb5a <_vfiprintf_r+0x1ee>
 801bb52:	2b00      	cmp	r3, #0
 801bb54:	d0c5      	beq.n	801bae2 <_vfiprintf_r+0x176>
 801bb56:	9105      	str	r1, [sp, #20]
 801bb58:	e7c3      	b.n	801bae2 <_vfiprintf_r+0x176>
 801bb5a:	fb0c 2101 	mla	r1, ip, r1, r2
 801bb5e:	4604      	mov	r4, r0
 801bb60:	2301      	movs	r3, #1
 801bb62:	e7f0      	b.n	801bb46 <_vfiprintf_r+0x1da>
 801bb64:	ab03      	add	r3, sp, #12
 801bb66:	9300      	str	r3, [sp, #0]
 801bb68:	462a      	mov	r2, r5
 801bb6a:	4b16      	ldr	r3, [pc, #88]	; (801bbc4 <_vfiprintf_r+0x258>)
 801bb6c:	a904      	add	r1, sp, #16
 801bb6e:	4630      	mov	r0, r6
 801bb70:	f3af 8000 	nop.w
 801bb74:	4607      	mov	r7, r0
 801bb76:	1c78      	adds	r0, r7, #1
 801bb78:	d1d6      	bne.n	801bb28 <_vfiprintf_r+0x1bc>
 801bb7a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bb7c:	07d9      	lsls	r1, r3, #31
 801bb7e:	d405      	bmi.n	801bb8c <_vfiprintf_r+0x220>
 801bb80:	89ab      	ldrh	r3, [r5, #12]
 801bb82:	059a      	lsls	r2, r3, #22
 801bb84:	d402      	bmi.n	801bb8c <_vfiprintf_r+0x220>
 801bb86:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bb88:	f7ff fdf5 	bl	801b776 <__retarget_lock_release_recursive>
 801bb8c:	89ab      	ldrh	r3, [r5, #12]
 801bb8e:	065b      	lsls	r3, r3, #25
 801bb90:	f53f af12 	bmi.w	801b9b8 <_vfiprintf_r+0x4c>
 801bb94:	9809      	ldr	r0, [sp, #36]	; 0x24
 801bb96:	e711      	b.n	801b9bc <_vfiprintf_r+0x50>
 801bb98:	ab03      	add	r3, sp, #12
 801bb9a:	9300      	str	r3, [sp, #0]
 801bb9c:	462a      	mov	r2, r5
 801bb9e:	4b09      	ldr	r3, [pc, #36]	; (801bbc4 <_vfiprintf_r+0x258>)
 801bba0:	a904      	add	r1, sp, #16
 801bba2:	4630      	mov	r0, r6
 801bba4:	f000 f880 	bl	801bca8 <_printf_i>
 801bba8:	e7e4      	b.n	801bb74 <_vfiprintf_r+0x208>
 801bbaa:	bf00      	nop
 801bbac:	0801fddc 	.word	0x0801fddc
 801bbb0:	0801fdfc 	.word	0x0801fdfc
 801bbb4:	0801fdbc 	.word	0x0801fdbc
 801bbb8:	0801fe20 	.word	0x0801fe20
 801bbbc:	0801fe2a 	.word	0x0801fe2a
 801bbc0:	00000000 	.word	0x00000000
 801bbc4:	0801b947 	.word	0x0801b947
 801bbc8:	0801fe26 	.word	0x0801fe26

0801bbcc <_printf_common>:
 801bbcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bbd0:	4616      	mov	r6, r2
 801bbd2:	4699      	mov	r9, r3
 801bbd4:	688a      	ldr	r2, [r1, #8]
 801bbd6:	690b      	ldr	r3, [r1, #16]
 801bbd8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801bbdc:	4293      	cmp	r3, r2
 801bbde:	bfb8      	it	lt
 801bbe0:	4613      	movlt	r3, r2
 801bbe2:	6033      	str	r3, [r6, #0]
 801bbe4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801bbe8:	4607      	mov	r7, r0
 801bbea:	460c      	mov	r4, r1
 801bbec:	b10a      	cbz	r2, 801bbf2 <_printf_common+0x26>
 801bbee:	3301      	adds	r3, #1
 801bbf0:	6033      	str	r3, [r6, #0]
 801bbf2:	6823      	ldr	r3, [r4, #0]
 801bbf4:	0699      	lsls	r1, r3, #26
 801bbf6:	bf42      	ittt	mi
 801bbf8:	6833      	ldrmi	r3, [r6, #0]
 801bbfa:	3302      	addmi	r3, #2
 801bbfc:	6033      	strmi	r3, [r6, #0]
 801bbfe:	6825      	ldr	r5, [r4, #0]
 801bc00:	f015 0506 	ands.w	r5, r5, #6
 801bc04:	d106      	bne.n	801bc14 <_printf_common+0x48>
 801bc06:	f104 0a19 	add.w	sl, r4, #25
 801bc0a:	68e3      	ldr	r3, [r4, #12]
 801bc0c:	6832      	ldr	r2, [r6, #0]
 801bc0e:	1a9b      	subs	r3, r3, r2
 801bc10:	42ab      	cmp	r3, r5
 801bc12:	dc26      	bgt.n	801bc62 <_printf_common+0x96>
 801bc14:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801bc18:	1e13      	subs	r3, r2, #0
 801bc1a:	6822      	ldr	r2, [r4, #0]
 801bc1c:	bf18      	it	ne
 801bc1e:	2301      	movne	r3, #1
 801bc20:	0692      	lsls	r2, r2, #26
 801bc22:	d42b      	bmi.n	801bc7c <_printf_common+0xb0>
 801bc24:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801bc28:	4649      	mov	r1, r9
 801bc2a:	4638      	mov	r0, r7
 801bc2c:	47c0      	blx	r8
 801bc2e:	3001      	adds	r0, #1
 801bc30:	d01e      	beq.n	801bc70 <_printf_common+0xa4>
 801bc32:	6823      	ldr	r3, [r4, #0]
 801bc34:	68e5      	ldr	r5, [r4, #12]
 801bc36:	6832      	ldr	r2, [r6, #0]
 801bc38:	f003 0306 	and.w	r3, r3, #6
 801bc3c:	2b04      	cmp	r3, #4
 801bc3e:	bf08      	it	eq
 801bc40:	1aad      	subeq	r5, r5, r2
 801bc42:	68a3      	ldr	r3, [r4, #8]
 801bc44:	6922      	ldr	r2, [r4, #16]
 801bc46:	bf0c      	ite	eq
 801bc48:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801bc4c:	2500      	movne	r5, #0
 801bc4e:	4293      	cmp	r3, r2
 801bc50:	bfc4      	itt	gt
 801bc52:	1a9b      	subgt	r3, r3, r2
 801bc54:	18ed      	addgt	r5, r5, r3
 801bc56:	2600      	movs	r6, #0
 801bc58:	341a      	adds	r4, #26
 801bc5a:	42b5      	cmp	r5, r6
 801bc5c:	d11a      	bne.n	801bc94 <_printf_common+0xc8>
 801bc5e:	2000      	movs	r0, #0
 801bc60:	e008      	b.n	801bc74 <_printf_common+0xa8>
 801bc62:	2301      	movs	r3, #1
 801bc64:	4652      	mov	r2, sl
 801bc66:	4649      	mov	r1, r9
 801bc68:	4638      	mov	r0, r7
 801bc6a:	47c0      	blx	r8
 801bc6c:	3001      	adds	r0, #1
 801bc6e:	d103      	bne.n	801bc78 <_printf_common+0xac>
 801bc70:	f04f 30ff 	mov.w	r0, #4294967295
 801bc74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bc78:	3501      	adds	r5, #1
 801bc7a:	e7c6      	b.n	801bc0a <_printf_common+0x3e>
 801bc7c:	18e1      	adds	r1, r4, r3
 801bc7e:	1c5a      	adds	r2, r3, #1
 801bc80:	2030      	movs	r0, #48	; 0x30
 801bc82:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801bc86:	4422      	add	r2, r4
 801bc88:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801bc8c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801bc90:	3302      	adds	r3, #2
 801bc92:	e7c7      	b.n	801bc24 <_printf_common+0x58>
 801bc94:	2301      	movs	r3, #1
 801bc96:	4622      	mov	r2, r4
 801bc98:	4649      	mov	r1, r9
 801bc9a:	4638      	mov	r0, r7
 801bc9c:	47c0      	blx	r8
 801bc9e:	3001      	adds	r0, #1
 801bca0:	d0e6      	beq.n	801bc70 <_printf_common+0xa4>
 801bca2:	3601      	adds	r6, #1
 801bca4:	e7d9      	b.n	801bc5a <_printf_common+0x8e>
	...

0801bca8 <_printf_i>:
 801bca8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bcac:	460c      	mov	r4, r1
 801bcae:	4691      	mov	r9, r2
 801bcb0:	7e27      	ldrb	r7, [r4, #24]
 801bcb2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bcb4:	2f78      	cmp	r7, #120	; 0x78
 801bcb6:	4680      	mov	r8, r0
 801bcb8:	469a      	mov	sl, r3
 801bcba:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801bcbe:	d807      	bhi.n	801bcd0 <_printf_i+0x28>
 801bcc0:	2f62      	cmp	r7, #98	; 0x62
 801bcc2:	d80a      	bhi.n	801bcda <_printf_i+0x32>
 801bcc4:	2f00      	cmp	r7, #0
 801bcc6:	f000 80d8 	beq.w	801be7a <_printf_i+0x1d2>
 801bcca:	2f58      	cmp	r7, #88	; 0x58
 801bccc:	f000 80a3 	beq.w	801be16 <_printf_i+0x16e>
 801bcd0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801bcd4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801bcd8:	e03a      	b.n	801bd50 <_printf_i+0xa8>
 801bcda:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801bcde:	2b15      	cmp	r3, #21
 801bce0:	d8f6      	bhi.n	801bcd0 <_printf_i+0x28>
 801bce2:	a001      	add	r0, pc, #4	; (adr r0, 801bce8 <_printf_i+0x40>)
 801bce4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 801bce8:	0801bd41 	.word	0x0801bd41
 801bcec:	0801bd55 	.word	0x0801bd55
 801bcf0:	0801bcd1 	.word	0x0801bcd1
 801bcf4:	0801bcd1 	.word	0x0801bcd1
 801bcf8:	0801bcd1 	.word	0x0801bcd1
 801bcfc:	0801bcd1 	.word	0x0801bcd1
 801bd00:	0801bd55 	.word	0x0801bd55
 801bd04:	0801bcd1 	.word	0x0801bcd1
 801bd08:	0801bcd1 	.word	0x0801bcd1
 801bd0c:	0801bcd1 	.word	0x0801bcd1
 801bd10:	0801bcd1 	.word	0x0801bcd1
 801bd14:	0801be61 	.word	0x0801be61
 801bd18:	0801bd85 	.word	0x0801bd85
 801bd1c:	0801be43 	.word	0x0801be43
 801bd20:	0801bcd1 	.word	0x0801bcd1
 801bd24:	0801bcd1 	.word	0x0801bcd1
 801bd28:	0801be83 	.word	0x0801be83
 801bd2c:	0801bcd1 	.word	0x0801bcd1
 801bd30:	0801bd85 	.word	0x0801bd85
 801bd34:	0801bcd1 	.word	0x0801bcd1
 801bd38:	0801bcd1 	.word	0x0801bcd1
 801bd3c:	0801be4b 	.word	0x0801be4b
 801bd40:	680b      	ldr	r3, [r1, #0]
 801bd42:	1d1a      	adds	r2, r3, #4
 801bd44:	681b      	ldr	r3, [r3, #0]
 801bd46:	600a      	str	r2, [r1, #0]
 801bd48:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801bd4c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801bd50:	2301      	movs	r3, #1
 801bd52:	e0a3      	b.n	801be9c <_printf_i+0x1f4>
 801bd54:	6825      	ldr	r5, [r4, #0]
 801bd56:	6808      	ldr	r0, [r1, #0]
 801bd58:	062e      	lsls	r6, r5, #24
 801bd5a:	f100 0304 	add.w	r3, r0, #4
 801bd5e:	d50a      	bpl.n	801bd76 <_printf_i+0xce>
 801bd60:	6805      	ldr	r5, [r0, #0]
 801bd62:	600b      	str	r3, [r1, #0]
 801bd64:	2d00      	cmp	r5, #0
 801bd66:	da03      	bge.n	801bd70 <_printf_i+0xc8>
 801bd68:	232d      	movs	r3, #45	; 0x2d
 801bd6a:	426d      	negs	r5, r5
 801bd6c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801bd70:	485e      	ldr	r0, [pc, #376]	; (801beec <_printf_i+0x244>)
 801bd72:	230a      	movs	r3, #10
 801bd74:	e019      	b.n	801bdaa <_printf_i+0x102>
 801bd76:	f015 0f40 	tst.w	r5, #64	; 0x40
 801bd7a:	6805      	ldr	r5, [r0, #0]
 801bd7c:	600b      	str	r3, [r1, #0]
 801bd7e:	bf18      	it	ne
 801bd80:	b22d      	sxthne	r5, r5
 801bd82:	e7ef      	b.n	801bd64 <_printf_i+0xbc>
 801bd84:	680b      	ldr	r3, [r1, #0]
 801bd86:	6825      	ldr	r5, [r4, #0]
 801bd88:	1d18      	adds	r0, r3, #4
 801bd8a:	6008      	str	r0, [r1, #0]
 801bd8c:	0628      	lsls	r0, r5, #24
 801bd8e:	d501      	bpl.n	801bd94 <_printf_i+0xec>
 801bd90:	681d      	ldr	r5, [r3, #0]
 801bd92:	e002      	b.n	801bd9a <_printf_i+0xf2>
 801bd94:	0669      	lsls	r1, r5, #25
 801bd96:	d5fb      	bpl.n	801bd90 <_printf_i+0xe8>
 801bd98:	881d      	ldrh	r5, [r3, #0]
 801bd9a:	4854      	ldr	r0, [pc, #336]	; (801beec <_printf_i+0x244>)
 801bd9c:	2f6f      	cmp	r7, #111	; 0x6f
 801bd9e:	bf0c      	ite	eq
 801bda0:	2308      	moveq	r3, #8
 801bda2:	230a      	movne	r3, #10
 801bda4:	2100      	movs	r1, #0
 801bda6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801bdaa:	6866      	ldr	r6, [r4, #4]
 801bdac:	60a6      	str	r6, [r4, #8]
 801bdae:	2e00      	cmp	r6, #0
 801bdb0:	bfa2      	ittt	ge
 801bdb2:	6821      	ldrge	r1, [r4, #0]
 801bdb4:	f021 0104 	bicge.w	r1, r1, #4
 801bdb8:	6021      	strge	r1, [r4, #0]
 801bdba:	b90d      	cbnz	r5, 801bdc0 <_printf_i+0x118>
 801bdbc:	2e00      	cmp	r6, #0
 801bdbe:	d04d      	beq.n	801be5c <_printf_i+0x1b4>
 801bdc0:	4616      	mov	r6, r2
 801bdc2:	fbb5 f1f3 	udiv	r1, r5, r3
 801bdc6:	fb03 5711 	mls	r7, r3, r1, r5
 801bdca:	5dc7      	ldrb	r7, [r0, r7]
 801bdcc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801bdd0:	462f      	mov	r7, r5
 801bdd2:	42bb      	cmp	r3, r7
 801bdd4:	460d      	mov	r5, r1
 801bdd6:	d9f4      	bls.n	801bdc2 <_printf_i+0x11a>
 801bdd8:	2b08      	cmp	r3, #8
 801bdda:	d10b      	bne.n	801bdf4 <_printf_i+0x14c>
 801bddc:	6823      	ldr	r3, [r4, #0]
 801bdde:	07df      	lsls	r7, r3, #31
 801bde0:	d508      	bpl.n	801bdf4 <_printf_i+0x14c>
 801bde2:	6923      	ldr	r3, [r4, #16]
 801bde4:	6861      	ldr	r1, [r4, #4]
 801bde6:	4299      	cmp	r1, r3
 801bde8:	bfde      	ittt	le
 801bdea:	2330      	movle	r3, #48	; 0x30
 801bdec:	f806 3c01 	strble.w	r3, [r6, #-1]
 801bdf0:	f106 36ff 	addle.w	r6, r6, #4294967295
 801bdf4:	1b92      	subs	r2, r2, r6
 801bdf6:	6122      	str	r2, [r4, #16]
 801bdf8:	f8cd a000 	str.w	sl, [sp]
 801bdfc:	464b      	mov	r3, r9
 801bdfe:	aa03      	add	r2, sp, #12
 801be00:	4621      	mov	r1, r4
 801be02:	4640      	mov	r0, r8
 801be04:	f7ff fee2 	bl	801bbcc <_printf_common>
 801be08:	3001      	adds	r0, #1
 801be0a:	d14c      	bne.n	801bea6 <_printf_i+0x1fe>
 801be0c:	f04f 30ff 	mov.w	r0, #4294967295
 801be10:	b004      	add	sp, #16
 801be12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801be16:	4835      	ldr	r0, [pc, #212]	; (801beec <_printf_i+0x244>)
 801be18:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801be1c:	6823      	ldr	r3, [r4, #0]
 801be1e:	680e      	ldr	r6, [r1, #0]
 801be20:	061f      	lsls	r7, r3, #24
 801be22:	f856 5b04 	ldr.w	r5, [r6], #4
 801be26:	600e      	str	r6, [r1, #0]
 801be28:	d514      	bpl.n	801be54 <_printf_i+0x1ac>
 801be2a:	07d9      	lsls	r1, r3, #31
 801be2c:	bf44      	itt	mi
 801be2e:	f043 0320 	orrmi.w	r3, r3, #32
 801be32:	6023      	strmi	r3, [r4, #0]
 801be34:	b91d      	cbnz	r5, 801be3e <_printf_i+0x196>
 801be36:	6823      	ldr	r3, [r4, #0]
 801be38:	f023 0320 	bic.w	r3, r3, #32
 801be3c:	6023      	str	r3, [r4, #0]
 801be3e:	2310      	movs	r3, #16
 801be40:	e7b0      	b.n	801bda4 <_printf_i+0xfc>
 801be42:	6823      	ldr	r3, [r4, #0]
 801be44:	f043 0320 	orr.w	r3, r3, #32
 801be48:	6023      	str	r3, [r4, #0]
 801be4a:	2378      	movs	r3, #120	; 0x78
 801be4c:	4828      	ldr	r0, [pc, #160]	; (801bef0 <_printf_i+0x248>)
 801be4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801be52:	e7e3      	b.n	801be1c <_printf_i+0x174>
 801be54:	065e      	lsls	r6, r3, #25
 801be56:	bf48      	it	mi
 801be58:	b2ad      	uxthmi	r5, r5
 801be5a:	e7e6      	b.n	801be2a <_printf_i+0x182>
 801be5c:	4616      	mov	r6, r2
 801be5e:	e7bb      	b.n	801bdd8 <_printf_i+0x130>
 801be60:	680b      	ldr	r3, [r1, #0]
 801be62:	6826      	ldr	r6, [r4, #0]
 801be64:	6960      	ldr	r0, [r4, #20]
 801be66:	1d1d      	adds	r5, r3, #4
 801be68:	600d      	str	r5, [r1, #0]
 801be6a:	0635      	lsls	r5, r6, #24
 801be6c:	681b      	ldr	r3, [r3, #0]
 801be6e:	d501      	bpl.n	801be74 <_printf_i+0x1cc>
 801be70:	6018      	str	r0, [r3, #0]
 801be72:	e002      	b.n	801be7a <_printf_i+0x1d2>
 801be74:	0671      	lsls	r1, r6, #25
 801be76:	d5fb      	bpl.n	801be70 <_printf_i+0x1c8>
 801be78:	8018      	strh	r0, [r3, #0]
 801be7a:	2300      	movs	r3, #0
 801be7c:	6123      	str	r3, [r4, #16]
 801be7e:	4616      	mov	r6, r2
 801be80:	e7ba      	b.n	801bdf8 <_printf_i+0x150>
 801be82:	680b      	ldr	r3, [r1, #0]
 801be84:	1d1a      	adds	r2, r3, #4
 801be86:	600a      	str	r2, [r1, #0]
 801be88:	681e      	ldr	r6, [r3, #0]
 801be8a:	6862      	ldr	r2, [r4, #4]
 801be8c:	2100      	movs	r1, #0
 801be8e:	4630      	mov	r0, r6
 801be90:	f7e4 f9b6 	bl	8000200 <memchr>
 801be94:	b108      	cbz	r0, 801be9a <_printf_i+0x1f2>
 801be96:	1b80      	subs	r0, r0, r6
 801be98:	6060      	str	r0, [r4, #4]
 801be9a:	6863      	ldr	r3, [r4, #4]
 801be9c:	6123      	str	r3, [r4, #16]
 801be9e:	2300      	movs	r3, #0
 801bea0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801bea4:	e7a8      	b.n	801bdf8 <_printf_i+0x150>
 801bea6:	6923      	ldr	r3, [r4, #16]
 801bea8:	4632      	mov	r2, r6
 801beaa:	4649      	mov	r1, r9
 801beac:	4640      	mov	r0, r8
 801beae:	47d0      	blx	sl
 801beb0:	3001      	adds	r0, #1
 801beb2:	d0ab      	beq.n	801be0c <_printf_i+0x164>
 801beb4:	6823      	ldr	r3, [r4, #0]
 801beb6:	079b      	lsls	r3, r3, #30
 801beb8:	d413      	bmi.n	801bee2 <_printf_i+0x23a>
 801beba:	68e0      	ldr	r0, [r4, #12]
 801bebc:	9b03      	ldr	r3, [sp, #12]
 801bebe:	4298      	cmp	r0, r3
 801bec0:	bfb8      	it	lt
 801bec2:	4618      	movlt	r0, r3
 801bec4:	e7a4      	b.n	801be10 <_printf_i+0x168>
 801bec6:	2301      	movs	r3, #1
 801bec8:	4632      	mov	r2, r6
 801beca:	4649      	mov	r1, r9
 801becc:	4640      	mov	r0, r8
 801bece:	47d0      	blx	sl
 801bed0:	3001      	adds	r0, #1
 801bed2:	d09b      	beq.n	801be0c <_printf_i+0x164>
 801bed4:	3501      	adds	r5, #1
 801bed6:	68e3      	ldr	r3, [r4, #12]
 801bed8:	9903      	ldr	r1, [sp, #12]
 801beda:	1a5b      	subs	r3, r3, r1
 801bedc:	42ab      	cmp	r3, r5
 801bede:	dcf2      	bgt.n	801bec6 <_printf_i+0x21e>
 801bee0:	e7eb      	b.n	801beba <_printf_i+0x212>
 801bee2:	2500      	movs	r5, #0
 801bee4:	f104 0619 	add.w	r6, r4, #25
 801bee8:	e7f5      	b.n	801bed6 <_printf_i+0x22e>
 801beea:	bf00      	nop
 801beec:	0801fe31 	.word	0x0801fe31
 801bef0:	0801fe42 	.word	0x0801fe42

0801bef4 <cleanup_glue>:
 801bef4:	b538      	push	{r3, r4, r5, lr}
 801bef6:	460c      	mov	r4, r1
 801bef8:	6809      	ldr	r1, [r1, #0]
 801befa:	4605      	mov	r5, r0
 801befc:	b109      	cbz	r1, 801bf02 <cleanup_glue+0xe>
 801befe:	f7ff fff9 	bl	801bef4 <cleanup_glue>
 801bf02:	4621      	mov	r1, r4
 801bf04:	4628      	mov	r0, r5
 801bf06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801bf0a:	f7ff bc5b 	b.w	801b7c4 <_free_r>
	...

0801bf10 <_reclaim_reent>:
 801bf10:	4b2c      	ldr	r3, [pc, #176]	; (801bfc4 <_reclaim_reent+0xb4>)
 801bf12:	681b      	ldr	r3, [r3, #0]
 801bf14:	4283      	cmp	r3, r0
 801bf16:	b570      	push	{r4, r5, r6, lr}
 801bf18:	4604      	mov	r4, r0
 801bf1a:	d051      	beq.n	801bfc0 <_reclaim_reent+0xb0>
 801bf1c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801bf1e:	b143      	cbz	r3, 801bf32 <_reclaim_reent+0x22>
 801bf20:	68db      	ldr	r3, [r3, #12]
 801bf22:	2b00      	cmp	r3, #0
 801bf24:	d14a      	bne.n	801bfbc <_reclaim_reent+0xac>
 801bf26:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801bf28:	6819      	ldr	r1, [r3, #0]
 801bf2a:	b111      	cbz	r1, 801bf32 <_reclaim_reent+0x22>
 801bf2c:	4620      	mov	r0, r4
 801bf2e:	f7ff fc49 	bl	801b7c4 <_free_r>
 801bf32:	6961      	ldr	r1, [r4, #20]
 801bf34:	b111      	cbz	r1, 801bf3c <_reclaim_reent+0x2c>
 801bf36:	4620      	mov	r0, r4
 801bf38:	f7ff fc44 	bl	801b7c4 <_free_r>
 801bf3c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801bf3e:	b111      	cbz	r1, 801bf46 <_reclaim_reent+0x36>
 801bf40:	4620      	mov	r0, r4
 801bf42:	f7ff fc3f 	bl	801b7c4 <_free_r>
 801bf46:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801bf48:	b111      	cbz	r1, 801bf50 <_reclaim_reent+0x40>
 801bf4a:	4620      	mov	r0, r4
 801bf4c:	f7ff fc3a 	bl	801b7c4 <_free_r>
 801bf50:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801bf52:	b111      	cbz	r1, 801bf5a <_reclaim_reent+0x4a>
 801bf54:	4620      	mov	r0, r4
 801bf56:	f7ff fc35 	bl	801b7c4 <_free_r>
 801bf5a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801bf5c:	b111      	cbz	r1, 801bf64 <_reclaim_reent+0x54>
 801bf5e:	4620      	mov	r0, r4
 801bf60:	f7ff fc30 	bl	801b7c4 <_free_r>
 801bf64:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 801bf66:	b111      	cbz	r1, 801bf6e <_reclaim_reent+0x5e>
 801bf68:	4620      	mov	r0, r4
 801bf6a:	f7ff fc2b 	bl	801b7c4 <_free_r>
 801bf6e:	6da1      	ldr	r1, [r4, #88]	; 0x58
 801bf70:	b111      	cbz	r1, 801bf78 <_reclaim_reent+0x68>
 801bf72:	4620      	mov	r0, r4
 801bf74:	f7ff fc26 	bl	801b7c4 <_free_r>
 801bf78:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801bf7a:	b111      	cbz	r1, 801bf82 <_reclaim_reent+0x72>
 801bf7c:	4620      	mov	r0, r4
 801bf7e:	f7ff fc21 	bl	801b7c4 <_free_r>
 801bf82:	69a3      	ldr	r3, [r4, #24]
 801bf84:	b1e3      	cbz	r3, 801bfc0 <_reclaim_reent+0xb0>
 801bf86:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801bf88:	4620      	mov	r0, r4
 801bf8a:	4798      	blx	r3
 801bf8c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801bf8e:	b1b9      	cbz	r1, 801bfc0 <_reclaim_reent+0xb0>
 801bf90:	4620      	mov	r0, r4
 801bf92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bf96:	f7ff bfad 	b.w	801bef4 <cleanup_glue>
 801bf9a:	5949      	ldr	r1, [r1, r5]
 801bf9c:	b941      	cbnz	r1, 801bfb0 <_reclaim_reent+0xa0>
 801bf9e:	3504      	adds	r5, #4
 801bfa0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801bfa2:	2d80      	cmp	r5, #128	; 0x80
 801bfa4:	68d9      	ldr	r1, [r3, #12]
 801bfa6:	d1f8      	bne.n	801bf9a <_reclaim_reent+0x8a>
 801bfa8:	4620      	mov	r0, r4
 801bfaa:	f7ff fc0b 	bl	801b7c4 <_free_r>
 801bfae:	e7ba      	b.n	801bf26 <_reclaim_reent+0x16>
 801bfb0:	680e      	ldr	r6, [r1, #0]
 801bfb2:	4620      	mov	r0, r4
 801bfb4:	f7ff fc06 	bl	801b7c4 <_free_r>
 801bfb8:	4631      	mov	r1, r6
 801bfba:	e7ef      	b.n	801bf9c <_reclaim_reent+0x8c>
 801bfbc:	2500      	movs	r5, #0
 801bfbe:	e7ef      	b.n	801bfa0 <_reclaim_reent+0x90>
 801bfc0:	bd70      	pop	{r4, r5, r6, pc}
 801bfc2:	bf00      	nop
 801bfc4:	200000d8 	.word	0x200000d8

0801bfc8 <_sbrk_r>:
 801bfc8:	b538      	push	{r3, r4, r5, lr}
 801bfca:	4d06      	ldr	r5, [pc, #24]	; (801bfe4 <_sbrk_r+0x1c>)
 801bfcc:	2300      	movs	r3, #0
 801bfce:	4604      	mov	r4, r0
 801bfd0:	4608      	mov	r0, r1
 801bfd2:	602b      	str	r3, [r5, #0]
 801bfd4:	f7e6 f834 	bl	8002040 <_sbrk>
 801bfd8:	1c43      	adds	r3, r0, #1
 801bfda:	d102      	bne.n	801bfe2 <_sbrk_r+0x1a>
 801bfdc:	682b      	ldr	r3, [r5, #0]
 801bfde:	b103      	cbz	r3, 801bfe2 <_sbrk_r+0x1a>
 801bfe0:	6023      	str	r3, [r4, #0]
 801bfe2:	bd38      	pop	{r3, r4, r5, pc}
 801bfe4:	2000a8b4 	.word	0x2000a8b4

0801bfe8 <_raise_r>:
 801bfe8:	291f      	cmp	r1, #31
 801bfea:	b538      	push	{r3, r4, r5, lr}
 801bfec:	4604      	mov	r4, r0
 801bfee:	460d      	mov	r5, r1
 801bff0:	d904      	bls.n	801bffc <_raise_r+0x14>
 801bff2:	2316      	movs	r3, #22
 801bff4:	6003      	str	r3, [r0, #0]
 801bff6:	f04f 30ff 	mov.w	r0, #4294967295
 801bffa:	bd38      	pop	{r3, r4, r5, pc}
 801bffc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801bffe:	b112      	cbz	r2, 801c006 <_raise_r+0x1e>
 801c000:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c004:	b94b      	cbnz	r3, 801c01a <_raise_r+0x32>
 801c006:	4620      	mov	r0, r4
 801c008:	f000 f830 	bl	801c06c <_getpid_r>
 801c00c:	462a      	mov	r2, r5
 801c00e:	4601      	mov	r1, r0
 801c010:	4620      	mov	r0, r4
 801c012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c016:	f000 b817 	b.w	801c048 <_kill_r>
 801c01a:	2b01      	cmp	r3, #1
 801c01c:	d00a      	beq.n	801c034 <_raise_r+0x4c>
 801c01e:	1c59      	adds	r1, r3, #1
 801c020:	d103      	bne.n	801c02a <_raise_r+0x42>
 801c022:	2316      	movs	r3, #22
 801c024:	6003      	str	r3, [r0, #0]
 801c026:	2001      	movs	r0, #1
 801c028:	e7e7      	b.n	801bffa <_raise_r+0x12>
 801c02a:	2400      	movs	r4, #0
 801c02c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c030:	4628      	mov	r0, r5
 801c032:	4798      	blx	r3
 801c034:	2000      	movs	r0, #0
 801c036:	e7e0      	b.n	801bffa <_raise_r+0x12>

0801c038 <raise>:
 801c038:	4b02      	ldr	r3, [pc, #8]	; (801c044 <raise+0xc>)
 801c03a:	4601      	mov	r1, r0
 801c03c:	6818      	ldr	r0, [r3, #0]
 801c03e:	f7ff bfd3 	b.w	801bfe8 <_raise_r>
 801c042:	bf00      	nop
 801c044:	200000d8 	.word	0x200000d8

0801c048 <_kill_r>:
 801c048:	b538      	push	{r3, r4, r5, lr}
 801c04a:	4d07      	ldr	r5, [pc, #28]	; (801c068 <_kill_r+0x20>)
 801c04c:	2300      	movs	r3, #0
 801c04e:	4604      	mov	r4, r0
 801c050:	4608      	mov	r0, r1
 801c052:	4611      	mov	r1, r2
 801c054:	602b      	str	r3, [r5, #0]
 801c056:	f7e5 ffbf 	bl	8001fd8 <_kill>
 801c05a:	1c43      	adds	r3, r0, #1
 801c05c:	d102      	bne.n	801c064 <_kill_r+0x1c>
 801c05e:	682b      	ldr	r3, [r5, #0]
 801c060:	b103      	cbz	r3, 801c064 <_kill_r+0x1c>
 801c062:	6023      	str	r3, [r4, #0]
 801c064:	bd38      	pop	{r3, r4, r5, pc}
 801c066:	bf00      	nop
 801c068:	2000a8b4 	.word	0x2000a8b4

0801c06c <_getpid_r>:
 801c06c:	f7e5 bfb2 	b.w	8001fd4 <_getpid>

0801c070 <__sread>:
 801c070:	b510      	push	{r4, lr}
 801c072:	460c      	mov	r4, r1
 801c074:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c078:	f000 fac6 	bl	801c608 <_read_r>
 801c07c:	2800      	cmp	r0, #0
 801c07e:	bfab      	itete	ge
 801c080:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801c082:	89a3      	ldrhlt	r3, [r4, #12]
 801c084:	181b      	addge	r3, r3, r0
 801c086:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801c08a:	bfac      	ite	ge
 801c08c:	6563      	strge	r3, [r4, #84]	; 0x54
 801c08e:	81a3      	strhlt	r3, [r4, #12]
 801c090:	bd10      	pop	{r4, pc}

0801c092 <__swrite>:
 801c092:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c096:	461f      	mov	r7, r3
 801c098:	898b      	ldrh	r3, [r1, #12]
 801c09a:	05db      	lsls	r3, r3, #23
 801c09c:	4605      	mov	r5, r0
 801c09e:	460c      	mov	r4, r1
 801c0a0:	4616      	mov	r6, r2
 801c0a2:	d505      	bpl.n	801c0b0 <__swrite+0x1e>
 801c0a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c0a8:	2302      	movs	r3, #2
 801c0aa:	2200      	movs	r2, #0
 801c0ac:	f000 fa2a 	bl	801c504 <_lseek_r>
 801c0b0:	89a3      	ldrh	r3, [r4, #12]
 801c0b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c0b6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801c0ba:	81a3      	strh	r3, [r4, #12]
 801c0bc:	4632      	mov	r2, r6
 801c0be:	463b      	mov	r3, r7
 801c0c0:	4628      	mov	r0, r5
 801c0c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801c0c6:	f000 b869 	b.w	801c19c <_write_r>

0801c0ca <__sseek>:
 801c0ca:	b510      	push	{r4, lr}
 801c0cc:	460c      	mov	r4, r1
 801c0ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c0d2:	f000 fa17 	bl	801c504 <_lseek_r>
 801c0d6:	1c43      	adds	r3, r0, #1
 801c0d8:	89a3      	ldrh	r3, [r4, #12]
 801c0da:	bf15      	itete	ne
 801c0dc:	6560      	strne	r0, [r4, #84]	; 0x54
 801c0de:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801c0e2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801c0e6:	81a3      	strheq	r3, [r4, #12]
 801c0e8:	bf18      	it	ne
 801c0ea:	81a3      	strhne	r3, [r4, #12]
 801c0ec:	bd10      	pop	{r4, pc}

0801c0ee <__sclose>:
 801c0ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c0f2:	f000 b935 	b.w	801c360 <_close_r>
	...

0801c0f8 <__swbuf_r>:
 801c0f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c0fa:	460e      	mov	r6, r1
 801c0fc:	4614      	mov	r4, r2
 801c0fe:	4605      	mov	r5, r0
 801c100:	b118      	cbz	r0, 801c10a <__swbuf_r+0x12>
 801c102:	6983      	ldr	r3, [r0, #24]
 801c104:	b90b      	cbnz	r3, 801c10a <__swbuf_r+0x12>
 801c106:	f7ff fa5f 	bl	801b5c8 <__sinit>
 801c10a:	4b21      	ldr	r3, [pc, #132]	; (801c190 <__swbuf_r+0x98>)
 801c10c:	429c      	cmp	r4, r3
 801c10e:	d12b      	bne.n	801c168 <__swbuf_r+0x70>
 801c110:	686c      	ldr	r4, [r5, #4]
 801c112:	69a3      	ldr	r3, [r4, #24]
 801c114:	60a3      	str	r3, [r4, #8]
 801c116:	89a3      	ldrh	r3, [r4, #12]
 801c118:	071a      	lsls	r2, r3, #28
 801c11a:	d52f      	bpl.n	801c17c <__swbuf_r+0x84>
 801c11c:	6923      	ldr	r3, [r4, #16]
 801c11e:	b36b      	cbz	r3, 801c17c <__swbuf_r+0x84>
 801c120:	6923      	ldr	r3, [r4, #16]
 801c122:	6820      	ldr	r0, [r4, #0]
 801c124:	1ac0      	subs	r0, r0, r3
 801c126:	6963      	ldr	r3, [r4, #20]
 801c128:	b2f6      	uxtb	r6, r6
 801c12a:	4283      	cmp	r3, r0
 801c12c:	4637      	mov	r7, r6
 801c12e:	dc04      	bgt.n	801c13a <__swbuf_r+0x42>
 801c130:	4621      	mov	r1, r4
 801c132:	4628      	mov	r0, r5
 801c134:	f000 f9aa 	bl	801c48c <_fflush_r>
 801c138:	bb30      	cbnz	r0, 801c188 <__swbuf_r+0x90>
 801c13a:	68a3      	ldr	r3, [r4, #8]
 801c13c:	3b01      	subs	r3, #1
 801c13e:	60a3      	str	r3, [r4, #8]
 801c140:	6823      	ldr	r3, [r4, #0]
 801c142:	1c5a      	adds	r2, r3, #1
 801c144:	6022      	str	r2, [r4, #0]
 801c146:	701e      	strb	r6, [r3, #0]
 801c148:	6963      	ldr	r3, [r4, #20]
 801c14a:	3001      	adds	r0, #1
 801c14c:	4283      	cmp	r3, r0
 801c14e:	d004      	beq.n	801c15a <__swbuf_r+0x62>
 801c150:	89a3      	ldrh	r3, [r4, #12]
 801c152:	07db      	lsls	r3, r3, #31
 801c154:	d506      	bpl.n	801c164 <__swbuf_r+0x6c>
 801c156:	2e0a      	cmp	r6, #10
 801c158:	d104      	bne.n	801c164 <__swbuf_r+0x6c>
 801c15a:	4621      	mov	r1, r4
 801c15c:	4628      	mov	r0, r5
 801c15e:	f000 f995 	bl	801c48c <_fflush_r>
 801c162:	b988      	cbnz	r0, 801c188 <__swbuf_r+0x90>
 801c164:	4638      	mov	r0, r7
 801c166:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c168:	4b0a      	ldr	r3, [pc, #40]	; (801c194 <__swbuf_r+0x9c>)
 801c16a:	429c      	cmp	r4, r3
 801c16c:	d101      	bne.n	801c172 <__swbuf_r+0x7a>
 801c16e:	68ac      	ldr	r4, [r5, #8]
 801c170:	e7cf      	b.n	801c112 <__swbuf_r+0x1a>
 801c172:	4b09      	ldr	r3, [pc, #36]	; (801c198 <__swbuf_r+0xa0>)
 801c174:	429c      	cmp	r4, r3
 801c176:	bf08      	it	eq
 801c178:	68ec      	ldreq	r4, [r5, #12]
 801c17a:	e7ca      	b.n	801c112 <__swbuf_r+0x1a>
 801c17c:	4621      	mov	r1, r4
 801c17e:	4628      	mov	r0, r5
 801c180:	f000 f81e 	bl	801c1c0 <__swsetup_r>
 801c184:	2800      	cmp	r0, #0
 801c186:	d0cb      	beq.n	801c120 <__swbuf_r+0x28>
 801c188:	f04f 37ff 	mov.w	r7, #4294967295
 801c18c:	e7ea      	b.n	801c164 <__swbuf_r+0x6c>
 801c18e:	bf00      	nop
 801c190:	0801fddc 	.word	0x0801fddc
 801c194:	0801fdfc 	.word	0x0801fdfc
 801c198:	0801fdbc 	.word	0x0801fdbc

0801c19c <_write_r>:
 801c19c:	b538      	push	{r3, r4, r5, lr}
 801c19e:	4d07      	ldr	r5, [pc, #28]	; (801c1bc <_write_r+0x20>)
 801c1a0:	4604      	mov	r4, r0
 801c1a2:	4608      	mov	r0, r1
 801c1a4:	4611      	mov	r1, r2
 801c1a6:	2200      	movs	r2, #0
 801c1a8:	602a      	str	r2, [r5, #0]
 801c1aa:	461a      	mov	r2, r3
 801c1ac:	f7e5 ff2f 	bl	800200e <_write>
 801c1b0:	1c43      	adds	r3, r0, #1
 801c1b2:	d102      	bne.n	801c1ba <_write_r+0x1e>
 801c1b4:	682b      	ldr	r3, [r5, #0]
 801c1b6:	b103      	cbz	r3, 801c1ba <_write_r+0x1e>
 801c1b8:	6023      	str	r3, [r4, #0]
 801c1ba:	bd38      	pop	{r3, r4, r5, pc}
 801c1bc:	2000a8b4 	.word	0x2000a8b4

0801c1c0 <__swsetup_r>:
 801c1c0:	4b32      	ldr	r3, [pc, #200]	; (801c28c <__swsetup_r+0xcc>)
 801c1c2:	b570      	push	{r4, r5, r6, lr}
 801c1c4:	681d      	ldr	r5, [r3, #0]
 801c1c6:	4606      	mov	r6, r0
 801c1c8:	460c      	mov	r4, r1
 801c1ca:	b125      	cbz	r5, 801c1d6 <__swsetup_r+0x16>
 801c1cc:	69ab      	ldr	r3, [r5, #24]
 801c1ce:	b913      	cbnz	r3, 801c1d6 <__swsetup_r+0x16>
 801c1d0:	4628      	mov	r0, r5
 801c1d2:	f7ff f9f9 	bl	801b5c8 <__sinit>
 801c1d6:	4b2e      	ldr	r3, [pc, #184]	; (801c290 <__swsetup_r+0xd0>)
 801c1d8:	429c      	cmp	r4, r3
 801c1da:	d10f      	bne.n	801c1fc <__swsetup_r+0x3c>
 801c1dc:	686c      	ldr	r4, [r5, #4]
 801c1de:	89a3      	ldrh	r3, [r4, #12]
 801c1e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c1e4:	0719      	lsls	r1, r3, #28
 801c1e6:	d42c      	bmi.n	801c242 <__swsetup_r+0x82>
 801c1e8:	06dd      	lsls	r5, r3, #27
 801c1ea:	d411      	bmi.n	801c210 <__swsetup_r+0x50>
 801c1ec:	2309      	movs	r3, #9
 801c1ee:	6033      	str	r3, [r6, #0]
 801c1f0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801c1f4:	81a3      	strh	r3, [r4, #12]
 801c1f6:	f04f 30ff 	mov.w	r0, #4294967295
 801c1fa:	e03e      	b.n	801c27a <__swsetup_r+0xba>
 801c1fc:	4b25      	ldr	r3, [pc, #148]	; (801c294 <__swsetup_r+0xd4>)
 801c1fe:	429c      	cmp	r4, r3
 801c200:	d101      	bne.n	801c206 <__swsetup_r+0x46>
 801c202:	68ac      	ldr	r4, [r5, #8]
 801c204:	e7eb      	b.n	801c1de <__swsetup_r+0x1e>
 801c206:	4b24      	ldr	r3, [pc, #144]	; (801c298 <__swsetup_r+0xd8>)
 801c208:	429c      	cmp	r4, r3
 801c20a:	bf08      	it	eq
 801c20c:	68ec      	ldreq	r4, [r5, #12]
 801c20e:	e7e6      	b.n	801c1de <__swsetup_r+0x1e>
 801c210:	0758      	lsls	r0, r3, #29
 801c212:	d512      	bpl.n	801c23a <__swsetup_r+0x7a>
 801c214:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c216:	b141      	cbz	r1, 801c22a <__swsetup_r+0x6a>
 801c218:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c21c:	4299      	cmp	r1, r3
 801c21e:	d002      	beq.n	801c226 <__swsetup_r+0x66>
 801c220:	4630      	mov	r0, r6
 801c222:	f7ff facf 	bl	801b7c4 <_free_r>
 801c226:	2300      	movs	r3, #0
 801c228:	6363      	str	r3, [r4, #52]	; 0x34
 801c22a:	89a3      	ldrh	r3, [r4, #12]
 801c22c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801c230:	81a3      	strh	r3, [r4, #12]
 801c232:	2300      	movs	r3, #0
 801c234:	6063      	str	r3, [r4, #4]
 801c236:	6923      	ldr	r3, [r4, #16]
 801c238:	6023      	str	r3, [r4, #0]
 801c23a:	89a3      	ldrh	r3, [r4, #12]
 801c23c:	f043 0308 	orr.w	r3, r3, #8
 801c240:	81a3      	strh	r3, [r4, #12]
 801c242:	6923      	ldr	r3, [r4, #16]
 801c244:	b94b      	cbnz	r3, 801c25a <__swsetup_r+0x9a>
 801c246:	89a3      	ldrh	r3, [r4, #12]
 801c248:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801c24c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801c250:	d003      	beq.n	801c25a <__swsetup_r+0x9a>
 801c252:	4621      	mov	r1, r4
 801c254:	4630      	mov	r0, r6
 801c256:	f000 f98b 	bl	801c570 <__smakebuf_r>
 801c25a:	89a0      	ldrh	r0, [r4, #12]
 801c25c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c260:	f010 0301 	ands.w	r3, r0, #1
 801c264:	d00a      	beq.n	801c27c <__swsetup_r+0xbc>
 801c266:	2300      	movs	r3, #0
 801c268:	60a3      	str	r3, [r4, #8]
 801c26a:	6963      	ldr	r3, [r4, #20]
 801c26c:	425b      	negs	r3, r3
 801c26e:	61a3      	str	r3, [r4, #24]
 801c270:	6923      	ldr	r3, [r4, #16]
 801c272:	b943      	cbnz	r3, 801c286 <__swsetup_r+0xc6>
 801c274:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801c278:	d1ba      	bne.n	801c1f0 <__swsetup_r+0x30>
 801c27a:	bd70      	pop	{r4, r5, r6, pc}
 801c27c:	0781      	lsls	r1, r0, #30
 801c27e:	bf58      	it	pl
 801c280:	6963      	ldrpl	r3, [r4, #20]
 801c282:	60a3      	str	r3, [r4, #8]
 801c284:	e7f4      	b.n	801c270 <__swsetup_r+0xb0>
 801c286:	2000      	movs	r0, #0
 801c288:	e7f7      	b.n	801c27a <__swsetup_r+0xba>
 801c28a:	bf00      	nop
 801c28c:	200000d8 	.word	0x200000d8
 801c290:	0801fddc 	.word	0x0801fddc
 801c294:	0801fdfc 	.word	0x0801fdfc
 801c298:	0801fdbc 	.word	0x0801fdbc

0801c29c <__register_exitproc>:
 801c29c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c2a0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801c35c <__register_exitproc+0xc0>
 801c2a4:	4606      	mov	r6, r0
 801c2a6:	f8d8 0000 	ldr.w	r0, [r8]
 801c2aa:	461f      	mov	r7, r3
 801c2ac:	460d      	mov	r5, r1
 801c2ae:	4691      	mov	r9, r2
 801c2b0:	f7ff fa5f 	bl	801b772 <__retarget_lock_acquire_recursive>
 801c2b4:	4b25      	ldr	r3, [pc, #148]	; (801c34c <__register_exitproc+0xb0>)
 801c2b6:	681c      	ldr	r4, [r3, #0]
 801c2b8:	b934      	cbnz	r4, 801c2c8 <__register_exitproc+0x2c>
 801c2ba:	4c25      	ldr	r4, [pc, #148]	; (801c350 <__register_exitproc+0xb4>)
 801c2bc:	601c      	str	r4, [r3, #0]
 801c2be:	4b25      	ldr	r3, [pc, #148]	; (801c354 <__register_exitproc+0xb8>)
 801c2c0:	b113      	cbz	r3, 801c2c8 <__register_exitproc+0x2c>
 801c2c2:	681b      	ldr	r3, [r3, #0]
 801c2c4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c2c8:	6863      	ldr	r3, [r4, #4]
 801c2ca:	2b1f      	cmp	r3, #31
 801c2cc:	dd07      	ble.n	801c2de <__register_exitproc+0x42>
 801c2ce:	f8d8 0000 	ldr.w	r0, [r8]
 801c2d2:	f7ff fa50 	bl	801b776 <__retarget_lock_release_recursive>
 801c2d6:	f04f 30ff 	mov.w	r0, #4294967295
 801c2da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c2de:	b34e      	cbz	r6, 801c334 <__register_exitproc+0x98>
 801c2e0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c2e4:	b988      	cbnz	r0, 801c30a <__register_exitproc+0x6e>
 801c2e6:	4b1c      	ldr	r3, [pc, #112]	; (801c358 <__register_exitproc+0xbc>)
 801c2e8:	b923      	cbnz	r3, 801c2f4 <__register_exitproc+0x58>
 801c2ea:	f8d8 0000 	ldr.w	r0, [r8]
 801c2ee:	f7ff fa41 	bl	801b774 <__retarget_lock_release>
 801c2f2:	e7f0      	b.n	801c2d6 <__register_exitproc+0x3a>
 801c2f4:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c2f8:	f7ff fa3e 	bl	801b778 <malloc>
 801c2fc:	2800      	cmp	r0, #0
 801c2fe:	d0f4      	beq.n	801c2ea <__register_exitproc+0x4e>
 801c300:	2300      	movs	r3, #0
 801c302:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801c306:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c30a:	6863      	ldr	r3, [r4, #4]
 801c30c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801c310:	2201      	movs	r2, #1
 801c312:	409a      	lsls	r2, r3
 801c314:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801c318:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801c31c:	4313      	orrs	r3, r2
 801c31e:	2e02      	cmp	r6, #2
 801c320:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c324:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801c328:	bf02      	ittt	eq
 801c32a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801c32e:	431a      	orreq	r2, r3
 801c330:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 801c334:	6863      	ldr	r3, [r4, #4]
 801c336:	f8d8 0000 	ldr.w	r0, [r8]
 801c33a:	1c5a      	adds	r2, r3, #1
 801c33c:	3302      	adds	r3, #2
 801c33e:	6062      	str	r2, [r4, #4]
 801c340:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801c344:	f7ff fa17 	bl	801b776 <__retarget_lock_release_recursive>
 801c348:	2000      	movs	r0, #0
 801c34a:	e7c6      	b.n	801c2da <__register_exitproc+0x3e>
 801c34c:	2000a5bc 	.word	0x2000a5bc
 801c350:	2000a530 	.word	0x2000a530
 801c354:	0801fe54 	.word	0x0801fe54
 801c358:	0801b779 	.word	0x0801b779
 801c35c:	2000013c 	.word	0x2000013c

0801c360 <_close_r>:
 801c360:	b538      	push	{r3, r4, r5, lr}
 801c362:	4d06      	ldr	r5, [pc, #24]	; (801c37c <_close_r+0x1c>)
 801c364:	2300      	movs	r3, #0
 801c366:	4604      	mov	r4, r0
 801c368:	4608      	mov	r0, r1
 801c36a:	602b      	str	r3, [r5, #0]
 801c36c:	f7e5 fe5c 	bl	8002028 <_close>
 801c370:	1c43      	adds	r3, r0, #1
 801c372:	d102      	bne.n	801c37a <_close_r+0x1a>
 801c374:	682b      	ldr	r3, [r5, #0]
 801c376:	b103      	cbz	r3, 801c37a <_close_r+0x1a>
 801c378:	6023      	str	r3, [r4, #0]
 801c37a:	bd38      	pop	{r3, r4, r5, pc}
 801c37c:	2000a8b4 	.word	0x2000a8b4

0801c380 <__sflush_r>:
 801c380:	898a      	ldrh	r2, [r1, #12]
 801c382:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c386:	4605      	mov	r5, r0
 801c388:	0710      	lsls	r0, r2, #28
 801c38a:	460c      	mov	r4, r1
 801c38c:	d458      	bmi.n	801c440 <__sflush_r+0xc0>
 801c38e:	684b      	ldr	r3, [r1, #4]
 801c390:	2b00      	cmp	r3, #0
 801c392:	dc05      	bgt.n	801c3a0 <__sflush_r+0x20>
 801c394:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c396:	2b00      	cmp	r3, #0
 801c398:	dc02      	bgt.n	801c3a0 <__sflush_r+0x20>
 801c39a:	2000      	movs	r0, #0
 801c39c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c3a0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c3a2:	2e00      	cmp	r6, #0
 801c3a4:	d0f9      	beq.n	801c39a <__sflush_r+0x1a>
 801c3a6:	2300      	movs	r3, #0
 801c3a8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c3ac:	682f      	ldr	r7, [r5, #0]
 801c3ae:	602b      	str	r3, [r5, #0]
 801c3b0:	d032      	beq.n	801c418 <__sflush_r+0x98>
 801c3b2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c3b4:	89a3      	ldrh	r3, [r4, #12]
 801c3b6:	075a      	lsls	r2, r3, #29
 801c3b8:	d505      	bpl.n	801c3c6 <__sflush_r+0x46>
 801c3ba:	6863      	ldr	r3, [r4, #4]
 801c3bc:	1ac0      	subs	r0, r0, r3
 801c3be:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c3c0:	b10b      	cbz	r3, 801c3c6 <__sflush_r+0x46>
 801c3c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c3c4:	1ac0      	subs	r0, r0, r3
 801c3c6:	2300      	movs	r3, #0
 801c3c8:	4602      	mov	r2, r0
 801c3ca:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c3cc:	6a21      	ldr	r1, [r4, #32]
 801c3ce:	4628      	mov	r0, r5
 801c3d0:	47b0      	blx	r6
 801c3d2:	1c43      	adds	r3, r0, #1
 801c3d4:	89a3      	ldrh	r3, [r4, #12]
 801c3d6:	d106      	bne.n	801c3e6 <__sflush_r+0x66>
 801c3d8:	6829      	ldr	r1, [r5, #0]
 801c3da:	291d      	cmp	r1, #29
 801c3dc:	d82c      	bhi.n	801c438 <__sflush_r+0xb8>
 801c3de:	4a2a      	ldr	r2, [pc, #168]	; (801c488 <__sflush_r+0x108>)
 801c3e0:	40ca      	lsrs	r2, r1
 801c3e2:	07d6      	lsls	r6, r2, #31
 801c3e4:	d528      	bpl.n	801c438 <__sflush_r+0xb8>
 801c3e6:	2200      	movs	r2, #0
 801c3e8:	6062      	str	r2, [r4, #4]
 801c3ea:	04d9      	lsls	r1, r3, #19
 801c3ec:	6922      	ldr	r2, [r4, #16]
 801c3ee:	6022      	str	r2, [r4, #0]
 801c3f0:	d504      	bpl.n	801c3fc <__sflush_r+0x7c>
 801c3f2:	1c42      	adds	r2, r0, #1
 801c3f4:	d101      	bne.n	801c3fa <__sflush_r+0x7a>
 801c3f6:	682b      	ldr	r3, [r5, #0]
 801c3f8:	b903      	cbnz	r3, 801c3fc <__sflush_r+0x7c>
 801c3fa:	6560      	str	r0, [r4, #84]	; 0x54
 801c3fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c3fe:	602f      	str	r7, [r5, #0]
 801c400:	2900      	cmp	r1, #0
 801c402:	d0ca      	beq.n	801c39a <__sflush_r+0x1a>
 801c404:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c408:	4299      	cmp	r1, r3
 801c40a:	d002      	beq.n	801c412 <__sflush_r+0x92>
 801c40c:	4628      	mov	r0, r5
 801c40e:	f7ff f9d9 	bl	801b7c4 <_free_r>
 801c412:	2000      	movs	r0, #0
 801c414:	6360      	str	r0, [r4, #52]	; 0x34
 801c416:	e7c1      	b.n	801c39c <__sflush_r+0x1c>
 801c418:	6a21      	ldr	r1, [r4, #32]
 801c41a:	2301      	movs	r3, #1
 801c41c:	4628      	mov	r0, r5
 801c41e:	47b0      	blx	r6
 801c420:	1c41      	adds	r1, r0, #1
 801c422:	d1c7      	bne.n	801c3b4 <__sflush_r+0x34>
 801c424:	682b      	ldr	r3, [r5, #0]
 801c426:	2b00      	cmp	r3, #0
 801c428:	d0c4      	beq.n	801c3b4 <__sflush_r+0x34>
 801c42a:	2b1d      	cmp	r3, #29
 801c42c:	d001      	beq.n	801c432 <__sflush_r+0xb2>
 801c42e:	2b16      	cmp	r3, #22
 801c430:	d101      	bne.n	801c436 <__sflush_r+0xb6>
 801c432:	602f      	str	r7, [r5, #0]
 801c434:	e7b1      	b.n	801c39a <__sflush_r+0x1a>
 801c436:	89a3      	ldrh	r3, [r4, #12]
 801c438:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c43c:	81a3      	strh	r3, [r4, #12]
 801c43e:	e7ad      	b.n	801c39c <__sflush_r+0x1c>
 801c440:	690f      	ldr	r7, [r1, #16]
 801c442:	2f00      	cmp	r7, #0
 801c444:	d0a9      	beq.n	801c39a <__sflush_r+0x1a>
 801c446:	0793      	lsls	r3, r2, #30
 801c448:	680e      	ldr	r6, [r1, #0]
 801c44a:	bf08      	it	eq
 801c44c:	694b      	ldreq	r3, [r1, #20]
 801c44e:	600f      	str	r7, [r1, #0]
 801c450:	bf18      	it	ne
 801c452:	2300      	movne	r3, #0
 801c454:	eba6 0807 	sub.w	r8, r6, r7
 801c458:	608b      	str	r3, [r1, #8]
 801c45a:	f1b8 0f00 	cmp.w	r8, #0
 801c45e:	dd9c      	ble.n	801c39a <__sflush_r+0x1a>
 801c460:	6a21      	ldr	r1, [r4, #32]
 801c462:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c464:	4643      	mov	r3, r8
 801c466:	463a      	mov	r2, r7
 801c468:	4628      	mov	r0, r5
 801c46a:	47b0      	blx	r6
 801c46c:	2800      	cmp	r0, #0
 801c46e:	dc06      	bgt.n	801c47e <__sflush_r+0xfe>
 801c470:	89a3      	ldrh	r3, [r4, #12]
 801c472:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c476:	81a3      	strh	r3, [r4, #12]
 801c478:	f04f 30ff 	mov.w	r0, #4294967295
 801c47c:	e78e      	b.n	801c39c <__sflush_r+0x1c>
 801c47e:	4407      	add	r7, r0
 801c480:	eba8 0800 	sub.w	r8, r8, r0
 801c484:	e7e9      	b.n	801c45a <__sflush_r+0xda>
 801c486:	bf00      	nop
 801c488:	20400001 	.word	0x20400001

0801c48c <_fflush_r>:
 801c48c:	b538      	push	{r3, r4, r5, lr}
 801c48e:	690b      	ldr	r3, [r1, #16]
 801c490:	4605      	mov	r5, r0
 801c492:	460c      	mov	r4, r1
 801c494:	b913      	cbnz	r3, 801c49c <_fflush_r+0x10>
 801c496:	2500      	movs	r5, #0
 801c498:	4628      	mov	r0, r5
 801c49a:	bd38      	pop	{r3, r4, r5, pc}
 801c49c:	b118      	cbz	r0, 801c4a6 <_fflush_r+0x1a>
 801c49e:	6983      	ldr	r3, [r0, #24]
 801c4a0:	b90b      	cbnz	r3, 801c4a6 <_fflush_r+0x1a>
 801c4a2:	f7ff f891 	bl	801b5c8 <__sinit>
 801c4a6:	4b14      	ldr	r3, [pc, #80]	; (801c4f8 <_fflush_r+0x6c>)
 801c4a8:	429c      	cmp	r4, r3
 801c4aa:	d11b      	bne.n	801c4e4 <_fflush_r+0x58>
 801c4ac:	686c      	ldr	r4, [r5, #4]
 801c4ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c4b2:	2b00      	cmp	r3, #0
 801c4b4:	d0ef      	beq.n	801c496 <_fflush_r+0xa>
 801c4b6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c4b8:	07d0      	lsls	r0, r2, #31
 801c4ba:	d404      	bmi.n	801c4c6 <_fflush_r+0x3a>
 801c4bc:	0599      	lsls	r1, r3, #22
 801c4be:	d402      	bmi.n	801c4c6 <_fflush_r+0x3a>
 801c4c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c4c2:	f7ff f956 	bl	801b772 <__retarget_lock_acquire_recursive>
 801c4c6:	4628      	mov	r0, r5
 801c4c8:	4621      	mov	r1, r4
 801c4ca:	f7ff ff59 	bl	801c380 <__sflush_r>
 801c4ce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c4d0:	07da      	lsls	r2, r3, #31
 801c4d2:	4605      	mov	r5, r0
 801c4d4:	d4e0      	bmi.n	801c498 <_fflush_r+0xc>
 801c4d6:	89a3      	ldrh	r3, [r4, #12]
 801c4d8:	059b      	lsls	r3, r3, #22
 801c4da:	d4dd      	bmi.n	801c498 <_fflush_r+0xc>
 801c4dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c4de:	f7ff f94a 	bl	801b776 <__retarget_lock_release_recursive>
 801c4e2:	e7d9      	b.n	801c498 <_fflush_r+0xc>
 801c4e4:	4b05      	ldr	r3, [pc, #20]	; (801c4fc <_fflush_r+0x70>)
 801c4e6:	429c      	cmp	r4, r3
 801c4e8:	d101      	bne.n	801c4ee <_fflush_r+0x62>
 801c4ea:	68ac      	ldr	r4, [r5, #8]
 801c4ec:	e7df      	b.n	801c4ae <_fflush_r+0x22>
 801c4ee:	4b04      	ldr	r3, [pc, #16]	; (801c500 <_fflush_r+0x74>)
 801c4f0:	429c      	cmp	r4, r3
 801c4f2:	bf08      	it	eq
 801c4f4:	68ec      	ldreq	r4, [r5, #12]
 801c4f6:	e7da      	b.n	801c4ae <_fflush_r+0x22>
 801c4f8:	0801fddc 	.word	0x0801fddc
 801c4fc:	0801fdfc 	.word	0x0801fdfc
 801c500:	0801fdbc 	.word	0x0801fdbc

0801c504 <_lseek_r>:
 801c504:	b538      	push	{r3, r4, r5, lr}
 801c506:	4d07      	ldr	r5, [pc, #28]	; (801c524 <_lseek_r+0x20>)
 801c508:	4604      	mov	r4, r0
 801c50a:	4608      	mov	r0, r1
 801c50c:	4611      	mov	r1, r2
 801c50e:	2200      	movs	r2, #0
 801c510:	602a      	str	r2, [r5, #0]
 801c512:	461a      	mov	r2, r3
 801c514:	f7e5 fd92 	bl	800203c <_lseek>
 801c518:	1c43      	adds	r3, r0, #1
 801c51a:	d102      	bne.n	801c522 <_lseek_r+0x1e>
 801c51c:	682b      	ldr	r3, [r5, #0]
 801c51e:	b103      	cbz	r3, 801c522 <_lseek_r+0x1e>
 801c520:	6023      	str	r3, [r4, #0]
 801c522:	bd38      	pop	{r3, r4, r5, pc}
 801c524:	2000a8b4 	.word	0x2000a8b4

0801c528 <__swhatbuf_r>:
 801c528:	b570      	push	{r4, r5, r6, lr}
 801c52a:	460e      	mov	r6, r1
 801c52c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c530:	2900      	cmp	r1, #0
 801c532:	b096      	sub	sp, #88	; 0x58
 801c534:	4614      	mov	r4, r2
 801c536:	461d      	mov	r5, r3
 801c538:	da07      	bge.n	801c54a <__swhatbuf_r+0x22>
 801c53a:	2300      	movs	r3, #0
 801c53c:	602b      	str	r3, [r5, #0]
 801c53e:	89b3      	ldrh	r3, [r6, #12]
 801c540:	061a      	lsls	r2, r3, #24
 801c542:	d410      	bmi.n	801c566 <__swhatbuf_r+0x3e>
 801c544:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c548:	e00e      	b.n	801c568 <__swhatbuf_r+0x40>
 801c54a:	466a      	mov	r2, sp
 801c54c:	f000 f86e 	bl	801c62c <_fstat_r>
 801c550:	2800      	cmp	r0, #0
 801c552:	dbf2      	blt.n	801c53a <__swhatbuf_r+0x12>
 801c554:	9a01      	ldr	r2, [sp, #4]
 801c556:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c55a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c55e:	425a      	negs	r2, r3
 801c560:	415a      	adcs	r2, r3
 801c562:	602a      	str	r2, [r5, #0]
 801c564:	e7ee      	b.n	801c544 <__swhatbuf_r+0x1c>
 801c566:	2340      	movs	r3, #64	; 0x40
 801c568:	2000      	movs	r0, #0
 801c56a:	6023      	str	r3, [r4, #0]
 801c56c:	b016      	add	sp, #88	; 0x58
 801c56e:	bd70      	pop	{r4, r5, r6, pc}

0801c570 <__smakebuf_r>:
 801c570:	898b      	ldrh	r3, [r1, #12]
 801c572:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c574:	079d      	lsls	r5, r3, #30
 801c576:	4606      	mov	r6, r0
 801c578:	460c      	mov	r4, r1
 801c57a:	d507      	bpl.n	801c58c <__smakebuf_r+0x1c>
 801c57c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c580:	6023      	str	r3, [r4, #0]
 801c582:	6123      	str	r3, [r4, #16]
 801c584:	2301      	movs	r3, #1
 801c586:	6163      	str	r3, [r4, #20]
 801c588:	b002      	add	sp, #8
 801c58a:	bd70      	pop	{r4, r5, r6, pc}
 801c58c:	ab01      	add	r3, sp, #4
 801c58e:	466a      	mov	r2, sp
 801c590:	f7ff ffca 	bl	801c528 <__swhatbuf_r>
 801c594:	9900      	ldr	r1, [sp, #0]
 801c596:	4605      	mov	r5, r0
 801c598:	4630      	mov	r0, r6
 801c59a:	f7ff f963 	bl	801b864 <_malloc_r>
 801c59e:	b948      	cbnz	r0, 801c5b4 <__smakebuf_r+0x44>
 801c5a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c5a4:	059a      	lsls	r2, r3, #22
 801c5a6:	d4ef      	bmi.n	801c588 <__smakebuf_r+0x18>
 801c5a8:	f023 0303 	bic.w	r3, r3, #3
 801c5ac:	f043 0302 	orr.w	r3, r3, #2
 801c5b0:	81a3      	strh	r3, [r4, #12]
 801c5b2:	e7e3      	b.n	801c57c <__smakebuf_r+0xc>
 801c5b4:	4b0d      	ldr	r3, [pc, #52]	; (801c5ec <__smakebuf_r+0x7c>)
 801c5b6:	62b3      	str	r3, [r6, #40]	; 0x28
 801c5b8:	89a3      	ldrh	r3, [r4, #12]
 801c5ba:	6020      	str	r0, [r4, #0]
 801c5bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c5c0:	81a3      	strh	r3, [r4, #12]
 801c5c2:	9b00      	ldr	r3, [sp, #0]
 801c5c4:	6163      	str	r3, [r4, #20]
 801c5c6:	9b01      	ldr	r3, [sp, #4]
 801c5c8:	6120      	str	r0, [r4, #16]
 801c5ca:	b15b      	cbz	r3, 801c5e4 <__smakebuf_r+0x74>
 801c5cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c5d0:	4630      	mov	r0, r6
 801c5d2:	f000 f83d 	bl	801c650 <_isatty_r>
 801c5d6:	b128      	cbz	r0, 801c5e4 <__smakebuf_r+0x74>
 801c5d8:	89a3      	ldrh	r3, [r4, #12]
 801c5da:	f023 0303 	bic.w	r3, r3, #3
 801c5de:	f043 0301 	orr.w	r3, r3, #1
 801c5e2:	81a3      	strh	r3, [r4, #12]
 801c5e4:	89a0      	ldrh	r0, [r4, #12]
 801c5e6:	4305      	orrs	r5, r0
 801c5e8:	81a5      	strh	r5, [r4, #12]
 801c5ea:	e7cd      	b.n	801c588 <__smakebuf_r+0x18>
 801c5ec:	0801b561 	.word	0x0801b561

0801c5f0 <__malloc_lock>:
 801c5f0:	4801      	ldr	r0, [pc, #4]	; (801c5f8 <__malloc_lock+0x8>)
 801c5f2:	f7ff b8be 	b.w	801b772 <__retarget_lock_acquire_recursive>
 801c5f6:	bf00      	nop
 801c5f8:	2000a8ac 	.word	0x2000a8ac

0801c5fc <__malloc_unlock>:
 801c5fc:	4801      	ldr	r0, [pc, #4]	; (801c604 <__malloc_unlock+0x8>)
 801c5fe:	f7ff b8ba 	b.w	801b776 <__retarget_lock_release_recursive>
 801c602:	bf00      	nop
 801c604:	2000a8ac 	.word	0x2000a8ac

0801c608 <_read_r>:
 801c608:	b538      	push	{r3, r4, r5, lr}
 801c60a:	4d07      	ldr	r5, [pc, #28]	; (801c628 <_read_r+0x20>)
 801c60c:	4604      	mov	r4, r0
 801c60e:	4608      	mov	r0, r1
 801c610:	4611      	mov	r1, r2
 801c612:	2200      	movs	r2, #0
 801c614:	602a      	str	r2, [r5, #0]
 801c616:	461a      	mov	r2, r3
 801c618:	f7e5 fcec 	bl	8001ff4 <_read>
 801c61c:	1c43      	adds	r3, r0, #1
 801c61e:	d102      	bne.n	801c626 <_read_r+0x1e>
 801c620:	682b      	ldr	r3, [r5, #0]
 801c622:	b103      	cbz	r3, 801c626 <_read_r+0x1e>
 801c624:	6023      	str	r3, [r4, #0]
 801c626:	bd38      	pop	{r3, r4, r5, pc}
 801c628:	2000a8b4 	.word	0x2000a8b4

0801c62c <_fstat_r>:
 801c62c:	b538      	push	{r3, r4, r5, lr}
 801c62e:	4d07      	ldr	r5, [pc, #28]	; (801c64c <_fstat_r+0x20>)
 801c630:	2300      	movs	r3, #0
 801c632:	4604      	mov	r4, r0
 801c634:	4608      	mov	r0, r1
 801c636:	4611      	mov	r1, r2
 801c638:	602b      	str	r3, [r5, #0]
 801c63a:	f7e5 fcf8 	bl	800202e <_fstat>
 801c63e:	1c43      	adds	r3, r0, #1
 801c640:	d102      	bne.n	801c648 <_fstat_r+0x1c>
 801c642:	682b      	ldr	r3, [r5, #0]
 801c644:	b103      	cbz	r3, 801c648 <_fstat_r+0x1c>
 801c646:	6023      	str	r3, [r4, #0]
 801c648:	bd38      	pop	{r3, r4, r5, pc}
 801c64a:	bf00      	nop
 801c64c:	2000a8b4 	.word	0x2000a8b4

0801c650 <_isatty_r>:
 801c650:	b538      	push	{r3, r4, r5, lr}
 801c652:	4d06      	ldr	r5, [pc, #24]	; (801c66c <_isatty_r+0x1c>)
 801c654:	2300      	movs	r3, #0
 801c656:	4604      	mov	r4, r0
 801c658:	4608      	mov	r0, r1
 801c65a:	602b      	str	r3, [r5, #0]
 801c65c:	f7e5 fcec 	bl	8002038 <_isatty>
 801c660:	1c43      	adds	r3, r0, #1
 801c662:	d102      	bne.n	801c66a <_isatty_r+0x1a>
 801c664:	682b      	ldr	r3, [r5, #0]
 801c666:	b103      	cbz	r3, 801c66a <_isatty_r+0x1a>
 801c668:	6023      	str	r3, [r4, #0]
 801c66a:	bd38      	pop	{r3, r4, r5, pc}
 801c66c:	2000a8b4 	.word	0x2000a8b4

0801c670 <_init>:
 801c670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c672:	bf00      	nop
 801c674:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c676:	bc08      	pop	{r3}
 801c678:	469e      	mov	lr, r3
 801c67a:	4770      	bx	lr

0801c67c <_fini>:
 801c67c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c67e:	bf00      	nop
 801c680:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c682:	bc08      	pop	{r3}
 801c684:	469e      	mov	lr, r3
 801c686:	4770      	bx	lr
